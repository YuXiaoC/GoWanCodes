var Laya = window.Laya = function (l, t) { var u = { __internals: [], __packages: {}, __classmap: { Object: Object, Function: Function, Array: Array, String: String }, __sysClass: { object: "Object", array: "Array", string: "String", dictionary: "Dictionary" }, __propun: { writable: true, enumerable: false, configurable: true }, __presubstr: String.prototype.substr, __substr: function (t, e) { return arguments.length == 1 ? u.__presubstr.call(this, t) : u.__presubstr.call(this, t, e > 0 ? e : this.length + e) }, __init: function (t) { t.forEach(function (t) { t.__init$ && t.__init$() }) }, __isClass: function (t) { return t && (t.__isclass || t == Object || t == String || t == Array) }, __newvec: function (t, e) { var i = []; i.length = t; for (var r = 0; r < t; r++)i[r] = e; return i }, __extend: function (t, e) { for (var i in e) { if (!e.hasOwnProperty(i)) continue; var r = Object.getOwnPropertyDescriptor(e, i); var s = r.get, n = r.set; if (s || n) { if (s && n) Object.defineProperty(t, i, r); else { s && Object.defineProperty(t, i, s); n && Object.defineProperty(t, i, n) } } else t[i] = e[i] } function a() { u.un(this, "constructor", t) } a.prototype = e.prototype; t.prototype = new a; u.un(t.prototype, "__imps", u.__copy({}, e.prototype.__imps)) }, __copy: function (t, e) { if (!e) return null; t = t || {}; for (var i in e) t[i] = e[i]; return t }, __package: function (t, e) { if (u.__packages[t]) return; u.__packages[t] = true; var i = l, r = t.split("."); if (r.length > 1) { for (var s = 0, n = r.length - 1; s < n; s++) { var a = i[r[s]]; i = a ? a : i[r[s]] = {} } } i[r[r.length - 1]] || (i[r[r.length - 1]] = e || {}) }, __hasOwnProperty: function (t, e) { e = e || this; function r(t, e) { if (Object.hasOwnProperty.call(e.prototype, t)) return true; var i = e.prototype.__super; return i == null ? null : r(t, i) } return Object.hasOwnProperty.call(e, t) || r(t, e.__class) }, __typeof: function (t, e) { if (!t || !e) return false; if (e === String) return typeof t === "string"; if (e === Number) return typeof t === "number"; if (e.__interface__) e = e.__interface__; else if (typeof e != "string") return t instanceof e; return t.__imps && t.__imps[e] || t.__class == e }, __as: function (t, e) { return this.__typeof(t, e) ? t : null }, __int: function (t) { return t ? parseInt(t) : 0 }, interface: function (t, e) { u.__package(t, {}); var i = u.__internals; var r = i[t] = i[t] || { self: t }; if (e) { var s = e.split(","); r.extend = []; for (var n = 0; n < s.length; n++) { var a = s[n]; i[a] = i[a] || { self: a }; r.extend.push(i[a]) } } var o = l, h = t.split("."); for (var n = 0; n < h.length - 1; n++)o = o[h[n]]; o[h[h.length - 1]] = { __interface__: t } }, class: function (t, e, i, r) { i && u.__extend(t, i); if (e) { u.__package(e, t); u.__classmap[e] = t; if (e.indexOf(".") > 0) { if (e.indexOf("laya.") == 0) { var s = e.split("."); r = r || s[s.length - 1]; if (u[r]) console.log("Warning!,this class[" + r + "] already exist:", u[r]); u[r] = t } } else { if (e == "Main") l.Main = t; else { if (u[e]) { console.log("Error!,this class[" + e + "] already exist:", u[e]) } u[e] = t } } } var n = u.un, a = t.prototype; n(a, "hasOwnProperty", u.__hasOwnProperty); n(a, "__class", t); n(a, "__super", i); n(a, "__className", e); n(t, "__super", i); n(t, "__className", e); n(t, "__isclass", true); n(t, "super", function (t) { this.__super.call(t) }) }, imps: function (t, e) { if (!e) return null; var s = t.__imps || u.un(t, "__imps", {}); function n(t) { var e, i; if (!(e = u.__internals[t])) return; s[t] = true; if (!(i = e.extend)) return; for (var r = 0; r < i.length; r++) { n(i[r].self) } } for (var i in e) n(i) }, superSet: function (t, e, i, r) { var s = t.prototype["_$set_" + i]; s && s.call(e, r) }, superGet: function (t, e, i) { var r = t.prototype["_$get_" + i]; return r ? r.call(e) : null }, getset: function (t, e, i, r, s) { if (!t) { r && u.un(e, "_$get_" + i, r); s && u.un(e, "_$set_" + i, s) } else { r && (e["_$GET_" + i] = r); s && (e["_$SET_" + i] = s) } if (r && s) Object.defineProperty(e, i, { get: r, set: s, enumerable: false, configurable: true }); else { r && Object.defineProperty(e, i, { get: r, enumerable: false, configurable: true }); s && Object.defineProperty(e, i, { set: s, enumerable: false, configurable: true }) } }, static: function (i, r) { for (var s = 0, t = r.length; s < t; s += 2) { if (r[s] == "length") i.length = r[s + 1].call(i); else { function e() { var e = r[s]; var t = r[s + 1]; Object.defineProperty(i, e, { get: function () { delete this[e]; return this[e] = t.call(this) }, set: function (t) { delete this[e]; this[e] = t }, enumerable: true, configurable: true }) } e() } } }, un: function (t, e, i) { i || (i = t[e]); u.__propun.value = i; Object.defineProperty(t, e, u.__propun); return i }, uns: function (e, t) { t.forEach(function (t) { u.un(e, t) }) } }; l.console = l.console || { log: function () { } }; l.trace = l.console.log; Error.prototype.throwError = function () { throw arguments }; Object.defineProperty(Array.prototype, "fixed", { enumerable: false }); return u }(window, document); (function (t, e, i) { var r = i.un, s = i.uns, n = i.static, a = i.class, o = i.getset, h = i.__newvec })(window, document, Laya); (function (a, e, T) { var t = T.un, i = T.uns, h = T.static, v = T.class, u = T.getset, r = T.__newvec; T.interface("laya.runtime.IMarket"); T.interface("laya.filters.IFilter"); T.interface("laya.display.ILayout"); T.interface("laya.resource.IDispose"); T.interface("laya.runtime.IPlatform"); T.interface("laya.resource.IDestroy"); T.interface("laya.runtime.IConchNode"); T.interface("laya.filters.IFilterAction"); T.interface("laya.runtime.ICPlatformClass"); T.interface("laya.resource.ICreateResource"); T.interface("laya.runtime.IConchRenderObject"); T.interface("laya.runtime.IPlatformClass", "laya.runtime.IPlatform"); var E = function () { function n() { } v(n, "laya.utils.RunDriver"); n.FILTER_ACTIONS = []; n.pixelRatio = -1; n._charSizeTestDiv = null; n.now = function () { return Date.now() }; n.getWindow = function () { return a }; n.getPixelRatio = function () { if (n.pixelRatio < 0) { var t = X.context; var e = t.backingStorePixelRatio || t.webkitBackingStorePixelRatio || t.mozBackingStorePixelRatio || t.msBackingStorePixelRatio || t.oBackingStorePixelRatio || t.backingStorePixelRatio || 1; n.pixelRatio = (X.window.devicePixelRatio || 1) / e; if (n.pixelRatio < 1) n.pixelRatio = 1 } return n.pixelRatio }; n.getIncludeStr = function (t) { return null }; n.createShaderCondition = function (t) { var e = "(function() {return " + t + ";})"; return T._runScript(e) }; n.fontMap = []; n.measureText = function (t, e) { var i = n.hanzi.test(t); if (i && n.fontMap[e]) { return n.fontMap[e] } var r = X.context; r.font = e; var s = r.measureText(t); if (i) n.fontMap[e] = s; return s }; n.getWebGLContext = function (t) { }; n.beginFlush = function () { }; n.endFinish = function () { }; n.addToAtlas = null; n.flashFlushImage = function (t) { }; n.drawToCanvas = function (t, e, i, r, s, n) { var a = Ot.create("2D"); var o = new W(i, r, a); V.renders[e]._fun(t, o, s, n); return a }; n.createParticleTemplate2D = null; n.createGLTextur = null; n.createWebGLContext2D = null; n.changeWebGLSize = function (t, e) { }; n.createRenderSprite = function (t, e) { return new V(t, e) }; n.createFilterAction = function (t) { return new S }; n.createGraphics = function () { return new d }; n.clear = function (t) { U._context.ctx.clear() }; n.cancelLoadByUrl = function (t) { }; n.clearAtlas = function (t) { }; n.isAtlas = function (t) { return false }; n.addTextureToAtlas = function (t) { }; n.getTexturePixels = function (t, e, i, r, s) { return null }; n.skinAniSprite = function () { return null }; n.update3DLoop = function () { }; h(n, ["hanzi", function () { return this.hanzi = new RegExp("^[一-龥]$") }]); return n }(); var s = function () { u(1, T, "alertGlobalError", null, function (t) { var n = 0; if (t) { X.window.onerror = function (t, e, i, r, s) { if (n++ < 5 && s) alert("出错啦，请把此信息截图给研发商\n" + t + "\n" + s.stack || s) } } else { X.window.onerror = null } }); T.init = function (t, e, i) { var r = []; for (var s = 2, n = arguments.length; s < n; s++)r.push(arguments[s]); if (T._isinit) return; ArrayBuffer.prototype.slice || (ArrayBuffer.prototype.slice = T._arrayBufferSlice); T._isinit = true; X.__init__(); H.__init__(); d.__init__(); T.timer = new ht; T.scaleTimer = new ht; T.loader = new wt; ft.__init__(); for (var s = 0, a = r.length; s < a; s++) { if (r[s].enable) r[s].enable() } l.__init__(); o.__init__(); G.__init__(); K.beginCheck(); T._currentStage = T.stage = new Bt; T.stage.conchModel && T.stage.conchModel.setRootNode(); T._getUrlPath(); T.render = new U(0, 0); T.stage.size(t, e); V.__init__(); y.__init__(); b.instance.__init__(T.stage, U.canvas); Vt.__init__(); B.autoStopMusic = true; N.__init__(); return U.canvas }; T._getUrlPath = function () { var t = X.window.location; var e = t.pathname; e = e.charAt(2) == ":" ? e.substring(1) : e; z.rootPath = z.basePath = z.getPath(t.protocol == "file:" ? e : t.protocol + "//" + t.host + t.pathname) }; T._arrayBufferSlice = function (t, e) { var i = this; var r = new Uint8Array(i, t, e - t); var s = new Uint8Array(r.length); s.set(r); return s.buffer }; T._runScript = function (t) { return X.window[T._evcode](t) }; T.stage = null; T.timer = null; T.scaleTimer = null; T.loader = null; T.version = "1.8.4beta"; T.render = null; T._currentStage = null; T._isinit = false; T.MiniAdpter = { init: function () { if (a.navigator && a.navigator.userAgent && a.navigator.userAgent.indexOf("MiniGame") > -1) console.error("请先引用小游戏适配库laya.wxmini.js,详细教程：https://ldc.layabox.com/doc/?nav=zh-ts-5-0-0") } }; h(T, ["conchMarket", function () { return this.conchMarket = a.conch ? conchMarket : null }, "PlatformClass", function () { return this.PlatformClass = a.PlatformClass }, "_evcode", function () { return this._evcode = "e" + String.fromCharCode(100 + 10 + 8) + "a" + "l" }]); return T }(); var m = function () { function t() { } v(t, "Config"); t.WebGLTextCacheCount = 500; t.atlasEnable = false; t.showCanvasMark = false; t.animationInterval = 50; t.isAntialias = false; t.isAlpha = false; t.premultipliedAlpha = true; t.isStencil = true; t.preserveDrawingBuffer = false; t.useRetinalCanvas = false; t.CborderSize = 12; return t }(); var n = function () { var h; function e() { this._events = null } v(e, "laya.events.EventDispatcher"); var t = e.prototype; t.hasListener = function (t) { var e = this._events && this._events[t]; return !!e }; t.event = function (t, e) { if (!this._events || !this._events[t]) return false; var i = this._events[t]; if (i.run) { if (i.once) delete this._events[t]; e != null ? i.runWith(e) : i.run() } else { for (var r = 0, s = i.length; r < s; r++) { var n = i[r]; if (n) { e != null ? n.runWith(e) : n.run() } if (!n || n.once) { i.splice(r, 1); r--; s-- } } if (i.length === 0 && this._events) delete this._events[t] } return true }; t.on = function (t, e, i, r) { return this._createListener(t, e, i, r, false) }; t.once = function (t, e, i, r) { return this._createListener(t, e, i, r, true) }; t._createListener = function (t, e, i, r, s, n) { n === void 0 && (n = true); n && this.off(t, e, i, s); var a = h.create(e || this, i, r, s); this._events || (this._events = {}); var o = this._events; if (!o[t]) o[t] = a; else { if (!o[t].run) o[t].push(a); else o[t] = [o[t], a] } return this }; t.off = function (t, e, i, r) { r === void 0 && (r = false); if (!this._events || !this._events[t]) return this; var s = this._events[t]; if (s != null) { if (s.run) { if ((!e || s.caller === e) && s.method === i && (!r || s.once)) { delete this._events[t]; s.recover() } } else { var n = 0; for (var a = 0, o = s.length; a < o; a++) { var h = s[a]; if (!h) { n++; continue } if (h && (!e || h.caller === e) && h.method === i && (!r || h.once)) { n++; s[a] = null; h.recover() } } if (n === o) delete this._events[t] } } return this }; t.offAll = function (t) { var e = this._events; if (!e) return this; if (t) { this._recoverHandlers(e[t]); delete e[t] } else { for (var i in e) { this._recoverHandlers(e[i]) } this._events = null } return this }; t._recoverHandlers = function (t) { if (!t) return; if (t.run) { t.recover() } else { for (var e = t.length - 1; e > -1; e--) { if (t[e]) { t[e].recover(); t[e] = null } } } }; t.isMouseEvent = function (t) { return e.MOUSE_EVENTS[t] }; e.MOUSE_EVENTS = { rightmousedown: true, rightmouseup: true, rightclick: true, mousedown: true, mouseup: true, mousemove: true, mouseover: true, mouseout: true, click: true, doubleclick: true }; e.__init$ = function () { Object.defineProperty(laya.events.EventDispatcher.prototype, "_events", { enumerable: false, writable: true }); h = function (t) { function s(t, e, i, r) { s.__super.call(this, t, e, i, r) } v(s, "", t); var e = s.prototype; e.recover = function () { if (this._id > 0) { this._id = 0; s._pool.push(this.clear()) } }; s.create = function (t, e, i, r) { r === void 0 && (r = true); if (s._pool.length) return s._pool.pop().setTo(t, e, i, r); return new s(t, e, i, r) }; s._pool = []; return s }(g) }; return e }(); var g = function () { function s(t, e, i, r) { this.once = false; this._id = 0; r === void 0 && (r = false); this.setTo(t, e, i, r) } v(s, "laya.utils.Handler"); var t = s.prototype; t.setTo = function (t, e, i, r) { this._id = s._gid++; this.caller = t; this.method = e; this.args = i; this.once = r; return this }; t.run = function () { if (this.method == null) return null; var t = this._id; var e = this.method.apply(this.caller, this.args); this._id === t && this.once && this.recover(); return e }; t.runWith = function (t) { if (this.method == null) return null; var e = this._id; if (t == null) var i = this.method.apply(this.caller, this.args); else if (!this.args && !t.unshift) i = this.method.call(this.caller, t); else if (this.args) i = this.method.apply(this.caller, this.args.concat(t)); else i = this.method.apply(this.caller, t); this._id === e && this.once && this.recover(); return i }; t.clear = function () { this.caller = null; this.method = null; this.args = null; return this }; t.recover = function () { if (this._id > 0) { this._id = 0; s._pool.push(this.clear()) } }; s.create = function (t, e, i, r) { r === void 0 && (r = true); if (s._pool.length) return s._pool.pop().setTo(t, e, i, r); return new s(t, e, i, r) }; s._pool = []; s._gid = 1; return s }(); var M = function () { function t() { this._texture = null; this._fontCharDic = {}; this._fontWidthMap = {}; this._complete = null; this._path = null; this._maxWidth = 0; this._spaceWidth = 10; this._padding = null; this.fontSize = 12; this.autoScaleSize = false; this.letterSpacing = 0 } v(t, "laya.display.BitmapFont"); var e = t.prototype; e.loadFont = function (t, e) { this._path = t; this._complete = e; T.loader.load([{ url: this._path, type: "xml" }, { url: this._path.replace(".fnt", ".png"), type: "image" }], g.create(this, this.onLoaded)) }; e.onLoaded = function () { this.parseFont(bt.getRes(this._path), bt.getRes(this._path.replace(".fnt", ".png"))); this._complete && this._complete.runWith(this._texture ? this : null) }; e.parseFont = function (t, e) { if (t == null || e == null) return; this._texture = e; var i = 0; var r = 1; var s = t.getElementsByTagName("info"); if (!s[0].getAttributeNode) { return this.parseFont2(t, e) } this.fontSize = parseInt(s[0].getAttributeNode("size").nodeValue); var n = s[0].getAttributeNode("padding").nodeValue; var a = n.split(","); this._padding = [parseInt(a[0]), parseInt(a[1]), parseInt(a[2]), parseInt(a[3])]; var o; o = t.getElementsByTagName("char"); var h = 0; for (h = 0; h < o.length; h++) { var l = o[h]; var u = parseInt(l.getAttributeNode("id").nodeValue); var c = parseInt(l.getAttributeNode("xoffset").nodeValue) / r; var f = parseInt(l.getAttributeNode("yoffset").nodeValue) / r; var _ = parseInt(l.getAttributeNode("xadvance").nodeValue) / r; var d = new D; d.x = parseInt(l.getAttributeNode("x").nodeValue); d.y = parseInt(l.getAttributeNode("y").nodeValue); d.width = parseInt(l.getAttributeNode("width").nodeValue); d.height = parseInt(l.getAttributeNode("height").nodeValue); var p = Mt.create(e, d.x, d.y, d.width, d.height, c, f); this._maxWidth = Math.max(this._maxWidth, _ + this.letterSpacing); this._fontCharDic[u] = p; this._fontWidthMap[u] = _ } }; e.parseFont2 = function (t, e) { if (t == null || e == null) return; this._texture = e; var i = 0; var r = 1; var s = t.getElementsByTagName("info"); this.fontSize = parseInt(s[0].attributes["size"].nodeValue); var n = s[0].attributes["padding"].nodeValue; var a = n.split(","); this._padding = [parseInt(a[0]), parseInt(a[1]), parseInt(a[2]), parseInt(a[3])]; var o = t.getElementsByTagName("char"); var h = 0; for (h = 0; h < o.length; h++) { var l = o[h].attributes; var u = parseInt(l["id"].nodeValue); var c = parseInt(l["xoffset"].nodeValue) / r; var f = parseInt(l["yoffset"].nodeValue) / r; var _ = parseInt(l["xadvance"].nodeValue) / r; var d = new D; d.x = parseInt(l["x"].nodeValue); d.y = parseInt(l["y"].nodeValue); d.width = parseInt(l["width"].nodeValue); d.height = parseInt(l["height"].nodeValue); var p = Mt.create(e, d.x, d.y, d.width, d.height, c, f); this._maxWidth = Math.max(this._maxWidth, _ + this.letterSpacing); this._fontCharDic[u] = p; this._fontWidthMap[u] = _ } }; e.getCharTexture = function (t) { return this._fontCharDic[t.charCodeAt(0)] }; e.destroy = function () { if (this._texture) { for (var t in this._fontCharDic) { var e = this._fontCharDic[t]; if (e) e.destroy() } this._texture.destroy(); this._fontCharDic = null; this._fontWidthMap = null; this._texture = null } }; e.setSpaceWidth = function (t) { this._spaceWidth = t }; e.getCharWidth = function (t) { var e = t.charCodeAt(0); if (this._fontWidthMap[e]) return this._fontWidthMap[e] + this.letterSpacing; if (t == " ") return this._spaceWidth + this.letterSpacing; return 0 }; e.getTextWidth = function (t) { var e = 0; for (var i = 0, r = t.length; i < r; i++) { e += this.getCharWidth(t.charAt(i)) } return e }; e.getMaxWidth = function () { return this._maxWidth }; e.getMaxHeight = function () { return this.fontSize }; e.drawText = function (t, e, i, r, s, n) { var a = this.getTextWidth(t); var o; var h = 0; s === "center" && (h = (n - a) / 2); s === "right" && (h = n - a); var l = 0; for (var u = 0, c = t.length; u < c; u++) { o = this.getCharTexture(t.charAt(u)); if (o) { e.graphics.drawTexture(o, i + l + h, r); l += this.getCharWidth(t.charAt(u)) } } }; return t }(); var o = function () { function i() { this.alpha = 1; this.visible = true; this.scrollRect = null; this.blendMode = null; this._type = 0; this._tf = i._TF_EMPTY } v(i, "laya.display.css.Style"); var t = i.prototype; t.getTransform = function () { return this._tf }; t.setTransform = function (t) { this._tf = t === "none" || !t ? i._TF_EMPTY : t }; t.setTranslateX = function (t) { this._tf === i._TF_EMPTY && (this._tf = new c); this._tf.translateX = t }; t.setTranslateY = function (t) { this._tf === i._TF_EMPTY && (this._tf = new c); this._tf.translateY = t }; t.setScaleX = function (t) { this._tf === i._TF_EMPTY && (this._tf = new c); this._tf.scaleX = t }; t.setScale = function (t, e) { this._tf === i._TF_EMPTY && (this._tf = new c); this._tf.scaleX = t; this._tf.scaleY = e }; t.setScaleY = function (t) { this._tf === i._TF_EMPTY && (this._tf = new c); this._tf.scaleY = t }; t.setRotate = function (t) { this._tf === i._TF_EMPTY && (this._tf = new c); this._tf.rotate = t }; t.setSkewX = function (t) { this._tf === i._TF_EMPTY && (this._tf = new c); this._tf.skewX = t }; t.setSkewY = function (t) { this._tf === i._TF_EMPTY && (this._tf = new c); this._tf.skewY = t }; t.destroy = function () { this.scrollRect = null }; t.render = function (t, e, i, r) { }; t.getCSSStyle = function () { return pt.EMPTY }; t._enableLayout = function () { return false }; u(0, t, "scaleX", function () { return this._tf.scaleX }, function (t) { this.setScaleX(t) }); u(0, t, "transform", function () { return this.getTransform() }, function (t) { this.setTransform(t) }); u(0, t, "translateX", function () { return this._tf.translateX }, function (t) { this.setTranslateX(t) }); u(0, t, "translateY", function () { return this._tf.translateY }, function (t) { this.setTranslateY(t) }); u(0, t, "scaleY", function () { return this._tf.scaleY }, function (t) { this.setScaleY(t) }); u(0, t, "block", function () { return (this._type & 1) != 0 }); u(0, t, "skewY", function () { return this._tf.skewY }, function (t) { this.setSkewY(t) }); u(0, t, "rotate", function () { return this._tf.rotate }, function (t) { this.setRotate(t) }); u(0, t, "skewX", function () { return this._tf.skewX }, function (t) { this.setSkewX(t) }); u(0, t, "paddingLeft", function () { return 0 }); u(0, t, "paddingTop", function () { return 0 }); u(0, t, "absolute", function () { return true }); i.__init__ = function () { i._TF_EMPTY = new c; i.EMPTY = new i }; i.EMPTY = null; i._TF_EMPTY = null; return i }(); var l = function () { function e(t) { this._type = 0; this._weight = 0; this._decoration = null; this._text = null; this.indent = 0; this._color = q.create(e.defaultColor); this.family = e.defaultFamily; this.stroke = e._STROKE; this.size = e.defaultSize; t && t !== e.EMPTY && t.copyTo(this) } v(e, "laya.display.css.Font"); var t = e.prototype; t.set = function (t) { this._text = null; var e = t.split(" "); for (var i = 0, r = e.length; i < r; i++) { var s = e[i]; switch (s) { case "italic": this.italic = true; continue; case "bold": this.bold = true; continue }if (s.indexOf("px") > 0) { this.size = parseInt(s); this.family = e[i + 1]; i++; continue } } }; t.toString = function () { this._text = ""; this.italic && (this._text += "italic "); this.bold && (this._text += "bold "); return this._text += this.size + "px " + this.family }; t.copyTo = function (t) { t._type = this._type; t._text = this._text; t._weight = this._weight; t._color = this._color; t.family = this.family; t.stroke = this.stroke != e._STROKE ? this.stroke.slice() : e._STROKE; t.indent = this.indent; t.size = this.size }; u(0, t, "password", function () { return (this._type & 1024) !== 0 }, function (t) { t ? this._type |= 1024 : this._type &= ~1024 }); u(0, t, "color", function () { return this._color.strColor }, function (t) { this._color = q.create(t) }); u(0, t, "italic", function () { return (this._type & 512) !== 0 }, function (t) { t ? this._type |= 512 : this._type &= ~512 }); u(0, t, "bold", function () { return (this._type & 2048) !== 0 }, function (t) { t ? this._type |= 2048 : this._type &= ~2048 }); u(0, t, "weight", function () { return "" + this._weight }, function (t) { var e = 0; switch (t) { case "normal": break; case "bold": this.bold = true; e = 700; break; case "bolder": e = 800; break; case "lighter": e = 100; break; default: e = parseInt(t) }this._weight = e; this._text = null }); u(0, t, "decoration", function () { return this._decoration ? this._decoration.value : null }, function (t) { var e = t.split(" "); this._decoration || (this._decoration = {}); switch (e[0]) { case "_": this._decoration.type = "underline"; break; case "-": this._decoration.type = "line-through"; break; case "overline": this._decoration.type = "overline"; break; default: this._decoration.type = e[0] }e[1] && (this._decoration.color = q.create(e)); this._decoration.value = t }); e.__init__ = function () { e.EMPTY = new e(null) }; e.EMPTY = null; e.defaultColor = "#000000"; e.defaultSize = 12; e.defaultFamily = "Arial"; e.defaultFont = "12px Arial"; e._STROKE = [0, "#000000"]; e._ITALIC = 512; e._PASSWORD = 1024; e._BOLD = 2048; return e }(); var c = function () { function t() { this.translateX = 0; this.translateY = 0; this.scaleX = 1; this.scaleY = 1; this.rotate = 0; this.skewX = 0; this.skewY = 0 } v(t, "laya.display.css.TransformInfo"); return t }(); var d = function () { function c() { this._one = null; this._cmds = null; this._render = this._renderEmpty; if (U.isConchNode) { var t = this; t._nativeObj = new a._conchGraphics; t.id = t._nativeObj.conchID } } v(c, "laya.display.Graphics"); var t = c.prototype; t.destroy = function () { this.clear(); if (this._graphicBounds) this._graphicBounds.destroy(); this._graphicBounds = null; this._vectorgraphArray = null; this._sp && (this._sp._renderType = 0); this._sp = null }; t.clear = function (t) { t === void 0 && (t = false); var e = 0, i = 0; if (t) { var r = this._one; if (this._cmds) { i = this._cmds.length; for (e = 0; e < i; e++) { r = this._cmds[e]; if (r && (r.callee === U._context._drawTexture || r.callee === U._context._drawTextureWithTransform)) { r[0] = null; c._cache.push(r) } } this._cmds.length = 0 } else if (r) { if (r && (r.callee === U._context._drawTexture || r.callee === U._context._drawTextureWithTransform)) { r[0] = null; c._cache.push(r) } } } else { this._cmds = null } this._one = null; this._render = this._renderEmpty; this._sp && (this._sp._renderType &= ~1 & ~512); this._repaint(); if (this._vectorgraphArray) { for (e = 0, i = this._vectorgraphArray.length; e < i; e++) { ct.getInstance().deleteShape(this._vectorgraphArray[e]) } this._vectorgraphArray.length = 0 } }; t._clearBoundsCache = function () { if (this._graphicBounds) this._graphicBounds.reset() }; t._initGraphicBounds = function () { if (!this._graphicBounds) { this._graphicBounds = new f; this._graphicBounds._graphics = this } }; t._repaint = function () { this._clearBoundsCache(); this._sp && this._sp.repaint() }; t._isOnlyOne = function () { return !this._cmds || this._cmds.length === 0 }; t.getBounds = function (t) { t === void 0 && (t = false); this._initGraphicBounds(); return this._graphicBounds.getBounds(t) }; t.getBoundPoints = function (t) { t === void 0 && (t = false); this._initGraphicBounds(); return this._graphicBounds.getBoundPoints(t) }; t._addCmd = function (t) { this._cmds = this._cmds || []; t.callee = t.shift(); this._cmds.push(t) }; t.setFilters = function (t) { this._saveToCmd(U._context._setFilters, t) }; t.drawTexture = function (t, e, i, r, s, n, a) { e === void 0 && (e = 0); i === void 0 && (i = 0); r === void 0 && (r = 0); s === void 0 && (s = 0); a === void 0 && (a = 1); if (!t || a < .01) return null; if (!r) r = t.sourceWidth; if (!s) s = t.sourceHeight; a = a < 0 ? 0 : a > 1 ? 1 : a; var o = !U.isWebGL && (X.onFirefox || X.onEdge || X.onIE || X.onSafari) ? .5 : 0; var h = r / t.sourceWidth; var l = s / t.sourceHeight; r = t.width * h; s = t.height * l; if (t.loaded && (r <= 0 || s <= 0)) return null; e += t.offsetX * h; i += t.offsetY * l; this._sp && (this._sp._renderType |= 512); var u; e -= o; i -= o; r += 2 * o; s += 2 * o; if (c._cache.length) { u = c._cache.pop(); u[0] = t; u[1] = e; u[2] = i; u[3] = r; u[4] = s; u[5] = n; u[6] = a } else { u = [t, e, i, r, s, n, a] } u.callee = n || a != 1 ? U._context._drawTextureWithTransform : U._context._drawTexture; if (this._one == null && !n && a == 1) { this._one = u; this._render = this._renderOneImg } else { this._saveToCmd(u.callee, u) } if (!t.loaded) { t.once("loaded", this, this._textureLoaded, [t, u]) } this._repaint(); return u }; t.cleanByTexture = function (t, e, i, r, s) { r === void 0 && (r = 0); s === void 0 && (s = 0); if (!t) return this.clear(); if (this._one && this._render === this._renderOneImg) { if (!r) r = t.sourceWidth; if (!s) s = t.sourceHeight; var n = r / t.sourceWidth; var a = s / t.sourceHeight; r = t.width * n; s = t.height * a; e += t.offsetX * n; i += t.offsetY * a; this._one[0] = t; this._one[1] = e; this._one[2] = i; this._one[3] = r; this._one[4] = s; this._repaint() } else { this.clear(); t && this.drawTexture(t, e, i, r, s) } }; t.drawTextures = function (t, e) { if (!t) return; this._saveToCmd(U._context._drawTextures, [t, e]) }; t.fillTexture = function (t, e, i, r, s, n, a) { r === void 0 && (r = 0); s === void 0 && (s = 0); n === void 0 && (n = "repeat"); if (!t) return; var o = [t, e, i, r, s, n, a || k.EMPTY, {}]; if (!t.loaded) { t.once("loaded", this, this._textureLoaded, [t, o]) } this._saveToCmd(U._context._fillTexture, o) }; t._textureLoaded = function (t, e) { e[3] = e[3] || t.width; e[4] = e[4] || t.height; this._repaint() }; t.fillCircle = function (t, e, i, r, s, n, a) { i.bitmap.enableMerageInAtlas = false; var o = new Float32Array((a + 1) * 2); var h = new Float32Array((a + 1) * 2); var l = new Uint16Array(a * 3); var u = 2 * Math.PI / a; var c = 0; o[0] = r; o[1] = s; h[0] = r / i.width; h[1] = s / i.height; var f = 2; for (var _ = 0; _ < a; _++) { var d = n * Math.cos(c) + r; var p = n * Math.sin(c) + s; o[f] = d; o[f + 1] = p; h[f] = d / i.width; h[f + 1] = p / i.height; c += u; f += 2 } f = 0; for (_ = 0; _ < a; _++) { l[f++] = 0; l[f++] = _ + 1; l[f++] = _ + 2 >= a + 1 ? 1 : _ + 2 } this.drawTriangles(i, t, e, o, h, l) }; t.drawTriangles = function (t, e, i, r, s, n, a, o, h, l) { o === void 0 && (o = 1); this._saveToCmd(U._context.drawTriangles, [t, e, i, r, s, n, a, o, h, l]) }; t._saveToCmd = function (t, e) { this._sp && (this._sp._renderType |= 512); if (this._one == null) { this._one = e; this._render = this._renderOne } else { this._sp && (this._sp._renderType &= ~1); this._render = this._renderAll; (this._cmds || (this._cmds = [])).length === 0 && this._cmds.push(this._one); this._cmds.push(e) } e.callee = t; this._repaint(); return e }; t.clipRect = function (t, e, i, r) { this._saveToCmd(U._context._clipRect, [t, e, i, r]) }; t.fillText = function (t, e, i, r, s, n, a) { a === void 0 && (a = 0); this._saveToCmd(U._context._fillText, [t, e, i, r || l.defaultFont, s, n]) }; t.fillBorderText = function (t, e, i, r, s, n, a, o) { this._saveToCmd(U._context._fillBorderText, [t, e, i, r || l.defaultFont, s, n, a, o]) }; t.strokeText = function (t, e, i, r, s, n, a) { this._saveToCmd(U._context._strokeText, [t, e, i, r || l.defaultFont, s, n, a]) }; t.alpha = function (t) { t = t < 0 ? 0 : t > 1 ? 1 : t; this._saveToCmd(U._context._alpha, [t]) }; t.setAlpha = function (t) { t = t < 0 ? 0 : t > 1 ? 1 : t; this._saveToCmd(U._context._setAlpha, [t]) }; t.transform = function (t, e, i) { e === void 0 && (e = 0); i === void 0 && (i = 0); this._saveToCmd(U._context._transform, [t, e, i]) }; t.rotate = function (t, e, i) { e === void 0 && (e = 0); i === void 0 && (i = 0); this._saveToCmd(U._context._rotate, [t, e, i]) }; t.scale = function (t, e, i, r) { i === void 0 && (i = 0); r === void 0 && (r = 0); this._saveToCmd(U._context._scale, [t, e, i, r]) }; t.translate = function (t, e) { this._saveToCmd(U._context._translate, [t, e]) }; t.save = function () { this._saveToCmd(U._context._save, []) }; t.restore = function () { this._saveToCmd(U._context._restore, []) }; t.replaceText = function (t) { this._repaint(); var e = this._cmds; if (!e) { if (this._one && this._isTextCmd(this._one.callee)) { if (this._one[0].toUpperCase) this._one[0] = t; else this._one[0].setText(t); return true } } else { for (var i = e.length - 1; i > -1; i--) { if (this._isTextCmd(e[i].callee)) { if (e[i][0].toUpperCase) e[i][0] = t; else e[i][0].setText(t); return true } } } return false }; t._isTextCmd = function (t) { return t === U._context._fillText || t === U._context._fillBorderText || t === U._context._strokeText }; t.replaceTextColor = function (t) { this._repaint(); var e = this._cmds; if (!e) { if (this._one && this._isTextCmd(this._one.callee)) { this._one[4] = t; if (!this._one[0].toUpperCase) this._one[0].changed = true } } else { for (var i = e.length - 1; i > -1; i--) { if (this._isTextCmd(e[i].callee)) { e[i][4] = t; if (!e[i][0].toUpperCase) e[i][0].changed = true } } } }; t.loadImage = function (t, e, i, r, s, n) { var a = this; e === void 0 && (e = 0); i === void 0 && (i = 0); r === void 0 && (r = 0); s === void 0 && (s = 0); var o = bt.getRes(t); if (o) h(o); else T.loader.load(t, g.create(null, h), null, "image"); function h(t) { if (t) { a.drawTexture(t, e, i, r, s); if (n != null) n.call(a._sp, t) } } }; t._renderEmpty = function (t, e, i, r) { }; t._renderAll = function (t, e, i, r) { var s = this._cmds, n; for (var a = 0, o = s.length; a < o; a++) { (n = s[a]).callee.call(e, i, r, n) } }; t._renderOne = function (t, e, i, r) { this._one.callee.call(e, i, r, this._one) }; t._renderOneImg = function (t, e, i, r) { this._one.callee.call(e, i, r, this._one); if (t._renderType !== 2305) { t._renderType |= 1 } }; t.drawLine = function (t, e, i, r, s, n) { n === void 0 && (n = 1); var a = 0; if (U.isWebGL) { a = ct.getInstance().getId(); if (this._vectorgraphArray == null) this._vectorgraphArray = []; this._vectorgraphArray.push(a) } var o = n % 2 === 0 ? 0 : .5; var h = [t + o, e + o, i + o, r + o, s, n, a]; this._saveToCmd(U._context._drawLine, h) }; t.drawLines = function (t, e, i, r, s) { s === void 0 && (s = 1); var n = 0; if (!i || i.length < 4) return; if (U.isWebGL) { n = ct.getInstance().getId(); if (this._vectorgraphArray == null) this._vectorgraphArray = []; this._vectorgraphArray.push(n) } var a = s % 2 === 0 ? 0 : .5; var o = [t + a, e + a, i, r, s, n]; this._saveToCmd(U._context._drawLines, o) }; t.drawCurves = function (t, e, i, r, s) { s === void 0 && (s = 1); var n = [t, e, i, r, s]; this._saveToCmd(U._context._drawCurves, n) }; t.drawRect = function (t, e, i, r, s, n, a) { a === void 0 && (a = 1); var o = n ? a / 2 : 0; var h = n ? a : 0; var l = [t + o, e + o, i - h, r - h, s, n, a]; this._saveToCmd(U._context._drawRect, l) }; t.drawCircle = function (t, e, i, r, s, n) { n === void 0 && (n = 1); var a = s ? n / 2 : 0; var o = 0; if (U.isWebGL) { o = ct.getInstance().getId(); if (this._vectorgraphArray == null) this._vectorgraphArray = []; this._vectorgraphArray.push(o) } var h = [t, e, i - a, r, s, n, o]; this._saveToCmd(U._context._drawCircle, h) }; t.drawPie = function (t, e, i, r, s, n, a, o) { o === void 0 && (o = 1); var h = a ? o / 2 : 0; var l = a ? o : 0; var u = 0; if (U.isWebGL) { u = ct.getInstance().getId(); if (this._vectorgraphArray == null) this._vectorgraphArray = []; this._vectorgraphArray.push(u) } var c = [t + h, e + h, i - l, r, s, n, a, o, u]; c[3] = ut.toRadian(r); c[4] = ut.toRadian(s); this._saveToCmd(U._context._drawPie, c) }; t.drawPoly = function (t, e, i, r, s, n) { n === void 0 && (n = 1); var a = 0; var o = false; if (U.isWebGL) { a = ct.getInstance().getId(); if (this._vectorgraphArray == null) this._vectorgraphArray = []; this._vectorgraphArray.push(a); if (i.length > 6) { o = false } else { o = true } } var h = s ? n % 2 === 0 ? 0 : .5 : 0; var l = [t + h, e + h, i, r, s, n, a, o]; this._saveToCmd(U._context._drawPoly, l) }; t.drawPath = function (t, e, i, r, s) { var n = [t, e, i, r, s]; this._saveToCmd(U._context._drawPath, n) }; u(0, t, "cmds", function () { return this._cmds }, function (t) { this._sp && (this._sp._renderType |= 512); this._cmds = t; this._render = this._renderAll; this._repaint() }); c.__init__ = function () { if (U.isConchNode) { var t = laya.display.Graphics.prototype; var e = X.window.ConchGraphics.prototype; var i = ["clear", "destroy", "alpha", "rotate", "transform", "scale", "translate", "save", "restore", "clipRect", "blendMode", "fillText", "fillBorderText", "_fands", "drawRect", "drawCircle", "drawPie", "drawPoly", "drawPath", "drawImageM", "drawLine", "drawLines", "_drawPs", "drawCurves", "replaceText", "replaceTextColor", "_fillImage", "fillTexture", "setSkinMesh", "drawParticle", "drawImageS"]; for (var r = 0, s = i.length; r <= s; r++) { var n = i[r]; t[n] = e[n] } t._saveToCmd = null; if (e.drawImageS) { t.drawTextures = function (t, e) { if (!t) return; if (!(t.loaded && t.bitmap && t.source)) { return } var i = t.uv, r = t.bitmap.width, s = t.bitmap.height; this.drawImageS(t.bitmap.source, i[0] * r, i[1] * s, (i[2] - i[0]) * r, (i[5] - i[3]) * s, t.offsetX, t.offsetY, t.width, t.height, e) } } t.drawTexture = function (t, e, i, r, s, n, a) { e === void 0 && (e = 0); i === void 0 && (i = 0); r === void 0 && (r = 0); s === void 0 && (s = 0); a === void 0 && (a = 1); if (!t) return; if (!t.loaded) { t.once("loaded", this, function () { this.drawTexture(t, e, i, r, s, n) }); return } if (!(t.loaded && t.bitmap && t.source)) { return } if (!r) r = t.sourceWidth; if (!s) s = t.sourceHeight; a = a < 0 ? 0 : a > 1 ? 1 : a; r = r - t.sourceWidth + t.width; s = s - t.sourceHeight + t.height; if (r <= 0 || s <= 0) return; e += t.offsetX; i += t.offsetY; var o = t.uv, h = t.bitmap.width, l = t.bitmap.height; if (o[4] < o[0] && o[5] < o[1]) { this.drawImageM(t.bitmap.source, o[4] * h, o[5] * l, (o[0] - o[4]) * h, (o[1] - o[5]) * l, e, i, r, s, n, a) } else { this.drawImageM(t.bitmap.source, o[0] * h, o[1] * l, (o[2] - o[0]) * h, (o[5] - o[3]) * l, e, i, r, s, n, a) } this._repaint() }; t.fillTexture = function (t, e, i, r, s, n, a) { r === void 0 && (r = 0); s === void 0 && (s = 0); n === void 0 && (n = "repeat"); if (!t) return; if (t.loaded) { var o = U._context.ctx; var h = t.bitmap.width, l = t.bitmap.height, u = t.uv; var c; if (t.uv != Mt.DEF_UV) { c = o.createPattern(t.bitmap.source, n, u[0] * h, u[1] * l, (u[2] - u[0]) * h, (u[5] - u[3]) * l) } else { c = o.createPattern(t.bitmap.source, n) } var f = 0, _ = 0; if (a) { e += a.x % t.width; i += a.y % t.height; f -= a.x % t.width; _ -= a.y % t.height } this._fillImage(c, e, i, f, _, r, s) } } } }; c._cache = []; return c }(); var f = function () { function y() { this._cacheBoundsType = false } v(y, "laya.display.GraphicsBounds"); var t = y.prototype; t.destroy = function () { this._graphics = null; this._temp = null; this._rstBoundPoints = null; this._bounds = null }; t.reset = function () { this._temp && (this._temp.length = 0) }; t.getBounds = function (t) { t === void 0 && (t = false); if (!this._bounds || !this._temp || this._temp.length < 1 || t != this._cacheBoundsType) { this._bounds = D._getWrapRec(this.getBoundPoints(t), this._bounds) } this._cacheBoundsType = t; return this._bounds }; t.getBoundPoints = function (t) { t === void 0 && (t = false); if (!this._temp || this._temp.length < 1 || t != this._cacheBoundsType) this._temp = this._getCmdPoints(t); this._cacheBoundsType = t; return this._rstBoundPoints = ut.copyArray(this._rstBoundPoints, this._temp) }; t._getCmdPoints = function (t) { t === void 0 && (t = false); var e = U._context; var i = this._graphics.cmds; var r; r = this._temp || (this._temp = []); r.length = 0; if (!i && this._graphics._one != null) { y._tempCmds.length = 0; y._tempCmds.push(this._graphics._one); i = y._tempCmds } if (!i) return r; var s; s = y._tempMatrixArrays; s.length = 0; var n = y._initMatrix; n.identity(); var a = y._tempMatrix; var o; var h; var l = NaN; var u = NaN; var c = NaN; var f = NaN; var _ = NaN; var d = NaN; for (var p = 0, v = i.length; p < v; p++) { o = i[p]; if (!o.callee) continue; switch (o.callee) { case e._save: case 7: s.push(n); n = n.clone(); break; case e._restore: case 8: n = s.pop(); break; case e._scale: case 5: a.identity(); a.translate(-o[2], -o[3]); a.scale(o[0], o[1]); a.translate(o[2], o[3]); this._switchMatrix(n, a); break; case e._rotate: case 3: a.identity(); a.translate(-o[1], -o[2]); a.rotate(o[0]); a.translate(o[1], o[2]); this._switchMatrix(n, a); break; case e._translate: case 6: a.identity(); a.translate(o[0], o[1]); this._switchMatrix(n, a); break; case e._transform: case 4: a.identity(); a.translate(-o[1], -o[2]); a.concat(o[0]); a.translate(o[1], o[2]); this._switchMatrix(n, a); break; case 16: case 24: y._addPointArrToRst(r, D._getBoundPointS(o[0], o[1], o[2], o[3]), n); break; case 17: n.copyTo(a); a.concat(o[4]); y._addPointArrToRst(r, D._getBoundPointS(o[0], o[1], o[2], o[3]), a); break; case e._drawTexture: h = o[0]; if (t) { if (o[3] && o[4]) { y._addPointArrToRst(r, D._getBoundPointS(o[1], o[2], o[3], o[4]), n) } else { h = o[0]; y._addPointArrToRst(r, D._getBoundPointS(o[1], o[2], h.width, h.height), n) } } else { l = (o[3] || h.sourceWidth) / h.width; u = (o[4] || h.sourceHeight) / h.height; c = l * h.sourceWidth; f = u * h.sourceHeight; _ = h.offsetX > 0 ? h.offsetX : 0; d = h.offsetY > 0 ? h.offsetY : 0; _ *= l; d *= u; y._addPointArrToRst(r, D._getBoundPointS(o[1] - _, o[2] - d, c, f), n) } break; case e._fillTexture: if (o[3] && o[4]) { y._addPointArrToRst(r, D._getBoundPointS(o[1], o[2], o[3], o[4]), n) } else { h = o[0]; y._addPointArrToRst(r, D._getBoundPointS(o[1], o[2], h.width, h.height), n) } break; case e._drawTextureWithTransform: ; var m; if (o[5]) { n.copyTo(a); a.concat(o[5]); m = a } else { m = n } if (t) { if (o[3] && o[4]) { y._addPointArrToRst(r, D._getBoundPointS(o[1], o[2], o[3], o[4]), m) } else { h = o[0]; y._addPointArrToRst(r, D._getBoundPointS(o[1], o[2], h.width, h.height), m) } } else { h = o[0]; l = (o[3] || h.sourceWidth) / h.width; u = (o[4] || h.sourceHeight) / h.height; c = l * h.sourceWidth; f = u * h.sourceHeight; _ = h.offsetX > 0 ? h.offsetX : 0; d = h.offsetY > 0 ? h.offsetY : 0; _ *= l; d *= u; y._addPointArrToRst(r, D._getBoundPointS(o[1] - _, o[2] - d, c, f), m) } break; case e._drawRect: case 13: y._addPointArrToRst(r, D._getBoundPointS(o[0], o[1], o[2], o[3]), n); break; case e._drawCircle: case e._fillCircle: case 14: y._addPointArrToRst(r, D._getBoundPointS(o[0] - o[2], o[1] - o[2], o[2] + o[2], o[2] + o[2]), n); break; case e._drawLine: case 20: y._tempPoints.length = 0; var g = NaN; g = o[5] * .5; if (o[0] == o[2]) { y._tempPoints.push(o[0] + g, o[1], o[2] + g, o[3], o[0] - g, o[1], o[2] - g, o[3]) } else if (o[1] == o[3]) { y._tempPoints.push(o[0], o[1] + g, o[2], o[3] + g, o[0], o[1] - g, o[2], o[3] - g) } else { y._tempPoints.push(o[0], o[1], o[2], o[3]) } y._addPointArrToRst(r, y._tempPoints, n); break; case e._drawCurves: case 22: y._addPointArrToRst(r, I.I.getBezierPoints(o[2]), n, o[0], o[1]); break; case e._drawPoly: case e._drawLines: case 18: y._addPointArrToRst(r, o[2], n, o[0], o[1]); break; case e._drawPath: case 19: y._addPointArrToRst(r, this._getPathPoints(o[2]), n, o[0], o[1]); break; case e._drawPie: case 15: y._addPointArrToRst(r, this._getPiePoints(o[0], o[1], o[2], o[3], o[4]), n); break } } if (r.length > 200) { r = ut.copyArray(r, D._getWrapRec(r)._getBoundPoints()) } else if (r.length > 8) r = R.scanPList(r); return r }; t._switchMatrix = function (t, e) { e.concat(t); e.copyTo(t) }; t._getPiePoints = function (t, e, i, r, s) { var n = y._tempPoints; y._tempPoints.length = 0; n.push(t, e); var a = (s - r) % (2 * Math.PI); var o = 10; var h = a / o; var l = NaN; var u = r; for (l = 0; l <= o; l++) { n.push(t + i * Math.cos(u), e + i * Math.sin(u)); u += h } return n }; t._getPathPoints = function (t) { var e = 0, i = 0; var r = y._tempPoints; r.length = 0; i = t.length; var s; for (e = 0; e < i; e++) { s = t[e]; if (s.length > 1) { r.push(s[1], s[2]); if (s.length > 3) { r.push(s[3], s[4]) } } } return r }; y._addPointArrToRst = function (t, e, i, r, s) { r === void 0 && (r = 0); s === void 0 && (s = 0); var n = 0, a = 0; a = e.length; for (n = 0; n < a; n += 2) { y._addPointToRst(t, e[n] + r, e[n + 1] + s, i) } }; y._addPointToRst = function (t, e, i, r) { var s = k.TEMP; s.setTo(e ? e : 0, i ? i : 0); r.transformPoint(s); t.push(s.x, s.y) }; y._tempPoints = []; y._tempMatrixArrays = []; y._tempCmds = []; h(y, ["_tempMatrix", function () { return this._tempMatrix = new L }, "_initMatrix", function () { return this._initMatrix = new L }]); return y }(); var _ = function () { function t() { } v(t, "laya.events.Event"); var e = t.prototype; e.setTo = function (t, e, i) { this.type = t; this.currentTarget = e; this.target = i; return this }; e.stopPropagation = function () { this._stoped = true }; u(0, e, "stageY", function () { return T.stage.mouseY }); u(0, e, "charCode", function () { return this.nativeEvent.charCode }); u(0, e, "touches", function () { var t = this.nativeEvent.touches; if (t) { var e = T.stage; for (var i = 0, r = t.length; i < r; i++) { var s = t[i]; var n = k.TEMP; n.setTo(s.clientX, s.clientY); e._canvasTransform.invertTransformPoint(n); e.transform.invertTransformPoint(n); s.stageX = n.x; s.stageY = n.y } } return t }); u(0, e, "keyLocation", function () { return this.nativeEvent.keyLocation }); u(0, e, "ctrlKey", function () { return this.nativeEvent.ctrlKey }); u(0, e, "altKey", function () { return this.nativeEvent.altKey }); u(0, e, "shiftKey", function () { return this.nativeEvent.shiftKey }); u(0, e, "stageX", function () { return T.stage.mouseX }); t.EMPTY = new t; t.MOUSE_DOWN = "mousedown"; t.MOUSE_UP = "mouseup"; t.CLICK = "click"; t.RIGHT_MOUSE_DOWN = "rightmousedown"; t.RIGHT_MOUSE_UP = "rightmouseup"; t.RIGHT_CLICK = "rightclick"; t.MOUSE_MOVE = "mousemove"; t.MOUSE_OVER = "mouseover"; t.MOUSE_OUT = "mouseout"; t.MOUSE_WHEEL = "mousewheel"; t.ROLL_OVER = "mouseover"; t.ROLL_OUT = "mouseout"; t.DOUBLE_CLICK = "doubleclick"; t.CHANGE = "change"; t.CHANGED = "changed"; t.RESIZE = "resize"; t.ADDED = "added"; t.REMOVED = "removed"; t.DISPLAY = "display"; t.UNDISPLAY = "undisplay"; t.ERROR = "error"; t.COMPLETE = "complete"; t.LOADED = "loaded"; t.PROGRESS = "progress"; t.INPUT = "input"; t.RENDER = "render"; t.OPEN = "open"; t.MESSAGE = "message"; t.CLOSE = "close"; t.KEY_DOWN = "keydown"; t.KEY_PRESS = "keypress"; t.KEY_UP = "keyup"; t.FRAME = "enterframe"; t.DRAG_START = "dragstart"; t.DRAG_MOVE = "dragmove"; t.DRAG_END = "dragend"; t.ENTER = "enter"; t.SELECT = "select"; t.BLUR = "blur"; t.FOCUS = "focus"; t.VISIBILITY_CHANGE = "visibilitychange"; t.FOCUS_CHANGE = "focuschange"; t.PLAYED = "played"; t.PAUSED = "paused"; t.STOPPED = "stopped"; t.START = "start"; t.END = "end"; t.ENABLE_CHANGED = "enablechanged"; t.ACTIVE_IN_HIERARCHY_CHANGED = "activeinhierarchychanged"; t.COMPONENT_ADDED = "componentadded"; t.COMPONENT_REMOVED = "componentremoved"; t.LAYER_CHANGED = "layerchanged"; t.HIERARCHY_LOADED = "hierarchyloaded"; t.RECOVERED = "recovered"; t.RELEASED = "released"; t.LINK = "link"; t.LABEL = "label"; t.FULL_SCREEN_CHANGE = "fullscreenchange"; t.DEVICE_LOST = "devicelost"; t.MESH_CHANGED = "meshchanged"; t.MATERIAL_CHANGED = "materialchanged"; t.WORLDMATRIX_NEEDCHANGE = "worldmatrixneedchanged"; t.ANIMATION_CHANGED = "animationchanged"; t.TRIGGER_ENTER = "triggerenter"; t.TRIGGER_STAY = "triggerstay"; t.TRIGGER_EXIT = "triggerexit"; t.TRAIL_FILTER_CHANGE = "trailfilterchange"; t.DOMINO_FILTER_CHANGE = "dominofilterchange"; return t }(); var p = function () { function t() { } v(t, "laya.events.Keyboard"); t.NUMBER_0 = 48; t.NUMBER_1 = 49; t.NUMBER_2 = 50; t.NUMBER_3 = 51; t.NUMBER_4 = 52; t.NUMBER_5 = 53; t.NUMBER_6 = 54; t.NUMBER_7 = 55; t.NUMBER_8 = 56; t.NUMBER_9 = 57; t.A = 65; t.B = 66; t.C = 67; t.D = 68; t.E = 69; t.F = 70; t.G = 71; t.H = 72; t.I = 73; t.J = 74; t.K = 75; t.L = 76; t.M = 77; t.N = 78; t.O = 79; t.P = 80; t.Q = 81; t.R = 82; t.S = 83; t.T = 84; t.U = 85; t.V = 86; t.W = 87; t.X = 88; t.Y = 89; t.Z = 90; t.F1 = 112; t.F2 = 113; t.F3 = 114; t.F4 = 115; t.F5 = 116; t.F6 = 117; t.F7 = 118; t.F8 = 119; t.F9 = 120; t.F10 = 121; t.F11 = 122; t.F12 = 123; t.F13 = 124; t.F14 = 125; t.F15 = 126; t.NUMPAD = 21; t.NUMPAD_0 = 96; t.NUMPAD_1 = 97; t.NUMPAD_2 = 98; t.NUMPAD_3 = 99; t.NUMPAD_4 = 100; t.NUMPAD_5 = 101; t.NUMPAD_6 = 102; t.NUMPAD_7 = 103; t.NUMPAD_8 = 104; t.NUMPAD_9 = 105; t.NUMPAD_ADD = 107; t.NUMPAD_DECIMAL = 110; t.NUMPAD_DIVIDE = 111; t.NUMPAD_ENTER = 108; t.NUMPAD_MULTIPLY = 106; t.NUMPAD_SUBTRACT = 109; t.SEMICOLON = 186; t.EQUAL = 187; t.COMMA = 188; t.MINUS = 189; t.PERIOD = 190; t.SLASH = 191; t.BACKQUOTE = 192; t.LEFTBRACKET = 219; t.BACKSLASH = 220; t.RIGHTBRACKET = 221; t.QUOTE = 222; t.ALTERNATE = 18; t.BACKSPACE = 8; t.CAPS_LOCK = 20; t.COMMAND = 15; t.CONTROL = 17; t.DELETE = 46; t.ENTER = 13; t.ESCAPE = 27; t.PAGE_UP = 33; t.PAGE_DOWN = 34; t.END = 35; t.HOME = 36; t.LEFT = 37; t.UP = 38; t.RIGHT = 39; t.DOWN = 40; t.SHIFT = 16; t.SPACE = 32; t.TAB = 9; t.INSERT = 45; return t }(); var y = function () { function s() { } v(s, "laya.events.KeyBoardManager"); s.__init__ = function () { s._addEvent("keydown"); s._addEvent("keypress"); s._addEvent("keyup") }; s._addEvent = function (e) { X.document.addEventListener(e, function (t) { laya.events.KeyBoardManager._dispatch(t, e) }, true) }; s._dispatch = function (t, e) { if (!s.enabled) return; s._event._stoped = false; s._event.nativeEvent = t; s._event.keyCode = t.keyCode || t.which || t.charCode; if (e === "keydown") s._pressKeys[s._event.keyCode] = true; else if (e === "keyup") s._pressKeys[s._event.keyCode] = null; var i = T.stage.focus && T.stage.focus.event != null && T.stage.focus.displayedInStage ? T.stage.focus : T.stage; var r = i; while (r) { r.event(e, s._event.setTo(e, r, i)); r = r.parent } }; s.hasKeyDown = function (t) { return s._pressKeys[t] }; s._pressKeys = {}; s.enabled = true; h(s, ["_event", function () { return this._event = new _ }]); return s }(); var x = function () { function t() { } v(t, "laya.events.KeyLocation"); t.STANDARD = 0; t.LEFT = 1; t.RIGHT = 2; t.NUM_PAD = 3; return t }(); var b = function () { function c() { this.mouseX = 0; this.mouseY = 0; this.disableMouseEvent = false; this.mouseDownTime = 0; this.mouseMoveAccuracy = 2; this._stage = null; this._target = null; this._lastMoveTimer = 0; this._isLeftMouse = false; this._eventList = []; this._touchIDs = {}; this._id = 1; this._tTouchID = 0; this._event = new _; this._matrix = new L; this._point = new k; this._rect = new D; this._prePoint = new k; this._curTouchID = NaN } v(c, "laya.events.MouseManager"); var t = c.prototype; t.__init__ = function (t, e) { var i = this; this._stage = t; var r = this; var s = this._eventList; e.oncontextmenu = function (t) { if (c.enabled) return false }; e.addEventListener("mousedown", function (t) { if (c.enabled) { if (!X.onIE) t.preventDefault(); s.push(t); r.mouseDownTime = X.now() } }); e.addEventListener("mouseup", function (t) { if (c.enabled) { t.preventDefault(); s.push(t); r.mouseDownTime = -X.now() } }, true); e.addEventListener("mousemove", function (t) { if (c.enabled) { t.preventDefault(); var e = X.now(); if (e - r._lastMoveTimer < 10) return; r._lastMoveTimer = e; s.push(t) } }, true); e.addEventListener("mouseout", function (t) { if (c.enabled) s.push(t) }); e.addEventListener("mouseover", function (t) { if (c.enabled) s.push(t) }); e.addEventListener("touchstart", function (t) { if (c.enabled) { s.push(t); if (!c._isFirstTouch && !Vt.isInputting) t.preventDefault(); r.mouseDownTime = X.now() } }); e.addEventListener("touchend", function (t) { if (c.enabled) { if (!c._isFirstTouch && !Vt.isInputting) t.preventDefault(); c._isFirstTouch = false; s.push(t); r.mouseDownTime = -X.now() } else { i._curTouchID = NaN } }, true); e.addEventListener("touchmove", function (t) { if (c.enabled) { t.preventDefault(); s.push(t) } }, true); e.addEventListener("touchcancel", function (t) { if (c.enabled) { t.preventDefault(); s.push(t) } else { i._curTouchID = NaN } }, true); e.addEventListener("mousewheel", function (t) { if (c.enabled) s.push(t) }); e.addEventListener("DOMMouseScroll", function (t) { if (c.enabled) s.push(t) }) }; t.initEvent = function (t, e) { var i = this; i._event._stoped = false; i._event.nativeEvent = e || t; i._target = null; this._point.setTo(t.pageX || t.clientX, t.pageY || t.clientY); this._stage._canvasTransform.invertTransformPoint(this._point); i.mouseX = this._point.x; i.mouseY = this._point.y; i._event.touchId = t.identifier || 0; this._tTouchID = i._event.touchId; var r; r = w.I._event; r._stoped = false; r.nativeEvent = i._event.nativeEvent; r.touchId = i._event.touchId }; t.checkMouseWheel = function (t) { this._event.delta = t.wheelDelta ? t.wheelDelta * .025 : -t.detail; var e = w.I.getLastOvers(); for (var i = 0, r = e.length; i < r; i++) { var s = e[i]; s.event("mousewheel", this._event.setTo("mousewheel", s, this._target)) } }; t.onMouseMove = function (t) { w.I.onMouseMove(t, this._tTouchID) }; t.onMouseDown = function (t) { if (Vt.isInputting && T.stage.focus && T.stage.focus["focus"] && !T.stage.focus.contains(this._target)) { var e = T.stage.focus["_tf"] || T.stage.focus; var i = t["_tf"] || t; if (i instanceof laya.display.Input && i.multiline == e.multiline) e["_focusOut"](); else e.focus = false } w.I.onMouseDown(t, this._tTouchID, this._isLeftMouse) }; t.onMouseUp = function (t) { w.I.onMouseUp(t, this._tTouchID, this._isLeftMouse) }; t.check = function (t, e, i, r) { this._point.setTo(e, i); t.fromParentPoint(this._point); e = this._point.x; i = this._point.y; var s = t.scrollRect; if (s) { this._rect.setTo(s.x, s.y, s.width, s.height); if (!this._rect.contains(e, i)) return false } if (!this.disableMouseEvent) { if (t.hitTestPrior && !t.mouseThrough && !this.hitTest(t, e, i)) { return false } for (var n = t._childs.length - 1; n > -1; n--) { var a = t._childs[n]; if (!a.destroyed && a.mouseEnabled && a.visible) { if (this.check(a, e, i, r)) return true } } } var o = t.hitTestPrior && !t.mouseThrough && !this.disableMouseEvent ? true : this.hitTest(t, e, i); if (o) { this._target = t; r.call(this, t) } else if (r === this.onMouseUp && t === this._stage) { this._target = this._stage; r.call(this, this._target) } return o }; t.hitTest = function (t, e, i) { var r = false; if (t.scrollRect) { e -= t.scrollRect.x; i -= t.scrollRect.y } if (t.hitArea instanceof laya.utils.HitArea) { return t.hitArea.isHit(e, i) } if (t.width > 0 && t.height > 0 || t.mouseThrough || t.hitArea) { if (!t.mouseThrough) { var s = this._rect; if (t.hitArea) s = t.hitArea; else s.setTo(0, 0, t.width, t.height); r = s.contains(e, i) } else { r = t.getGraphicBounds().contains(e, i) } } return r }; t.runEvent = function () { var t = this._eventList.length; if (!t) return; var e = this; var i = 0, r = 0, s = 0, n; while (i < t) { var a = this._eventList[i]; if (a.type !== "mousemove") this._prePoint.x = this._prePoint.y = -1e6; switch (a.type) { case "mousedown": this._touchIDs[0] = this._id++; if (!c._isTouchRespond) { e._isLeftMouse = a.button === 0; e.initEvent(a); e.check(e._stage, e.mouseX, e.mouseY, e.onMouseDown) } else c._isTouchRespond = false; break; case "mouseup": e._isLeftMouse = a.button === 0; e.initEvent(a); e.check(e._stage, e.mouseX, e.mouseY, e.onMouseUp); break; case "mousemove": if (Math.abs(this._prePoint.x - a.clientX) + Math.abs(this._prePoint.y - a.clientY) >= this.mouseMoveAccuracy) { this._prePoint.x = a.clientX; this._prePoint.y = a.clientY; e.initEvent(a); e.check(e._stage, e.mouseX, e.mouseY, e.onMouseMove) } break; case "touchstart": c._isTouchRespond = true; e._isLeftMouse = true; var o = a.changedTouches; for (r = 0, s = o.length; r < s; r++) { n = o[r]; if (c.multiTouchEnabled || isNaN(this._curTouchID)) { this._curTouchID = n.identifier; if (this._id % 200 === 0) this._touchIDs = {}; this._touchIDs[n.identifier] = this._id++; e.initEvent(n, a); e.check(e._stage, e.mouseX, e.mouseY, e.onMouseDown) } } break; case "touchend": case "touchcancel": c._isTouchRespond = true; e._isLeftMouse = true; var h = a.changedTouches; for (r = 0, s = h.length; r < s; r++) { n = h[r]; if (c.multiTouchEnabled || n.identifier == this._curTouchID) { this._curTouchID = NaN; e.initEvent(n, a); var l = false; l = e.check(e._stage, e.mouseX, e.mouseY, e.onMouseUp); if (!l) { e.onMouseUp(null) } } } break; case "touchmove": ; var u = a.changedTouches; for (r = 0, s = u.length; r < s; r++) { n = u[r]; if (c.multiTouchEnabled || n.identifier == this._curTouchID) { e.initEvent(n, a); e.check(e._stage, e.mouseX, e.mouseY, e.onMouseMove) } } break; case "wheel": case "mousewheel": case "DOMMouseScroll": e.checkMouseWheel(a); break; case "mouseout": w.I.stageMouseOut(); break; case "mouseover": e._stage.event("mouseover", e._event.setTo("mouseover", e._stage, e._stage)); break }i++ } this._eventList.length = 0 }; c.enabled = true; c.multiTouchEnabled = true; c._isTouchRespond = false; c._isFirstTouch = true; h(c, ["instance", function () { return this.instance = new c }]); return c }(); var w = function () { function p() { this.preOvers = []; this.preDowns = []; this.preRightDowns = []; this.enable = true; this._lastClickTime = 0; this._event = new _ } v(p, "laya.events.TouchManager"); var t = p.prototype; t._clearTempArrs = function () { p._oldArr.length = 0; p._newArr.length = 0; p._tEleArr.length = 0 }; t.getTouchFromArr = function (t, e) { var i = 0, r = 0; r = e.length; var s; for (i = 0; i < r; i++) { s = e[i]; if (s.id == t) { return s } } return null }; t.removeTouchFromArr = function (t, e) { var i = 0; for (i = e.length - 1; i >= 0; i--) { if (e[i].id == t) { e.splice(i, 1) } } }; t.createTouchO = function (t, e) { var i; i = st.getItem("TouchData") || {}; i.id = e; i.tar = t; return i }; t.onMouseDown = function (t, e, i) { i === void 0 && (i = false); if (!this.enable) return; var r; var s; var n; r = this.getTouchFromArr(e, this.preOvers); n = this.getEles(t, null, p._tEleArr); if (!r) { s = this.createTouchO(t, e); this.preOvers.push(s) } else { r.tar = t } if (X.onMobile) this.sendEvents(n, "mouseover"); var a; a = i ? this.preDowns : this.preRightDowns; r = this.getTouchFromArr(e, a); if (!r) { s = this.createTouchO(t, e); a.push(s) } else { r.tar = t } this.sendEvents(n, i ? "mousedown" : "rightmousedown"); this._clearTempArrs() }; t.sendEvents = function (t, e) { var i = 0, r = 0; r = t.length; this._event._stoped = false; var s; s = t[0]; var n; for (i = 0; i < r; i++) { n = t[i]; if (n.destroyed) return; n.event(e, this._event.setTo(e, n, s)); if (this._event._stoped) break } }; t.getEles = function (t, e, i) { if (!i) { i = [] } else { i.length = 0 } while (t && t != e) { i.push(t); t = t.parent } return i }; t.checkMouseOutAndOverOfMove = function (t, e, i) { i === void 0 && (i = 0); if (e == t) return; var r; var s; var n = 0, a = 0; if (e.contains(t)) { s = this.getEles(t, e, p._tEleArr); this.sendEvents(s, "mouseover") } else if (t.contains(e)) { s = this.getEles(e, t, p._tEleArr); this.sendEvents(s, "mouseout") } else { s = p._tEleArr; s.length = 0; var o; o = this.getEles(e, null, p._oldArr); var h; h = this.getEles(t, null, p._newArr); a = o.length; var l = 0; for (n = 0; n < a; n++) { r = o[n]; l = h.indexOf(r); if (l >= 0) { h.splice(l, h.length - l); break } else { s.push(r) } } if (s.length > 0) { this.sendEvents(s, "mouseout") } if (h.length > 0) { this.sendEvents(h, "mouseover") } } }; t.onMouseMove = function (t, e) { if (!this.enable) return; var i; i = this.getTouchFromArr(e, this.preOvers); var r; var s; if (!i) { r = this.getEles(t, null, p._tEleArr); this.sendEvents(r, "mouseover"); this.preOvers.push(this.createTouchO(t, e)) } else { this.checkMouseOutAndOverOfMove(t, i.tar); i.tar = t; r = this.getEles(t, null, p._tEleArr) } this.sendEvents(r, "mousemove"); this._clearTempArrs() }; t.getLastOvers = function () { p._tEleArr.length = 0; if (this.preOvers.length > 0 && this.preOvers[0].tar) { return this.getEles(this.preOvers[0].tar, null, p._tEleArr) } p._tEleArr.push(T.stage); return p._tEleArr }; t.stageMouseOut = function () { var t; t = this.getLastOvers(); this.preOvers.length = 0; this.sendEvents(t, "mouseout") }; t.onMouseUp = function (t, e, i) { i === void 0 && (i = false); if (!this.enable) return; var r; var s; var n; var a; var o = 0, h = 0; var l; var u; var c = X.onMobile; n = this.getEles(t, null, p._tEleArr); this.sendEvents(n, i ? "mouseup" : "rightmouseup"); var f; f = i ? this.preDowns : this.preRightDowns; r = this.getTouchFromArr(e, f); if (!r) { } else { var _ = false; var d = X.now(); _ = d - this._lastClickTime < 300; this._lastClickTime = d; if (t == r.tar) { u = n } else { a = this.getEles(r.tar, null, p._oldArr); u = p._newArr; u.length = 0; h = a.length; for (o = 0; o < h; o++) { l = a[o]; if (n.indexOf(l) >= 0) { u.push(l) } } } if (u.length > 0) { this.sendEvents(u, i ? "click" : "rightclick") } if (i && _) { this.sendEvents(u, "doubleclick") } this.removeTouchFromArr(e, f); r.tar = null; st.recover("TouchData", r) } r = this.getTouchFromArr(e, this.preOvers); if (!r) { } else { if (c) { u = this.getEles(r.tar, null, u); if (u && u.length > 0) { this.sendEvents(u, "mouseout") } this.removeTouchFromArr(e, this.preOvers); r.tar = null; st.recover("TouchData", r) } } this._clearTempArrs() }; p._oldArr = []; p._newArr = []; p._tEleArr = []; h(p, ["I", function () { return this.I = new p }]); return p }(); var C = function () { function t() { this._action = null } v(t, "laya.filters.Filter"); var e = t.prototype; T.imps(e, { "laya.filters.IFilter": true }); e.callNative = function (t) { }; u(0, e, "type", function () { return -1 }); u(0, e, "action", function () { return this._action }); t.BLUR = 16; t.COLOR = 32; t.GLOW = 8; t._filterStart = null; t._filterEnd = null; t._EndTarget = null; t._recycleScope = null; t._filter = null; t._useSrc = null; t._endSrc = null; t._useOut = null; t._endOut = null; return t }(); var S = function () { function t() { this.data = null } v(t, "laya.filters.ColorFilterAction"); var e = t.prototype; T.imps(e, { "laya.filters.IFilterAction": true }); e.apply = function (t) { var e = t.ctx.ctx; var i = t.ctx.ctx.canvas; if (i.width == 0 || i.height == 0) return i; var r = e.getImageData(0, 0, i.width, i.height); var s = r.data; var n; for (var a = 0, o = s.length; a < o; a += 4) { n = this.getColor(s[a], s[a + 1], s[a + 2], s[a + 3]); if (s[a + 3] == 0) continue; s[a] = n[0]; s[a + 1] = n[1]; s[a + 2] = n[2]; s[a + 3] = n[3] } e.putImageData(r, 0, 0); return t }; e.getColor = function (t, e, i, r) { var s = []; if (this.data._mat && this.data._alpha) { var n = this.data._mat; var a = this.data._alpha; s[0] = n[0] * t + n[1] * e + n[2] * i + n[3] * r + a[0]; s[1] = n[4] * t + n[5] * e + n[6] * i + n[7] * r + a[1]; s[2] = n[8] * t + n[9] * e + n[10] * i + n[11] * r + a[2]; s[3] = n[12] * t + n[13] * e + n[14] * i + n[15] * r + a[3] } return s }; return t }(); var A = function () { function t() { } v(t, "laya.maths.Arith"); t.formatR = function (t) { if (t > Math.PI) t -= Math.PI * 2; if (t < -Math.PI) t += Math.PI * 2; return t }; t.isPOT = function (t, e) { return t > 0 && (t & t - 1) === 0 && e > 0 && (e & e - 1) === 0 }; t.setMatToArray = function (t, e) { t.a, t.b, 0, 0, t.c, t.d, 0, 0, 0, 0, 1, 0, t.tx + 20, t.ty + 20, 0, 1; e[0] = t.a; e[1] = t.b; e[4] = t.c; e[5] = t.d; e[12] = t.tx; e[13] = t.ty }; return t }(); var I = function () { function t() { this._controlPoints = [new k, new k, new k]; this._calFun = this.getPoint2 } v(t, "laya.maths.Bezier"); var e = t.prototype; e._switchPoint = function (t, e) { var i = this._controlPoints.shift(); i.setTo(t, e); this._controlPoints.push(i) }; e.getPoint2 = function (t, e) { var i = this._controlPoints[0]; var r = this._controlPoints[1]; var s = this._controlPoints[2]; var n = Math.pow(1 - t, 2) * i.x + 2 * t * (1 - t) * r.x + Math.pow(t, 2) * s.x; var a = Math.pow(1 - t, 2) * i.y + 2 * t * (1 - t) * r.y + Math.pow(t, 2) * s.y; e.push(n, a) }; e.getPoint3 = function (t, e) { var i = this._controlPoints[0]; var r = this._controlPoints[1]; var s = this._controlPoints[2]; var n = this._controlPoints[3]; var a = Math.pow(1 - t, 3) * i.x + 3 * r.x * t * (1 - t) * (1 - t) + 3 * s.x * t * t * (1 - t) + n.x * Math.pow(t, 3); var o = Math.pow(1 - t, 3) * i.y + 3 * r.y * t * (1 - t) * (1 - t) + 3 * s.y * t * t * (1 - t) + n.y * Math.pow(t, 3); e.push(a, o) }; e.insertPoints = function (t, e) { var i = NaN; t = t > 0 ? t : 5; var r = NaN; r = 1 / t; for (i = 0; i <= 1; i += r) { this._calFun(i, e) } }; e.getBezierPoints = function (t, e, i) { e === void 0 && (e = 5); i === void 0 && (i = 2); var r = 0, s = 0; s = t.length; if (s < (i + 1) * 2) return []; var n; n = []; switch (i) { case 2: this._calFun = this.getPoint2; break; case 3: this._calFun = this.getPoint3; break; default: return [] } while (this._controlPoints.length <= i) { this._controlPoints.push(new k) } for (r = 0; r < i * 2; r += 2) { this._switchPoint(t[r], t[r + 1]) } for (r = i * 2; r < s; r += 2) { this._switchPoint(t[r], t[r + 1]); if (r / 2 % i == 0) this.insertPoints(e, n) } return n }; h(t, ["I", function () { return this.I = new t }]); return t }(); var R = function () { function u() { } v(u, "laya.maths.GrahamScan"); u.multiply = function (t, e, i) { return (t.x - i.x) * (e.y - i.y) - (e.x - i.x) * (t.y - i.y) }; u.dis = function (t, e) { return (t.x - e.x) * (t.x - e.x) + (t.y - e.y) * (t.y - e.y) }; u._getPoints = function (t, e, i) { e === void 0 && (e = false); if (!u._mPointList) u._mPointList = []; while (u._mPointList.length < t) u._mPointList.push(new k); if (!i) i = []; i.length = 0; if (e) { u.getFrom(i, u._mPointList, t) } else { u.getFromR(i, u._mPointList, t) } return i }; u.getFrom = function (t, e, i) { var r = 0; for (r = 0; r < i; r++) { t.push(e[r]) } return t }; u.getFromR = function (t, e, i) { var r = 0; for (r = 0; r < i; r++) { t.push(e.pop()) } return t }; u.pListToPointList = function (t, e) { e === void 0 && (e = false); var i = 0, r = t.length / 2, s = u._getPoints(r, e, u._tempPointList); for (i = 0; i < r; i++) { s[i].setTo(t[i + i], t[i + i + 1]) } return s }; u.pointListToPlist = function (t) { var e = 0, i = t.length, r = u._temPList, s; r.length = 0; for (e = 0; e < i; e++) { s = t[e]; r.push(s.x, s.y) } return r }; u.scanPList = function (t) { return ut.copyArray(t, u.pointListToPlist(u.scan(u.pListToPointList(t, true)))) }; u.scan = function (t) { var e = 0, i = 0, r = 0, s = 2, n, a = t.length, o; var h = {}; var l; o = u._temArr; o.length = 0; a = t.length; for (e = a - 1; e >= 0; e--) { n = t[e]; l = n.x + "_" + n.y; if (!h.hasOwnProperty(l)) { h[l] = true; o.push(n) } } a = o.length; ut.copyArray(t, o); for (e = 1; e < a; e++)if (t[e].y < t[r].y || t[e].y == t[r].y && t[e].x < t[r].x) r = e; n = t[0]; t[0] = t[r]; t[r] = n; for (e = 1; e < a - 1; e++) { r = e; for (i = e + 1; i < a; i++)if (u.multiply(t[i], t[r], t[0]) > 0 || u.multiply(t[i], t[r], t[0]) == 0 && u.dis(t[0], t[i]) < u.dis(t[0], t[r])) r = i; n = t[e]; t[e] = t[r]; t[r] = n } o = u._temArr; o.length = 0; if (t.length < 3) { return ut.copyArray(o, t) } o.push(t[0], t[1], t[2]); for (e = 3; e < a; e++) { while (o.length >= 2 && u.multiply(t[e], o[o.length - 1], o[o.length - 2]) >= 0) o.pop(); t[e] && o.push(t[e]) } return o }; u._mPointList = null; u._tempPointList = []; u._temPList = []; u._temArr = []; return u }(); var P = function () { function s() { } v(s, "laya.maths.MathUtil"); s.subtractVector3 = function (t, e, i) { i[0] = t[0] - e[0]; i[1] = t[1] - e[1]; i[2] = t[2] - e[2] }; s.lerp = function (t, e, i) { return t * (1 - i) + e * i }; s.scaleVector3 = function (t, e, i) { i[0] = t[0] * e; i[1] = t[1] * e; i[2] = t[2] * e }; s.lerpVector3 = function (t, e, i, r) { var s = t[0], n = t[1], a = t[2]; r[0] = s + i * (e[0] - s); r[1] = n + i * (e[1] - n); r[2] = a + i * (e[2] - a) }; s.lerpVector4 = function (t, e, i, r) { var s = t[0], n = t[1], a = t[2], o = t[3]; r[0] = s + i * (e[0] - s); r[1] = n + i * (e[1] - n); r[2] = a + i * (e[2] - a); r[3] = o + i * (e[3] - o) }; s.slerpQuaternionArray = function (t, e, i, r, s, n, a) { var o = t[e + 0], h = t[e + 1], l = t[e + 2], u = t[e + 3], c = i[r + 0], f = i[r + 1], _ = i[r + 2], d = i[r + 3]; var p, v, m, g, y; v = o * c + h * f + l * _ + u * d; if (v < 0) { v = -v; c = -c; f = -f; _ = -_; d = -d } if (1 - v > 1e-6) { p = Math.acos(v); m = Math.sin(p); g = Math.sin((1 - s) * p) / m; y = Math.sin(s * p) / m } else { g = 1 - s; y = s } n[a + 0] = g * o + y * c; n[a + 1] = g * h + y * f; n[a + 2] = g * l + y * _; n[a + 3] = g * u + y * d; return n }; s.getRotation = function (t, e, i, r) { return Math.atan2(r - e, i - t) / Math.PI * 180 }; s.sortBigFirst = function (t, e) { if (t == e) return 0; return e > t ? 1 : -1 }; s.sortSmallFirst = function (t, e) { if (t == e) return 0; return e > t ? -1 : 1 }; s.sortNumBigFirst = function (t, e) { return parseFloat(e) - parseFloat(t) }; s.sortNumSmallFirst = function (t, e) { return parseFloat(t) - parseFloat(e) }; s.sortByKey = function (i, t, e) { t === void 0 && (t = false); e === void 0 && (e = true); var r; if (t) { r = e ? s.sortNumBigFirst : s.sortBigFirst } else { r = e ? s.sortNumSmallFirst : s.sortSmallFirst } return function (t, e) { return r(t[i], e[i]) } }; return s }(); var L = function () { function i(t, e, i, r, s, n) { this.inPool = false; this.bTransform = false; t === void 0 && (t = 1); e === void 0 && (e = 0); i === void 0 && (i = 0); r === void 0 && (r = 1); s === void 0 && (s = 0); n === void 0 && (n = 0); this.a = t; this.b = e; this.c = i; this.d = r; this.tx = s; this.ty = n; this._checkTransform() } v(i, "laya.maths.Matrix"); var t = i.prototype; t.identity = function () { this.a = this.d = 1; this.b = this.tx = this.ty = this.c = 0; this.bTransform = false; return this }; t._checkTransform = function () { return this.bTransform = this.a !== 1 || this.b !== 0 || this.c !== 0 || this.d !== 1 }; t.setTranslate = function (t, e) { this.tx = t; this.ty = e; return this }; t.translate = function (t, e) { this.tx += t; this.ty += e; return this }; t.scale = function (t, e) { this.a *= t; this.d *= e; this.c *= t; this.b *= e; this.tx *= t; this.ty *= e; this.bTransform = true }; t.rotate = function (t) { var e = Math.cos(t); var i = Math.sin(t); var r = this.a; var s = this.c; var n = this.tx; this.a = r * e - this.b * i; this.b = r * i + this.b * e; this.c = s * e - this.d * i; this.d = s * i + this.d * e; this.tx = n * e - this.ty * i; this.ty = n * i + this.ty * e; this.bTransform = true }; t.skew = function (t, e) { var i = Math.tan(t); var r = Math.tan(e); var s = this.a; var n = this.b; this.a += r * this.c; this.b += r * this.d; this.c += i * s; this.d += i * n; return this }; t.invertTransformPoint = function (t) { var e = this.a; var i = this.b; var r = this.c; var s = this.d; var n = this.tx; var a = e * s - i * r; var o = s / a; var h = -i / a; var l = -r / a; var u = e / a; var c = (r * this.ty - s * n) / a; var f = -(e * this.ty - i * n) / a; return t.setTo(o * t.x + l * t.y + c, h * t.x + u * t.y + f) }; t.transformPoint = function (t) { return t.setTo(this.a * t.x + this.c * t.y + this.tx, this.b * t.x + this.d * t.y + this.ty) }; t.transformPointN = function (t) { return t.setTo(this.a * t.x + this.c * t.y, this.b * t.x + this.d * t.y) }; t.transformPointArray = function (t, e) { var i = t.length; for (var r = 0; r < i; r += 2) { var s = t[r], n = t[r + 1]; e[r] = this.a * s + this.c * n + this.tx; e[r + 1] = this.b * s + this.d * n + this.ty } return e }; t.transformPointArrayScale = function (t, e) { var i = t.length; for (var r = 0; r < i; r += 2) { var s = t[r], n = t[r + 1]; e[r] = this.a * s + this.c * n; e[r + 1] = this.b * s + this.d * n } return e }; t.getScaleX = function () { return this.b === 0 ? this.a : Math.sqrt(this.a * this.a + this.b * this.b) }; t.getScaleY = function () { return this.c === 0 ? this.d : Math.sqrt(this.c * this.c + this.d * this.d) }; t.invert = function () { var t = this.a; var e = this.b; var i = this.c; var r = this.d; var s = this.tx; var n = t * r - e * i; this.a = r / n; this.b = -e / n; this.c = -i / n; this.d = t / n; this.tx = (i * this.ty - r * s) / n; this.ty = -(t * this.ty - e * s) / n; return this }; t.setTo = function (t, e, i, r, s, n) { this.a = t, this.b = e, this.c = i, this.d = r, this.tx = s, this.ty = n; return this }; t.concat = function (t) { var e = this.a; var i = this.c; var r = this.tx; this.a = e * t.a + this.b * t.c; this.b = e * t.b + this.b * t.d; this.c = i * t.a + this.d * t.c; this.d = i * t.b + this.d * t.d; this.tx = r * t.a + this.ty * t.c + t.tx; this.ty = r * t.b + this.ty * t.d + t.ty; return this }; t.scaleEx = function (t, e) { var i = this.a, r = this.b, s = this.c, n = this.d; if (r !== 0 || s !== 0) { this.a = t * i; this.b = t * r; this.c = e * s; this.d = e * n } else { this.a = t * i; this.b = 0 * n; this.c = 0 * i; this.d = e * n } this.bTransform = true }; t.rotateEx = function (t) { var e = Math.cos(t); var i = Math.sin(t); var r = this.a, s = this.b, n = this.c, a = this.d; if (s !== 0 || n !== 0) { this.a = e * r + i * n; this.b = e * s + i * a; this.c = -i * r + e * n; this.d = -i * s + e * a } else { this.a = e * r; this.b = i * a; this.c = -i * r; this.d = e * a } this.bTransform = true }; t.clone = function () { var t = i.create(); t.a = this.a; t.b = this.b; t.c = this.c; t.d = this.d; t.tx = this.tx; t.ty = this.ty; t.bTransform = this.bTransform; return t }; t.copyTo = function (t) { t.a = this.a; t.b = this.b; t.c = this.c; t.d = this.d; t.tx = this.tx; t.ty = this.ty; t.bTransform = this.bTransform; return t }; t.toString = function () { return this.a + "," + this.b + "," + this.c + "," + this.d + "," + this.tx + "," + this.ty }; t.destroy = function () { if (this.inPool) return; var t = i._cache; this.inPool = true; t._length || (t._length = 0); t[t._length++] = this; this.a = this.d = 1; this.b = this.c = this.tx = this.ty = 0; this.bTransform = false }; i.mul = function (t, e, i) { var r = t.a, s = t.b, n = t.c, a = t.d, o = t.tx, h = t.ty; var l = e.a, u = e.b, c = e.c, f = e.d, _ = e.tx, d = e.ty; if (u !== 0 || c !== 0) { i.a = r * l + s * c; i.b = r * u + s * f; i.c = n * l + a * c; i.d = n * u + a * f; i.tx = l * o + c * h + _; i.ty = u * o + f * h + d } else { i.a = r * l; i.b = s * f; i.c = n * l; i.d = a * f; i.tx = l * o + _; i.ty = f * h + d } return i }; i.mul16 = function (t, e, i) { var r = t.a, s = t.b, n = t.c, a = t.d, o = t.tx, h = t.ty; var l = e.a, u = e.b, c = e.c, f = e.d, _ = e.tx, d = e.ty; if (u !== 0 || c !== 0) { i[0] = r * l + s * c; i[1] = r * u + s * f; i[4] = n * l + a * c; i[5] = n * u + a * f; i[12] = l * o + c * h + _; i[13] = u * o + f * h + d } else { i[0] = r * l; i[1] = s * f; i[4] = n * l; i[5] = a * f; i[12] = l * o + _; i[13] = f * h + d } return i }; i.mulPre = function (t, e, i, r, s, n, a, o) { var h = t.a, l = t.b, u = t.c, c = t.d, f = t.tx, _ = t.ty; if (i !== 0 || r !== 0) { o.a = h * e + l * r; o.b = h * i + l * s; o.c = u * e + c * r; o.d = u * i + c * s; o.tx = e * f + r * _ + n; o.ty = i * f + s * _ + a } else { o.a = h * e; o.b = l * s; o.c = u * e; o.d = c * s; o.tx = e * f + n; o.ty = s * _ + a } return o }; i.mulPos = function (t, e, i, r, s, n, a, o) { var h = t.a, l = t.b, u = t.c, c = t.d, f = t.tx, _ = t.ty; if (l !== 0 || u !== 0) { o.a = e * h + i * u; o.b = e * l + i * c; o.c = r * h + s * u; o.d = r * l + s * c; o.tx = h * n + u * a + f; o.ty = l * n + c * a + _ } else { o.a = e * h; o.b = i * c; o.c = r * h; o.d = s * c; o.tx = h * n + f; o.ty = c * a + _ } return o }; i.preMul = function (t, e, i) { var r = t.a, s = t.b, n = t.c, a = t.d; var o = e.a, h = e.b, l = e.c, u = e.d, c = e.tx, f = e.ty; i.a = o * r; i.b = i.c = 0; i.d = u * a; i.tx = c * r + t.tx; i.ty = f * a + t.ty; if (h !== 0 || l !== 0 || s !== 0 || n !== 0) { i.a += h * n; i.d += l * s; i.b += o * s + h * a; i.c += l * r + u * n; i.tx += f * n; i.ty += c * s } return i }; i.preMulXY = function (t, e, i, r) { var s = t.a, n = t.b, a = t.c, o = t.d; r.a = s; r.b = n; r.c = a; r.d = o; r.tx = e * s + t.tx + i * a; r.ty = i * o + t.ty + e * n; return r }; i.create = function () { var t = i._cache; var e = !t._length ? new i : t[--t._length]; e.inPool = false; return e }; i.EMPTY = new i; i.TEMP = new i; i._cache = []; return i }(); var k = function () { function t(t, e) { t === void 0 && (t = 0); e === void 0 && (e = 0); this.x = t; this.y = e } v(t, "laya.maths.Point"); var e = t.prototype; e.setTo = function (t, e) { this.x = t; this.y = e; return this }; e.distance = function (t, e) { return Math.sqrt((this.x - t) * (this.x - t) + (this.y - e) * (this.y - e)) }; e.toString = function () { return this.x + "," + this.y }; e.normalize = function () { var t = Math.sqrt(this.x * this.x + this.y * this.y); if (t > 0) { var e = 1 / t; this.x *= e; this.y *= e } }; t.TEMP = new t; t.EMPTY = new t; return t }(); var D = function () { function l(t, e, i, r) { t === void 0 && (t = 0); e === void 0 && (e = 0); i === void 0 && (i = 0); r === void 0 && (r = 0); this.x = t; this.y = e; this.width = i; this.height = r } v(l, "laya.maths.Rectangle"); var t = l.prototype; t.setTo = function (t, e, i, r) { this.x = t; this.y = e; this.width = i; this.height = r; return this }; t.copyFrom = function (t) { this.x = t.x; this.y = t.y; this.width = t.width; this.height = t.height; return this }; t.contains = function (t, e) { if (this.width <= 0 || this.height <= 0) return false; if (t >= this.x && t < this.right) { if (e >= this.y && e < this.bottom) { return true } } return false }; t.intersects = function (t) { return !(t.x > this.x + this.width || t.x + t.width < this.x || t.y > this.y + this.height || t.y + t.height < this.y) }; t.intersection = function (t, e) { if (!this.intersects(t)) return null; e || (e = new l); e.x = Math.max(this.x, t.x); e.y = Math.max(this.y, t.y); e.width = Math.min(this.right, t.right) - e.x; e.height = Math.min(this.bottom, t.bottom) - e.y; return e }; t.union = function (t, e) { e || (e = new l); this.clone(e); if (t.width <= 0 || t.height <= 0) return e; e.addPoint(t.x, t.y); e.addPoint(t.right, t.bottom); return this }; t.clone = function (t) { t || (t = new l); t.x = this.x; t.y = this.y; t.width = this.width; t.height = this.height; return t }; t.toString = function () { return this.x + "," + this.y + "," + this.width + "," + this.height }; t.equals = function (t) { if (!t || t.x !== this.x || t.y !== this.y || t.width !== this.width || t.height !== this.height) return false; return true }; t.addPoint = function (t, e) { this.x > t && (this.width += this.x - t, this.x = t); this.y > e && (this.height += this.y - e, this.y = e); if (this.width < t - this.x) this.width = t - this.x; if (this.height < e - this.y) this.height = e - this.y; return this }; t._getBoundPoints = function () { var t = l._temB; t.length = 0; if (this.width == 0 || this.height == 0) return t; t.push(this.x, this.y, this.x + this.width, this.y, this.x, this.y + this.height, this.x + this.width, this.y + this.height); return t }; t.isEmpty = function () { if (this.width <= 0 || this.height <= 0) return true; return false }; u(0, t, "right", function () { return this.x + this.width }); u(0, t, "bottom", function () { return this.y + this.height }); l._getBoundPointS = function (t, e, i, r) { var s = l._temA; s.length = 0; if (i == 0 || r == 0) return s; s.push(t, e, t + i, e, t, e + r, t + i, e + r); return s }; l._getWrapRec = function (t, e) { if (!t || t.length < 1) return e ? e.setTo(0, 0, 0, 0) : l.TEMP.setTo(0, 0, 0, 0); e = e ? e : new l; var i, r = t.length, s, n, a, o, h = k.TEMP; s = a = 99999; n = o = -s; for (i = 0; i < r; i += 2) { h.x = t[i]; h.y = t[i + 1]; s = s < h.x ? s : h.x; a = a < h.y ? a : h.y; n = n > h.x ? n : h.x; o = o > h.y ? o : h.y } return e.setTo(s, a, n - s, o - a) }; l.EMPTY = new l; l.TEMP = new l; l._temB = []; l._temA = []; return l }(); var B = function () { function h() { } v(h, "laya.media.SoundManager"); u(1, h, "useAudioMusic", function () { return h._useAudioMusic }, function (t) { h._useAudioMusic = t; if (t) { h._musicClass = vt } else { h._musicClass = null } }); u(1, h, "autoStopMusic", function () { return h._autoStopMusic }, function (t) { T.stage.off("blur", null, h._stageOnBlur); T.stage.off("focus", null, h._stageOnFocus); T.stage.off("visibilitychange", null, h._visibilityChange); h._autoStopMusic = t; if (t) { T.stage.on("blur", null, h._stageOnBlur); T.stage.on("focus", null, h._stageOnFocus); T.stage.on("visibilitychange", null, h._visibilityChange) } }); u(1, h, "muted", function () { return h._muted }, function (t) { if (t == h._muted) return; if (t) { h.stopAllSound() } h.musicMuted = t; h._muted = t }); u(1, h, "musicMuted", function () { return h._musicMuted }, function (t) { if (t == h._musicMuted) return; if (t) { if (h._tMusic) { if (h._musicChannel && !h._musicChannel.isStopped) { if (U.isConchApp) { if (h._musicChannel._audio) h._musicChannel._audio.muted = true } else { h._musicChannel.pause() } } else { h._musicChannel = null } } else { h._musicChannel = null } h._musicMuted = t } else { h._musicMuted = t; if (h._tMusic) { if (h._musicChannel) { if (U.isConchApp) { if (h._musicChannel._audio) h._musicChannel._audio.muted = false } else { h._musicChannel.resume() } } } } }); u(1, h, "soundMuted", function () { return h._soundMuted }, function (t) { h._soundMuted = t }); h.addChannel = function (t) { if (h._channels.indexOf(t) >= 0) return; h._channels.push(t) }; h.removeChannel = function (t) { var e = 0; for (e = h._channels.length - 1; e >= 0; e--) { if (h._channels[e] == t) { h._channels.splice(e, 1) } } }; h.disposeSoundIfNotUsed = function (t) { var e = 0; for (e = h._channels.length - 1; e >= 0; e--) { if (h._channels[e].url == t) { return } } h.destroySound(t) }; h._visibilityChange = function () { if (T.stage.isVisibility) { h._stageOnFocus() } else { h._stageOnBlur() } }; h._stageOnBlur = function () { h._isActive = false; if (h._musicChannel) { if (!h._musicChannel.isStopped) { h._blurPaused = true; h._musicChannel.pause() } } h.stopAllSound(); T.stage.once("mousedown", null, h._stageOnFocus) }; h._recoverWebAudio = function () { if (yt.ctx && yt.ctx.state != "running" && yt.ctx.resume) yt.ctx.resume() }; h._stageOnFocus = function () { h._isActive = true; h._recoverWebAudio(); T.stage.off("mousedown", null, h._stageOnFocus); if (h._blurPaused) { if (h._musicChannel && h._musicChannel.isStopped) { h._blurPaused = false; h._musicChannel.resume() } } }; h.playSound = function (t, e, i, r, s) { e === void 0 && (e = 1); s === void 0 && (s = 0); if (!h._isActive || !t) return null; if (h._muted) return null; h._recoverWebAudio(); t = z.formatURL(t); if (t == h._tMusic) { if (h._musicMuted) return null } else { if (U.isConchApp) { var n = ut.getFileExtension(t); if (n != "wav" && n != "ogg") { alert("The sound only supports wav or ogg format,for optimal performance reason,please refer to the official website document."); return null } } if (h._soundMuted) return null } var a; if (!X.onMiniGame && !X.onKGMiniGame && !X.onQGMiniGame && !X.onVVMiniGame && !X.onAlipayMiniGame) { a = T.loader.getRes(t) } if (!r) r = h._soundClass; if (!a) { a = new r; a.load(t); if (!X.onMiniGame && !X.onKGMiniGame && !X.onQGMiniGame && !X.onVVMiniGame && !X.onAlipayMiniGame) { bt.cacheRes(t, a) } } var o; o = a.play(s, e); if (!o) return null; o.url = t; o.volume = t == h._tMusic ? h.musicVolume : h.soundVolume; o.completeHandler = i; return o }; h.destroySound = function (t) { var e = T.loader.getRes(t); if (e) { bt.clearRes(t); e.dispose() } }; h.playMusic = function (t, e, i, r) { e === void 0 && (e = 0); r === void 0 && (r = 0); t = z.formatURL(t); h._tMusic = t; if (h._musicChannel) h._musicChannel.stop(); return h._musicChannel = h.playSound(t, e, i, h._musicClass, r) }; h.stopSound = function (t) { t = z.formatURL(t); var e = 0; var i; for (e = h._channels.length - 1; e >= 0; e--) { i = h._channels[e]; if (i.url == t) { i.stop() } } }; h.stopAll = function () { h._tMusic = null; var t = 0; var e; for (t = h._channels.length - 1; t >= 0; t--) { e = h._channels[t]; e.stop() } }; h.stopAllSound = function () { var t = 0; var e; for (t = h._channels.length - 1; t >= 0; t--) { e = h._channels[t]; if (e.url != h._tMusic) { e.stop() } } }; h.stopMusic = function () { if (h._musicChannel) h._musicChannel.stop(); h._tMusic = null }; h.setSoundVolume = function (t, e) { if (e) { e = z.formatURL(e); h._setVolume(e, t) } else { h.soundVolume = t; var i = 0; var r; for (i = h._channels.length - 1; i >= 0; i--) { r = h._channels[i]; if (r.url != h._tMusic) { r.volume = t } } } }; h.setMusicVolume = function (t) { h.musicVolume = t; h._setVolume(h._tMusic, t) }; h._setVolume = function (t, e) { t = z.formatURL(t); var i = 0; var r; for (i = h._channels.length - 1; i >= 0; i--) { r = h._channels[i]; if (r.url == t) { r.volume = e } } }; h.musicVolume = 1; h.soundVolume = 1; h.playbackRate = 1; h._useAudioMusic = true; h._muted = false; h._soundMuted = false; h._musicMuted = false; h._tMusic = null; h._musicChannel = null; h._channels = []; h._autoStopMusic = false; h._blurPaused = false; h._isActive = true; h._soundClass = null; h._musicClass = null; h.autoReleaseSound = true; return h }(); var N = function () { var t; function i() { } v(i, "laya.net.LocalStorage"); i.__init__ = function () { if (!i._baseClass) { i._baseClass = t; t.init() } i.items = i._baseClass.items; i.support = i._baseClass.support }; i.setItem = function (t, e) { i._baseClass.setItem(t, e) }; i.getItem = function (t) { return i._baseClass.getItem(t) }; i.setJSON = function (t, e) { i._baseClass.setJSON(t, e) }; i.getJSON = function (t) { return i._baseClass.getJSON(t) }; i.removeItem = function (t) { i._baseClass.removeItem(t) }; i.clear = function () { i._baseClass.clear() }; i._baseClass = null; i.items = null; i.support = false; i.__init$ = function () { t = function () { function i() { } v(i, ""); i.init = function () { try { i.support = true; i.items = a.localStorage; i.setItem("laya", "1"); i.removeItem("laya") } catch (t) { i.support = false } if (!i.support) console.log("LocalStorage is not supprot or browser is private mode.") }; i.setItem = function (t, e) { try { i.support && i.items.setItem(t, e) } catch (t) { console.warn("set localStorage failed", t) } }; i.getItem = function (t) { return i.support ? i.items.getItem(t) : null }; i.setJSON = function (t, e) { try { i.support && i.items.setItem(t, JSON.stringify(e)) } catch (t) { console.warn("set localStorage failed", t) } }; i.getJSON = function (t) { return JSON.parse(i.support ? i.items.getItem(t) : null) }; i.removeItem = function (t) { i.support && i.items.removeItem(t) }; i.clear = function () { i.support && i.items.clear() }; i.items = null; i.support = false; return i }() }; return i }(); var F = function () { function r() { } v(r, "laya.net.ResourceVersion"); r.enable = function (t, e, i) { i === void 0 && (i = 2); laya.net.ResourceVersion.type = i; T.loader.load(t, g.create(null, r.onManifestLoaded, [e]), null, "json"); z.customFormat = r.addVersionPrefix }; r.onManifestLoaded = function (t, e) { r.manifest = e; t.run(); if (!e) { console.warn("资源版本清单文件不存在，不使用资源版本管理。忽略ERR_FILE_NOT_FOUND错误。") } }; r.addVersionPrefix = function (t) { if (r.manifest && r.manifest[t]) { if (r.type == 2) return r.manifest[t]; return r.manifest[t] + "/" + t } return t }; r.FOLDER_VERSION = 1; r.FILENAME_VERSION = 2; r.manifest = null; r.type = 1; return r }(); var O = function () { function t() { this.fontName = null; this.complete = null; this.err = null; this._fontTxt = null; this._url = null; this._div = null; this._txtWidth = NaN; this._http = null } v(t, "laya.net.TTFLoader"); var e = t.prototype; e.load = function (t) { this._url = t; var e = t.split(".ttf")[0].split("/"); this.fontName = e[e.length - 1]; if (X.window.conch) { this._loadConch() } else if (X.window.FontFace) { this._loadWithFontFace() } else { this._loadWithCSS() } }; e._loadConch = function () { this._http = new xt; this._http.on("error", this, this._onErr); this._http.on("complete", this, this._onHttpLoaded); this._http.send(this._url, null, "get", "arraybuffer") }; e._onHttpLoaded = function (t) { X.window.conch.setFontFaceFromBuffer(this.fontName, t); this._clearHttp(); this._complete() }; e._clearHttp = function () { if (this._http) { this._http.off("error", this, this._onErr); this._http.off("complete", this, this._onHttpLoaded); this._http = null } }; e._onErr = function () { this._clearHttp(); if (this.err) { this.err.runWith("fail:" + this._url); this.err = null } }; e._complete = function () { T.timer.clear(this, this._complete); T.timer.clear(this, this._checkComplete); if (this._div && this._div.parentNode) { this._div.parentNode.removeChild(this._div); this._div = null } if (this.complete) { this.complete.runWith(this); this.complete = null } }; e._checkComplete = function () { if (E.measureText("LayaTTFFont", this._fontTxt).width != this._txtWidth) { this._complete() } }; e._loadWithFontFace = function () { var t = new X.window.FontFace(this.fontName, "url('" + this._url + "')"); X.window.document.fonts.add(t); var e = this; t.loaded.then(function () { e._complete() }); t.load() }; e._createDiv = function () { this._div = X.createElement("div"); this._div.innerHTML = "laya"; var t = this._div.style; t.fontFamily = this.fontName; t.position = "absolute"; t.left = "-100px"; t.top = "-100px"; X.document.body.appendChild(this._div) }; e._loadWithCSS = function () { var t = this; var e = X.createElement("style"); e.type = "text/css"; X.document.body.appendChild(e); e.textContent = "@font-face { font-family:'" + this.fontName + "'; src:url('" + this._url + "');}"; this._fontTxt = "40px " + this.fontName; this._txtWidth = E.measureText("LayaTTFFont", this._fontTxt).width; var i = this; e.onload = function () { T.timer.once(1e4, i, t._complete) }; T.timer.loop(20, this, this._checkComplete); this._createDiv() }; t._testString = "LayaTTFFont"; return t }(); var z = function () { function r(t) { this._url = null; this._path = null; this._url = r.formatURL(t); this._path = r.getPath(t) } v(r, "laya.net.URL"); var t = r.prototype; u(0, t, "path", function () { return this._path }); u(0, t, "url", function () { return this._url }); r.formatURL = function (t, e) { if (!t) return "null path"; if (t.indexOf(":") > 0) return t; if (r.customFormat != null) t = r.customFormat(t, e); var i = t.charAt(0); if (i === ".") { return r.formatRelativePath((e || r.basePath) + t) } else if (i === "~") { return r.rootPath + t.substring(1) } else if (i === "d") { if (t.indexOf("data:image") === 0) return t } else if (i === "/") { return t } return (e || r.basePath) + t }; r.formatRelativePath = function (t) { var e = t.split("/"); for (var i = 0, r = e.length; i < r; i++) { if (e[i] == "..") { e.splice(i - 1, 2); i -= 2 } } return e.join("/") }; r.isAbsolute = function (t) { return t.indexOf(":") > 0 || t.charAt(0) == "/" }; r.getPath = function (t) { var e = t.lastIndexOf("/"); return e > 0 ? t.substr(0, e + 1) : "" }; r.getFileName = function (t) { var e = t.lastIndexOf("/"); return e > 0 ? t.substr(e + 1) : t }; r.version = {}; r.basePath = ""; r.rootPath = ""; r.customFormat = function (t) { var e = r.version[t]; if (!U.isConchApp && e) t += "?v=" + e; return t }; return r }(); var U = function () { function n(t, e) { this._timeId = 0; var i = n._mainCanvas.source.style; i.position = "absolute"; i.top = i.left = "0px"; i.background = "#000000"; n._mainCanvas.source.id = "layaCanvas"; var r = laya.renders.Render.isWebGL; n._mainCanvas.source.width = t; n._mainCanvas.source.height = e; r && n.WebGL.init(n._mainCanvas, t, e); if (!X.onKGMiniGame) X.container.appendChild(n._mainCanvas.source); n._context = new W(t, e, r ? null : n._mainCanvas); n._context.ctx.setIsMainContext(); X.window.requestAnimationFrame(s); function s(t) { T.stage._loop(); X.window.requestAnimationFrame(s) } T.stage.on("visibilitychange", this, this._onVisibilitychange) } v(n, "laya.renders.Render"); var t = n.prototype; t._onVisibilitychange = function () { if (!T.stage.isVisibility) { this._timeId = X.window.setInterval(this._enterFrame, 1e3) } else if (this._timeId != 0) { X.window.clearInterval(this._timeId) } }; t._enterFrame = function (t) { T.stage._loop() }; u(1, n, "context", function () { return n._context }); u(1, n, "canvas", function () { return n._mainCanvas.source }); n._context = null; n._mainCanvas = null; n.WebGL = null; n.isConchNode = false; n.isConchApp = false; n.isConchWebGL = false; n.isWebGL = false; n.is3DMode = false; n.optimizeTextureMemory = function (t, e) { return true }; n.__init$ = function () { a.ConchRenderType = a.ConchRenderType || 1; a.ConchRenderType |= !a.conch ? 0 : 4; { n.isConchNode = (a.ConchRenderType & 5) == 5; n.isConchApp = (a.ConchRenderType & 4) == 4; n.isConchWebGL = a.ConchRenderType == 6 } }; return n }(); var W = function () { function a(t, e, i) { this.x = 0; this.y = 0; this._drawTexture = function (t, e, i) { if (i[0].loaded) this.ctx.drawTexture(i[0], i[1], i[2], i[3], i[4], t, e) }; this._fillTexture = function (t, e, i) { if (i[0].loaded) this.ctx.fillTexture(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5], i[6], i[7]) }; this._drawTextureWithTransform = function (t, e, i) { if (i[0].loaded) this.ctx.drawTextureWithTransform(i[0], i[1], i[2], i[3], i[4], i[5], t, e, i[6]) }; this._fillQuadrangle = function (t, e, i) { this.ctx.fillQuadrangle(i[0], i[1], i[2], i[3], i[4]) }; this._drawRect = function (t, e, i) { var r = this.ctx; if (i[4] != null) { r.fillStyle = i[4]; r.fillRect(t + i[0], e + i[1], i[2], i[3], null) } if (i[5] != null) { r.strokeStyle = i[5]; r.lineWidth = i[6]; r.strokeRect(t + i[0], e + i[1], i[2], i[3], i[6]) } }; this._drawPie = function (t, e, i) { var r = this.ctx; U.isWebGL && r.setPathId(i[8]); r.beginPath(); if (U.isWebGL) { r.movePath(i[0] + t, i[1] + e); r.moveTo(0, 0) } else { r.moveTo(t + i[0], e + i[1]) } r.arc(t + i[0], e + i[1], i[2], i[3], i[4]); r.closePath(); this._fillAndStroke(i[5], i[6], i[7], true) }; this._clipRect = function (t, e, i) { this.ctx.clipRect(t + i[0], e + i[1], i[2], i[3]) }; this._fillRect = function (t, e, i) { this.ctx.fillRect(t + i[0], e + i[1], i[2], i[3], i[4]) }; this._drawCircle = function (t, e, i) { var r = this.ctx; U.isWebGL && r.setPathId(i[6]); at.drawCall++; r.beginPath(); U.isWebGL && r.movePath(i[0] + t, i[1] + e); r.arc(i[0] + t, i[1] + e, i[2], 0, a.PI2); r.closePath(); this._fillAndStroke(i[3], i[4], i[5], true) }; this._fillCircle = function (t, e, i) { at.drawCall++; var r = this.ctx; r.beginPath(); r.fillStyle = i[3]; r.arc(i[0] + t, i[1] + e, i[2], 0, a.PI2); r.fill() }; this._setShader = function (t, e, i) { this.ctx.setShader(i[0]) }; this._drawLine = function (t, e, i) { var r = this.ctx; U.isWebGL && r.setPathId(i[6]); r.beginPath(); r.strokeStyle = i[4]; r.lineWidth = i[5]; if (U.isWebGL) { r.movePath(t, e); r.moveTo(i[0], i[1]); r.lineTo(i[2], i[3]) } else { r.moveTo(t + i[0], e + i[1]); r.lineTo(t + i[2], e + i[3]) } r.stroke() }; this._drawLines = function (t, e, i) { var r = this.ctx; U.isWebGL && r.setPathId(i[5]); r.beginPath(); t += i[0], e += i[1]; U.isWebGL && r.movePath(t, e); r.strokeStyle = i[3]; r.lineWidth = i[4]; var s = i[2]; var n = 2, a = s.length; if (U.isWebGL) { r.moveTo(s[0], s[1]); while (n < a) { r.lineTo(s[n++], s[n++]) } } else { r.moveTo(t + s[0], e + s[1]); while (n < a) { r.lineTo(t + s[n++], e + s[n++]) } } r.stroke() }; this._drawLinesWebGL = function (t, e, i) { this.ctx.drawLines(t + this.x + i[0], e + this.y + i[1], i[2], i[3], i[4]) }; this._drawCurves = function (t, e, i) { this.ctx.drawCurves(t, e, i) }; this._draw = function (t, e, i) { i[0].call(null, this, t, e) }; this._transformByMatrix = function (t, e, i) { this.ctx.transformByMatrix(i[0]) }; this._setTransform = function (t, e, i) { this.ctx.setTransform(i[0], i[1], i[2], i[3], i[4], i[5]) }; this._setTransformByMatrix = function (t, e, i) { this.ctx.setTransformByMatrix(i[0]) }; this._save = function (t, e, i) { this.ctx.save() }; this._restore = function (t, e, i) { this.ctx.restore() }; this._translate = function (t, e, i) { this.ctx.translate(i[0], i[1]) }; this._transform = function (t, e, i) { this.ctx.translate(i[1] + t, i[2] + e); var r = i[0]; this.ctx.transform(r.a, r.b, r.c, r.d, r.tx, r.ty); this.ctx.translate(-t - i[1], -e - i[2]) }; this._rotate = function (t, e, i) { this.ctx.translate(i[1] + t, i[2] + e); this.ctx.rotate(i[0]); this.ctx.translate(-t - i[1], -e - i[2]) }; this._scale = function (t, e, i) { this.ctx.translate(i[2] + t, i[3] + e); this.ctx.scale(i[0], i[1]); this.ctx.translate(-t - i[2], -e - i[3]) }; this._alpha = function (t, e, i) { this.ctx.globalAlpha *= i[0] }; this._setAlpha = function (t, e, i) { this.ctx.globalAlpha = i[0] }; this._fillText = function (t, e, i) { this.ctx.fillText(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5]) }; this._strokeText = function (t, e, i) { this.ctx.strokeText(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5], i[6]) }; this._fillBorderText = function (t, e, i) { this.ctx.fillBorderText(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5], i[6], i[7]) }; this._blendMode = function (t, e, i) { this.ctx.globalCompositeOperation = i[0] }; this._beginClip = function (t, e, i) { this.ctx.beginClip && this.ctx.beginClip(t + i[0], e + i[1], i[2], i[3]) }; this._setIBVB = function (t, e, i) { this.ctx.setIBVB(i[0] + t, i[1] + e, i[2], i[3], i[4], i[5], i[6], i[7]) }; this._fillTrangles = function (t, e, i) { this.ctx.fillTrangles(i[0], i[1] + t, i[2] + e, i[3], i[4]) }; this._drawPath = function (t, e, i) { var r = this.ctx; U.isWebGL && r.setPathId(-1); r.beginPath(); t += i[0], e += i[1]; U.isWebGL && r.movePath(t, e); var s = i[2]; for (var n = 0, a = s.length; n < a; n++) { var o = s[n]; switch (o[0]) { case "moveTo": U.isWebGL ? r.moveTo(o[1], o[2]) : r.moveTo(t + o[1], e + o[2]); break; case "lineTo": U.isWebGL ? r.lineTo(o[1], o[2]) : r.lineTo(t + o[1], e + o[2]); break; case "arcTo": U.isWebGL ? r.arcTo(o[1], o[2], o[3], o[4], o[5]) : r.arcTo(t + o[1], e + o[2], t + o[3], e + o[4], o[5]); break; case "closePath": r.closePath(); break } } var h = i[3]; if (h != null) { r.fillStyle = h.fillStyle; r.fill() } var l = i[4]; if (l != null) { r.strokeStyle = l.strokeStyle; r.lineWidth = l.lineWidth || 1; r.lineJoin = l.lineJoin; r.lineCap = l.lineCap; r.miterLimit = l.miterLimit; r.stroke() } }; this.drawPoly = function (t, e, i) { this.ctx.drawPoly(t + this.x + i[0], e + this.y + i[1], i[2], i[3], i[4], i[5], i[6]) }; this._drawPoly = function (t, e, i) { var r = this.ctx; var s = i[2]; var n = 2, a = s.length; if (U.isWebGL) { r.setPathId(i[6]); r.beginPath(); t += i[0], e += i[1]; r.movePath(t, e); r.moveTo(s[0], s[1]); while (n < a) { r.lineTo(s[n++], s[n++]) } } else { r.beginPath(); t += i[0], e += i[1]; r.moveTo(t + s[0], e + s[1]); while (n < a) { r.lineTo(t + s[n++], e + s[n++]) } } r.closePath(); this._fillAndStroke(i[3], i[4], i[5], i[7]) }; this._drawSkin = function (t, e, i) { var r = i[0]; if (r) { var s = this.ctx; r.render(s, t, e) } }; this._drawParticle = function (t, e, i) { this.ctx.drawParticle(t + this.x, e + this.y, i[0]) }; this._setFilters = function (t, e, i) { this.ctx.setFilters(i) }; if (i) { this.ctx = i.getContext("2d") } else { i = Ot.create("3D"); this.ctx = E.createWebGLContext2D(i); i._setContext(this.ctx) } i.size(t, e); this.canvas = i } v(a, "laya.renders.RenderContext"); var t = a.prototype; t.destroy = function () { if (this.canvas) { this.canvas.destroy(); this.canvas = null; this.ctx = null } if (this.ctx) { this.ctx.destroy(); this.ctx = null } }; t.drawTexture = function (t, e, i, r, s) { if (t.loaded) this.ctx.drawTexture(t, e, i, r, s, this.x, this.y) }; t._drawTextures = function (t, e, i) { if (i[0].loaded) this.ctx.drawTextures(i[0], i[1], t + this.x, e + this.y) }; t.drawTextureWithTransform = function (t, e, i, r, s, n, a) { if (t.loaded) this.ctx.drawTextureWithTransform(t, e, i, r, s, n, this.x, this.y, a) }; t.fillQuadrangle = function (t, e, i, r, s) { this.ctx.fillQuadrangle(t, e, i, r, s) }; t.drawCanvas = function (t, e, i, r, s) { this.ctx.drawCanvas(t, e + this.x, i + this.y, r, s) }; t.drawRect = function (t, e, i, r, s, n) { n === void 0 && (n = 1); var a = this.ctx; a.strokeStyle = s; a.lineWidth = n; a.strokeRect(t + this.x, e + this.y, i, r, n) }; t._fillAndStroke = function (t, e, i, r) { r === void 0 && (r = false); var s = this.ctx; if (t != null) { s.fillStyle = t; if (U.isWebGL) { s.fill(r) } else { s.fill() } } if (e != null && i > 0) { s.strokeStyle = e; s.lineWidth = i; s.stroke() } }; t.clipRect = function (t, e, i, r) { this.ctx.clipRect(t + this.x, e + this.y, i, r) }; t.fillRect = function (t, e, i, r, s) { this.ctx.fillRect(t + this.x, e + this.y, i, r, s) }; t.drawCircle = function (t, e, i, r, s) { s === void 0 && (s = 1); at.drawCall++; var n = this.ctx; n.beginPath(); n.strokeStyle = r; n.lineWidth = s; n.arc(t + this.x, e + this.y, i, 0, a.PI2); n.stroke() }; t.drawTriangles = function (t, e, i) { if (U.isWebGL) { this.ctx.drawTriangles(i[0], t + i[1], e + i[2], i[3], i[4], i[5], i[6], i[7], i[8], i[9]) } else { var r = i[5]; var s = 0, n = r.length; var a = this.ctx; for (s = 0; s < n; s += 3) { var o = r[s] * 2; var h = r[s + 1] * 2; var l = r[s + 2] * 2; a.drawTriangle(i[0], i[3], i[4], o, h, l, i[6], true) } } }; t.fillCircle = function (t, e, i, r) { at.drawCall++; var s = this.ctx; s.beginPath(); s.fillStyle = r; s.arc(t + this.x, e + this.y, i, 0, a.PI2); s.fill() }; t.setShader = function (t) { this.ctx.setShader(t) }; t.drawLine = function (t, e, i, r, s, n) { n === void 0 && (n = 1); var a = this.ctx; a.beginPath(); a.strokeStyle = s; a.lineWidth = n; a.moveTo(this.x + t, this.y + e); a.lineTo(this.x + i, this.y + r); a.stroke() }; t.clear = function () { this.ctx.clear() }; t.transformByMatrix = function (t) { this.ctx.transformByMatrix(t) }; t.setTransform = function (t, e, i, r, s, n) { this.ctx.setTransform(t, e, i, r, s, n) }; t.setTransformByMatrix = function (t) { this.ctx.setTransformByMatrix(t) }; t.save = function () { this.ctx.save() }; t.restore = function () { this.ctx.restore() }; t.translate = function (t, e) { this.ctx.translate(t, e) }; t.transform = function (t, e, i, r, s, n) { this.ctx.transform(t, e, i, r, s, n) }; t.rotate = function (t) { this.ctx.rotate(t) }; t.scale = function (t, e) { this.ctx.scale(t, e) }; t.alpha = function (t) { this.ctx.globalAlpha *= t }; t.setAlpha = function (t) { this.ctx.globalAlpha = t }; t.fillWords = function (t, e, i, r, s, n) { n === void 0 && (n = 0); this.ctx.fillWords(t, e, i, r, s, n) }; t.fillBorderWords = function (t, e, i, r, s, n, a) { this.ctx.fillBorderWords(t, e, i, r, s, n, a) }; t.fillText = function (t, e, i, r, s, n) { this.ctx.fillText(t, e + this.x, i + this.y, r, s, n) }; t.strokeText = function (t, e, i, r, s, n, a) { this.ctx.strokeText(t, e + this.x, i + this.y, r, s, n, a) }; t.blendMode = function (t) { this.ctx.globalCompositeOperation = t }; t.flush = function () { this.ctx.flush && this.ctx.flush() }; t.addRenderObject = function (t) { this.ctx.addRenderObject(t) }; t.beginClip = function (t, e, i, r) { this.ctx.beginClip && this.ctx.beginClip(t, e, i, r) }; t.endClip = function () { this.ctx.endClip && this.ctx.endClip() }; t.fillTrangles = function (t, e, i) { this.ctx.fillTrangles(i[0], i[1], i[2], i[3], i.length > 4 ? i[4] : null) }; a.PI2 = 2 * Math.PI; return a }(); var V = function () { function a(t, e) { this._next = e || a.NORENDER; switch (t) { case 0: this._fun = this._no; return; case 1: this._fun = this._image; return; case 2: this._fun = this._alpha; return; case 4: this._fun = this._transform; return; case 8: this._fun = this._blend; return; case 16: this._fun = this._canvas; return; case 64: this._fun = this._mask; return; case 128: this._fun = this._clip; return; case 256: this._fun = this._style; return; case 512: this._fun = this._graphics; return; case 2048: this._fun = this._childs; return; case 1024: this._fun = this._custom; return; case 1 | 512: this._fun = this._image2; return; case 1 | 4 | 512: this._fun = this._image2; return; case 32: this._fun = C._filter; return; case 69905: this._fun = a._initRenderFun; return }this.onCreate(t) } v(a, "laya.renders.RenderSprite"); var t = a.prototype; t.onCreate = function (t) { }; t._style = function (t, e, i, r) { t._style.render(t, e, i, r); var s = this._next; s._fun.call(s, t, e, i, r) }; t._no = function (t, e, i, r) { }; t._custom = function (t, e, i, r) { t.customRender(e, i, r); var s = t._style._tf; this._next._fun.call(this._next, t, e, i - s.translateX, r - s.translateY) }; t._clip = function (t, e, i, r) { var s = this._next; if (s == a.NORENDER) return; var n = t._style.scrollRect; e.ctx.save(); e.ctx.clipRect(i, r, n.width, n.height); s._fun.call(s, t, e, i - n.x, r - n.y); e.ctx.restore() }; t._blend = function (t, e, i, r) { var s = t._style; if (s.blendMode) { e.ctx.globalCompositeOperation = s.blendMode } var n = this._next; n._fun.call(n, t, e, i, r); e.ctx.globalCompositeOperation = "source-over" }; t._mask = function (t, e, i, r) { var s = this._next; s._fun.call(s, t, e, i, r); var n = t.mask; if (n) { e.ctx.globalCompositeOperation = "destination-in"; if (n.numChildren > 0 || !n.graphics._isOnlyOne()) { n.cacheAsBitmap = true } n.render(e, i - t.pivotX, r - t.pivotY) } e.ctx.globalCompositeOperation = "source-over" }; t._graphics = function (t, e, i, r) { var s = t._style._tf; t._graphics && t._graphics._render(t, e, i - s.translateX, r - s.translateY); var n = this._next; n._fun.call(n, t, e, i, r) }; t._image = function (t, e, i, r) { var s = t._style; e.ctx.drawTexture2(i, r, s._tf.translateX, s._tf.translateY, t.transform, s.alpha, s.blendMode, t._graphics._one) }; t._image2 = function (t, e, i, r) { var s = t._style._tf; e.ctx.drawTexture2(i, r, s.translateX, s.translateY, t.transform, 1, null, t._graphics._one) }; t._alpha = function (t, e, i, r) { var s = t._style; var n; if ((n = s.alpha) > .01 || t._needRepaint()) { var a = e.ctx.globalAlpha; e.ctx.globalAlpha *= n; var o = this._next; o._fun.call(o, t, e, i, r); e.ctx.globalAlpha = a } }; t._transform = function (t, e, i, r) { var s = t.transform, n = this._next; if (s && n != a.NORENDER) { e.save(); e.transform(s.a, s.b, s.c, s.d, s.tx + i, s.ty + r); n._fun.call(n, t, e, 0, 0); e.restore() } else n._fun.call(n, t, e, i, r) }; t._childs = function (t, e, i, r) { var s = t._style; var n = s._tf; i = i - n.translateX + s.paddingLeft; r = r - n.translateY + s.paddingTop; if (s._calculation) { var a = t._getWords(); if (a) { var o = s; if (o) { if (o.stroke) { e.fillBorderWords(a, i, r, o.font, o.color, o.strokeColor, o.stroke) } else { e.fillWords(a, i, r, o.font, o.color, o.textDecoration != "none" && o.underLine ? 1 : 0) } } } } var h = t._childs, l = h.length, u; if (t.viewport || t.optimizeScrollRect && t._style.scrollRect) { var c = t.viewport || t._style.scrollRect; var f = c.x; var _ = c.y; var d = c.right; var p = c.bottom; var v = NaN, m = NaN; for (g = 0; g < l; ++g) { if ((u = h[g]).visible && ((v = u._x) < d && v + u.width > f && (m = u._y) < p && m + u.height > _)) { u.render(e, i, r) } } } else { for (var g = 0; g < l; ++g)(u = h[g])._style.visible && u.render(e, i, r) } }; t._canvas = function (t, e, i, r) { var s = t._$P.cacheCanvas; if (!s) { this._next._fun.call(this._next, t, e, i, r); return } s.type === "bitmap" ? at.canvasBitmap++ : at.canvasNormal++; var n = s.ctx; if (t._needRepaint() || !n) { this._canvas_repaint(t, e, i, r) } else { var a = s._cacheRec; e.drawCanvas(n.canvas, i + a.x, r + a.y, a.width, a.height) } }; t._canvas_repaint = function (t, e, i, r) { var s = t._$P.cacheCanvas; var n = this._next; if (!s) { n._fun.call(n, t, a, i, r); return } var a = s.ctx; var o = t._needRepaint() || !a; var h; var l; var u; var c; var f = s.type; f === "bitmap" ? at.canvasBitmap++ : at.canvasNormal++; if (o) { if (!s._cacheRec) s._cacheRec = new D; var _, d; if (!U.isWebGL || f === "bitmap") { c = t.getSelfBounds(); c.x = c.x - t.pivotX; c.y = c.y - t.pivotY; c.x = c.x - 16; c.y = c.y - 16; c.width = c.width + 32; c.height = c.height + 32; c.x = Math.floor(c.x + i) - i; c.y = Math.floor(c.y + r) - r; c.width = Math.floor(c.width); c.height = Math.floor(c.height); s._cacheRec.copyFrom(c) } else { s._cacheRec.setTo(-t.pivotX, -t.pivotY, 1, 1) } c = s._cacheRec; var p = U.isWebGL ? 1 : X.pixelRatio * T.stage.clientScaleX; var v = U.isWebGL ? 1 : X.pixelRatio * T.stage.clientScaleY; if (!U.isWebGL) { var m = 1; var g = 1; var y; y = t; while (y && y != T.stage) { m *= y.scaleX; g *= y.scaleY; y = y.parent } if (U.isWebGL) { if (m < 1) p *= m; if (g < 1) v *= g } else { if (m > 1) p *= m; if (g > 1) v *= g } } if (t.scrollRect) { var x = t.scrollRect; c.x -= x.x; c.y -= x.y } _ = c.width * p; d = c.height * v; l = c.x; u = c.y; if (U.isWebGL && f === "bitmap" && (_ > 2048 || d > 2048)) { console.warn("cache bitmap size larger than 2048,cache ignored"); if (s.ctx) { st.recover("RenderContext", s.ctx); s.ctx.canvas.size(0, 0); s.ctx = null } n._fun.call(n, t, e, i, r); return } if (!a) { a = s.ctx = st.getItem("RenderContext") || new W(_, d, Ot.create("AUTO")) } a.ctx.sprite = t; h = a.canvas; h.clear(); (h.width != _ || h.height != d) && h.size(_, d); if (f === "bitmap") h.context.asBitmap = true; else if (f === "normal") h.context.asBitmap = false; var b; if (p != 1 || v != 1) { var w = a.ctx; w.save(); w.scale(p, v); if (!U.isConchWebGL && U.isConchApp) { b = t._$P.cf; b && w.setFilterMatrix && w.setFilterMatrix(b._mat, b._alpha) } n._fun.call(n, t, a, -l, -u); w.restore(); if (!U.isConchApp || U.isConchWebGL) t._applyFilters() } else { w = a.ctx; if (!U.isConchWebGL && U.isConchApp) { b = t._$P.cf; b && w.setFilterMatrix && w.setFilterMatrix(b._mat, b._alpha) } n._fun.call(n, t, a, -l, -u); if (!U.isConchApp || U.isConchWebGL) t._applyFilters() } if (t._$P.staticCache) s.reCache = false; at.canvasReCache++ } else { c = s._cacheRec; l = c.x; u = c.y; h = a.canvas } e.drawCanvas(h, i + l, r + u, c.width, c.height) }; a.__init__ = function () { var t = 0, e = 0; var i; i = E.createRenderSprite(69905, null); e = a.renders.length = 2048 * 2; for (t = 0; t < e; t++)a.renders[t] = i; a.renders[0] = E.createRenderSprite(0, null); function r(t, e) { var i = 0; for (var r = 0; r < t.length; r++) { i |= t[r]; a.renders[i] = e } } r([1, 512, 4, 2], new a(1, null)); a.renders[1 | 512] = E.createRenderSprite(1 | 512, null); a.renders[1 | 4 | 512] = new a(1 | 4 | 512, null) }; a._initRenderFun = function (t, e, i, r) { var s = t._renderType; var n = a.renders[s] = a._getTypeRender(s); n._fun(t, e, i, r) }; a._getTypeRender = function (t) { var e = null; var i = 2048; while (i > 1) { if (i & t) e = E.createRenderSprite(i, e); i = i >> 1 } return e }; a.IMAGE = 1; a.ALPHA = 2; a.TRANSFORM = 4; a.BLEND = 8; a.CANVAS = 16; a.FILTERS = 32; a.MASK = 64; a.CLIP = 128; a.STYLE = 256; a.GRAPHICS = 512; a.CUSTOM = 1024; a.CHILDS = 2048; a.INIT = 69905; a.renders = []; a.NORENDER = new a(0, null); return a }(); var H = function () { function o() { this._repaint = false } v(o, "laya.resource.Context"); var t = o.prototype; t.replaceReset = function () { var t = 0, e = 0; e = o.replaceKeys.length; var i; for (t = 0; t < e; t++) { i = o.replaceKeys[t]; this[o.newKeys[t]] = this[i] } }; t.replaceResotre = function () { this.__restore(); this.__reset() }; t.setIsMainContext = function () { }; t.drawTextures = function (t, e, i, r) { at.drawCall += e.length / 2; var s = t.width; var n = t.height; for (var a = 0, o = e.length; a < o; a += 2) { this.drawTexture(t, e[a], e[a + 1], s, n, i, r) } }; t.drawCanvas = function (t, e, i, r, s) { at.drawCall++; this.drawImage(t.source, e, i, r, s) }; t.fillRect = function (t, e, i, r, s) { at.drawCall++; s && (this.fillStyle = s); this.__fillRect(t, e, i, r) }; t.fillText = function (t, e, i, r, s, n) { at.drawCall++; if (arguments.length > 3 && r != null) { this.font = r; this.fillStyle = s; this.textAlign = n; this.textBaseline = "top" } this.__fillText(t, e, i) }; t.fillBorderText = function (t, e, i, r, s, n, a, o) { at.drawCall++; this.font = r; this.fillStyle = s; this.textBaseline = "top"; this.strokeStyle = n; this.lineWidth = a; this.textAlign = o; this.__strokeText(t, e, i); this.__fillText(t, e, i) }; t.strokeText = function (t, e, i, r, s, n, a) { at.drawCall++; if (arguments.length > 3 && r != null) { this.font = r; this.strokeStyle = s; this.lineWidth = n; this.textAlign = a; this.textBaseline = "top" } this.__strokeText(t, e, i) }; t.transformByMatrix = function (t) { this.transform(t.a, t.b, t.c, t.d, t.tx, t.ty) }; t.setTransformByMatrix = function (t) { this.setTransform(t.a, t.b, t.c, t.d, t.tx, t.ty) }; t.clipRect = function (t, e, i, r) { at.drawCall++; this.beginPath(); this.rect(t, e, i, r); this.clip() }; t.drawTexture = function (t, e, i, r, s, n, a) { at.drawCall++; var o = t.uv, h = t.bitmap.width, l = t.bitmap.height; this.drawImage(t.source, o[0] * h, o[1] * l, (o[2] - o[0]) * h, (o[5] - o[3]) * l, e + n, i + a, r, s) }; t.drawTextureWithTransform = function (t, e, i, r, s, n, a, o, h) { at.drawCall++; var l = t.uv, u = t.bitmap.width, c = t.bitmap.height; this.save(); h != 1 && (this.globalAlpha *= h); if (n) { this.transform(n.a, n.b, n.c, n.d, n.tx + a, n.ty + o); this.drawImage(t.source, l[0] * u, l[1] * c, (l[2] - l[0]) * u, (l[5] - l[3]) * c, e, i, r, s) } else { this.drawImage(t.source, l[0] * u, l[1] * c, (l[2] - l[0]) * u, (l[5] - l[3]) * c, e + a, i + o, r, s) } this.restore() }; t.drawTexture2 = function (t, e, i, r, s, n, a, o) { var h = o[0]; if (!(h.loaded && h.bitmap && h.source)) { return } at.drawCall++; var l = n !== 1; if (l) { var u = this.globalAlpha; this.globalAlpha *= n } var c = h.uv, f = h.bitmap.width, _ = h.bitmap.height; if (s) { this.save(); this.transform(s.a, s.b, s.c, s.d, s.tx + t, s.ty + e); this.drawImage(h.source, c[0] * f, c[1] * _, (c[2] - c[0]) * f, (c[5] - c[3]) * _, o[1] - i, o[2] - r, o[3], o[4]); this.restore() } else { this.drawImage(h.source, c[0] * f, c[1] * _, (c[2] - c[0]) * f, (c[5] - c[3]) * _, o[1] - i + t, o[2] - r + e, o[3], o[4]) } if (l) this.globalAlpha = u }; t.fillTexture = function (t, e, i, r, s, n, a, o) { if (!o.pat) { if (t.uv != Mt.DEF_UV) { var h = new Ot("2D"); h.getContext("2d"); h.size(t.width, t.height); h.context.drawTexture(t, 0, 0, t.width, t.height, 0, 0); t = new Mt(h) } o.pat = this.createPattern(t.bitmap.source, n) } var l = e, u = i; var c = 0, f = 0; if (a) { l += a.x % t.width; u += a.y % t.height; c -= a.x % t.width; f -= a.y % t.height } this.translate(l, u); this.fillRect(c, f, r, s, o.pat); this.translate(-l, -u) }; t.drawTriangle = function (t, e, i, r, s, n, a, o) { var h = t.bitmap; var l = h.source; var u = t.width; var c = t.height; var f = h.width; var _ = h.height; var d = i[r] * f; var p = i[s] * f; var v = i[n] * f; var m = i[r + 1] * _; var g = i[s + 1] * _; var y = i[n + 1] * _; var x = e[r]; var b = e[s]; var w = e[n]; var T = e[r + 1]; var C = e[s + 1]; var S = e[n + 1]; if (o) { var A = 1; var M = 1; var I = (x + b + w) / 3; var E = (T + C + S) / 3; var R = x - I; var P = T - E; var L = Math.sqrt(R * R + P * P); x = I + R / L * (L + A); T = E + P / L * (L + M); R = b - I; P = C - E; L = Math.sqrt(R * R + P * P); b = I + R / L * (L + A); C = E + P / L * (L + M); R = w - I; P = S - E; L = Math.sqrt(R * R + P * P); w = I + R / L * (L + A); S = E + P / L * (L + M) } this.save(); if (a) this.transform(a.a, a.b, a.c, a.d, a.tx, a.ty); this.beginPath(); this.moveTo(x, T); this.lineTo(b, C); this.lineTo(w, S); this.closePath(); this.clip(); var k = d * g + m * v + p * y - g * v - m * p - d * y; var D = 1 / k; var B = x * g + m * w + b * y - g * w - m * b - x * y; var N = d * b + x * v + p * w - b * v - x * p - d * w; var F = d * g * w + m * b * v + x * p * y - x * g * v - m * p * w - d * b * y; var O = T * g + m * S + C * y - g * S - m * C - T * y; var z = d * C + T * v + p * S - C * v - T * p - d * S; var U = d * g * S + m * C * v + T * p * y - T * g * v - m * p * S - d * C * y; this.transform(B * D, O * D, N * D, z * D, F * D, U * D); this.drawImage(l, t.uv[0] * f, t.uv[1] * _, u, c, t.uv[0] * f, t.uv[1] * _, u, c); this.restore() }; t.flush = function () { return 0 }; t.fillWords = function (t, e, i, r, s, n) { r && (this.font = r); s && (this.fillStyle = s); var a = this; this.textBaseline = "top"; this.textAlign = "left"; for (var o = 0, h = t.length; o < h; o++) { var l = t[o]; this.__fillText(l.char, l.x + e, l.y + i); if (n === 1) { var u = l.height; var c = l.style.letterSpacing * .5; if (!c) c = 0; this.beginPath(); this.strokeStyle = s; this.lineWidth = 1; this.moveTo(e + l.x - c + .5, i + l.y + u + .5); this.lineTo(e + l.x + l.width + c + .5, i + l.y + u + .5); this.stroke() } } }; t.fillBorderWords = function (t, e, i, r, s, n, a) { r && (this.font = r); s && (this.fillStyle = s); this.textBaseline = "top"; this.lineWidth = a; this.textAlign = "left"; this.strokeStyle = n; for (var o = 0, h = t.length; o < h; o++) { var l = t[o]; this.__strokeText(l.char, l.x + e, l.y + i); this.__fillText(l.char, l.x + e, l.y + i) } }; t.destroy = function () { this.canvas.width = this.canvas.height = 0 }; t.clear = function () { this.clearRect(0, 0, this._canvas.width, this._canvas.height); this._repaint = false }; t.drawCurves = function (t, e, i) { this.beginPath(); this.strokeStyle = i[3]; this.lineWidth = i[4]; var r = i[2]; t += i[0], e += i[1]; this.moveTo(t + r[0], e + r[1]); var s = 2, n = r.length; while (s < n) { this.quadraticCurveTo(t + r[s++], e + r[s++], t + r[s++], e + r[s++]) } this.stroke() }; o.__init__ = function (e) { var i = laya.resource.Context.prototype; e = e || CanvasRenderingContext2D.prototype; if (e.inited) return; e.inited = true; e.__fillText = e.fillText; e.__fillRect = e.fillRect; e.__strokeText = e.strokeText; var t = ["drawTextures", "drawTriangle", "fillWords", "fillBorderWords", "setIsMainContext", "fillRect", "strokeText", "fillTexture", "fillText", "transformByMatrix", "setTransformByMatrix", "clipRect", "drawTexture", "drawTexture2", "drawTextureWithTransform", "flush", "clear", "destroy", "drawCanvas", "fillBorderText", "drawCurves"]; t.forEach(function (t) { e[t] = i[t] }) }; o.replaceCanvasGetSet = function (t, e) { var i = Object.getOwnPropertyDescriptor(t, e); if (!i || !i.configurable) return false; var r = {}; var s; for (s in i) { if (s != "set") { r[s] = i[s] } } var n = i["set"]; r["set"] = function (t) { var e = this; n.call(e, t); var i = e.getContext("2d"); if (i && "__reset" in i) { i.__reset() } }; Object.defineProperty(t, e, r); return true }; o.replaceGetSet = function (t, e) { var i = Object.getOwnPropertyDescriptor(t, e); if (!i || !i.configurable) return false; var r = {}; var s; for (s in i) { if (s != "set") { r[s] = i[s] } } var n = i["set"]; var a = "___" + e + "__"; o.newKeys.push(a); r["set"] = function (t) { var e = this; if (t != e[a]) { e[a] = t; n.call(e, t) } }; Object.defineProperty(t, e, r); return true }; o._default = new o; o.newKeys = []; h(o, ["replaceKeys", function () { return this.replaceKeys = ["font", "fillStyle", "textBaseline"] }]); return o }(); var G = function () { function n(t) { this._id = 0; this._name = null; this._resources = null; this._memorySize = 0; this._garbageCollectionRate = NaN; this._isOverflow = false; this.autoRelease = false; this.autoReleaseMaxSize = 0; this._id = ++n._uniqueIDCounter; this._name = t ? t : "Content Manager"; n._isResourceManagersSorted = false; this._memorySize = 0; this._isOverflow = false; this.autoRelease = false; this.autoReleaseMaxSize = 1024 * 1024 * 512; this._garbageCollectionRate = .2; n._resourceManagers.push(this); this._resources = [] } v(n, "laya.resource.ResourceManager"); var t = n.prototype; T.imps(t, { "laya.resource.IDispose": true }); t.getResourceByIndex = function (t) { return this._resources[t] }; t.getResourcesLength = function () { return this._resources.length }; t.addResource = function (t) { if (t.resourceManager) t.resourceManager.removeResource(t); var e = this._resources.indexOf(t); if (e === -1) { t._resourceManager = this; this._resources.push(t); this.addSize(t.memorySize); return true } return false }; t.removeResource = function (t) { var e = this._resources.indexOf(t); if (e !== -1) { this._resources.splice(e, 1); t._resourceManager = null; this._memorySize -= t.memorySize; return true } return false }; t.unload = function () { var t = this._resources.slice(0, this._resources.length); for (var e = 0; e < t.length; e++) { var i = t[e]; i.destroy() } t.length = 0 }; t.dispose = function () { if (this === n._systemResourceManager) throw new Error("systemResourceManager不能被释放！"); n._resourceManagers.splice(n._resourceManagers.indexOf(this), 1); n._isResourceManagersSorted = false; var t = this._resources.slice(0, this._resources.length); for (var e = 0; e < t.length; e++) { var i = t[e]; i.resourceManager.removeResource(i); i.destroy() } t.length = 0 }; t.addSize = function (t) { if (t) { if (this.autoRelease && t > 0) this._memorySize + t > this.autoReleaseMaxSize && this.garbageCollection((1 - this._garbageCollectionRate) * this.autoReleaseMaxSize); this._memorySize += t } }; t.garbageCollection = function (t) { var e = this._resources; e = e.slice(); e.sort(function (t, e) { if (!t || !e) throw new Error("a或b不能为空！"); if (t.released && e.released) return 0; else if (t.released) return 1; else if (e.released) return -1; return t._lastUseFrameCount - e._lastUseFrameCount }); var i = at.loopCount; for (var r = 0, s = e.length; r < s; r++) { var n = e[r]; if (i - n._lastUseFrameCount > 1) { n.releaseResource() } else { if (this._memorySize >= t) this._isOverflow = true; return } if (this._memorySize < t) { this._isOverflow = false; return } } }; u(0, t, "id", function () { return this._id }); u(0, t, "name", function () { return this._name }, function (t) { if ((t || t !== "") && this._name !== t) { this._name = t; n._isResourceManagersSorted = false } }); u(0, t, "memorySize", function () { return this._memorySize }); u(1, n, "systemResourceManager", function () { return n._systemResourceManager }); n.__init__ = function () { n.currentResourceManager = n.systemResourceManager }; n.getLoadedResourceManagerByIndex = function (t) { return n._resourceManagers[t] }; n.getLoadedResourceManagersCount = function () { return n._resourceManagers.length }; n.recreateContentManagers = function (t) { t === void 0 && (t = false); var e = n.currentResourceManager; for (var i = 0; i < n._resourceManagers.length; i++) { n.currentResourceManager = n._resourceManagers[i]; for (var r = 0; r < n.currentResourceManager._resources.length; r++) { n.currentResourceManager._resources[r].releaseResource(t); n.currentResourceManager._resources[r].activeResource(t) } } n.currentResourceManager = e }; n.releaseContentManagers = function (t) { t === void 0 && (t = false); var e = n.currentResourceManager; for (var i = 0; i < n._resourceManagers.length; i++) { n.currentResourceManager = n._resourceManagers[i]; for (var r = 0; r < n.currentResourceManager._resources.length; r++) { var s = n.currentResourceManager._resources[r]; !s.released && s.releaseResource(t) } } n.currentResourceManager = e }; n._uniqueIDCounter = 0; n._isResourceManagersSorted = false; n._resourceManagers = []; h(n, ["_systemResourceManager", function () { return this._systemResourceManager = new n("System Resource Manager") }, "currentResourceManager", function () { return this.currentResourceManager = n._systemResourceManager }]); return n }(); var Y = function () { function t() { } v(t, "laya.system.System"); t.changeDefinition = function (t, e) { T[t] = e; var i = t + "=classObj"; T._runScript(i) }; t.__init__ = function () { if (U.isConchApp) { conch.disableConchResManager(); conch.disableConchAutoRestoreLostedDevice() } }; return t }(); B; var X = function () { function i() { } v(i, "laya.utils.Browser"); u(1, i, "pixelRatio", function () { i.__init__(); if (i.userAgent.indexOf("Mozilla/6.0(Linux; Android 6.0; HUAWEI NXT-AL10 Build/HUAWEINXT-AL10)") > -1) return 2; return E.getPixelRatio() }); u(1, i, "height", function () { i.__init__(); return (T.stage && T.stage.canvasRotation ? i.clientWidth : i.clientHeight) * i.pixelRatio }); u(1, i, "clientWidth", function () { i.__init__(); return i.window.innerWidth || i.document.body.clientWidth }); u(1, i, "window", function () { i.__init__(); return i._window }); u(1, i, "clientHeight", function () { i.__init__(); return i.window.innerHeight || i.document.body.clientHeight || i.document.documentElement.clientHeight }); u(1, i, "width", function () { i.__init__(); return (T.stage && T.stage.canvasRotation ? i.clientHeight : i.clientWidth) * i.pixelRatio }); u(1, i, "container", function () { i.__init__(); if (!i._container) { i._container = i.createElement("div"); i._container.id = "layaContainer"; i.document.body.appendChild(i._container) } return i._container }, function (t) { i._container = t }); u(1, i, "document", function () { i.__init__(); return i._document }); i.__init__ = function () { B; if (i._window) return; i._window = E.getWindow(); i._document = i.window.document; i._window.addEventListener("message", function (t) { laya.utils.Browser._onMessage(t) }, false); i.document.__createElement = i.document.createElement; a.requestAnimationFrame = a.requestAnimationFrame || a.webkitRequestAnimationFrame || a.mozRequestAnimationFrame || a.oRequestAnimationFrame || a.msRequestAnimationFrame || function (t) { return a.setTimeout(t, 1e3 / 60) }; var t = a.document.body.style; t["-webkit-user-select"] = "none"; t["-webkit-tap-highlight-color"] = "rgba(200,200,200,0)"; i.userAgent = i.window.navigator.userAgent; i.u = i.userAgent; i.onIOS = !!i.u.match(/\(i[^;]+;(U;)? CPU.+Mac OS X/); i.onMobile = i.u.indexOf("Mobile") > -1; i.onIPhone = i.u.indexOf("iPhone") > -1; i.onMac = i.u.indexOf("Mac OS X") > -1; i.onIPad = i.u.indexOf("iPad") > -1; i.onAndroid = i.u.indexOf("Android") > -1 || i.u.indexOf("Adr") > -1; i.onWP = i.u.indexOf("Windows Phone") > -1; i.onQQBrowser = i.u.indexOf("QQBrowser") > -1; i.onMQQBrowser = i.u.indexOf("MQQBrowser") > -1 || i.u.indexOf("Mobile") > -1 && i.u.indexOf("QQ") > -1; i.onIE = !!i.window.ActiveXObject || "ActiveXObject" in i.window; i.onWeiXin = i.u.indexOf("MicroMessenger") > -1; i.onPC = !i.onMobile; i.onSafari = i.u.indexOf("Safari") > -1; i.onFirefox = i.u.indexOf("Firefox") > -1; i.onEdge = i.u.indexOf("Edge") > -1; i.onMiniGame = i.u.indexOf("MiniGame") > -1; i.onTTMiniGame = i.u.indexOf("TTGame") > -1; i.onBDMiniGame = i.u.indexOf("SwanGame") > -1; if (i.u.indexOf("OPPO") > -1 && i.u.indexOf("MiniGame") > -1) { i.onQGMiniGame = true; i.onMiniGame = false } if (laya.utils.Browser.window.hasOwnProperty("bl") && i.u.indexOf("MiniGame") > -1) { i.onBLMiniGame = true; i.onMiniGame = false } if (i.u.indexOf("VVGame") > -1) i.onVVMiniGame = true; i.onKGMiniGame = i.u.indexOf("QuickGame") > -1; i.onLimixiu = i.u.indexOf("limixiu") > -1; i.onIPhoneX = /iPhone/gi.test(i.window.navigator.userAgent) && (Math.min(i.clientHeight, i.clientWidth) == 375 && Math.max(i.clientHeight, i.clientWidth) == 812); i.httpProtocol = i.window.location.protocol == "http:"; if (i.onMiniGame && i.window.focus == null) { console.error("请先初始化小游戏适配库，详细教程https://ldc.layabox.com/doc/?nav=zh-ts-5-0-0") } i.webAudioEnabled = i.window["AudioContext"] || i.window["webkitAudioContext"] || i.window["mozAudioContext"] ? true : false; i.soundType = i.webAudioEnabled ? "WEBAUDIOSOUND" : "AUDIOSOUND"; gt = i.webAudioEnabled ? yt : vt; if (i.webAudioEnabled) yt.initWebAudio(); vt._initMusicAudio(); i.enableTouch = "ontouchstart" in a || a.DocumentTouch && e instanceof DocumentTouch; a.focus(); B._soundClass = gt; B._musicClass = vt; U._mainCanvas = U._mainCanvas || Ot.create("2D"); if (i.canvas) return; i.canvas = Ot.create("2D"); i.context = i.canvas.getContext("2d") }; i._onMessage = function (t) { if (!t.data) return; if (t.data.name == "size") { i.window.innerWidth = t.data.width; i.window.innerHeight = t.data.height; i.window.__innerHeight = t.data.clientHeight; if (!i.document.createEvent) { console.warn("no document.createEvent"); return } var e = i.document.createEvent("HTMLEvents"); e.initEvent("resize", false, false); i.window.dispatchEvent(e); return } }; i.createElement = function (t) { i.__init__(); return i.document.__createElement(t) }; i.getElementById = function (t) { i.__init__(); return i.document.getElementById(t) }; i.removeElement = function (t) { if (t && t.parentNode) t.parentNode.removeChild(t) }; i.now = function () { return E.now() }; i._window = null; i._document = null; i._container = null; i.userAgent = null; i.u = null; i.onIOS = false; i.onMac = false; i.onMobile = false; i.onIPhone = false; i.onIPad = false; i.onAndroid = false; i.onWP = false; i.onQQBrowser = false; i.onMQQBrowser = false; i.onSafari = false; i.onFirefox = false; i.onEdge = false; i.onIE = false; i.onWeiXin = false; i.onMiniGame = false; i.onTTMiniGame = false; i.onBDMiniGame = false; i.onKGMiniGame = false; i.onQGMiniGame = false; i.onVVMiniGame = false; i.onLimixiu = false; i.onBLMiniGame = false; i.onPC = false; i.httpProtocol = false; i.webAudioEnabled = false; i.soundType = null; i.enableTouch = false; i.canvas = null; i.context = null; i.onIPhoneX = false; i.__init$ = function () { vt; yt }; return i }(); var j = function () { function e(t) { this._xd_ = true; this._allocated_ = 8; this._pos_ = 0; this._length = 0; if (t) { this._u8d_ = new Uint8Array(t); this._d_ = new DataView(this._u8d_.buffer); this._length = this._d_.byteLength } else { this.___resizeBuffer(this._allocated_) } } v(e, "laya.utils.Byte"); var t = e.prototype; t.___resizeBuffer = function (t) { try { var e = new Uint8Array(t); if (this._u8d_ != null) { if (this._u8d_.length <= t) e.set(this._u8d_); else e.set(this._u8d_.subarray(0, t)) } this._u8d_ = e; this._d_ = new DataView(e.buffer) } catch (e) { throw "___resizeBuffer err:" + t } }; t.getString = function () { return this.rUTF(this.getUint16()) }; t.getFloat32Array = function (t, e) { var i = t + e; i = i > this._length ? this._length : i; var r = new Float32Array(this._d_.buffer.slice(t, i)); this._pos_ = i; return r }; t.getUint8Array = function (t, e) { var i = t + e; i = i > this._length ? this._length : i; var r = new Uint8Array(this._d_.buffer.slice(t, i)); this._pos_ = i; return r }; t.getInt16Array = function (t, e) { var i = t + e; i = i > this._length ? this._length : i; var r = new Int16Array(this._d_.buffer.slice(t, i)); this._pos_ = i; return r }; t.getFloat32 = function () { if (this._pos_ + 4 > this._length) throw "getFloat32 error - Out of bounds"; var t = this._d_.getFloat32(this._pos_, this._xd_); this._pos_ += 4; return t }; t.getFloat64 = function () { if (this._pos_ + 8 > this._length) throw "getFloat64 error - Out of bounds"; var t = this._d_.getFloat64(this._pos_, this._xd_); this._pos_ += 8; return t }; t.writeFloat32 = function (t) { this.ensureWrite(this._pos_ + 4); this._d_.setFloat32(this._pos_, t, this._xd_); this._pos_ += 4 }; t.writeFloat64 = function (t) { this.ensureWrite(this._pos_ + 8); this._d_.setFloat64(this._pos_, t, this._xd_); this._pos_ += 8 }; t.getInt32 = function () { if (this._pos_ + 4 > this._length) throw "getInt32 error - Out of bounds"; var t = this._d_.getInt32(this._pos_, this._xd_); this._pos_ += 4; return t }; t.getUint32 = function () { if (this._pos_ + 4 > this._length) throw "getUint32 error - Out of bounds"; var t = this._d_.getUint32(this._pos_, this._xd_); this._pos_ += 4; return t }; t.writeInt32 = function (t) { this.ensureWrite(this._pos_ + 4); this._d_.setInt32(this._pos_, t, this._xd_); this._pos_ += 4 }; t.writeUint32 = function (t) { this.ensureWrite(this._pos_ + 4); this._d_.setUint32(this._pos_, t, this._xd_); this._pos_ += 4 }; t.getInt16 = function () { if (this._pos_ + 2 > this._length) throw "getInt16 error - Out of bounds"; var t = this._d_.getInt16(this._pos_, this._xd_); this._pos_ += 2; return t }; t.getUint16 = function () { if (this._pos_ + 2 > this._length) throw "getUint16 error - Out of bounds"; var t = this._d_.getUint16(this._pos_, this._xd_); this._pos_ += 2; return t }; t.writeUint16 = function (t) { this.ensureWrite(this._pos_ + 2); this._d_.setUint16(this._pos_, t, this._xd_); this._pos_ += 2 }; t.writeInt16 = function (t) { this.ensureWrite(this._pos_ + 2); this._d_.setInt16(this._pos_, t, this._xd_); this._pos_ += 2 }; t.getUint8 = function () { if (this._pos_ + 1 > this._length) throw "getUint8 error - Out of bounds"; return this._d_.getUint8(this._pos_++) }; t.writeUint8 = function (t) { this.ensureWrite(this._pos_ + 1); this._d_.setUint8(this._pos_, t); this._pos_++ }; t._getUInt8 = function (t) { return this._d_.getUint8(t) }; t._getUint16 = function (t) { return this._d_.getUint16(t, this._xd_) }; t._getMatrix = function () { var t = new L(this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32()); return t }; t.rUTF = function (t) { var e = "", i = this._pos_ + t, r = 0, s = 0, n = 0, a = String.fromCharCode; var o = this._u8d_, h = 0; while (this._pos_ < i) { r = o[this._pos_++]; if (r < 128) { if (r != 0) { e += a(r) } } else if (r < 224) { e += a((r & 63) << 6 | o[this._pos_++] & 127) } else if (r < 240) { s = o[this._pos_++]; e += a((r & 31) << 12 | (s & 127) << 6 | o[this._pos_++] & 127) } else { s = o[this._pos_++]; n = o[this._pos_++]; e += a((r & 15) << 18 | (s & 127) << 12 | n << 6 & 127 | o[this._pos_++] & 127) } h++ } return e }; t.getCustomString = function (t) { var e = "", i = 0, r = 0, s = 0, n = String.fromCharCode; var a = this._u8d_, o = 0; while (t > 0) { r = a[this._pos_]; if (r < 128) { e += n(r); this._pos_++; t-- } else { i = r - 128; this._pos_++; t -= i; while (i > 0) { r = a[this._pos_++]; s = a[this._pos_++]; e += n(s << 8 | r); i-- } } } return e }; t.clear = function () { this._pos_ = 0; this.length = 0 }; t.__getBuffer = function () { return this._d_.buffer }; t.writeUTFBytes = function (t) { t = t + ""; for (var e = 0, i = t.length; e < i; e++) { var r = t.charCodeAt(e); if (r <= 127) { this.writeByte(r) } else if (r <= 2047) { this.ensureWrite(this._pos_ + 2); this._u8d_.set([192 | r >> 6, 128 | r & 63], this._pos_); this._pos_ += 2 } else if (r <= 65535) { this.ensureWrite(this._pos_ + 3); this._u8d_.set([224 | r >> 12, 128 | r >> 6 & 63, 128 | r & 63], this._pos_); this._pos_ += 3 } else { this.ensureWrite(this._pos_ + 4); this._u8d_.set([240 | r >> 18, 128 | r >> 12 & 63, 128 | r >> 6 & 63, 128 | r & 63], this._pos_); this._pos_ += 4 } } }; t.writeUTFString = function (t) { var e = this.pos; this.writeUint16(1); this.writeUTFBytes(t); var i = this.pos - e - 2; if (i >= 65536) { throw "writeUTFString byte len more than 65536" } this._d_.setUint16(e, i, this._xd_) }; t.readUTFString = function () { return this.readUTFBytes(this.getUint16()) }; t.getUTFString = function () { return this.readUTFString() }; t.readUTFBytes = function (t) { t === void 0 && (t = -1); if (t == 0) return ""; var e = this.bytesAvailable; if (t > e) throw "readUTFBytes error - Out of bounds"; t = t > 0 ? t : e; return this.rUTF(t) }; t.getUTFBytes = function (t) { t === void 0 && (t = -1); return this.readUTFBytes(t) }; t.writeByte = function (t) { this.ensureWrite(this._pos_ + 1); this._d_.setInt8(this._pos_, t); this._pos_ += 1 }; t.readByte = function () { if (this._pos_ + 1 > this._length) throw "readByte error - Out of bounds"; return this._d_.getInt8(this._pos_++) }; t.getByte = function () { return this.readByte() }; t.ensureWrite = function (t) { if (this._length < t) this._length = t; if (this._allocated_ < t) this.length = t }; t.writeArrayBuffer = function (t, e, i) { e === void 0 && (e = 0); i === void 0 && (i = 0); if (e < 0 || i < 0) throw "writeArrayBuffer error - Out of bounds"; if (i == 0) i = t.byteLength - e; this.ensureWrite(this._pos_ + i); var r = new Uint8Array(t); this._u8d_.set(r.subarray(e, e + i), this._pos_); this._pos_ += i }; t.readArrayBuffer = function (t) { var e; e = this._u8d_.buffer.slice(this._pos_, this._pos_ + t); this._pos_ = this._pos_ + t; return e }; u(0, t, "buffer", function () { var t = this._d_.buffer; if (t.byteLength == this.length) return t; return t.slice(0, this.length) }); u(0, t, "endian", function () { return this._xd_ ? "littleEndian" : "bigEndian" }, function (t) { this._xd_ = t == "littleEndian" }); u(0, t, "length", function () { return this._length }, function (t) { if (this._allocated_ < t) this.___resizeBuffer(this._allocated_ = Math.floor(Math.max(t, this._allocated_ * 2))); else if (this._allocated_ > t) this.___resizeBuffer(this._allocated_ = t); this._length = t }); u(0, t, "pos", function () { return this._pos_ }, function (t) { this._pos_ = t }); u(0, t, "bytesAvailable", function () { return this._length - this._pos_ }); e.getSystemEndian = function () { if (!e._sysEndian) { var t = new ArrayBuffer(2); new DataView(t).setInt16(0, 256, true); e._sysEndian = new Int16Array(t)[0] === 256 ? "littleEndian" : "bigEndian" } return e._sysEndian }; e.BIG_ENDIAN = "bigEndian"; e.LITTLE_ENDIAN = "littleEndian"; e._sysEndian = null; return e }(); var K = function () { function s() { } v(s, "laya.utils.CacheManager"); s.regCacheByFunction = function (t, e) { s.unRegCacheByFunction(t, e); var i; i = { tryDispose: t, getCacheList: e }; s._cacheList.push(i) }; s.unRegCacheByFunction = function (t, e) { var i = 0, r = 0; r = s._cacheList.length; for (i = 0; i < r; i++) { if (s._cacheList[i].tryDispose == t && s._cacheList[i].getCacheList == e) { s._cacheList.splice(i, 1); return } } }; s.forceDispose = function () { var t = 0, e = s._cacheList.length; for (t = 0; t < e; t++) { s._cacheList[t].tryDispose(true) } }; s.beginCheck = function (t) { t === void 0 && (t = 15e3); T.timer.loop(t, null, s._checkLoop) }; s.stopCheck = function () { T.timer.clear(null, s._checkLoop) }; s._checkLoop = function () { var t = s._cacheList; if (t.length < 1) return; var e = X.now(); var i = 0; var r = 0; r = i = t.length; while (i > 0) { s._index++; s._index = s._index % r; t[s._index].tryDispose(false); if (X.now() - e > s.loopTimeLimit) break; i-- } }; s.loopTimeLimit = 2; s._cacheList = []; s._index = 0; return s }(); var $ = function () { function _() { } v(_, "laya.utils.ClassUtils"); _.regClass = function (t, e) { _._classMap[t] = e }; _.getRegClass = function (t) { return _._classMap[t] }; _.getInstance = function (t) { var e = _.getClass(t); if (e) return new e; else console.warn("[error] Undefined class:", t); return null }; _.createByJson = function (t, e, i, r, s) { if (typeof t == "string") t = JSON.parse(t); var n = t.props; if (!e) { e = s ? s.runWith(t) : _.getInstance(n.runtime || t.type); if (!e) return null } var a = t.child; if (a) { for (var o = 0, h = a.length; o < h; o++) { var l = a[o]; if ((l.props.name === "render" || l.props.renderType === "render") && e["_$set_itemRender"]) e.itemRender = l; else { if (l.type == "Graphic") { _.addGraphicsToSprite(l, e) } else if (_.isDrawType(l.type)) { _.addGraphicToSprite(l, e, true) } else { var u = _.createByJson(l, null, i, r, s); if (l.type == "Script") { if (u.hasOwnProperty("owner")) { u["owner"] = e } else if (u.hasOwnProperty("target")) { u["target"] = e } } else if (l.props.renderType == "mask") { e.mask = u } else { e.addChild(u) } } } } } if (n) { for (var c in n) { var f = n[c]; if (c === "var" && i) { i[f] = e } else if (f instanceof Array && typeof e[c] == "function") { e[c].apply(e, f) } else { e[c] = f } } } if (r && t.customProps) { r.runWith([e, t]) } if (e["created"]) e.created(); return e }; _.addGraphicsToSprite = function (t, e) { var i; i = t.child; if (!i || i.length < 1) return; var r; r = _._getGraphicsFromSprite(t, e); var s = 0; var n = 0; if (t.props) { s = _._getObjVar(t.props, "x", 0); n = _._getObjVar(t.props, "y", 0) } if (s != 0 && n != 0) { r.translate(s, n) } var a = 0, o = 0; o = i.length; for (a = 0; a < o; a++) { _._addGraphicToGraphics(i[a], r) } if (s != 0 && n != 0) { r.translate(-s, -n) } }; _.addGraphicToSprite = function (t, e, i) { i === void 0 && (i = false); var r; r = i ? _._getGraphicsFromSprite(t, e) : e.graphics; _._addGraphicToGraphics(t, r) }; _._getGraphicsFromSprite = function (t, e) { var i; if (!t || !t.props) return e.graphics; var r; r = t.props.renderType; switch (r) { case "hit": case "unHit": ; var s; if (!e.hitArea) { e.hitArea = new tt } s = e.hitArea; if (!s[r]) { s[r] = new d } i = s[r]; break; default: }if (!i) i = e.graphics; return i }; _._getTransformData = function (t) { var e; if (t.hasOwnProperty("pivotX") || t.hasOwnProperty("pivotY")) { e = e || new L; e.translate(-_._getObjVar(t, "pivotX", 0), -_._getObjVar(t, "pivotY", 0)) } var i = _._getObjVar(t, "scaleX", 1), r = _._getObjVar(t, "scaleY", 1); var s = _._getObjVar(t, "rotation", 0); var n = _._getObjVar(t, "skewX", 0); var a = _._getObjVar(t, "skewY", 0); if (i != 1 || r != 1 || s != 0) { e = e || new L; e.scale(i, r); e.rotate(s * .0174532922222222) } return e }; _._addGraphicToGraphics = function (t, e) { var i; i = t.props; if (!i) return; var r; r = _.DrawTypeDic[t.type]; if (!r) return; var s; s = e; var n; var a = _._getParams(i, r[1], r[2], r[3]); n = _._tM; if (n || _._alpha != 1) { s.save(); if (n) s.transform(n); if (_._alpha != 1) s.alpha(_._alpha) } s[r[0]].apply(s, a); if (n || _._alpha != 1) { s.restore() } }; _._adptLineData = function (t) { t[2] = parseFloat(t[0]) + parseFloat(t[2]); t[3] = parseFloat(t[1]) + parseFloat(t[3]); return t }; _._adptTextureData = function (t) { t[0] = bt.getRes(t[0]); return t }; _._adptLinesData = function (t) { t[2] = _._getPointListByStr(t[2]); return t }; _.isDrawType = function (t) { if (t == "Image") return false; return _.DrawTypeDic.hasOwnProperty(t) }; _._getParams = function (t, e, i, r) { i === void 0 && (i = 0); var s; s = _._temParam; s.length = e.length; var n = 0, a = 0; a = e.length; for (n = 0; n < a; n++) { s[n] = _._getObjVar(t, e[n][0], e[n][1]) } _._alpha = _._getObjVar(t, "alpha", 1); var o; o = _._getTransformData(t); if (o) { if (!i) i = 0; o.translate(s[i], s[i + 1]); s[i] = s[i + 1] = 0; _._tM = o } else { _._tM = null } if (r && _[r]) { s = _[r](s) } return s }; _._getPointListByStr = function (t) { var e; e = t.split(","); var i = 0, r = 0; r = e.length; for (i = 0; i < r; i++) { e[i] = parseFloat(e[i]) } return e }; _._getObjVar = function (t, e, i) { if (t.hasOwnProperty(e)) { return t[e] } return i }; _._temParam = []; _._classMap = { Sprite: "laya.display.Sprite", Text: "laya.display.Text", Animation: "laya.display.Animation", Skeleton: "laya.ani.bone.Skeleton", Particle2D: "laya.particle.Particle2D", div: "laya.html.dom.HTMLDivElement", p: "laya.html.dom.HTMLElement", img: "laya.html.dom.HTMLImageElement", span: "laya.html.dom.HTMLElement", br: "laya.html.dom.HTMLBrElement", style: "laya.html.dom.HTMLStyleElement", font: "laya.html.dom.HTMLElement", a: "laya.html.dom.HTMLElement", "#text": "laya.html.dom.HTMLElement" }; _.getClass = function (t) { var e = _._classMap[t] || t; if (typeof e == "string") return T["__classmap"][e]; return e }; _._tM = null; _._alpha = NaN; h(_, ["DrawTypeDic", function () { return this.DrawTypeDic = { Rect: ["drawRect", [["x", 0], ["y", 0], ["width", 0], ["height", 0], ["fillColor", null], ["lineColor", null], ["lineWidth", 1]]], Circle: ["drawCircle", [["x", 0], ["y", 0], ["radius", 0], ["fillColor", null], ["lineColor", null], ["lineWidth", 1]]], Pie: ["drawPie", [["x", 0], ["y", 0], ["radius", 0], ["startAngle", 0], ["endAngle", 0], ["fillColor", null], ["lineColor", null], ["lineWidth", 1]]], Image: ["drawTexture", [["x", 0], ["y", 0], ["width", 0], ["height", 0]]], Texture: ["drawTexture", [["skin", null], ["x", 0], ["y", 0], ["width", 0], ["height", 0]], 1, "_adptTextureData"], FillTexture: ["fillTexture", [["skin", null], ["x", 0], ["y", 0], ["width", 0], ["height", 0], ["repeat", null]], 1, "_adptTextureData"], FillText: ["fillText", [["text", ""], ["x", 0], ["y", 0], ["font", null], ["color", null], ["textAlign", null]], 1], Line: ["drawLine", [["x", 0], ["y", 0], ["toX", 0], ["toY", 0], ["lineColor", null], ["lineWidth", 0]], 0, "_adptLineData"], Lines: ["drawLines", [["x", 0], ["y", 0], ["points", ""], ["lineColor", null], ["lineWidth", 0]], 0, "_adptLinesData"], Curves: ["drawCurves", [["x", 0], ["y", 0], ["points", ""], ["lineColor", null], ["lineWidth", 0]], 0, "_adptLinesData"], Poly: ["drawPoly", [["x", 0], ["y", 0], ["points", ""], ["fillColor", null], ["lineColor", null], ["lineWidth", 1]], 0, "_adptLinesData"] } }]); return _ }(); var q = function () { function a(t) { this._color = []; if (typeof t == "string") { this.strColor = t; if (t === null) t = "#000000"; t.charAt(0) == "#" && (t = t.substr(1)); var e = t.length; if (e == 3 || e == 4) { var i = ""; for (var r = 0; r < e; r++) { i += t[r] + t[r] } t = i } var s = this.numColor = parseInt(t, 16); var n = t.length == 8; if (n) { this._color = [parseInt(t.substr(0, 2), 16) / 255, ((16711680 & s) >> 16) / 255, ((65280 & s) >> 8) / 255, (255 & s) / 255]; return } } else { s = this.numColor = t; this.strColor = ut.toHexColor(s) } this._color = [((16711680 & s) >> 16) / 255, ((65280 & s) >> 8) / 255, (255 & s) / 255, 1]; this._color.__id = ++a._COLODID } v(a, "laya.utils.Color"); a._initDefault = function () { a._DEFAULT = {}; for (var t in a._COLOR_MAP) a._SAVE[t] = a._DEFAULT[t] = new a(a._COLOR_MAP[t]); return a._DEFAULT }; a._initSaveMap = function () { a._SAVE_SIZE = 0; a._SAVE = {}; for (var t in a._DEFAULT) a._SAVE[t] = a._DEFAULT[t] }; a.create = function (t) { var e = a._SAVE[t + ""]; if (e != null) return e; a._SAVE_SIZE < 1e3 || a._initSaveMap(); return a._SAVE[t + ""] = new a(t) }; a._SAVE = {}; a._SAVE_SIZE = 0; a._COLOR_MAP = { white: "#FFFFFF", red: "#FF0000", green: "#00FF00", blue: "#0000FF", black: "#000000", yellow: "#FFFF00", gray: "#AAAAAA" }; a._DEFAULT = a._initDefault(); a._COLODID = 1; return a }(); var Z = function () { function t() { this._values = []; this._keys = [] } v(t, "laya.utils.Dictionary"); var e = t.prototype; e.set = function (t, e) { var i = this.indexOf(t); if (i >= 0) { this._values[i] = e; return } this._keys.push(t); this._values.push(e) }; e.indexOf = function (t) { var e = this._keys.indexOf(t); if (e >= 0) return e; t = typeof t == "string" ? Number(t) : typeof t == "number" ? t.toString() : t; return this._keys.indexOf(t) }; e.get = function (t) { var e = this.indexOf(t); return e < 0 ? null : this._values[e] }; e.remove = function (t) { var e = this.indexOf(t); if (e >= 0) { this._keys.splice(e, 1); this._values.splice(e, 1); return true } return false }; e.clear = function () { this._values.length = 0; this._keys.length = 0 }; u(0, e, "values", function () { return this._values }); u(0, e, "keys", function () { return this._keys }); return t }(); var Q = function () { function t() { this.ratio = .92; this.maxOffset = 60; this._dragging = false; this._clickOnly = true } v(t, "laya.utils.Dragging"); var e = t.prototype; e.start = function (t, e, i, r, s, n, a, o) { o === void 0 && (o = .92); this.clearTimer(); this.target = t; this.area = e; this.hasInertia = i; this.elasticDistance = e ? r : 0; this.elasticBackTime = s; this.data = n; this._disableMouseEvent = a; this.ratio = o; this._parent = t.parent; this._clickOnly = true; this._dragging = true; this._elasticRateX = this._elasticRateY = 1; this._lastX = this._parent.mouseX; this._lastY = this._parent.mouseY; T.stage.on("mouseup", this, this.onStageMouseUp); T.stage.on("mouseout", this, this.onStageMouseUp); T.timer.frameLoop(1, this, this.loop) }; e.clearTimer = function () { T.timer.clear(this, this.loop); T.timer.clear(this, this.tweenMove); if (this._tween) { this._tween.recover(); this._tween = null } }; e.stop = function () { if (this._dragging) { b.instance.disableMouseEvent = false; T.stage.off("mouseup", this, this.onStageMouseUp); T.stage.off("mouseout", this, this.onStageMouseUp); this._dragging = false; this.target && this.area && this.backToArea(); this.clear() } }; e.loop = function () { var t = this._parent.getMousePoint(); var e = t.x; var i = t.y; var r = e - this._lastX; var s = i - this._lastY; if (this._clickOnly) { if (Math.abs(r * T.stage._canvasTransform.getScaleX()) > 1 || Math.abs(s * T.stage._canvasTransform.getScaleY()) > 1) { this._clickOnly = false; this._offsets || (this._offsets = []); this._offsets.length = 0; this.target.event("dragstart", this.data); b.instance.disableMouseEvent = this._disableMouseEvent; this.target._set$P("$_MOUSEDOWN", false) } else return } else { this._offsets.push(r, s) } if (r === 0 && s === 0) return; this._lastX = e; this._lastY = i; this.target.x += r * this._elasticRateX; this.target.y += s * this._elasticRateY; this.area && this.checkArea(); this.target.event("dragmove", this.data) }; e.checkArea = function () { if (this.elasticDistance <= 0) { this.backToArea() } else { if (this.target.x < this.area.x) { var t = this.area.x - this.target.x } else if (this.target.x > this.area.x + this.area.width) { t = this.target.x - this.area.x - this.area.width } else { t = 0 } this._elasticRateX = Math.max(0, 1 - t / this.elasticDistance); if (this.target.y < this.area.y) { var e = this.area.y - this.target.y } else if (this.target.y > this.area.y + this.area.height) { e = this.target.y - this.area.y - this.area.height } else { e = 0 } this._elasticRateY = Math.max(0, 1 - e / this.elasticDistance) } }; e.backToArea = function () { this.target.x = Math.min(Math.max(this.target.x, this.area.x), this.area.x + this.area.width); this.target.y = Math.min(Math.max(this.target.y, this.area.y), this.area.y + this.area.height) }; e.onStageMouseUp = function (t) { b.instance.disableMouseEvent = false; T.stage.off("mouseup", this, this.onStageMouseUp); T.stage.off("mouseout", this, this.onStageMouseUp); T.timer.clear(this, this.loop); if (this._clickOnly || !this.target) return; if (this.hasInertia) { if (this._offsets.length < 1) { this._offsets.push(this._parent.mouseX - this._lastX, this._parent.mouseY - this._lastY) } this._offsetX = this._offsetY = 0; var e = this._offsets.length; var i = Math.min(e, 6); var r = this._offsets.length - i; for (var s = e - 1; s > r; s--) { this._offsetY += this._offsets[s--]; this._offsetX += this._offsets[s] } this._offsetX = this._offsetX / i * 2; this._offsetY = this._offsetY / i * 2; if (Math.abs(this._offsetX) > this.maxOffset) this._offsetX = this._offsetX > 0 ? this.maxOffset : -this.maxOffset; if (Math.abs(this._offsetY) > this.maxOffset) this._offsetY = this._offsetY > 0 ? this.maxOffset : -this.maxOffset; T.timer.frameLoop(1, this, this.tweenMove) } else if (this.elasticDistance > 0) { this.checkElastic() } else { this.clear() } }; e.checkElastic = function () { var t = NaN; var e = NaN; if (this.target.x < this.area.x) t = this.area.x; else if (this.target.x > this.area.x + this.area.width) t = this.area.x + this.area.width; if (this.target.y < this.area.y) e = this.area.y; else if (this.target.y > this.area.y + this.area.height) e = this.area.y + this.area.height; if (!isNaN(t) || !isNaN(e)) { var i = {}; if (!isNaN(t)) i.x = t; if (!isNaN(e)) i.y = e; this._tween = lt.to(this.target, i, this.elasticBackTime, J.sineOut, g.create(this, this.clear), 0, false, false) } else { this.clear() } }; e.tweenMove = function () { this._offsetX *= this.ratio * this._elasticRateX; this._offsetY *= this.ratio * this._elasticRateY; this.target.x += this._offsetX; this.target.y += this._offsetY; this.area && this.checkArea(); this.target.event("dragmove", this.data); if (Math.abs(this._offsetX) < 1 && Math.abs(this._offsetY) < 1 || this._elasticRateX < .5 || this._elasticRateY < .5) { T.timer.clear(this, this.tweenMove); if (this.elasticDistance > 0) this.checkElastic(); else this.clear() } }; e.clear = function () { if (this.target) { this.clearTimer(); var t = this.target; this.target = null; this._parent = null; t.event("dragend", this.data) } }; return t }(); var J = function () { function o() { } v(o, "laya.utils.Ease"); o.linearNone = function (t, e, i, r) { return i * t / r + e }; o.linearIn = function (t, e, i, r) { return i * t / r + e }; o.linearInOut = function (t, e, i, r) { return i * t / r + e }; o.linearOut = function (t, e, i, r) { return i * t / r + e }; o.bounceIn = function (t, e, i, r) { return i - o.bounceOut(r - t, 0, i, r) + e }; o.bounceInOut = function (t, e, i, r) { if (t < r * .5) return o.bounceIn(t * 2, 0, i, r) * .5 + e; else return o.bounceOut(t * 2 - r, 0, i, r) * .5 + i * .5 + e }; o.bounceOut = function (t, e, i, r) { if ((t /= r) < 1 / 2.75) return i * (7.5625 * t * t) + e; else if (t < 2 / 2.75) return i * (7.5625 * (t -= 1.5 / 2.75) * t + .75) + e; else if (t < 2.5 / 2.75) return i * (7.5625 * (t -= 2.25 / 2.75) * t + .9375) + e; else return i * (7.5625 * (t -= 2.625 / 2.75) * t + .984375) + e }; o.backIn = function (t, e, i, r, s) { s === void 0 && (s = 1.70158); return i * (t /= r) * t * ((s + 1) * t - s) + e }; o.backInOut = function (t, e, i, r, s) { s === void 0 && (s = 1.70158); if ((t /= r * .5) < 1) return i * .5 * (t * t * (((s *= 1.525) + 1) * t - s)) + e; return i / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + e }; o.backOut = function (t, e, i, r, s) { s === void 0 && (s = 1.70158); return i * ((t = t / r - 1) * t * ((s + 1) * t + s) + 1) + e }; o.elasticIn = function (t, e, i, r, s, n) { s === void 0 && (s = 0); n === void 0 && (n = 0); var a; if (t == 0) return e; if ((t /= r) == 1) return e + i; if (!n) n = r * .3; if (!s || i > 0 && s < i || i < 0 && s < -i) { s = i; a = n / 4 } else a = n / o.PI2 * Math.asin(i / s); return -(s * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * r - a) * o.PI2 / n)) + e }; o.elasticInOut = function (t, e, i, r, s, n) { s === void 0 && (s = 0); n === void 0 && (n = 0); var a; if (t == 0) return e; if ((t /= r * .5) == 2) return e + i; if (!n) n = r * (.3 * 1.5); if (!s || i > 0 && s < i || i < 0 && s < -i) { s = i; a = n / 4 } else a = n / o.PI2 * Math.asin(i / s); if (t < 1) return -.5 * (s * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * r - a) * o.PI2 / n)) + e; return s * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * r - a) * o.PI2 / n) * .5 + i + e }; o.elasticOut = function (t, e, i, r, s, n) { s === void 0 && (s = 0); n === void 0 && (n = 0); var a; if (t == 0) return e; if ((t /= r) == 1) return e + i; if (!n) n = r * .3; if (!s || i > 0 && s < i || i < 0 && s < -i) { s = i; a = n / 4 } else a = n / o.PI2 * Math.asin(i / s); return s * Math.pow(2, -10 * t) * Math.sin((t * r - a) * o.PI2 / n) + i + e }; o.strongIn = function (t, e, i, r) { return i * (t /= r) * t * t * t * t + e }; o.strongInOut = function (t, e, i, r) { if ((t /= r * .5) < 1) return i * .5 * t * t * t * t * t + e; return i * .5 * ((t -= 2) * t * t * t * t + 2) + e }; o.strongOut = function (t, e, i, r) { return i * ((t = t / r - 1) * t * t * t * t + 1) + e }; o.sineInOut = function (t, e, i, r) { return -i * .5 * (Math.cos(Math.PI * t / r) - 1) + e }; o.sineIn = function (t, e, i, r) { return -i * Math.cos(t / r * o.HALF_PI) + i + e }; o.sineOut = function (t, e, i, r) { return i * Math.sin(t / r * o.HALF_PI) + e }; o.quintIn = function (t, e, i, r) { return i * (t /= r) * t * t * t * t + e }; o.quintInOut = function (t, e, i, r) { if ((t /= r * .5) < 1) return i * .5 * t * t * t * t * t + e; return i * .5 * ((t -= 2) * t * t * t * t + 2) + e }; o.quintOut = function (t, e, i, r) { return i * ((t = t / r - 1) * t * t * t * t + 1) + e }; o.quartIn = function (t, e, i, r) { return i * (t /= r) * t * t * t + e }; o.quartInOut = function (t, e, i, r) { if ((t /= r * .5) < 1) return i * .5 * t * t * t * t + e; return -i * .5 * ((t -= 2) * t * t * t - 2) + e }; o.quartOut = function (t, e, i, r) { return -i * ((t = t / r - 1) * t * t * t - 1) + e }; o.cubicIn = function (t, e, i, r) { return i * (t /= r) * t * t + e }; o.cubicInOut = function (t, e, i, r) { if ((t /= r * .5) < 1) return i * .5 * t * t * t + e; return i * .5 * ((t -= 2) * t * t + 2) + e }; o.cubicOut = function (t, e, i, r) { return i * ((t = t / r - 1) * t * t + 1) + e }; o.quadIn = function (t, e, i, r) { return i * (t /= r) * t + e }; o.quadInOut = function (t, e, i, r) { if ((t /= r * .5) < 1) return i * .5 * t * t + e; return -i * .5 * (--t * (t - 2) - 1) + e }; o.quadOut = function (t, e, i, r) { return -i * (t /= r) * (t - 2) + e }; o.expoIn = function (t, e, i, r) { return t == 0 ? e : i * Math.pow(2, 10 * (t / r - 1)) + e - i * .001 }; o.expoInOut = function (t, e, i, r) { if (t == 0) return e; if (t == r) return e + i; if ((t /= r * .5) < 1) return i * .5 * Math.pow(2, 10 * (t - 1)) + e; return i * .5 * (-Math.pow(2, -10 * --t) + 2) + e }; o.expoOut = function (t, e, i, r) { return t == r ? e + i : i * (-Math.pow(2, -10 * t / r) + 1) + e }; o.circIn = function (t, e, i, r) { return -i * (Math.sqrt(1 - (t /= r) * t) - 1) + e }; o.circInOut = function (t, e, i, r) { if ((t /= r * .5) < 1) return -i * .5 * (Math.sqrt(1 - t * t) - 1) + e; return i * .5 * (Math.sqrt(1 - (t -= 2) * t) + 1) + e }; o.circOut = function (t, e, i, r) { return i * Math.sqrt(1 - (t = t / r - 1) * t) + e }; o.HALF_PI = Math.PI * .5; o.PI2 = Math.PI * 2; return o }(); var tt = function () { function f() { this._hit = null; this._unHit = null } v(f, "laya.utils.HitArea"); var t = f.prototype; t.isHit = function (t, e) { if (!f.isHitGraphic(t, e, this.hit)) return false; return !f.isHitGraphic(t, e, this.unHit) }; t.contains = function (t, e) { return this.isHit(t, e) }; u(0, t, "hit", function () { if (!this._hit) this._hit = new d; return this._hit }, function (t) { this._hit = t }); u(0, t, "unHit", function () { if (!this._unHit) this._unHit = new d; return this._unHit }, function (t) { this._unHit = t }); f.isHitGraphic = function (t, e, i) { if (!i) return false; var r; r = i.cmds; if (!r && i._one) { r = f._cmds; r.length = 1; r[0] = i._one } if (!r) return false; var s = 0, n = 0; n = r.length; var a; for (s = 0; s < n; s++) { a = r[s]; if (!a) continue; var o = U._context; switch (a.callee) { case o._translate: case 6: t -= a[0]; e -= a[1]; default: }if (f.isHitCmd(t, e, a)) return true } return false }; f.isHitCmd = function (t, e, i) { if (!i) return false; var r = U._context; var s = false; switch (i["callee"]) { case r._drawRect: case 13: f._rec.setTo(i[0], i[1], i[2], i[3]); s = f._rec.contains(t, e); break; case r._drawCircle: case r._fillCircle: case 14: ; var n = NaN; t -= i[0]; e -= i[1]; n = t * t + e * e; s = n < i[2] * i[2]; break; case r._drawPoly: case 18: t -= i[0]; e -= i[1]; s = f.ptInPolygon(t, e, i[2]); break; default: break }return s }; f.ptInPolygon = function (t, e, i) { var r; r = f._ptPoint; r.setTo(t, e); var s = 0; var n = NaN, a = NaN, o = NaN, h = NaN; var l = 0; l = i.length; for (var u = 0; u < l; u += 2) { n = i[u]; a = i[u + 1]; o = i[(u + 2) % l]; h = i[(u + 3) % l]; if (a == h) continue; if (r.y < Math.min(a, h)) continue; if (r.y >= Math.max(a, h)) continue; var c = (r.y - a) * (o - n) / (h - a) + n; if (c > r.x) { s++ } } return s % 2 == 1 }; f._cmds = []; h(f, ["_rec", function () { return this._rec = new D }, "_ptPoint", function () { return this._ptPoint = new k }]); return f }(); var et = function () { function s(t, e, i, r) { this.char = t; this.charNum = t.charCodeAt(0); this._x = this._y = 0; this.width = e; this.height = i; this.style = r; this.isWord = !s._isWordRegExp.test(t) } v(s, "laya.utils.HTMLChar"); var t = s.prototype; T.imps(t, { "laya.display.ILayout": true }); t.setSprite = function (t) { this._sprite = t }; t.getSprite = function () { return this._sprite }; t._isChar = function () { return true }; t._getCSSStyle = function () { return this.style }; u(0, t, "width", function () { return this._w }, function (t) { this._w = t }); u(0, t, "x", function () { return this._x }, function (t) { if (this._sprite) { this._sprite.x = t } this._x = t }); u(0, t, "y", function () { return this._y }, function (t) { if (this._sprite) { this._sprite.y = t } this._y = t }); u(0, t, "height", function () { return this._h }, function (t) { this._h = t }); s._isWordRegExp = new RegExp("[\\w.]", ""); return s }(); var it = function () { function e() { } v(e, "laya.utils.Log"); e.enable = function () { if (!e._logdiv) { e._logdiv = X.window.document.createElement("div"); X.window.document.body.appendChild(e._logdiv); e._logdiv.style.cssText = "pointer-events:none;border:white;overflow:hidden;z-index:1000000;background:rgba(100,100,100,0.6);color:white;position: absolute;left:0px;top:0px;width:50%;height:50%;" } }; e.toggle = function () { var t = e._logdiv.style; if (t.width == "1px") { t.width = t.height = "50%" } else { t.width = t.height = "1px" } }; e.print = function (t) { if (e._logdiv) { if (e._count >= e.maxCount) e.clear(); e._count++; e._logdiv.innerText += t + "\n"; e._logdiv.scrollTop = e._logdiv.scrollHeight } }; e.clear = function () { e._logdiv.innerText = ""; e._count = 0 }; e._logdiv = null; e._count = 0; e.maxCount = 20; return e }(); var rt = function () { function e() { } v(e, "laya.utils.Mouse"); u(1, e, "cursor", function () { return e._style.cursor }, function (t) { e._style.cursor = t }); e.hide = function () { if (e.cursor != "none") { e._preCursor = e.cursor; e.cursor = "none" } }; e.show = function () { if (e.cursor == "none") { if (e._preCursor) { e.cursor = e._preCursor } else { e.cursor = "auto" } } }; e._preCursor = null; h(e, ["_style", function () { return this._style = X.document.body.style }]); return e }(); var st = function () { function n() { } v(n, "laya.utils.Pool"); n.getPoolBySign = function (t) { return n._poolDic[t] || (n._poolDic[t] = []) }; n.clearBySign = function (t) { if (n._poolDic[t]) n._poolDic[t].length = 0 }; n.recover = function (t, e) { if (e["__InPool"]) return; e["__InPool"] = true; n.getPoolBySign(t).push(e) }; n.getItemByClass = function (t, e) { var i = n.getPoolBySign(t); var r = i.length ? i.pop() : new e; r["__InPool"] = false; return r }; n.getItemByCreateFun = function (t, e, i) { var r = n.getPoolBySign(t); var s = r.length ? r.pop() : e.call(i); s["__InPool"] = false; return s }; n.getItem = function (t) { var e = n.getPoolBySign(t); var i = e.length ? e.pop() : null; if (i) { i["__InPool"] = false } return i }; n._poolDic = {}; n.InPoolSign = "__InPool"; return n }(); var nt = function () { function r() { this.sign = null; this.maxCount = 1e3 } v(r, "laya.utils.PoolCache"); var t = r.prototype; t.getCacheList = function () { return st.getPoolBySign(this.sign) }; t.tryDispose = function (t) { var e; e = st.getPoolBySign(this.sign); if (e.length > this.maxCount) { e.splice(this.maxCount, e.length - this.maxCount) } }; r.addPoolCacheManager = function (t, e) { e === void 0 && (e = 100); var i; i = new r; i.sign = t; i.maxCount = e; K.regCacheByFunction(ut.bind(i.tryDispose, i), ut.bind(i.getCacheList, i)) }; return r }(); var at = function () { function l() { } v(l, "laya.utils.Stat"); u(1, l, "onclick", null, function (t) { if (l._sp) { l._sp.on("click", l._sp, t) } if (l._canvas) { l._canvas.source.onclick = t; l._canvas.source.style.pointerEvents = "" } }); l.show = function (t, e) { t === void 0 && (t = 0); e === void 0 && (e = 0); if (U.isConchApp && !U.isConchWebGL) { X.window.conch.showFPS && X.window.conch.showFPS(t, e); return } if (!U.isConchWebGL && !X.onMiniGame && !X.onLimixiu && !X.onKGMiniGame && !X.onBDMiniGame && !X.onTTMiniGame && !X.onQGMiniGame && !X.onVVMiniGame && !X.onBLMiniGame) l._useCanvas = true; l._show = true; l._fpsData.length = 60; l._view[0] = { title: "FPS(Canvas)", value: "_fpsStr", color: "yellow", units: "int" }; l._view[1] = { title: "Sprite", value: "_spriteStr", color: "white", units: "int" }; l._view[2] = { title: "DrawCall", value: "drawCall", color: "white", units: "int" }; l._view[3] = { title: "CurMem", value: "currentMemorySize", color: "yellow", units: "M" }; if (U.isWebGL) { l._view[4] = { title: "Shader", value: "shaderCall", color: "white", units: "int" }; if (!U.is3DMode) { l._view[0].title = "FPS(WebGL)"; l._view[5] = { title: "Canvas", value: "_canvasStr", color: "white", units: "int" } } else { l._view[0].title = "FPS(3D)"; l._view[5] = { title: "TriFaces", value: "trianglesFaces", color: "white", units: "int" }; l._view[6] = { title: "treeNodeColl", value: "treeNodeCollision", color: "white", units: "int" }; l._view[7] = { title: "treeSpriteColl", value: "treeSpriteCollision", color: "white", units: "int" } } } else { l._view[4] = { title: "Canvas", value: "_canvasStr", color: "white", units: "int" } } if (l._useCanvas) { l.createUIPre(t, e) } else l.createUI(t, e); l.enable() }; l.createUIPre = function (t, e) { var i = X.pixelRatio; if (X.onQGMiniGame || X.onVVMiniGame) { i = 3 } l._width = i * 130; l._vx = i * 75; l._height = i * (l._view.length * 12 + 3 * i) + 4; l._fontSize = 12 * i; for (var r = 0; r < l._view.length; r++) { l._view[r].x = 4; l._view[r].y = r * l._fontSize + 2 * i } if (!l._canvas) { l._canvas = new Ot("2D"); l._canvas.size(l._width, l._height); l._ctx = l._canvas.getContext("2d"); l._ctx.textBaseline = "top"; l._ctx.font = l._fontSize + "px Sans-serif"; l._canvas.source.style.cssText = "pointer-events:none;background:rgba(150,150,150,0.8);z-index:100000;position: absolute;direction:ltr;left:" + t + "px;top:" + e + "px;width:" + l._width / i + "px;height:" + l._height / i + "px;" } l._first = true; l.loop(); l._first = false; if (!X.onKGMiniGame) { X.container.appendChild(l._canvas.source) } }; l.createUI = function (t, e) { var i = l._sp; var r = X.pixelRatio; if (X.onQGMiniGame || X.onVVMiniGame) { r = 3 } if (!i) { i = new Et; l._leftText = new Dt; l._leftText.pos(5, 5); l._leftText.color = "#ffffff"; i.addChild(l._leftText); l._txt = new Dt; l._txt.pos(80 * r, 5); l._txt.color = "#ffffff"; i.addChild(l._txt); l._sp = i } i.pos(t, e); var s = ""; for (var n = 0; n < l._view.length; n++) { var a = l._view[n]; s += a.title + "\n" } l._leftText.text = s; var o = r * 138; var h = r * (l._view.length * 12 + 3 * r) + 4; l._txt.fontSize = l._fontSize * r; l._leftText.fontSize = l._fontSize * r; i.size(o, h); i.graphics.clear(); i.graphics.setAlpha(.5); i.graphics.drawRect(0, 0, o, h, "#999999"); i.graphics.setAlpha(1); l.loop() }; l.enable = function () { T.timer.frameLoop(1, l, l.loop) }; l.hide = function () { l._show = false; T.timer.clear(l, l.loop); if (l._canvas) { X.removeElement(l._canvas.source) } }; l.clear = function () { l.trianglesFaces = l.drawCall = l.shaderCall = l.spriteCount = l.spriteRenderUseCacheCount = l.treeNodeCollision = l.treeSpriteCollision = l.canvasNormal = l.canvasBitmap = l.canvasReCache = 0 }; l.loop = function () { l._count++; var t = X.now(); if (t - l._timer < 1e3) return; var e = l._count; l.FPS = Math.round(e * 1e3 / (t - l._timer)); if (l._show) { l.trianglesFaces = Math.round(l.trianglesFaces / e); if (!l._useCanvas) { l.drawCall = Math.round(l.drawCall / e) - 2; l.shaderCall = Math.round(l.shaderCall / e) - 4; l.spriteCount = Math.round(l.spriteCount / e) - 4 } else { l.drawCall = Math.round(l.drawCall / e) - 2; l.shaderCall = Math.round(l.shaderCall / e); l.spriteCount = Math.round(l.spriteCount / e) - 1 } l.spriteRenderUseCacheCount = Math.round(l.spriteRenderUseCacheCount / e); l.canvasNormal = Math.round(l.canvasNormal / e); l.canvasBitmap = Math.round(l.canvasBitmap / e); l.canvasReCache = Math.ceil(l.canvasReCache / e); l.treeNodeCollision = Math.round(l.treeNodeCollision / e); l.treeSpriteCollision = Math.round(l.treeSpriteCollision / e); var i = l.FPS > 0 ? Math.floor(1e3 / l.FPS).toString() : " "; l._fpsStr = l.FPS + (l.renderSlow ? " slow" : "") + " " + i; l._spriteStr = l.spriteCount + (l.spriteRenderUseCacheCount ? "/" + l.spriteRenderUseCacheCount : ""); l._canvasStr = l.canvasReCache + "/" + l.canvasNormal + "/" + l.canvasBitmap; l.currentMemorySize = G.systemResourceManager.memorySize; if (l._useCanvas) { l.renderInfoPre() } else l.renderInfo(); l.clear() } l._count = 0; l._timer = t }; l.renderInfoPre = function () { if (l._canvas) { var t = l._ctx; t.clearRect(l._first ? 0 : l._vx, 0, l._width, l._height); for (var e = 0; e < l._view.length; e++) { var i = l._view[e]; if (l._first) { t.fillStyle = "white"; t.fillText(i.title, i.x, i.y, null, null, null) } t.fillStyle = i.color; var r = l[i.value]; i.units == "M" && (r = Math.floor(r / (1024 * 1024) * 100) / 100 + " M"); t.fillText(r + "", i.x + l._vx, i.y, null, null, null) } } }; l.renderInfo = function () { var t = ""; for (var e = 0; e < l._view.length; e++) { var i = l._view[e]; var r = l[i.value]; i.units == "M" && (r = Math.floor(r / (1024 * 1024) * 100) / 100 + " M"); i.units == "K" && (r = Math.floor(r / 1024 * 100) / 100 + " K"); t += r + "\n" } l._txt.text = t }; l.FPS = 0; l.loopCount = 0; l.shaderCall = 0; l.drawCall = 0; l.trianglesFaces = 0; l.spriteCount = 0; l.spriteRenderUseCacheCount = 0; l.treeNodeCollision = 0; l.treeSpriteCollision = 0; l.canvasNormal = 0; l.canvasBitmap = 0; l.canvasReCache = 0; l.renderSlow = false; l.currentMemorySize = 0; l._fpsStr = null; l._canvasStr = null; l._spriteStr = null; l._fpsData = []; l._timer = 0; l._count = 0; l._view = []; l._fontSize = 12; l._txt = null; l._leftText = null; l._sp = null; l._show = false; l._useCanvas = false; l._canvas = null; l._ctx = null; l._first = false; l._vx = NaN; l._width = 0; l._height = 100; return l }(); var ot = function () { function t() { this._strsToID = {}; this._idToStrs = []; this._length = 0 } v(t, "laya.utils.StringKey"); var e = t.prototype; e.add = function (t) { var e = this._strsToID[t]; if (e != null) return e; this._idToStrs[this._length] = t; return this._strsToID[t] = this._length++ }; e.getID = function (t) { var e = this._strsToID[t]; return e == null ? -1 : e }; e.getName = function (t) { var e = this._idToStrs[t]; return e == null ? undefined : e }; return t }(); var ht = function () { var h; function l() { this._delta = 0; this.scale = 1; this.currFrame = 0; this._mid = 1; this._map = []; this._laters = []; this._handlers = []; this._temp = []; this._count = 0; this.currTimer = this._now(); this._lastTimer = this._now(); this._init() } v(l, "laya.utils.Timer"); var t = l.prototype; t._init = function () { T.timer && T.timer.frameLoop(1, this, this._update) }; t._now = function () { return Date.now() }; t._update = function () { if (this.scale <= 0) { this._lastTimer = this._now(); return } var t = this.currFrame = this.currFrame + this.scale; var e = this._now(); this._delta = (e - this._lastTimer) * this.scale; var i = this.currTimer = this.currTimer + this._delta; this._lastTimer = e; var r = this._handlers; this._count = 0; for (a = 0, o = r.length; a < o; a++) { h = r[a]; if (h.method !== null) { var s = h.userFrame ? t : i; if (s >= h.exeTime) { if (h.repeat) { if (!h.jumpFrame) { h.exeTime += h.delay; h.run(false); if (s > h.exeTime) { h.exeTime += Math.ceil((s - h.exeTime) / h.delay) * h.delay } } else { while (s >= h.exeTime) { h.exeTime += h.delay; h.run(false) } } } else { h.run(true) } } } else { this._count++ } } if (this._count > 30 || t % 200 === 0) this._clearHandlers(); var n = this._laters; for (var a = 0, o = n.length - 1; a <= o; a++) { var h = n[a]; if (h.method !== null) { this._map[h.key] = null; h.run(false) } this._recoverHandler(h); a === o && (o = n.length - 1) } n.length = 0 }; t._clearHandlers = function () { var t = this._handlers; for (var e = 0, i = t.length; e < i; e++) { var r = t[e]; if (r.method !== null) this._temp.push(r); else this._recoverHandler(r) } this._handlers = this._temp; this._temp = t; this._temp.length = 0 }; t._recoverHandler = function (t) { if (this._map[t.key] == t) this._map[t.key] = null; t.clear(); l._pool.push(t) }; t._create = function (t, e, i, r, s, n, a) { if (!i) { s.apply(r, n); return null } if (a) { var o = this._getHandler(r, s); if (o) { o.repeat = e; o.userFrame = t; o.delay = i; o.caller = r; o.method = s; o.args = n; o.exeTime = i + (t ? this.currFrame : this.currTimer + this._now() - this._lastTimer); return o } } o = l._pool.length > 0 ? l._pool.pop() : new h; o.repeat = e; o.userFrame = t; o.delay = i; o.caller = r; o.method = s; o.args = n; o.exeTime = i + (t ? this.currFrame : this.currTimer + this._now() - this._lastTimer) + 1; this._indexHandler(o); this._handlers.push(o); return o }; t._indexHandler = function (t) { var e = t.caller; var i = t.method; var r = e ? e.$_GID || (e.$_GID = ut.getGID()) : 0; var s = i.$_TID || (i.$_TID = this._mid++ * 1e5); t.key = r + s; this._map[t.key] = t }; t.once = function (t, e, i, r, s) { s === void 0 && (s = true); this._create(false, false, t, e, i, r, s) }; t.loop = function (t, e, i, r, s, n) { s === void 0 && (s = true); n === void 0 && (n = false); var a = this._create(false, true, t, e, i, r, s); if (a) a.jumpFrame = n }; t.frameOnce = function (t, e, i, r, s) { s === void 0 && (s = true); this._create(true, false, t, e, i, r, s) }; t.frameLoop = function (t, e, i, r, s) { s === void 0 && (s = true); this._create(true, true, t, e, i, r, s) }; t.toString = function () { return "callLater:" + this._laters.length + " handlers:" + this._handlers.length + " pool:" + l._pool.length }; t.clear = function (t, e) { var i = this._getHandler(t, e); if (i) { this._map[i.key] = null; i.key = 0; i.clear() } }; t.clearAll = function (t) { if (!t) return; for (var e = 0, i = this._handlers.length; e < i; e++) { var r = this._handlers[e]; if (r.caller === t) { this._map[r.key] = null; r.key = 0; r.clear() } } }; t._getHandler = function (t, e) { var i = t ? t.$_GID || (t.$_GID = ut.getGID()) : 0; var r = e.$_TID || (e.$_TID = this._mid++ * 1e5); return this._map[i + r] }; t.callLater = function (t, e, i) { if (this._getHandler(t, e) == null) { if (l._pool.length) var r = l._pool.pop(); else r = new h; r.caller = t; r.method = e; r.args = i; this._indexHandler(r); this._laters.push(r) } }; t.runCallLater = function (t, e) { var i = this._getHandler(t, e); if (i && i.method != null) { this._map[i.key] = null; i.run(true) } }; t.runTimer = function (t, e) { this.runCallLater(t, e) }; u(0, t, "delta", function () { return this._delta }); l._pool = []; l.__init$ = function () { h = function () { function t() { this.key = 0; this.repeat = false; this.delay = 0; this.userFrame = false; this.exeTime = 0; this.caller = null; this.method = null; this.args = null; this.jumpFrame = false } v(t, ""); var e = t.prototype; e.clear = function () { this.caller = null; this.method = null; this.args = null }; e.run = function (t) { var e = this.caller; if (e && e.destroyed) return this.clear(); var i = this.method; var r = this.args; t && this.clear(); if (i == null) return; r ? i.apply(e, r) : i.call(e) }; return t }() }; return l }(); var lt = function () { function c() { this.gid = 0 } v(c, "laya.utils.Tween"); var t = c.prototype; t.to = function (t, e, i, r, s, n, a) { n === void 0 && (n = 0); a === void 0 && (a = false); return this._create(t, e, i, r, s, n, a, true, false, true) }; t.from = function (t, e, i, r, s, n, a) { n === void 0 && (n = 0); a === void 0 && (a = false); return this._create(t, e, i, r, s, n, a, false, false, true) }; t._create = function (t, e, i, r, s, n, a, o, h, l) { if (!t) throw new Error("Tween:target is null"); this._target = t; this._duration = i; this._ease = r || e.ease || c.easeNone; this._complete = s || e.complete; this._delay = n; this._props = []; this._usedTimer = 0; this._startTimer = X.now(); this._usedPool = h; this._delayParam = null; this.update = e.update; var u = t.$_GID || (t.$_GID = ut.getGID()); if (!c.tweenMap[u]) { c.tweenMap[u] = [this] } else { if (a) c.clearTween(t); c.tweenMap[u].push(this) } if (l) { if (n <= 0) this.firstStart(t, e, o); else { this._delayParam = [t, e, o]; T.scaleTimer.once(n, this, this.firstStart, this._delayParam) } } else { this._initProps(t, e, o) } return this }; t.firstStart = function (t, e, i) { this._delayParam = null; if (t.destroyed) { this.clear(); return } this._initProps(t, e, i); this._beginLoop() }; t._initProps = function (t, e, i) { for (var r in e) { if (typeof t[r] == "number") { var s = i ? t[r] : e[r]; var n = i ? e[r] : t[r]; this._props.push([r, s, n - s]); if (!i) t[r] = s } } }; t._beginLoop = function () { T.scaleTimer.frameLoop(1, this, this._doEase) }; t._doEase = function () { this._updateEase(X.now()) }; t._updateEase = function (t) { var e = this._target; if (!e) return; if (e.destroyed) return c.clearTween(e); var i = this._usedTimer = t - this._startTimer - this._delay; if (i < 0) return; if (i >= this._duration) return this.complete(); var r = i > 0 ? this._ease(i, 0, 1, this._duration) : 0; var s = this._props; for (var n = 0, a = s.length; n < a; n++) { var o = s[n]; e[o[0]] = o[1] + r * o[2] } if (this.update) this.update.run() }; t.complete = function () { if (!this._target) return; T.scaleTimer.runTimer(this, this.firstStart); var t = this._target; var e = this._props; var i = this._complete; for (var r = 0, s = e.length; r < s; r++) { var n = e[r]; t[n[0]] = n[1] + n[2] } if (this.update) this.update.run(); this.clear(); i && i.run() }; t.pause = function () { T.scaleTimer.clear(this, this._beginLoop); T.scaleTimer.clear(this, this._doEase); T.scaleTimer.clear(this, this.firstStart); var t = X.now(); var e = NaN; e = t - this._startTimer - this._delay; if (e < 0) { this._usedTimer = e } }; t.setStartTime = function (t) { this._startTimer = t }; t.clear = function () { if (this._target) { this._remove(); this._clear() } }; t._clear = function () { this.pause(); T.scaleTimer.clear(this, this.firstStart); this._complete = null; this._target = null; this._ease = null; this._props = null; this._delayParam = null; if (this._usedPool) { this.update = null; st.recover("tween", this) } }; t.recover = function () { this._usedPool = true; this._clear() }; t._remove = function () { var t = c.tweenMap[this._target.$_GID]; if (t) { for (var e = 0, i = t.length; e < i; e++) { if (t[e] === this) { t.splice(e, 1); break } } } }; t.restart = function () { this.pause(); this._usedTimer = 0; this._startTimer = X.now(); if (this._delayParam) { T.scaleTimer.once(this._delay, this, this.firstStart, this._delayParam); return } var t = this._props; for (var e = 0, i = t.length; e < i; e++) { var r = t[e]; this._target[r[0]] = r[1] } T.scaleTimer.once(this._delay, this, this._beginLoop) }; t.resume = function () { if (this._usedTimer >= this._duration) return; this._startTimer = X.now() - this._usedTimer - this._delay; if (this._delayParam) { if (this._usedTimer < 0) { T.scaleTimer.once(-this._usedTimer, this, this.firstStart, this._delayParam) } else { this.firstStart.apply(this, this._delayParam) } } else { this._beginLoop() } }; u(0, t, "progress", null, function (t) { var e = t * this._duration; this._startTimer = X.now() - this._delay - e }); c.to = function (t, e, i, r, s, n, a, o) { n === void 0 && (n = 0); a === void 0 && (a = false); o === void 0 && (o = true); return st.getItemByClass("tween", c)._create(t, e, i, r, s, n, a, true, o, true) }; c.from = function (t, e, i, r, s, n, a, o) { n === void 0 && (n = 0); a === void 0 && (a = false); o === void 0 && (o = true); return st.getItemByClass("tween", c)._create(t, e, i, r, s, n, a, false, o, true) }; c.clearAll = function (t) { if (!t || !t.$_GID) return; var e = c.tweenMap[t.$_GID]; if (e) { for (var i = 0, r = e.length; i < r; i++) { e[i]._clear() } e.length = 0 } }; c.clear = function (t) { t.clear() }; c.clearTween = function (t) { c.clearAll(t) }; c.easeNone = function (t, e, i, r) { return i * t / r + e }; c.tweenMap = {}; return c }(); var ut = function () { function o() { } v(o, "laya.utils.Utils"); o.toRadian = function (t) { return t * o._pi2 }; o.toAngle = function (t) { return t * o._pi }; o.toHexColor = function (t) { if (t < 0 || isNaN(t)) return null; var e = t.toString(16); while (e.length < 6) e = "0" + e; return "#" + e }; o.getGID = function () { return o._gid++ }; o.concatArray = function (t, e) { if (!e) return t; if (!t) return e; var i = 0, r = e.length; for (i = 0; i < r; i++) { t.push(e[i]) } return t }; o.clearArray = function (t) { if (!t) return t; t.length = 0; return t }; o.copyArray = function (t, e) { t || (t = []); if (!e) return t; t.length = e.length; var i = 0, r = e.length; for (i = 0; i < r; i++) { t[i] = e[i] } return t }; o.getGlobalRecByPoints = function (t, e, i, r, s) { var n; n = new k(e, i); n = t.localToGlobal(n); var a; a = new k(r, s); a = t.localToGlobal(a); return D._getWrapRec([n.x, n.y, a.x, a.y]) }; o.getGlobalPosAndScale = function (t) { return o.getGlobalRecByPoints(t, 0, 0, 1, 1) }; o.bind = function (t, e) { var i = t; i = t.bind(e); return i }; o.measureText = function (t, e) { return E.measureText(t, e) }; o.updateOrder = function (t) { if (!t || t.length < 2) return false; var e = 1, i = 0, r = t.length, s = NaN, n; while (e < r) { i = e; n = t[i]; s = t[i]._zOrder; while (--i > -1) { if (t[i]._zOrder > s) t[i + 1] = t[i]; else break } t[i + 1] = n; e++ } var a = n.parent.conchModel; if (a) { if (a.updateZOrder != null) { a.updateZOrder() } else { for (e = 0; e < r; e++) { a.removeChild(t[e].conchModel) } for (e = 0; e < r; e++) { a.addChildAt(t[e].conchModel, e) } } } return true }; o.transPointList = function (t, e, i) { var r = 0, s = t.length; for (r = 0; r < s; r += 2) { t[r] += e; t[r + 1] += i } }; o.parseInt = function (t, e) { e === void 0 && (e = 0); var i = X.window.parseInt(t, e); if (isNaN(i)) return 0; return i }; o.getFileExtension = function (t) { o._extReg.lastIndex = t.lastIndexOf("."); var e = o._extReg.exec(t); if (e && e.length > 1) { return e[1].toLowerCase() } return null }; o.getTransformRelativeToWindow = function (t, e, i) { var r = T.stage; var s = laya.utils.Utils.getGlobalPosAndScale(t); var n = r._canvasTransform.clone(); var a = n.tx; var o = n.ty; n.rotate(-Math.PI / 180 * T.stage.canvasDegree); n.scale(T.stage.clientScaleX, T.stage.clientScaleY); var h = T.stage.canvasDegree % 180 != 0; var l = NaN, u = NaN; if (h) { l = i + s.y; u = e + s.x; l *= n.d; u *= n.a; if (T.stage.canvasDegree == 90) { l = a - l; u += o } else { l += a; u = o - u } } else { l = e + s.x; u = i + s.y; l *= n.a; u *= n.d; l += a; u += o } var c = NaN, f = NaN; if (h) { c = n.d * s.height; f = n.a * s.width } else { c = n.a * s.width; f = n.d * s.height } return { x: l, y: u, scaleX: c, scaleY: f } }; o.fitDOMElementInArea = function (t, e, i, r, s, n) { if (!t._fitLayaAirInitialized) { t._fitLayaAirInitialized = true; t.style.transformOrigin = t.style.webKittransformOrigin = "left top"; t.style.position = "absolute" } var a = o.getTransformRelativeToWindow(e, i, r); t.style.transform = t.style.webkitTransform = "scale(" + a.scaleX + "," + a.scaleY + ") rotate(" + T.stage.canvasDegree + "deg)"; t.style.width = s + "px"; t.style.height = n + "px"; t.style.left = a.x + "px"; t.style.top = a.y + "px" }; o.isOkTextureList = function (t) { if (!t) return false; var e = 0, i = t.length; var r; for (e = 0; e < i; e++) { r = t[e]; if (!r || !r.source) return false } return true }; o.isOKCmdList = function (t) { if (!t) return false; var e = 0, i = t.length; var r = U._context; var s; var n; for (e = 0; e < i; e++) { s = t[e]; switch (s.callee) { case r._drawTexture: case r._fillTexture: case r._drawTextureWithTransform: n = s[0]; if (!n || !n.source) return false } } return true }; o._gid = 1; o._pi = 180 / Math.PI; o._pi2 = Math.PI / 180; o._extReg = /\.(\w+)\??/g; o.parseXMLFromString = function (t) { var e; t = t.replace(/>\s+</g, "><"); e = (new DOMParser).parseFromString(t, "text/xml"); if (e.firstChild.textContent.indexOf("This page contains the following errors") > -1) { throw new Error(e.firstChild.firstChild.textContent) } return e }; return o }(); var ct = function () { function t() { this.useDic = {}; this.shapeDic = {}; this.shapeLineDic = {}; this._id = 0; this._checkKey = false; this._freeIdArray = []; if (U.isWebGL) { K.regCacheByFunction(ut.bind(this.startDispose, this), ut.bind(this.getCacheList, this)) } } v(t, "laya.utils.VectorGraphManager"); var e = t.prototype; e.getId = function () { return this._id++ }; e.addShape = function (t, e) { this.shapeDic[t] = e; if (!this.useDic[t]) { this.useDic[t] = true } }; e.addLine = function (t, e) { this.shapeLineDic[t] = e; if (!this.shapeLineDic[t]) { this.shapeLineDic[t] = true } }; e.getShape = function (t) { if (this._checkKey) { if (this.useDic[t] != null) { this.useDic[t] = true } } }; e.deleteShape = function (t) { if (this.shapeDic[t]) { this.shapeDic[t] = null; delete this.shapeDic[t] } if (this.shapeLineDic[t]) { this.shapeLineDic[t] = null; delete this.shapeLineDic[t] } if (this.useDic[t] != null) { delete this.useDic[t] } }; e.getCacheList = function () { var t; var e = []; for (t in this.shapeDic) { e.push(this.shapeDic[t]) } for (t in this.shapeLineDic) { e.push(this.shapeLineDic[t]) } return e }; e.startDispose = function (t) { var e; for (e in this.useDic) { this.useDic[e] = false } this._checkKey = true }; e.endDispose = function () { if (this._checkKey) { var t; for (t in this.useDic) { if (!this.useDic[t]) { this.deleteShape(t) } } this._checkKey = false } }; t.getInstance = function () { return t.instance = t.instance || new t }; t.instance = null; return t }(); var ft = function () { function r() { this._obj = null; this._obj = r.supportWeakMap ? new X.window.WeakMap : {}; if (!r.supportWeakMap) r._maps.push(this) } v(r, "laya.utils.WeakObject"); var t = r.prototype; t.set = function (t, e) { if (t == null) return; if (r.supportWeakMap) { var i = t; if (typeof t == "string" || typeof t == "number") { i = r._keys[t]; if (!i) i = r._keys[t] = { k: t } } this._obj.set(i, e) } else { if (typeof t == "string" || typeof t == "number") { this._obj[t] = e } else { t.$_GID || (t.$_GID = ut.getGID()); this._obj[t.$_GID] = e } } }; t.get = function (t) { if (t == null) return null; if (r.supportWeakMap) { var e = typeof t == "string" || typeof t == "number" ? r._keys[t] : t; if (!e) return null; return this._obj.get(e) } else { if (typeof t == "string" || typeof t == "number") return this._obj[t]; return this._obj[t.$_GID] } }; t.del = function (t) { if (t == null) return; if (r.supportWeakMap) { var e = typeof t == "string" || typeof t == "number" ? r._keys[t] : t; if (!e) return; this._obj.delete(e) } else { if (typeof t == "string" || typeof t == "number") delete this._obj[t]; else delete this._obj[this._obj.$_GID] } }; t.has = function (t) { if (t == null) return false; if (r.supportWeakMap) { var e = typeof t == "string" || typeof t == "number" ? r._keys[t] : t; return this._obj.has(e) } else { if (typeof t == "string" || typeof t == "number") return this._obj[t] != null; return this._obj[this._obj.$_GID] != null } }; r.__init__ = function () { r.supportWeakMap = X.window.WeakMap != null; if (!r.supportWeakMap) T.timer.loop(r.delInterval, null, r.clearCache) }; r.clearCache = function () { for (var t = 0, e = r._maps.length; t < e; t++) { var i = r._maps[t]; i._obj = {} } }; r.supportWeakMap = false; r.delInterval = 5 * 60 * 1e3; r._keys = {}; r._maps = []; h(r, ["I", function () { return this.I = new r }]); return r }(); var _t = function () { function t() { this.id = NaN; this.save = []; this.toUpperCase = null; this.changed = false; this._text = null } v(t, "laya.utils.WordText"); var e = t.prototype; e.setText = function (t) { this.changed = true; this._text = t }; e.toString = function () { return this._text }; e.charCodeAt = function (t) { return this._text ? this._text.charCodeAt(t) : NaN }; e.charAt = function (t) { return this._text ? this._text.charAt(t) : null }; u(0, e, "length", function () { return this._text ? this._text.length : 0 }); return t }(); var dt = function (t) { function a() { this._bits = 0; this._displayedInStage = false; this._parent = null; this.conchModel = null; this.name = ""; this._destroyed = false; a.__super.call(this); this._childs = a.ARRAY_EMPTY; this._$P = a.PROP_EMPTY; this.timer = T.scaleTimer; this.conchModel = U.isConchNode ? this.createConchModel() : null } v(a, "laya.display.Node", t); var e = a.prototype; e._setBit = function (t, e) { if (t == 1) { var i = this._getBit(t); if (i != e) { this._updateDisplayedInstage() } } if (e) { this._bits |= t } else { this._bits &= ~t } }; e._getBit = function (t) { return (this._bits & t) != 0 }; e._setUpNoticeChain = function () { if (this._getBit(1)) { this._setUpNoticeType(1) } }; e._setUpNoticeType = function (t) { var e = this; e._setBit(t, true); e = e.parent; while (e) { if (e._getBit(t)) return; e._setBit(t, true); e = e.parent } }; e.on = function (t, e, i, r) { if (t === "display" || t === "undisplay") { if (!this._getBit(1)) { this._setUpNoticeType(1) } } return this._createListener(t, e, i, r, false) }; e.once = function (t, e, i, r) { if (t === "display" || t === "undisplay") { if (!this._getBit(1)) { this._setUpNoticeType(1) } } return this._createListener(t, e, i, r, true) }; e.createConchModel = function () { return null }; e.destroy = function (t) { t === void 0 && (t = true); this._destroyed = true; this._parent && this._parent.removeChild(this); if (this._childs) { if (t) this.destroyChildren(); else this.removeChildren() } this._childs = null; this._$P = null; this.offAll(); this.timer.clearAll(this) }; e.destroyChildren = function () { if (this._childs) { for (var t = this._childs.length - 1; t > -1; t--) { this._childs[t].destroy(true) } } }; e.addChild = function (t) { if (!t || this.destroyed || t === this) return t; if (t.zOrder) this._set$P("hasZorder", true); if (t._parent === this) { var e = this.getChildIndex(t); if (e !== this._childs.length - 1) { this._childs.splice(e, 1); this._childs.push(t); if (this.conchModel) { this.conchModel.removeChild(t.conchModel); this.conchModel.addChildAt(t.conchModel, this._childs.length - 1) } this._childChanged() } } else { t.parent && t.parent.removeChild(t); this._childs === a.ARRAY_EMPTY && (this._childs = []); this._childs.push(t); this.conchModel && this.conchModel.addChildAt(t.conchModel, this._childs.length - 1); t.parent = this; this._childChanged() } return t }; e.addChildren = function (t) { var e = arguments; var i = 0, r = e.length; while (i < r) { this.addChild(e[i++]) } }; e.addChildAt = function (t, e) { if (!t || this.destroyed || t === this) return t; if (t.zOrder) this._set$P("hasZorder", true); if (e >= 0 && e <= this._childs.length) { if (t._parent === this) { var i = this.getChildIndex(t); this._childs.splice(i, 1); this._childs.splice(e, 0, t); if (this.conchModel) { this.conchModel.removeChild(t.conchModel); this.conchModel.addChildAt(t.conchModel, e) } this._childChanged() } else { t.parent && t.parent.removeChild(t); this._childs === a.ARRAY_EMPTY && (this._childs = []); this._childs.splice(e, 0, t); this.conchModel && this.conchModel.addChildAt(t.conchModel, e); t.parent = this } return t } else { throw new Error("appendChildAt:The index is out of bounds") } }; e.getChildIndex = function (t) { return this._childs.indexOf(t) }; e.getChildByName = function (t) { var e = this._childs; if (e) { for (var i = 0, r = e.length; i < r; i++) { var s = e[i]; if (s.name === t) return s } } return null }; e._get$P = function (t) { return this._$P[t] }; e._set$P = function (t, e) { if (!this.destroyed) { this._$P === a.PROP_EMPTY && (this._$P = {}); this._$P[t] = e } return e }; e.getChildAt = function (t) { return this._childs[t] }; e.setChildIndex = function (t, e) { var i = this._childs; if (e < 0 || e >= i.length) { throw new Error("setChildIndex:The index is out of bounds.") } var r = this.getChildIndex(t); if (r < 0) throw new Error("setChildIndex:node is must child of this object."); i.splice(r, 1); i.splice(e, 0, t); if (this.conchModel) { this.conchModel.removeChild(t.conchModel); this.conchModel.addChildAt(t.conchModel, e) } this._childChanged(); return t }; e._childChanged = function (t) { }; e.removeChild = function (t) { if (!this._childs) return t; var e = this._childs.indexOf(t); return this.removeChildAt(e) }; e.removeSelf = function () { this._parent && this._parent.removeChild(this); return this }; e.removeChildByName = function (t) { var e = this.getChildByName(t); e && this.removeChild(e); return e }; e.removeChildAt = function (t) { var e = this.getChildAt(t); if (e) { this._childs.splice(t, 1); this.conchModel && this.conchModel.removeChild(e.conchModel); e.parent = null } return e }; e.removeChildren = function (t, e) { t === void 0 && (t = 0); e === void 0 && (e = 2147483647); if (this._childs && this._childs.length > 0) { var i = this._childs; if (t === 0 && e >= n) { var r = i; this._childs = a.ARRAY_EMPTY } else { r = i.splice(t, e - t) } for (var s = 0, n = r.length; s < n; s++) { r[s].parent = null; this.conchModel && this.conchModel.removeChild(r[s].conchModel) } } return this }; e.replaceChild = function (t, e) { var i = this._childs.indexOf(e); if (i > -1) { this._childs.splice(i, 1, t); if (this.conchModel) { this.conchModel.removeChild(e.conchModel); this.conchModel.addChildAt(t.conchModel, i) } e.parent = null; t.parent = this; return t } return null }; e._updateDisplayedInstage = function () { var t; t = this; var e = T.stage; this._displayedInStage = false; while (t) { if (t._getBit(1)) { this._displayedInStage = t._displayedInStage; break } if (t == e || t._displayedInStage) { this._displayedInStage = true; break } t = t.parent } }; e._setDisplay = function (t) { if (this._displayedInStage !== t) { this._displayedInStage = t; if (t) this.event("display"); else this.event("undisplay") } }; e._displayChild = function (t, e) { var i = t._childs; if (i) { for (var r = 0, s = i.length; r < s; r++) { var n = i[r]; if (!n._getBit(1)) continue; if (n._childs.length > 0) { this._displayChild(n, e) } else { n._setDisplay(e) } } } t._setDisplay(e) }; e.contains = function (t) { if (t === this) return true; while (t) { if (t.parent === this) return true; t = t.parent } return false }; e.timerLoop = function (t, e, i, r, s, n) { s === void 0 && (s = true); n === void 0 && (n = false); this.timer.loop(t, e, i, r, s, n) }; e.timerOnce = function (t, e, i, r, s) { s === void 0 && (s = true); this.timer._create(false, false, t, e, i, r, s) }; e.frameLoop = function (t, e, i, r, s) { s === void 0 && (s = true); this.timer._create(true, true, t, e, i, r, s) }; e.frameOnce = function (t, e, i, r, s) { s === void 0 && (s = true); this.timer._create(true, false, t, e, i, r, s) }; e.clearTimer = function (t, e) { this.timer.clear(t, e) }; u(0, e, "numChildren", function () { return this._childs.length }); u(0, e, "destroyed", function () { return this._destroyed }); u(0, e, "parent", function () { return this._parent }, function (t) { if (this._parent !== t) { if (t) { this._parent = t; this.event("added"); if (this._getBit(1)) { this._setUpNoticeChain(); t.displayedInStage && this._displayChild(this, true) } t._childChanged(this) } else { this.event("removed"); this._parent._childChanged(); if (this._getBit(1)) this._displayChild(this, false); this._parent = t } } }); u(0, e, "displayedInStage", function () { if (this._getBit(1)) return this._displayedInStage; this._setUpNoticeType(1); return this._displayedInStage }); a.ARRAY_EMPTY = []; a.PROP_EMPTY = {}; a.NOTICE_DISPLAY = 1; a.MOUSEENABLE = 2; return a }(n); var pt = function (t) { function f(t) { this._bgground = null; this._border = null; this._rect = null; this.underLine = 0; this.lineHeight = 0; f.__super.call(this); this._padding = f._PADDING; this._spacing = f._SPACING; this._aligns = f._ALIGNS; this._font = l.EMPTY; this._ower = t } v(f, "laya.display.css.CSSStyle", t); var e = f.prototype; e.destroy = function () { this._ower = null; this._font = null; this._rect = null }; e.inherit = function (t) { this._font = t._font; this._spacing = t._spacing === f._SPACING ? f._SPACING : t._spacing.slice(); this.lineHeight = t.lineHeight }; e._widthAuto = function () { return (this._type & 262144) !== 0 }; e.widthed = function (t) { return (this._type & 8) != 0 }; e._calculation = function (t, e) { if (e.indexOf("%") < 0) return false; var r = this._ower; var s = r.parent; var n = this._rect; function a(t, e, i) { return t * i[0] + e * i[1] + i[2] } function i(t) { var e = s.width, i = r.width; n.width && (r.width = a(e, i, n.width)); n.height && (r.height = a(e, i, n.height)); n.left && (r.x = a(e, i, n.left)); n.top && (r.y = a(e, i, n.top)) } if (n === null) { s._getCSSStyle()._type |= 524288; s.on("resize", this, i); this._rect = n = { input: {} } } var o = e.split(" "); o[0] = parseFloat(o[0]) / 100; if (o.length == 1) o[1] = o[2] = 0; else { o[1] = parseFloat(o[1]) / 100; o[2] = parseFloat(o[2]) } n[t] = o; n.input[t] = e; i(t); return true }; e.heighted = function (t) { return (this._type & 8192) != 0 }; e.size = function (t, e) { var i = this._ower; var r = false; if (t !== -1 && t != this._ower.width) { this._type |= 8; this._ower.width = t; r = true } if (e !== -1 && e != this._ower.height) { this._type |= 8192; this._ower.height = e; r = true } if (r) { i._layoutLater(); this._type & 524288 && i.event("resize", this) } }; e._getAlign = function () { return this._aligns[0] }; e._getValign = function () { return this._aligns[1] }; e._getCssFloat = function () { return (this._type & 32768) != 0 ? 32768 : 0 }; e._createFont = function () { return this._type & 4096 ? this._font : (this._type |= 4096, this._font = new l(this._font)) }; e.render = function (t, e, i, r) { var s = t.width; var n = t.height; i -= t.pivotX; r -= t.pivotY; this._bgground && this._bgground.color != null && e.ctx.fillRect(i, r, s, n, this._bgground.color); this._border && this._border.color && e.drawRect(i, r, s, n, this._border.color.strColor, this._border.size) }; e.getCSSStyle = function () { return this }; e.cssText = function (t) { this.attrs(f.parseOneCSS(t, ";")) }; e.attrs = function (t) { if (t) { for (var e = 0, i = t.length; e < i; e++) { var r = t[e]; this[r[0]] = r[1] } } }; e.setTransform = function (t) { t === "none" ? this._tf = o._TF_EMPTY : this.attrs(f.parseOneCSS(t, ",")) }; e.translate = function (t, e) { this._tf === o._TF_EMPTY && (this._tf = new c); this._tf.translateX = t; this._tf.translateY = e }; e.scale = function (t, e) { this._tf === o._TF_EMPTY && (this._tf = new c); this._tf.scaleX = t; this._tf.scaleY = e }; e._enableLayout = function () { return (this._type & 2) === 0 && (this._type & 4) === 0 }; u(0, e, "block", t.prototype._$get_block, function (t) { t ? this._type |= 1 : this._type &= ~1 }); u(0, e, "valign", function () { return f._valigndef[this._aligns[1]] }, function (t) { this._aligns === f._ALIGNS && (this._aligns = [0, 0, 0]); this._aligns[1] = f._valigndef[t] }); u(0, e, "height", null, function (t) { this._type |= 8192; if (typeof t == "string") { if (this._calculation("height", t)) return; t = parseInt(t) } this.size(-1, t) }); u(0, e, "width", null, function (t) { this._type |= 8; if (typeof t == "string") { var e = t.indexOf("auto"); if (e >= 0) { this._type |= 262144; t = t.substr(0, e) } if (this._calculation("width", t)) return; t = parseInt(t) } this.size(t, -1) }); u(0, e, "fontWeight", function () { return this._font.weight }, function (t) { this._createFont().weight = t }); u(0, e, "left", null, function (t) { var e = this._ower; if (typeof t == "string") { if (t === "center") t = "50% -50% 0"; else if (t === "right") t = "100% -100% 0"; if (this._calculation("left", t)) return; t = parseInt(t) } e.x = t }); u(0, e, "_translate", null, function (t) { this.translate(t[0], t[1]) }); u(0, e, "absolute", function () { return (this._type & 4) !== 0 }); u(0, e, "top", null, function (t) { var e = this._ower; if (typeof t == "string") { if (t === "middle") t = "50% -50% 0"; else if (t === "bottom") t = "100% -100% 0"; if (this._calculation("top", t)) return; t = parseInt(t) } e.y = t }); u(0, e, "align", function () { return f._aligndef[this._aligns[0]] }, function (t) { this._aligns === f._ALIGNS && (this._aligns = [0, 0, 0]); this._aligns[0] = f._aligndef[t] }); u(0, e, "bold", function () { return this._font.bold }, function (t) { this._createFont().bold = t }); u(0, e, "padding", function () { return this._padding }, function (t) { this._padding = t }); u(0, e, "leading", function () { return this._spacing[1] }, function (t) { typeof t == "string" && (t = parseInt(t + "")); this._spacing === f._SPACING && (this._spacing = [0, 0]); this._spacing[1] = t }); u(0, e, "lineElement", function () { return (this._type & 65536) != 0 }, function (t) { t ? this._type |= 65536 : this._type &= ~65536 }); u(0, e, "cssFloat", function () { return (this._type & 32768) != 0 ? "right" : "left" }, function (t) { this.lineElement = false; t === "right" ? this._type |= 32768 : this._type &= ~32768 }); u(0, e, "textDecoration", function () { return this._font.decoration }, function (t) { this._createFont().decoration = t }); u(0, e, "whiteSpace", function () { return this._type & 131072 ? "nowrap" : "" }, function (t) { t === "nowrap" && (this._type |= 131072); t === "none" && (this._type &= ~131072) }); u(0, e, "background", null, function (t) { if (!t) { this._bgground = null; return } this._bgground || (this._bgground = {}); this._bgground.color = t; this._ower.conchModel && this._ower.conchModel.bgColor(t); this._type |= 16384; this._ower._renderType |= 256 }); u(0, e, "wordWrap", function () { return (this._type & 131072) === 0 }, function (t) { t ? this._type &= ~131072 : this._type |= 131072 }); u(0, e, "color", function () { return this._font.color }, function (t) { this._createFont().color = t }); u(0, e, "password", function () { return this._font.password }, function (t) { this._createFont().password = t }); u(0, e, "backgroundColor", function () { return this._bgground ? this._bgground.color : null }, function (t) { if (t === "none") this._bgground = null; else this._bgground || (this._bgground = {}), this._bgground.color = t; this._ower.conchModel && this._ower.conchModel.bgColor(t); this._ower._renderType |= 256 }); u(0, e, "font", function () { return this._font.toString() }, function (t) { this._createFont().set(t) }); u(0, e, "weight", null, function (t) { this._createFont().weight = t }); u(0, e, "letterSpacing", function () { return this._spacing[0] }, function (t) { typeof t == "string" && (t = parseInt(t + "")); this._spacing === f._SPACING && (this._spacing = [0, 0]); this._spacing[0] = t }); u(0, e, "fontSize", function () { return this._font.size }, function (t) { this._createFont().size = t }); u(0, e, "italic", function () { return this._font.italic }, function (t) { this._createFont().italic = t }); u(0, e, "fontFamily", function () { return this._font.family }, function (t) { this._createFont().family = t }); u(0, e, "stroke", function () { return this._font.stroke[0] }, function (t) { if (this._createFont().stroke === l._STROKE) this._font.stroke = [0, "#000000"]; this._font.stroke[0] = t }); u(0, e, "strokeColor", function () { return this._font.stroke[1] }, function (t) { if (this._createFont().stroke === l._STROKE) this._font.stroke = [0, "#000000"]; this._font.stroke[1] = t }); u(0, e, "border", function () { return this._border ? this._border.value : "" }, function (t) { if (t == "none") { this._border = null; return } this._border || (this._border = {}); this._border.value = t; var e = t.split(" "); this._border.color = q.create(e[e.length - 1]); if (e.length == 1) { this._border.size = 1; this._border.type = "solid"; return } var i = 0; if (e[0].indexOf("px") > 0) { this._border.size = parseInt(e[0]); i++ } else this._border.size = 1; this._border.type = e[i]; this._ower._renderType |= 256 }); u(0, e, "borderColor", function () { return this._border && this._border.color ? this._border.color.strColor : null }, function (t) { if (!t) { this._border = null; return } this._border || (this._border = { size: 1, type: "solid" }); this._border.color = t == null ? null : q.create(t); this._ower.conchModel && this._ower.conchModel.border(this._border.color.strColor); this._ower._renderType |= 256 }); u(0, e, "position", function () { return this._type & 4 ? "absolute" : "" }, function (t) { t == "absolute" ? this._type |= 4 : this._type &= ~4 }); u(0, e, "display", null, function (t) { switch (t) { case "": this._type &= ~2; this.visible = true; break; case "none": this._type |= 2; this.visible = false; this._ower._layoutLater(); break } }); u(0, e, "paddingLeft", function () { return this.padding[3] }); u(0, e, "paddingTop", function () { return this.padding[0] }); u(0, e, "_scale", null, function (t) { this._ower.scale(t[0], t[1]) }); u(0, e, "_rotate", null, function (t) { this._ower.rotation = t }); f.parseOneCSS = function (t, e) { var i = []; var r = t.split(e); var s; for (var n = 0, a = r.length; n < a; n++) { var o = r[n]; var h = o.indexOf(":"); var l = o.substr(0, h).replace(/^\s+|\s+$/g, ""); if (l.length == 0) continue; var u = o.substr(h + 1).replace(/^\s+|\s+$/g, ""); var c = [l, u]; switch (l) { case "italic": case "bold": c[1] = u == "true"; break; case "line-height": c[0] = "lineHeight"; c[1] = parseInt(u); break; case "font-size": c[0] = "fontSize"; c[1] = parseInt(u); break; case "padding": s = u.split(" "); s.length > 1 || (s[1] = s[2] = s[3] = s[0]); c[1] = [parseInt(s[0]), parseInt(s[1]), parseInt(s[2]), parseInt(s[3])]; break; case "rotate": c[0] = "_rotate"; c[1] = parseFloat(u); break; case "scale": s = u.split(" "); c[0] = "_scale"; c[1] = [parseFloat(s[0]), parseFloat(s[1])]; break; case "translate": s = u.split(" "); c[0] = "_translate"; c[1] = [parseInt(s[0]), parseInt(s[1])]; break; default: (c[0] = f._CSSTOVALUE[l]) || (c[0] = l) }i.push(c) } return i }; f.parseCSS = function (t, e) { var i; while ((i = f._parseCSSRegExp.exec(t)) != null) { f.styleSheets[i[1]] = f.parseOneCSS(i[2], ";") } }; f.EMPTY = new f(null); f._CSSTOVALUE = { "letter-spacing": "letterSpacing", "line-spacing": "lineSpacing", "white-space": "whiteSpace", "line-height": "lineHeight", "scale-x": "scaleX", "scale-y": "scaleY", "translate-x": "translateX", "translate-y": "translateY", "font-family": "fontFamily", "font-weight": "fontWeight", "vertical-align": "valign", "text-decoration": "textDecoration", "background-color": "backgroundColor", "border-color": "borderColor", float: "cssFloat" }; f._parseCSSRegExp = new RegExp("([.#]\\w+)\\s*{([\\s\\S]*?)}", "g"); f._aligndef = { left: 0, center: 1, right: 2, 0: "left", 1: "center", 2: "right" }; f._valigndef = { top: 0, middle: 1, bottom: 2, 0: "top", 1: "middle", 2: "bottom" }; f.styleSheets = {}; f.ALIGN_CENTER = 1; f.ALIGN_RIGHT = 2; f.VALIGN_MIDDLE = 1; f.VALIGN_BOTTOM = 2; f._CSS_BLOCK = 1; f._DISPLAY_NONE = 2; f._ABSOLUTE = 4; f._WIDTH_SET = 8; f._PADDING = [0, 0, 0, 0]; f._RECT = [-1, -1, -1, -1]; f._SPACING = [0, 0]; f._ALIGNS = [0, 0, 0]; f.ADDLAYOUTED = 512; f._NEWFONT = 4096; f._HEIGHT_SET = 8192; f._BACKGROUND_SET = 16384; f._FLOAT_RIGHT = 32768; f._LINE_ELEMENT = 65536; f._NOWARP = 131072; f._WIDTHAUTO = 262144; f._LISTERRESZIE = 524288; return f }(o); var vt = function (t) { function a() { this.url = null; this.audio = null; this.loaded = false; a.__super.call(this) } v(a, "laya.media.h5audio.AudioSound", t); var e = a.prototype; e.dispose = function () { var t = a._audioCache[this.url]; st.clearBySign("audio:" + this.url); if (t) { if (!U.isConchApp) { t.src = "" } delete a._audioCache[this.url] } }; e.load = function (t) { t = z.formatURL(t); this.url = t; var e; if (t == B._tMusic) { a._initMusicAudio(); e = a._musicAudio; if (e.src != t) { a._audioCache[e.src] = null; e = null } } else { e = a._audioCache[t] } if (e && e.readyState >= 2) { this.event("complete"); return } if (!e) { if (t == B._tMusic) { a._initMusicAudio(); e = a._musicAudio } else { e = X.createElement("audio") } a._audioCache[t] = e; e.src = t } e.addEventListener("canplaythrough", r); e.addEventListener("error", s); var i = this; function r() { n(); i.loaded = true; i.event("complete") } function s() { e.load = null; n(); i.event("error") } function n() { e.removeEventListener("canplaythrough", r); e.removeEventListener("error", s) } this.audio = e; if (e.load) { e.load() } else { s() } }; e.play = function (t, e) { t === void 0 && (t = 0); e === void 0 && (e = 0); if (!this.url) return null; var i; if (this.url == B._tMusic) { i = a._musicAudio } else { i = a._audioCache[this.url] } if (!i) return null; var r; r = st.getItem("audio:" + this.url); if (U.isConchApp) { if (!r) { r = X.createElement("audio"); r.src = this.url } } else { if (this.url == B._tMusic) { a._initMusicAudio(); r = a._musicAudio; r.src = this.url } else { r = r ? r : i.cloneNode(true) } } var s = new Rt(r); s.url = this.url; s.loops = e; s.startTime = t; s.play(); B.addChannel(s); return s }; u(0, e, "duration", function () { var t; t = a._audioCache[this.url]; if (!t) return 0; return t.duration }); a._initMusicAudio = function () { if (a._musicAudio) return; if (!a._musicAudio) a._musicAudio = X.createElement("audio"); if (!U.isConchApp) { X.document.addEventListener("mousedown", a._makeMusicOK) } }; a._makeMusicOK = function () { X.document.removeEventListener("mousedown", a._makeMusicOK); if (!a._musicAudio.src) { a._musicAudio.src = ""; a._musicAudio.load() } else { a._musicAudio.play() } }; a._audioCache = {}; a._musicAudio = null; return a }(n); var mt = function (t) { function e() { this.url = null; this.loops = 0; this.startTime = NaN; this.isStopped = false; this.completeHandler = null; e.__super.call(this) } v(e, "laya.media.SoundChannel", t); var i = e.prototype; i.play = function () { }; i.stop = function () { if (this.completeHandler) this.completeHandler.run() }; i.pause = function () { }; i.resume = function () { }; i.__runComplete = function (t) { if (t) { t.run() } }; u(0, i, "volume", function () { return 1 }, function (t) { }); u(0, i, "position", function () { return 0 }); u(0, i, "duration", function () { return 0 }); return e }(n); var gt = function (t) { function e() { e.__super.call(this) } v(e, "laya.media.Sound", t); var i = e.prototype; i.load = function (t) { }; i.play = function (t, e) { t === void 0 && (t = 0); e === void 0 && (e = 0); return null }; i.dispose = function () { }; u(0, i, "duration", function () { return 0 }); return e }(n); var yt = function (t) { function s() { this.url = null; this.loaded = false; this.data = null; this.audioBuffer = null; this.__toPlays = null; this._disposed = false; s.__super.call(this) } v(s, "laya.media.webaudio.WebAudioSound", t); var e = s.prototype; e.load = function (t) { var e = this; t = z.formatURL(t); this.url = t; this.audioBuffer = s._dataCache[t]; if (this.audioBuffer) { this._loaded(this.audioBuffer); return } s.e.on("loaded:" + t, this, this._loaded); s.e.on("err:" + t, this, this._err); if (s.__loadingSound[t]) { return } s.__loadingSound[t] = true; var i = new X.window.XMLHttpRequest; i.open("GET", t, true); i.responseType = "arraybuffer"; i.onload = function () { if (e._disposed) { e._removeLoadEvents(); return } e.data = i.response; s.buffs.push({ buffer: e.data, url: e.url }); s.decode() }; i.onerror = function (t) { e._err() }; i.send() }; e._err = function () { this._removeLoadEvents(); s.__loadingSound[this.url] = false; this.event("error"); if (!this.__toPlays) return; var t = 0, e = 0; var i; i = this.__toPlays; e = i.length; var r; for (t = 0; t < e; t++) { r = i[t]; if (r[2] && !r[2].isStopped) { r[2].event("error") } } this.__toPlays.length = 0 }; e._loaded = function (t) { this._removeLoadEvents(); if (this._disposed) { return } this.audioBuffer = t; s._dataCache[this.url] = this.audioBuffer; this.loaded = true; this.event("complete") }; e._removeLoadEvents = function () { s.e.off("loaded:" + this.url, this, this._loaded); s.e.off("err:" + this.url, this, this._err) }; e.__playAfterLoaded = function () { if (!this.__toPlays) return; var t = 0, e = 0; var i; i = this.__toPlays; e = i.length; var r; for (t = 0; t < e; t++) { r = i[t]; if (r[2] && !r[2].isStopped) { this.play(r[0], r[1], r[2]) } } this.__toPlays.length = 0 }; e.play = function (t, e, i) { t === void 0 && (t = 0); e === void 0 && (e = 0); i = i ? i : new Pt; if (!this.audioBuffer) { if (this.url) { if (!this.__toPlays) this.__toPlays = []; this.__toPlays.push([t, e, i]); this.once("complete", this, this.__playAfterLoaded); this.load(this.url) } } i.url = this.url; i.loops = e; i["audioBuffer"] = this.audioBuffer; i.startTime = t; i.play(); B.addChannel(i); return i }; e.dispose = function () { this._disposed = true; delete s._dataCache[this.url]; delete s.__loadingSound[this.url]; this.audioBuffer = null; this.data = null; this.__toPlays = [] }; u(0, e, "duration", function () { if (this.audioBuffer) { return this.audioBuffer.duration } return 0 }); s.decode = function () { if (s.buffs.length <= 0 || s.isDecoding) { return } s.isDecoding = true; s.tInfo = s.buffs.shift(); s.ctx.decodeAudioData(s.tInfo["buffer"], s._done, s._fail) }; s._done = function (t) { s.e.event("loaded:" + s.tInfo.url, t); s.isDecoding = false; s.decode() }; s._fail = function () { s.e.event("err:" + s.tInfo.url, null); s.isDecoding = false; s.decode() }; s._playEmptySound = function () { if (s.ctx == null) { return } var t = s.ctx.createBufferSource(); t.buffer = s._miniBuffer; t.connect(s.ctx.destination); t.start(0, 0, 0) }; s._unlock = function () { if (s._unlocked) { return } s._playEmptySound(); if (s.ctx.state == "running") { X.document.removeEventListener("mousedown", s._unlock, true); X.document.removeEventListener("touchend", s._unlock, true); X.document.removeEventListener("touchstart", s._unlock, true); s._unlocked = true } }; s.initWebAudio = function () { if (s.ctx.state != "running") { s._unlock(); X.document.addEventListener("mousedown", s._unlock, true); X.document.addEventListener("touchend", s._unlock, true); X.document.addEventListener("touchstart", s._unlock, true) } }; s._dataCache = {}; s.buffs = []; s.isDecoding = false; s._unlocked = false; s.tInfo = null; s.__loadingSound = {}; h(s, ["window", function () { return this.window = X.window }, "webAudioEnabled", function () { return this.webAudioEnabled = s.window["AudioContext"] || s.window["webkitAudioContext"] || s.window["mozAudioContext"] }, "ctx", function () { return this.ctx = s.webAudioEnabled ? new (s.window["AudioContext"] || s.window["webkitAudioContext"] || s.window["mozAudioContext"]) : undefined }, "_miniBuffer", function () { return this._miniBuffer = s.ctx.createBuffer(1, 1, 22050) }, "e", function () { return this.e = new n }]); return s }(n); var xt = function (t) { function e() { this._responseType = null; this._data = null; e.__super.call(this); this._http = new X.window.XMLHttpRequest } v(e, "laya.net.HttpRequest", t); var i = e.prototype; i.send = function (t, e, i, r, s) { i === void 0 && (i = "get"); r === void 0 && (r = "text"); this._responseType = r; this._data = null; if (X.onQGMiniGame || X.onVVMiniGame) { encodeURI(t) } var n = this; var a = this._http; a.open(i, t, true); if (s) { for (var o = 0; o < s.length; o++) { a.setRequestHeader(s[o++], s[o]) } } else if (!U.isConchApp) { if (!e || typeof e == "string") a.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"); else a.setRequestHeader("Content-Type", "application/json") } a.responseType = r !== "arraybuffer" ? "text" : "arraybuffer"; a.onerror = function (t) { n._onError(t) }; a.onabort = function (t) { n._onAbort(t) }; a.onprogress = function (t) { n._onProgress(t) }; a.onload = function (t) { n._onLoad(t) }; a.send(e) }; i._onProgress = function (t) { if (t && t.lengthComputable) this.event("progress", t.loaded / t.total) }; i._onAbort = function (t) { this.error("Request was aborted by user") }; i._onError = function (t) { this.error("Request failed Status:" + this._http.status + " text:" + this._http.statusText) }; i._onLoad = function (t) { var e = this._http; var i = e.status !== undefined ? e.status : 200; if (i === 200 || i === 204 || i === 0) { this.complete() } else { this.error("[" + e.status + "]" + e.statusText + ":" + e.responseURL) } }; i.error = function (t) { this.clear(); this.event("error", t) }; i.complete = function () { this.clear(); var e = true; try { if (this._responseType === "json") { this._data = JSON.parse(this._http.responseText) } else if (this._responseType === "xml") { this._data = ut.parseXMLFromString(this._http.responseText) } else { this._data = this._http.response || this._http.responseText } } catch (t) { e = false; this.error(t.message) } e && this.event("complete", this._data instanceof Array ? [this._data] : this._data) }; i.clear = function () { var t = this._http; t.onerror = t.onabort = t.onprogress = t.onload = null }; u(0, i, "url", function () { return this._http.responseURL }); u(0, i, "http", function () { return this._http }); u(0, i, "data", function () { return this._data }); return e }(n); var bt = function (t) { function A() { this._data = null; this._class = null; this._url = null; this._type = null; this._cache = false; this._http = null; this._customParse = false; A.__super.call(this) } v(A, "laya.net.Loader", t); var e = A.prototype; e.load = function (t, e, i, r, s) { i === void 0 && (i = true); s === void 0 && (s = false); this._url = t; if (t.indexOf("data:image") === 0) this._type = e = "image"; else { this._type = e || (e = this.getTypeFromUrl(t)); t = z.formatURL(t) } this._cache = i; this._data = null; if (!s && A.loadedMap[t]) { this._data = A.loadedMap[t]; this.event("progress", 1); this.event("complete", this._data); return } if (r) A.setGroup(t, r); if (A.parserMap[e] != null) { this._customParse = true; if (A.parserMap[e] instanceof laya.utils.Handler) A.parserMap[e].runWith(this); else A.parserMap[e].call(null, this); return } if (e === "image" || e === "htmlimage" || e === "nativeimage") return this._loadImage(t); if (e === "sound") return this._loadSound(t); if (e === "ttf") return this._loadTTF(t); var n; switch (e) { case "atlas": case "plf": n = "json"; break; case "font": n = "xml"; break; case "pkm": n = "arraybuffer"; break; default: n = e }if (A.preLoadedMap[t]) { this.onLoaded(A.preLoadedMap[t]) } else { if (X.onVVMiniGame) { this._http = new xt } else { if (!this._http) { this._http = new xt } } this._http.on("progress", this, this.onProgress); this._http.on("error", this, this.onError); this._http.on("complete", this, this.onLoaded); this._http.send(t, null, "get", n) } }; e.getTypeFromUrl = function (t) { var e = ut.getFileExtension(t); if (e) return A.typeMap[e]; console.warn("Not recognize the resources suffix", t); return "text" }; e._loadTTF = function (t) { t = z.formatURL(t); var e = new O; e.complete = g.create(this, this.onLoaded); e.load(t) }; e._loadImage = function (e) { e = z.formatURL(e); var t = this; var i; function r() { i.onload = null; i.onerror = null; delete A.imgCache[e] } var s = function () { r(); t.onLoaded(i) }; var n = function () { r(); t.event("error", "Load image failed") }; if (this._type === "nativeimage") { i = new X.window.Image; i.crossOrigin = ""; i.onload = s; i.onerror = n; i.src = e; A.imgCache[e] = i } else { new Ht.create(e, { onload: s, onerror: n, onCreate: function (t) { i = t; A.imgCache[e] = t } }) } }; e._loadSound = function (t) { var e = new B._soundClass; var i = this; e.on("complete", this, r); e.on("error", this, s); e.load(t); function r() { n(); i.onLoaded(e) } function s() { n(); e.dispose(); i.event("error", "Load sound failed") } function n() { e.offAll() } }; e.onProgress = function (t) { if (this._type === "atlas") this.event("progress", t * .3); else this.event("progress", t) }; e.onError = function (t) { this.event("error", t) }; e.onLoaded = function (t) { var e = this._type; if (e == "plf") { this.parsePLFData(t); this.complete(t) } else if (e === "image") { var i = new Mt(t); i.url = this._url; this.complete(i) } else if (e === "sound" || e === "htmlimage" || e === "nativeimage") { this.complete(t) } else if (e === "atlas") { if (!t.src && !t._setContext) { if (!this._data) { this._data = t; if (t.meta && t.meta.image) { var r = t.meta.image.split(","); var s = this._url.indexOf("/") >= 0 ? "/" : "\\"; var n = this._url.lastIndexOf(s); var a = n >= 0 ? this._url.substr(0, n + 1) : ""; for (var o = 0, h = r.length; o < h; o++) { r[o] = a + r[o] } } else { r = [this._url.replace(".json", ".png")] } r.reverse(); t.toLoads = r; t.pics = [] } this.event("progress", .3 + 1 / r.length * .6); return this._loadImage(r.pop()) } else { this._data.pics.push(t); if (this._data.toLoads.length > 0) { this.event("progress", .3 + 1 / this._data.toLoads.length * .6); return this._loadImage(this._data.toLoads.pop()) } var l = this._data.frames; var u = this._url.split("?")[0]; var c = this._data.meta && this._data.meta.prefix ? this._data.meta.prefix : u.substring(0, u.lastIndexOf(".")) + "/"; var f = this._data.pics; var _ = z.formatURL(this._url); var d = A.atlasMap[_] || (A.atlasMap[_] = []); d.dir = c; var p = 1; if (this._data.meta && this._data.meta.scale && this._data.meta.scale != 1) { p = parseFloat(this._data.meta.scale); for (var v in l) { var m = l[v]; var g = f[m.frame.idx ? m.frame.idx : 0]; var y = z.formatURL(c + v); g.scaleRate = p; var x; x = Mt.create(g, m.frame.x, m.frame.y, m.frame.w, m.frame.h, m.spriteSourceSize.x, m.spriteSourceSize.y, m.sourceSize.w, m.sourceSize.h); A.cacheRes(y, x); x.url = y; d.push(y) } } else { for (v in l) { m = l[v]; g = f[m.frame.idx ? m.frame.idx : 0]; y = z.formatURL(c + v); A.cacheRes(y, Mt.create(g, m.frame.x, m.frame.y, m.frame.w, m.frame.h, m.spriteSourceSize.x, m.spriteSourceSize.y, m.sourceSize.w, m.sourceSize.h)); A.loadedMap[y].url = y; d.push(y) } } delete this._data.pics; this.complete(this._data) } } else if (e == "font") { if (!t.src) { this._data = t; this.event("progress", .5); return this._loadImage(this._url.replace(".fnt", ".png")) } else { var b = new M; b.parseFont(this._data, t); var w = this._url.split(".fnt")[0].split("/"); var T = w[w.length - 1]; Dt.registerBitmapFont(T, b); this._data = b; this.complete(this._data) } } else if (e == "pkm") { var C = Ht.create(t, this._url); var S = new Mt(C); S.url = this._url; this.complete(S) } else { this.complete(t) } }; e.parsePLFData = function (t) { var e; var i; var r; for (e in t) { r = t[e]; switch (e) { case "json": case "text": for (i in r) { A.preLoadedMap[z.formatURL(i)] = r[i] } break; default: for (i in r) { A.preLoadedMap[z.formatURL(i)] = r[i] } } } }; e.complete = function (t) { this._data = t; if (this._customParse) { this.event("loaded", t instanceof Array ? [t] : t) } else { A._loaders.push(this); if (!A._isWorking) A.checkNext() } }; e.endLoad = function (t) { t && (this._data = t); if (this._cache) A.cacheRes(this._url, this._data); this.event("progress", 1); this.event("complete", this.data instanceof Array ? [this.data] : this.data) }; u(0, e, "url", function () { return this._url }); u(0, e, "data", function () { return this._data }); u(0, e, "cache", function () { return this._cache }); u(0, e, "type", function () { return this._type }); A.checkNext = function () { A._isWorking = true; var t = X.now(); var e = t; while (A._startIndex < A._loaders.length) { e = X.now(); A._loaders[A._startIndex].endLoad(); A._startIndex++; if (X.now() - t > A.maxTimeOut) { console.warn("loader callback cost a long time:" + (X.now() - t) + " url=" + A._loaders[A._startIndex - 1].url); T.timer.frameOnce(1, null, A.checkNext); return } } A._loaders.length = 0; A._startIndex = 0; A._isWorking = false }; A.clearRes = function (t, e) { e === void 0 && (e = false); t = z.formatURL(t); var i = A.getAtlas(t); if (i) { for (var r = 0, s = i.length; r < s; r++) { var n = i[r]; var a = A.getRes(n); delete A.loadedMap[n]; if (a) a.destroy(e) } i.length = 0; delete A.atlasMap[t]; delete A.loadedMap[t] } else { var o = A.loadedMap[t]; if (o) { delete A.loadedMap[t]; if (o instanceof laya.resource.Texture && o.bitmap) o.destroy(e) } } }; A.clearTextureRes = function (t) { t = z.formatURL(t); var e = laya.net.Loader.getAtlas(t); var i = e && e.length > 0 ? laya.net.Loader.getRes(e[0]) : laya.net.Loader.getRes(t); if (i && i.bitmap) { if (U.isConchApp && !U.isConchWebGL) { if (i.bitmap.source.releaseTexture) { i.bitmap.source.releaseTexture() } } else if (i.bitmap._atlaser == null) { i.bitmap.releaseResource(true) } } }; A.getRes = function (t) { return A.loadedMap[z.formatURL(t)] }; A.getAtlas = function (t) { return A.atlasMap[z.formatURL(t)] }; A.cacheRes = function (t, e) { t = z.formatURL(t); if (A.loadedMap[t] != null) { console.warn("Resources already exist,is repeated loading:", t) } else { A.loadedMap[t] = e } }; A.setGroup = function (t, e) { if (!A.groupMap[e]) A.groupMap[e] = []; A.groupMap[e].push(t) }; A.clearResByGroup = function (t) { if (!A.groupMap[t]) return; var e = A.groupMap[t], i = 0, r = e.length; for (i = 0; i < r; i++) { A.clearRes(e[i]) } e.length = 0 }; A.TEXT = "text"; A.JSON = "json"; A.XML = "xml"; A.BUFFER = "arraybuffer"; A.IMAGE = "image"; A.SOUND = "sound"; A.ATLAS = "atlas"; A.FONT = "font"; A.TTF = "ttf"; A.PLF = "plf"; A.PKM = "pkm"; A.typeMap = { png: "image", jpg: "image", jpeg: "image", txt: "text", json: "json", xml: "xml", als: "atlas", atlas: "atlas", mp3: "sound", ogg: "sound", wav: "sound", part: "json", fnt: "font", pkm: "pkm", ttf: "ttf", plf: "plf", ani: "json", sk: "arraybuffer" }; A.parserMap = {}; A.groupMap = {}; A.maxTimeOut = 100; A.loadedMap = {}; A.preLoadedMap = {}; A.atlasMap = {}; A._loaders = []; A._isWorking = false; A._startIndex = 0; A.imgCache = {}; return A }(n); var wt = function (t) { var f; function d() { this.retryNum = 1; this.retryDelay = 0; this.maxLoader = 5; this._loaders = []; this._loaderCount = 0; this._resInfos = []; this._infoPool = []; this._maxPriority = 5; this._failRes = {}; d.__super.call(this); for (var t = 0; t < this._maxPriority; t++)this._resInfos[t] = [] } v(d, "laya.net.LoaderManager", t); var e = d.prototype; e.create = function (t, i, e, r, s, n, a, o) { n === void 0 && (n = 1); a === void 0 && (a = true); if (t instanceof Array) { var h = t; var l = h.length; var u = 0; if (e) { var c = g.create(e.caller, e.method, e.args, false) } for (var f = 0; f < l; f++) { var _ = h[f]; if (typeof _ == "string") _ = h[f] = { url: _ }; _.progress = 0 } for (f = 0; f < l; f++) { _ = h[f]; var d = e ? g.create(null, m, [_], false) : null; var p = e || i ? g.create(null, v, [_]) : null; this._create(_.url, p, d, _.clas || r, _.params || s, _.priority || n, a, _.group || o) } function v(t, e) { u++; t.progress = 1; if (u === l && i) { i.run() } } function m(t, e) { t.progress = e; var i = 0; for (var r = 0; r < l; r++) { var s = h[r]; i += s.progress } var n = i / l; c.runWith(n) } return true } else return this._create(t, i, e, r, s, n, a, o) }; e._create = function (e, i, t, r, s, n, a, o) { n === void 0 && (n = 1); a === void 0 && (a = true); var h = z.formatURL(e); var l = this.getRes(h); if (!l) { var u = ut.getFileExtension(e); var c = d.createMap[u]; if (!c) throw new Error("LoaderManager:unknown file(" + e + ") extension with: " + u + "."); if (!r) r = c[0]; var f = c[1]; if (u == "atlas") { this.load(e, i, t, f, n, a) } else { if (r === Mt) f = "htmlimage"; l = r ? new r : null; if (l.hasOwnProperty("_loaded")) l._loaded = false; l._setUrl(e); o && l._setGroup(o); this._createLoad(l, e, g.create(null, _), t, f, n, false, o, true); function _(t) { l && !l.destroyed && t && l.onAsynLoaded.call(l, e, t, s); if (i) i.run(); T.loader.event(e) } a && this.cacheRes(h, l) } } else { if (!l.hasOwnProperty("loaded") || l.loaded) { t && t.runWith(1); i && i.run() } else if (i) { T.loader._createListener(e, i.caller, i.method, i.args, true, false) } } return l }; e.load = function (t, e, i, r, s, n, a, o) { var h = this; s === void 0 && (s = 1); n === void 0 && (n = true); o === void 0 && (o = false); if (t instanceof Array) return this._loadAssets(t, e, i, r, s, n, a); var l = bt.getRes(t); if (l != null) { T.timer.frameOnce(1, null, function () { i && i.runWith(1); e && e.runWith(l); h._loaderCount || h.event("complete") }) } else { var u = d._resMap[t]; if (!u) { u = this._infoPool.length ? this._infoPool.pop() : new f; u.url = t; u.type = r; u.cache = n; u.group = a; u.ignoreCache = o; e && u.on("complete", e.caller, e.method, e.args); i && u.on("progress", i.caller, i.method, i.args); d._resMap[t] = u; s = s < this._maxPriority ? s : this._maxPriority - 1; this._resInfos[s].push(u); this._next() } else { e && u._createListener("complete", e.caller, e.method, e.args, false, false); i && u._createListener("progress", i.caller, i.method, i.args, false, false) } } return this }; e._createLoad = function (t, e, i, r, s, n, a, o, h) { var l = this; n === void 0 && (n = 1); a === void 0 && (a = true); h === void 0 && (h = false); if (e instanceof Array) return this._loadAssets(e, i, r, s, n, a, o); var u = bt.getRes(e); if (u != null) { T.timer.frameOnce(1, null, function () { r && r.runWith(1); i && i.runWith(u); l._loaderCount || l.event("complete") }) } else { var c = d._resMap[e]; if (!c) { c = this._infoPool.length ? this._infoPool.pop() : new f; c.url = e; c.clas = t; c.type = s; c.cache = a; c.group = o; c.ignoreCache = h; i && c.on("complete", i.caller, i.method, i.args); r && c.on("progress", r.caller, r.method, r.args); d._resMap[e] = c; n = n < this._maxPriority ? n : this._maxPriority - 1; this._resInfos[n].push(c); this._next() } else { i && c._createListener("complete", i.caller, i.method, i.args, false, false); r && c._createListener("progress", r.caller, r.method, r.args, false, false) } } return this }; e._next = function () { if (this._loaderCount >= this.maxLoader) return; for (var t = 0; t < this._maxPriority; t++) { var e = this._resInfos[t]; while (e.length > 0) { var i = e.shift(); if (i) return this._doLoad(i) } } this._loaderCount || this.event("complete") }; e._doLoad = function (e) { this._loaderCount++; var i = this._loaders.length ? this._loaders.pop() : new bt; i.on("complete", null, s); i.on("progress", null, function (t) { e.event("progress", t) }); i.on("error", null, function (t) { s(null) }); var r = this; function s(t) { i.offAll(); i._data = null; i._customParse = false; r._loaders.push(i); r._endLoad(e, t instanceof Array ? [t] : t); r._loaderCount--; r._next() } i._class = e.clas; i.load(e.url, e.type, e.cache, e.group, e.ignoreCache) }; e._endLoad = function (t, e) { var i = t.url; if (e == null) { var r = this._failRes[i] || 0; if (r < this.retryNum) { console.warn("[warn]Retry to load:", i); this._failRes[i] = r + 1; T.timer.once(this.retryDelay, this, this._addReTry, [t], false); return } else { console.warn("[error]Failed to load:", i); this.event("error", i) } } if (this._failRes[i]) this._failRes[i] = 0; delete d._resMap[i]; t.event("complete", e); t.offAll(); this._infoPool.push(t) }; e._addReTry = function (t) { this._resInfos[this._maxPriority - 1].push(t); this._next() }; e.clearRes = function (t, e) { e === void 0 && (e = false); bt.clearRes(t, e) }; e.getRes = function (t) { return bt.getRes(t) }; e.cacheRes = function (t, e) { bt.cacheRes(t, e) }; e.clearTextureRes = function (t) { bt.clearTextureRes(t) }; e.setGroup = function (t, e) { bt.setGroup(t, e) }; e.clearResByGroup = function (t) { bt.clearResByGroup(t) }; e.clearUnLoaded = function () { for (var t = 0; t < this._maxPriority; t++) { var e = this._resInfos[t]; for (var i = e.length - 1; i > -1; i--) { var r = e[i]; if (r) { r.offAll(); this._infoPool.push(r) } } e.length = 0 } this._loaderCount = 0; d._resMap = {} }; e.cancelLoadByUrls = function (t) { if (!t) return; for (var e = 0, i = t.length; e < i; e++) { this.cancelLoadByUrl(t[e]) } }; e.cancelLoadByUrl = function (t) { for (var e = 0; e < this._maxPriority; e++) { var i = this._resInfos[e]; for (var r = i.length - 1; r > -1; r--) { var s = i[r]; if (s && s.url === t) { i[r] = null; s.offAll(); this._infoPool.push(s) } } } if (d._resMap[t]) delete d._resMap[t] }; e._loadAssets = function (t, i, a, e, r, s, n) { r === void 0 && (r = 1); s === void 0 && (s = true); var o = t.length; var h = 0; var l = 0; var u = []; var c = true; for (var f = 0; f < o; f++) { var _ = t[f]; if (typeof _ == "string") _ = { url: _, type: e, size: 1, priority: r }; if (!_.size) _.size = 1; _.progress = 0; l += _.size; u.push(_); var d = a ? g.create(null, m, [_], false) : null; var p = i || a ? g.create(null, v, [_]) : null; this.load(_.url, p, d, _.type, _.priority || 1, s, _.group || n) } function v(t, e) { h++; t.progress = 1; if (!e) c = false; if (h === o && i) { i.runWith(c) } } function m(t, e) { if (a != null) { t.progress = e; var i = 0; for (var r = 0; r < u.length; r++) { var s = u[r]; i += s.size * s.progress } var n = i / l; a.runWith(n) } } return this }; d.cacheRes = function (t, e) { bt.cacheRes(t, e) }; d._resMap = {}; h(d, ["createMap", function () { return this.createMap = { atlas: [null, "atlas"] } }]); d.__init$ = function () { f = function (t) { function e() { this.url = null; this.type = null; this.cache = false; this.group = null; this.ignoreCache = false; this.clas = null; e.__super.call(this) } v(e, "", t); return e }(n) }; return d }(n); var Tt = function (t) { function s(t) { s.__super.call(this); if (!t) { t = [.3, .59, .11, 0, 0, .3, .59, .11, 0, 0, .3, .59, .11, 0, 0, 0, 0, 0, 1, 0] } this._mat = new Float32Array(16); this._alpha = new Float32Array(4); var e = 0; var i = 0; for (var r = 0; r < 20; r++) { if (r % 5 != 4) { this._mat[e++] = t[r] } else { this._alpha[i++] = t[r] } } this._action = E.createFilterAction(32); this._action.data = this } v(s, "laya.filters.ColorFilter", t); var e = s.prototype; T.imps(e, { "laya.filters.IFilter": true }); e.callNative = function (t) { var e = t._$P.cf = this; t.conchModel && t.conchModel.setFilterMatrix && t.conchModel.setFilterMatrix(this._mat, this._alpha) }; u(0, e, "type", function () { return 32 }); u(0, e, "action", function () { return this._action }); return s }(C); var Ct = function (t) { function r(t, e, i) { this._endian = null; this._stamp = NaN; this._socket = null; this._connected = false; this._addInputPosition = 0; this._input = null; this._output = null; this.timeout = 0; this.objectEncoding = 0; this.disableInput = false; this._byteClass = null; this.protocols = []; e === void 0 && (e = 0); r.__super.call(this); this._byteClass = i ? i : j; this.endian = "bigEndian"; this.timeout = 2e4; this._addInputPosition = 0; if (t && e > 0 && e < 65535) this.connect(t, e) } v(r, "laya.net.Socket", t); var e = r.prototype; e.connect = function (t, e) { var i = "ws://" + t + ":" + e; if (X.window.location.protocol == "https:") { i = "wss://" + t + ":" + e } else { i = "ws://" + t + ":" + e } this.connectByUrl(i) }; e.connectByUrl = function (t) { var e = this; if (this._socket != null) this.close(); this._socket && this.cleanSocket(); if (!this.protocols || this.protocols.length == 0) { this._socket = new X.window.WebSocket(t) } else { this._socket = new X.window.WebSocket(t, this.protocols) } this._socket.binaryType = "arraybuffer"; this._output = new this._byteClass; this._output.endian = this.endian; this._input = new this._byteClass; this._input.endian = this.endian; this._addInputPosition = 0; this._socket.onopen = function (t) { e._onOpen(t) }; this._socket.onmessage = function (t) { e._onMessage(t) }; this._socket.onclose = function (t) { e._onClose(t) }; this._socket.onerror = function (t) { e._onError(t) } }; e.cleanSocket = function () { try { this._socket.close() } catch (t) { } this._connected = false; this._socket.onopen = null; this._socket.onmessage = null; this._socket.onclose = null; this._socket.onerror = null; this._socket = null }; e.close = function () { if (this._socket != null) { try { this._socket.close() } catch (t) { } } }; e._onOpen = function (t) { this._connected = true; this.event("open", t) }; e._onMessage = function (t) { if (!t || !t.data) return; var e = t.data; if (this.disableInput && e) { this.event("message", e); return } if (this._input.length > 0 && this._input.bytesAvailable < 1) { this._input.clear(); this._addInputPosition = 0 } var i = this._input.pos; !this._addInputPosition && (this._addInputPosition = 0); this._input.pos = this._addInputPosition; if (e) { if (typeof e == "string") { this._input.writeUTFBytes(e) } else { this._input.writeArrayBuffer(e) } this._addInputPosition = this._input.pos; this._input.pos = i } this.event("message", e) }; e._onClose = function (t) { this._connected = false; this.event("close", t) }; e._onError = function (t) { this.event("error", t) }; e.send = function (t) { this._socket.send(t) }; e.flush = function () { if (this._output && this._output.length > 0) { var e; try { this._socket && this._socket.send(this._output.__getBuffer().slice(0, this._output.length)) } catch (t) { e = t } this._output.endian = this.endian; this._output.clear(); if (e) this.event("error", e) } }; u(0, e, "input", function () { return this._input }); u(0, e, "output", function () { return this._output }); u(0, e, "connected", function () { return this._connected }); u(0, e, "endian", function () { return this._endian }, function (t) { this._endian = t; if (this._input != null) this._input.endian = t; if (this._output != null) this._output.endian = t }); r.LITTLE_ENDIAN = "littleEndian"; r.BIG_ENDIAN = "bigEndian"; return r }(n); var St = function (t) { function s() { this.worker = null; s.__super.call(this); var e = this; this.worker = new X.window.Worker(s.workerPath); this.worker.onmessage = function (t) { e.workerMessage(t.data) } } v(s, "laya.net.WorkerLoader", t); var e = s.prototype; e.workerMessage = function (t) { if (t) { switch (t.type) { case "Image": this.imageLoaded(t); break; case "Msg": this.event("image_msg", t.msg); break } } }; e.imageLoaded = function (t) { if (t && t.buffer && t.buffer.length < 10) { s._enable = false; this._myTrace("buffer lost when postmessage ,disable workerloader"); this.event(t.url, null); this.event("image_err", t.url + "\n" + t.msg); return } if (!t.dataType) { this.event(t.url, null); this.event("image_err", t.url + "\n" + t.msg); return } var e, i; var r; switch (t.dataType) { case "buffer": e = new Ot("2D"); i = e.source.getContext("2d"); r = i.createImageData(t.width, t.height); r.data.set(t.buffer); e.size(r.width, r.height); i.putImageData(r, 0, 0); e.memorySize = 0; break; case "imagedata": e = new Ot("2D"); i = e.source.getContext("2d"); r = t.imagedata; e.size(r.width, r.height); i.putImageData(r, 0, 0); r = t.imagedata; e.memorySize = 0; break; case "imageBitmap": r = t.imageBitmap; if (!U.isWebGL) { e = new Ot("2D"); i = e.source.getContext("2d"); e.size(r.width, r.height); i.drawImage(r, 0, 0); e.src = t.url } else e = r; break }if (U.isWebGL) e = new laya.webgl.resource.WebGLImage(e, t.url); this.event(t.url, e) }; e._myTrace = function (t) { var e = arguments; var i = []; var r = 0, s = e.length; for (r = 0; r < s; r++) { i.push(e[r]) } this.event("image_msg", i.join(" ")) }; e.loadImage = function (t) { var e; e = {}; e.type = "load"; e.url = t; this.worker.postMessage(e) }; e._loadImage = function (e) { var i = this; if (!s._enable || e.toLowerCase().indexOf(".png") < 0) { s._preLoadFun.call(i, e); return } e = z.formatURL(e); function r() { laya.net.WorkerLoader.I.off(e, i, t) } var t = function (t) { r(); if (t) { i["onLoaded"](t) } else { s._preLoadFun.call(i, e) } }; laya.net.WorkerLoader.I.on(e, i, t); laya.net.WorkerLoader.I.loadImage(e) }; u(1, s, "enable", function () { return s._enable }, function (t) { if (s.disableJSDecode && !X.window.createImageBitmap) return; s._enable = t; if (s._enable && s._preLoadFun == null) s._enable = s.__init__() }); s.__init__ = function () { if (s._preLoadFun != null) return false; if (!X.window.Worker) return false; s._preLoadFun = bt["prototype"]["_loadImage"]; bt["prototype"]["_loadImage"] = s["prototype"]["_loadImage"]; if (!s.I) s.I = new s; return true }; s.workerSupported = function () { return X.window.Worker ? true : false }; s.IMAGE_LOADED = "image_loaded"; s.IMAGE_ERR = "image_err"; s.IMAGE_MSG = "image_msg"; s.I = null; s._preLoadFun = null; s._enable = false; s.workerPath = "libs/worker.js"; s.disableJSDecode = true; return s }(n); var At = function (t) { function o() { o.__super.call(this); this._$1__id = ++o._uniqueIDCounter; this.__loaded = true; this._destroyed = false; this._referenceCount = 0; o._idResourcesMap[this.id] = this; this._released = true; this.lock = false; this._memorySize = 0; this._lastUseFrameCount = -1; G.currentResourceManager && G.currentResourceManager.addResource(this) } v(o, "laya.resource.Resource", t); var e = o.prototype; T.imps(e, { "laya.resource.ICreateResource": true, "laya.resource.IDispose": true }); e._setUrl = function (t) { if (this._url !== t) { var e; if (this._url) { e = o._urlResourcesMap[this._url]; e.splice(e.indexOf(this), 1); e.length === 0 && delete o._urlResourcesMap[this._url] } if (t) { e = o._urlResourcesMap[t]; e || (o._urlResourcesMap[t] = e = []); e.push(this) } this._url = t } }; e._getGroup = function () { return this._group }; e._setGroup = function (t) { if (this._group !== t) { var e; if (this._group) { e = o._groupResourcesMap[this._group]; e.splice(e.indexOf(this), 1); e.length === 0 && delete o._groupResourcesMap[this._group] } if (t) { e = o._groupResourcesMap[t]; e || (o._groupResourcesMap[t] = e = []); e.push(this) } this._group = t } }; e._addReference = function () { this._referenceCount++ }; e._removeReference = function () { this._referenceCount-- }; e._clearReference = function () { this._referenceCount = 0 }; e._endLoaded = function () { this.__loaded = true; this.event("loaded", this) }; e.recreateResource = function () { this.completeCreate() }; e.disposeResource = function () { }; e.activeResource = function (t) { t === void 0 && (t = false); this._lastUseFrameCount = at.loopCount; if (!this._destroyed && this.__loaded && (this._released || t)) this.recreateResource() }; e.releaseResource = function (t) { t === void 0 && (t = false); if (!t && this.lock) return false; if (!this._released || t) { this.disposeResource(); this._released = true; this._lastUseFrameCount = -1; this.event("released", this); return true } else { return false } }; e.onAsynLoaded = function (t, e, i) { throw new Error("Resource: must override this function!") }; e.destroy = function () { if (this._destroyed) return; if (this._resourceManager !== null) this._resourceManager.removeResource(this); this._destroyed = true; this.lock = false; this.releaseResource(); delete o._idResourcesMap[this.id]; var t; if (this._url) { t = o._urlResourcesMap[this._url]; if (t) { t.splice(t.indexOf(this), 1); t.length === 0 && delete o._urlResourcesMap[this.url] } bt.clearRes(this._url); this.__loaded || E.cancelLoadByUrl(this._url) } if (this._group) { t = o._groupResourcesMap[this._group]; t.splice(t.indexOf(this), 1); t.length === 0 && delete o._groupResourcesMap[this.url] } }; e.completeCreate = function () { this._released = false; this.event("recovered", this) }; e.dispose = function () { this.destroy() }; u(0, e, "memorySize", function () { return this._memorySize }, function (t) { var e = t - this._memorySize; this._memorySize = t; this.resourceManager && this.resourceManager.addSize(e) }); u(0, e, "_loaded", null, function (t) { this.__loaded = t }); u(0, e, "loaded", function () { return this.__loaded }); u(0, e, "id", function () { return this._$1__id }); u(0, e, "destroyed", function () { return this._destroyed }); u(0, e, "group", function () { return this._getGroup() }, function (t) { this._setGroup(t) }); u(0, e, "resourceManager", function () { return this._resourceManager }); u(0, e, "url", function () { return this._url }); u(0, e, "released", function () { return this._released }); u(0, e, "referenceCount", function () { return this._referenceCount }); o.getResourceByID = function (t) { return o._idResourcesMap[t] }; o.getResourceByURL = function (t, e) { e === void 0 && (e = 0); return o._urlResourcesMap[t][e] }; o.getResourceCountByURL = function (t) { return o._urlResourcesMap[t].length }; o.destroyUnusedResources = function (t) { var e; if (t) { var i = o._groupResourcesMap[t]; if (i) { var r = i.slice(); for (var s = 0, n = r.length; s < n; s++) { e = r[s]; if (!e.lock && e._referenceCount === 0) e.destroy() } } } else { for (var a in o._idResourcesMap) { e = o._idResourcesMap[a]; if (!e.lock && e._referenceCount === 0) e.destroy() } } }; o._uniqueIDCounter = 0; o._idResourcesMap = {}; o._urlResourcesMap = {}; o._groupResourcesMap = {}; return o }(n); var Mt = function (t) { function A(t, e) { this.offsetX = 0; this.offsetY = 0; this.sourceWidth = 0; this.sourceHeight = 0; this._w = 0; this._h = 0; this._uvID = 0; this._atlasID = -1; this.scaleRate = 1; A.__super.call(this); if (t && t._addReference != null) { t._addReference() } this.setTo(t, e) } v(A, "laya.resource.Texture", t); var e = A.prototype; e._setUrl = function (t) { this.url = t }; e.setTo = function (t, e) { if (t instanceof a.HTMLElement) { var i = Ot.create("2D", t); this.bitmap = i } else { this.bitmap = t } this.uv = e || A.DEF_UV; if (t) { this._w = t.width; this._h = t.height; this.sourceWidth = this.sourceWidth || this._w; this.sourceHeight = this.sourceHeight || this._h; this._loaded = this._w > 0; var r = this; if (this._loaded) { E.addToAtlas && E.addToAtlas(r) } else { var s = t; if (s instanceof laya.resource.HTMLImage && s.image) s.image.addEventListener("load", function (t) { E.addToAtlas && E.addToAtlas(r) }, false) } } }; e.active = function () { if (this.bitmap) this.bitmap.activeResource() }; e.destroy = function (t) { t === void 0 && (t = false); if (this.bitmap && this.bitmap.referenceCount > 0) { var e = this.bitmap; if (t) { if (U.isConchApp && e.source && e.source.conchDestroy) { this.bitmap.source.conchDestroy() } this.bitmap = null; e.dispose(); e._clearReference() } else { e._removeReference(); if (e.referenceCount == 0) { if (U.isConchApp && e.source && e.source.conchDestroy) { this.bitmap.source.conchDestroy() } this.bitmap = null; e.dispose() } } if (this.url && this === T.loader.getRes(this.url)) T.loader.clearRes(this.url, t); this._loaded = false } }; e.load = function (t) { var e = this; this._loaded = false; t = z.customFormat(t); var i = this.bitmap || (this.bitmap = Ht.create(t)); if (i) i._addReference(); var r = this; i.onload = function () { i.onload = null; r._loaded = true; e.sourceWidth = e._w = i.width; e.sourceHeight = e._h = i.height; r.event("loaded", this); E.addToAtlas && E.addToAtlas(r) } }; e.addTextureToAtlas = function (t) { E.addTextureToAtlas(this) }; e.getPixels = function (t, e, i, r) { if (U.isConchApp) { var s = this.bitmap; if (s.source && s.source.getImageData) { var n = s.source.getImageData(t, e, i, r); var a = new Uint8Array(n); return Array.from(a) } return null } else if (U.isWebGL) { return E.getTexturePixels(this, t, e, i, r) } else { X.canvas.size(i, r); X.canvas.clear(); X.context.drawTexture(this, -t, -e, this.width, this.height, 0, 0); var o = X.context.getImageData(0, 0, i, r) } return o.data }; e.onAsynLoaded = function (t, e) { if (e) e._addReference(); this.setTo(e, this.uv) }; u(0, e, "source", function () { if (!this.bitmap) return null; this.bitmap.activeResource(); return this.bitmap.source }); u(0, e, "loaded", function () { return this._loaded }); u(0, e, "released", function () { if (!this.bitmap) return true; return this.bitmap.released }); u(0, e, "width", function () { if (this._w) return this._w; return this.uv && this.uv !== A.DEF_UV ? (this.uv[2] - this.uv[0]) * this.bitmap.width : this.bitmap.width }, function (t) { this._w = t; this.sourceWidth || (this.sourceWidth = t) }); u(0, e, "repeat", function () { if (U.isWebGL && this.bitmap) { return this.bitmap.repeat } return true }, function (t) { if (t) { if (U.isWebGL && this.bitmap) { this.bitmap.repeat = t; if (t) { this.bitmap.enableMerageInAtlas = false } } } }); u(0, e, "height", function () { if (this._h) return this._h; return this.uv && this.uv !== A.DEF_UV ? (this.uv[5] - this.uv[1]) * this.bitmap.height : this.bitmap.height }, function (t) { this._h = t; this.sourceHeight || (this.sourceHeight = t) }); u(0, e, "isLinearSampling", function () { return U.isWebGL ? this.bitmap.minFifter != 9728 : true }, function (t) { if (!t && U.isWebGL) { if (!t && this.bitmap.minFifter == -1 && this.bitmap.magFifter == -1) { this.bitmap.minFifter = 9728; this.bitmap.magFifter = 9728; this.bitmap.enableMerageInAtlas = false } } }); A.moveUV = function (t, e, i) { for (var r = 0; r < 8; r += 2) { i[r] += t; i[r + 1] += e } return i }; A.create = function (t, e, i, r, s, n, a, o, h) { n === void 0 && (n = 0); a === void 0 && (a = 0); o === void 0 && (o = 0); h === void 0 && (h = 0); var l = t instanceof laya.resource.Texture; var u = l ? t.uv : A.DEF_UV; var c = l ? t.bitmap : t; var f = E.isAtlas(c); if (f) { var _ = c._atlaser; var d = t._atlasID; if (d == -1) { throw new Error("create texture error") } c = _._inAtlasTextureBitmapValue[d]; u = _._inAtlasTextureOriUVValue[d] } var p = new A(c, null); if (c.width && e + r > c.width) r = c.width - e; if (c.height && i + s > c.height) s = c.height - i; p.width = r; p.height = s; p.offsetX = n; p.offsetY = a; p.sourceWidth = o || r; p.sourceHeight = h || s; var v = 1 / c.width; var m = 1 / c.height; e *= v; i *= m; r *= v; s *= m; var g = p.uv[0], y = p.uv[1], x = p.uv[4], b = p.uv[5]; var w = x - g, T = b - y; var C = A.moveUV(u[0], u[1], [e, i, e + r, i, e + r, i + s, e, i + s]); p.uv = [g + C[0] * w, y + C[1] * T, x - (1 - C[2]) * w, y + C[3] * T, x - (1 - C[4]) * w, b - (1 - C[5]) * T, g + C[6] * w, b - (1 - C[7]) * T]; if (f) { p.addTextureToAtlas() } var S = c.scaleRate; if (S && S != 1) { p.sourceWidth /= S; p.sourceHeight /= S; p.width /= S; p.height /= S; p.scaleRate = S; p.offsetX /= S; p.offsetY /= S } else { p.scaleRate = 1 } return p }; A.createFromTexture = function (t, e, i, r, s) { var n = t.scaleRate; if (n != 1) { e *= n; i *= n; r *= n; s *= n } var a = D.TEMP.setTo(e - t.offsetX, i - t.offsetY, r, s); var o = a.intersection(A._rect1.setTo(0, 0, t.width, t.height), A._rect2); if (o) var h = A.create(t, o.x, o.y, o.width, o.height, o.x - a.x, o.y - a.y, r, s); else return null; h.bitmap._removeReference(); return h }; A.DEF_UV = [0, 0, 1, 0, 1, 1, 0, 1]; A.INV_UV = [0, 1, 1, 1, 1, 0, 0, 0]; A._rect1 = new D; A._rect2 = new D; return A }(n); var It = function (t) { var o; function n() { this._labelDic = null; this._tweenDic = {}; this._tweenDataList = []; this._endTweenDataList = null; this._currTime = 0; this._lastTime = 0; this._startTime = 0; this._index = 0; this._gidIndex = 0; this._firstTweenDic = {}; this._startTimeSort = false; this._endTimeSort = false; this._loopKey = false; this.scale = 1; this._frameRate = 60; this._frameIndex = 0; this._total = 0; n.__super.call(this) } v(n, "laya.utils.TimeLine", t); var e = n.prototype; e.to = function (t, e, i, r, s) { s === void 0 && (s = 0); return this._create(t, e, i, r, s, true) }; e.from = function (t, e, i, r, s) { s === void 0 && (s = 0); return this._create(t, e, i, r, s, false) }; e._create = function (t, e, i, r, s, n) { var a = st.getItemByClass("tweenData", o); a.isTo = n; a.type = 0; a.target = t; a.duration = i; a.data = e; a.startTime = this._startTime + s; a.endTime = a.startTime + a.duration; a.ease = r; this._startTime = Math.max(a.endTime, this._startTime); this._tweenDataList.push(a); this._startTimeSort = true; this._endTimeSort = true; return this }; e.addLabel = function (t, e) { var i = st.getItemByClass("tweenData", o); i.type = 1; i.data = t; i.endTime = i.startTime = this._startTime + e; this._labelDic || (this._labelDic = {}); this._labelDic[t] = i; this._tweenDataList.push(i); return this }; e.removeLabel = function (t) { if (this._labelDic && this._labelDic[t]) { var e = this._labelDic[t]; if (e) { var i = this._tweenDataList.indexOf(e); if (i > -1) { this._tweenDataList.splice(i, 1) } } delete this._labelDic[t] } }; e.gotoTime = function (t) { if (this._tweenDataList == null || this._tweenDataList.length == 0) return; var e; var i; for (var r in this._firstTweenDic) { i = this._firstTweenDic[r]; if (i) { for (var s in i) { if (i.diyTarget.hasOwnProperty(s)) { i.diyTarget[s] = i[s] } } } } for (r in this._tweenDic) { e = this._tweenDic[r]; e.clear(); delete this._tweenDic[r] } this._index = 0; this._gidIndex = 0; this._currTime = t; this._lastTime = X.now(); var n; if (this._endTweenDataList == null || this._endTimeSort) { this._endTimeSort = false; this._endTweenDataList = n = this._tweenDataList.concat(); function a(t, e) { if (t.endTime > e.endTime) { return 1 } else if (t.endTime < e.endTime) { return -1 } else { return 0 } } n.sort(a) } else { n = this._endTweenDataList } var o; for (var h = 0, l = n.length; h < l; h++) { o = n[h]; if (o.type == 0) { if (t >= o.endTime) { this._index = Math.max(this._index, h + 1); var u = o.data; if (o.isTo) { for (var c in u) { o.target[c] = u[c] } } } else { break } } } for (h = 0, l = this._tweenDataList.length; h < l; h++) { o = this._tweenDataList[h]; if (o.type == 0) { if (t >= o.startTime && t < o.endTime) { this._index = Math.max(this._index, h + 1); this._gidIndex++; e = st.getItemByClass("tween", lt); e._create(o.target, o.data, o.duration, o.ease, g.create(this, this._animComplete, [this._gidIndex]), 0, false, o.isTo, true, false); e.setStartTime(this._currTime - (t - o.startTime)); e._updateEase(this._currTime); e.gid = this._gidIndex; this._tweenDic[this._gidIndex] = e } } } }; e.gotoLabel = function (t) { if (this._labelDic == null) return; var e = this._labelDic[t]; if (e) this.gotoTime(e.startTime) }; e.pause = function () { T.timer.clear(this, this._update) }; e.resume = function () { this.play(this._currTime, this._loopKey) }; e.play = function (t, e) { t === void 0 && (t = 0); e === void 0 && (e = false); if (!this._tweenDataList) return; if (this._startTimeSort) { this._startTimeSort = false; function i(t, e) { if (t.startTime > e.startTime) { return 1 } else if (t.startTime < e.startTime) { return -1 } else { return 0 } } this._tweenDataList.sort(i); for (var r = 0, s = this._tweenDataList.length; r < s; r++) { var n = this._tweenDataList[r]; if (n != null && n.type == 0) { var a = n.target; var o = a.$_GID || (a.$_GID = ut.getGID()); var h = null; if (this._firstTweenDic[o] == null) { h = {}; h.diyTarget = a; this._firstTweenDic[o] = h } else { h = this._firstTweenDic[o] } for (var l in n.data) { if (h[l] == null) { h[l] = a[l] } } } } } if (typeof t == "string") { this.gotoLabel(t) } else { this.gotoTime(t) } this._loopKey = e; this._lastTime = X.now(); T.timer.frameLoop(1, this, this._update) }; e._update = function () { if (this._currTime >= this._startTime) { if (this._loopKey) { this._complete(); if (!this._tweenDataList) return; this.gotoTime(0) } else { for (var t in this._tweenDic) { s = this._tweenDic[t]; s.complete() } this._complete(); this.pause(); return } } var e = X.now(); var i = e - this._lastTime; var r = this._currTime += i * this.scale; this._lastTime = e; for (t in this._tweenDic) { s = this._tweenDic[t]; s._updateEase(r) } var s; if (this._tweenDataList.length != 0 && this._index < this._tweenDataList.length) { var n = this._tweenDataList[this._index]; if (r >= n.startTime) { this._index++; if (n.type == 0) { this._gidIndex++; s = st.getItemByClass("tween", lt); s._create(n.target, n.data, n.duration, n.ease, g.create(this, this._animComplete, [this._gidIndex]), 0, false, n.isTo, true, false); s.setStartTime(r); s.gid = this._gidIndex; this._tweenDic[this._gidIndex] = s; s._updateEase(r) } else { this.event("label", n.data) } } } }; e._animComplete = function (t) { var e = this._tweenDic[t]; if (e) delete this._tweenDic[t] }; e._complete = function () { this.event("complete") }; e.reset = function () { var t; if (this._labelDic) { for (t in this._labelDic) { delete this._labelDic[t] } } var e; for (t in this._tweenDic) { e = this._tweenDic[t]; e.clear(); delete this._tweenDic[t] } for (t in this._firstTweenDic) { delete this._firstTweenDic[t] } this._endTweenDataList = null; if (this._tweenDataList && this._tweenDataList.length) { var i = 0, r = 0; r = this._tweenDataList.length; for (i = 0; i < r; i++) { if (this._tweenDataList[i]) this._tweenDataList[i].destroy() } } this._tweenDataList.length = 0; this._currTime = 0; this._lastTime = 0; this._startTime = 0; this._index = 0; this._gidIndex = 0; this.scale = 1; T.timer.clear(this, this._update) }; e.destroy = function () { this.reset(); this._labelDic = null; this._tweenDic = null; this._tweenDataList = null; this._firstTweenDic = null }; u(0, e, "index", function () { return this._frameIndex }, function (t) { this._frameIndex = t; this.gotoTime(this._frameIndex / this._frameRate * 1e3) }); u(0, e, "total", function () { this._total = Math.floor(this._startTime / 1e3 * this._frameRate); return this._total }); n.to = function (t, e, i, r, s) { s === void 0 && (s = 0); return (new n).to(t, e, i, r, s) }; n.from = function (t, e, i, r, s) { s === void 0 && (s = 0); return (new n).from(t, e, i, r, s) }; n.__init$ = function () { o = function () { function t() { this.type = 0; this.isTo = true; this.startTime = NaN; this.endTime = NaN; this.target = null; this.duration = NaN; this.ease = null; this.data = null } v(t, ""); var e = t.prototype; e.destroy = function () { this.target = null; this.ease = null; this.data = null; this.isTo = true; this.type = 0; st.recover("tweenData", this) }; return t }() }; return n }(n); var Et = function (s) { function i() { this._transform = null; this._tfChanged = false; this._x = 0; this._y = 0; this._width = 0; this._height = 0; this._repaint = 1; this._mouseEnableState = 0; this._zOrder = 0; this._graphics = null; this._renderType = 0; this._optimizeScrollRect = false; this._texture = null; this.mouseThrough = false; this.autoSize = false; this.hitTestPrior = false; this.viewport = null; i.__super.call(this); this._style = o.EMPTY } v(i, "laya.display.Sprite", s); var t = i.prototype; T.imps(t, { "laya.display.ILayout": true }); t.createConchModel = function () { return new ConchNode }; t.destroy = function (t) { t === void 0 && (t = true); this._releaseMem(); s.prototype.destroy.call(this, t); this._style && this._style.destroy(); this._transform && this._transform.destroy(); this._transform = null; this._style = null; this._graphics = null }; t.updateZOrder = function () { ut.updateOrder(this._childs) && this.repaint() }; t.reCache = function () { if (this._$P.cacheCanvas) this._$P.cacheCanvas.reCache = true; this._repaint = 1 }; t.setBounds = function (t) { this._set$P("uBounds", t) }; t.getBounds = function () { if (!this._$P.mBounds) this._set$P("mBounds", new D); return D._getWrapRec(this._boundPointsToParent(), this._$P.mBounds) }; t.getSelfBounds = function () { if (this._$P.uBounds) return this._$P.uBounds; if (!this._$P.mBounds) this._set$P("mBounds", new D); return D._getWrapRec(this._getBoundPointsM(false), this._$P.mBounds) }; t._boundPointsToParent = function (t) { t === void 0 && (t = false); var e = 0, i = 0; if (this._style) { e = this._style._tf.translateX; i = this._style._tf.translateY; t = t || this._style._tf.rotate !== 0; if (this._style.scrollRect) { e += this._style.scrollRect.x; i += this._style.scrollRect.y } } var r = this._getBoundPointsM(t); if (!r || r.length < 1) return r; if (r.length != 8) { r = t ? R.scanPList(r) : D._getWrapRec(r, D.TEMP)._getBoundPoints() } if (!this.transform) { ut.transPointList(r, this._x - e, this._y - i); return r } var s = k.TEMP; var n = 0, a = r.length; for (n = 0; n < a; n += 2) { s.x = r[n]; s.y = r[n + 1]; this.toParentPoint(s); r[n] = s.x; r[n + 1] = s.y } return r }; t.getGraphicBounds = function (t) { t === void 0 && (t = false); if (!this._graphics) return D.TEMP.setTo(0, 0, 0, 0); return this._graphics.getBounds(t) }; t._getBoundPointsM = function (t) { t === void 0 && (t = false); if (this._$P.uBounds) return this._$P.uBounds._getBoundPoints(); if (!this._$P.temBM) this._set$P("temBM", []); if (this.scrollRect) { var e = ut.clearArray(this._$P.temBM); var i = D.TEMP; i.copyFrom(this.scrollRect); ut.concatArray(e, i._getBoundPoints()); return e } var r = this._graphics ? this._graphics.getBoundPoints() : ut.clearArray(this._$P.temBM); var s; var n; var a; a = this._childs; for (var o = 0, h = a.length; o < h; o++) { s = a[o]; if (s instanceof laya.display.Sprite && s.visible == true) { n = s._boundPointsToParent(t); if (n) r = r ? ut.concatArray(r, n) : n } } return r }; t.getStyle = function () { this._style === o.EMPTY && (this._style = new o); return this._style }; t.setStyle = function (t) { this._style = t }; t._adjustTransform = function () { this._tfChanged = false; var t = this._style; var e = t._tf; var i = e.scaleX, r = e.scaleY; var s; if (e.rotate || i !== 1 || r !== 1 || e.skewX || e.skewY) { s = this._transform || (this._transform = L.create()); s.bTransform = true; var n = (e.rotate - e.skewX) * .0174532922222222; var a = (e.rotate + e.skewY) * .0174532922222222; var o = Math.cos(a); var h = Math.sin(a); var l = Math.sin(n); var u = Math.cos(n); s.a = i * o; s.b = i * h; s.c = -r * l; s.d = r * u; s.tx = s.ty = 0; return s } else { this._transform && this._transform.destroy(); this._transform = null; this._renderType &= ~4 } return s }; t.pos = function (t, e, i) { i === void 0 && (i = false); if (this._x !== t || this._y !== e) { if (this.destroyed) return this; if (i) { this._x = t; this._y = e; this.conchModel && this.conchModel.pos(this._x, this._y); var r = this._parent; if (r && r._repaint === 0) { r._repaint = 1; r.parentRepaint() } if (this._$P.maskParent && this._$P.maskParent._repaint === 0) { this._$P.maskParent._repaint = 1; this._$P.maskParent.parentRepaint() } } else { this.x = t; this.y = e } } return this }; t.pivot = function (t, e) { this.pivotX = t; this.pivotY = e; return this }; t.size = function (t, e) { this.width = t; this.height = e; return this }; t.scale = function (t, e, i) { i === void 0 && (i = false); var r = this.getStyle(); var s = r._tf; if (s.scaleX != t || s.scaleY != e) { if (this.destroyed) return this; if (i) { r.setScale(t, e); this._tfChanged = true; this.conchModel && this.conchModel.scale(t, e); this._renderType |= 4; var n = this._parent; if (n && n._repaint === 0) { n._repaint = 1; n.parentRepaint() } } else { this.scaleX = t; this.scaleY = e } } return this }; t.skew = function (t, e) { this.skewX = t; this.skewY = e; return this }; t.render = function (t, e, i) { at.spriteCount++; V.renders[this._renderType]._fun(this, t, e + this._x, i + this._y); this._repaint = 0 }; t.drawToCanvas = function (t, e, i, r) { if (U.isConchNode) { var s = Ot.create("2D"); var n = new W(t, e, s); n.ctx.setCanvasType(1); this.conchModel.drawToCanvas(s.source, i, r); return s } else { return E.drawToCanvas(this, this._renderType, t, e, i, r) } }; t.customRender = function (t, e, i) { this._renderType |= 1024 }; t._applyFilters = function () { if (U.isWebGL) return; var t; t = this._$P.filters; if (!t || t.length < 1) return; for (var e = 0, i = t.length; e < i; e++) { t[e].action.apply(this._$P.cacheCanvas) } }; t._isHaveGlowFilter = function () { var t = 0, e = 0; if (this.filters) { for (t = 0; t < this.filters.length; t++) { if (this.filters[t].type == 8) { return true } } } for (t = 0, e = this._childs.length; t < e; t++) { if (this._childs[t]._isHaveGlowFilter()) { return true } } return false }; t.localToGlobal = function (t, e) { e === void 0 && (e = false); if (e === true) { t = new k(t.x, t.y) } var i = this; while (i) { if (i == T.stage) break; t = i.toParentPoint(t); i = i.parent } return t }; t.globalToLocal = function (t, e) { e === void 0 && (e = false); if (e) { t = new k(t.x, t.y) } var i = this; var r = []; while (i) { if (i == T.stage) break; r.push(i); i = i.parent } var s = r.length - 1; while (s >= 0) { i = r[s]; t = i.fromParentPoint(t); s-- } return t }; t.toParentPoint = function (t) { if (!t) return t; t.x -= this.pivotX; t.y -= this.pivotY; if (this.transform) { this._transform.transformPoint(t) } t.x += this._x; t.y += this._y; var e = this._style.scrollRect; if (e) { t.x -= e.x; t.y -= e.y } return t }; t.fromParentPoint = function (t) { if (!t) return t; t.x -= this._x; t.y -= this._y; var e = this._style.scrollRect; if (e) { t.x += e.x; t.y += e.y } if (this.transform) { this._transform.invertTransformPoint(t) } t.x += this.pivotX; t.y += this.pivotY; return t }; t.on = function (t, e, i, r) { if (this._mouseEnableState !== 1 && this.isMouseEvent(t)) { this.mouseEnabled = true; this._setBit(2, true); if (this._parent) { this._$2__onDisplay() } return this._createListener(t, e, i, r, false) } return s.prototype.on.call(this, t, e, i, r) }; t.once = function (t, e, i, r) { if (this._mouseEnableState !== 1 && this.isMouseEvent(t)) { this.mouseEnabled = true; this._setBit(2, true); if (this._parent) { this._$2__onDisplay() } return this._createListener(t, e, i, r, true) } return s.prototype.once.call(this, t, e, i, r) }; t._$2__onDisplay = function () { if (this._mouseEnableState !== 1) { var t = this; t = t.parent; while (t && t._mouseEnableState !== 1) { if (t._getBit(2)) break; t.mouseEnabled = true; t._setBit(2, true); t = t.parent } } }; t.loadImage = function (t, e, i, r, s, n) { var a = this; e === void 0 && (e = 0); i === void 0 && (i = 0); r === void 0 && (r = 0); s === void 0 && (s = 0); function o(t) { if (!a.destroyed) { a.size(e + (r || t.width), i + (s || t.height)); a.repaint(); n && n.runWith(t) } } this.graphics.loadImage(t, e, i, r, s, o); return this }; t.repaint = function () { this.conchModel && this.conchModel.repaint && this.conchModel.repaint(); if (this._repaint === 0) { this._repaint = 1; this.parentRepaint() } if (this._$P && this._$P.maskParent) { this._$P.maskParent.repaint() } }; t._needRepaint = function () { return this._repaint !== 0 && this._$P.cacheCanvas && this._$P.cacheCanvas.reCache }; t._childChanged = function (t) { if (this._childs.length) this._renderType |= 2048; else this._renderType &= ~2048; if (t && this._get$P("hasZorder")) T.timer.callLater(this, this.updateZOrder); this.repaint() }; t.parentRepaint = function () { var t = this._parent; if (t && t._repaint === 0) { t._repaint = 1; t.parentRepaint() } }; t.startDrag = function (t, e, i, r, s, n, a) { e === void 0 && (e = false); i === void 0 && (i = 0); r === void 0 && (r = 300); n === void 0 && (n = false); a === void 0 && (a = .92); this._$P.dragging || this._set$P("dragging", new Q); this._$P.dragging.start(this, t, e, i, r, s, n, a) }; t.stopDrag = function () { this._$P.dragging && this._$P.dragging.stop() }; t._releaseMem = function () { if (!this._$P) return; var t = this._$P.cacheCanvas; if (t && t.ctx) { st.recover("RenderContext", t.ctx); t.ctx.canvas.size(0, 0); t.ctx = null } var e = this._$P._filterCache; if (e) { e.destroy(); e.recycle(); this._set$P("_filterCache", null) } this._$P._isHaveGlowFilter && this._set$P("_isHaveGlowFilter", false); this._$P._isHaveGlowFilter = null }; t._setDisplay = function (t) { if (!t) this._releaseMem(); s.prototype._setDisplay.call(this, t) }; t.hitTestPoint = function (t, e) { var i = this.globalToLocal(k.TEMP.setTo(t, e)); t = i.x; e = i.y; var r = this._$P.hitArea ? this._$P.hitArea : this._width > 0 && this._height > 0 ? D.TEMP.setTo(0, 0, this._width, this._height) : this.getSelfBounds(); return r.contains(t, e) }; t.getMousePoint = function () { return this.globalToLocal(k.TEMP.setTo(T.stage.mouseX, T.stage.mouseY)) }; t._getWords = function () { return null }; t._addChildsToLayout = function (r) { var t = this._getWords(); if (t == null && this._childs.length == 0) return false; if (t) { for (var e = 0, i = t.length; e < i; e++) { r.push(t[e]) } } this._childs.forEach(function (t, e, i) { t._style._enableLayout() && t._addToLayout(r) }); return true }; t._addToLayout = function (t) { if (this._style.absolute) return; this._style.block ? t.push(this) : this._addChildsToLayout(t) && (this.x = this.y = 0) }; t._isChar = function () { return false }; t._getCSSStyle = function () { return this._style.getCSSStyle() }; t._setAttributes = function (t, e) { switch (t) { case "x": this.x = parseFloat(e); break; case "y": this.y = parseFloat(e); break; case "width": this.width = parseFloat(e); break; case "height": this.height = parseFloat(e); break; default: this[t] = e } }; t._layoutLater = function () { this.parent && this.parent._layoutLater() }; u(0, t, "optimizeScrollRect", function () { return this._optimizeScrollRect }, function (t) { if (this._optimizeScrollRect != t) { this._optimizeScrollRect = t; this.conchModel && this.conchModel.optimizeScrollRect(t) } }); u(0, t, "customRenderEnable", null, function (t) { if (t) { this._renderType |= 1024; if (U.isConchNode) { i.CustomList.push(this); var e = new Ot("2d"); e._setContext(new CanvasRenderingContext2D); this.customContext = new W(0, 0, e); e.context.setCanvasType && e.context.setCanvasType(2); this.conchModel.custom(e.context) } } }); u(0, t, "cacheAsBitmap", function () { return this.cacheAs !== "none" }, function (t) { this.cacheAs = t ? this._$P["hasFilter"] ? "none" : "normal" : "none" }); u(0, t, "cacheAs", function () { return this._$P.cacheCanvas == null ? "none" : this._$P.cacheCanvas.type }, function (t) { var e = this._$P.cacheCanvas; if (t === (e ? e.type : "none")) return; if (t !== "none") { if (!this._getBit(1)) this._setUpNoticeType(1); e || (e = this._set$P("cacheCanvas", st.getItemByClass("cacheCanvas", Object))); e.type = t; e.reCache = true; this._renderType |= 16; if (t == "bitmap") this.conchModel && this.conchModel.cacheAs(1); this._set$P("cacheForFilters", false) } else { if (this._$P["_mask"]) { } else if (this._$P["hasFilter"]) { this._set$P("cacheForFilters", true) } else { if (e) { var i = e; if (i && i.ctx) { st.recover("RenderContext", i.ctx); i.ctx.canvas.size(0, 0); i.ctx = null } st.recover("cacheCanvas", e) } this._$P.cacheCanvas = null; this._renderType &= ~16; this.conchModel && this.conchModel.cacheAs(0) } } this.repaint() }); u(0, t, "zOrder", function () { return this._zOrder }, function (t) { if (this._zOrder != t) { this._zOrder = t; this.conchModel && this.conchModel.setZOrder && this.conchModel.setZOrder(t); if (this._parent) { t && this._parent._set$P("hasZorder", true); T.timer.callLater(this._parent, this.updateZOrder) } } }); u(0, t, "rotation", function () { return this._style._tf.rotate }, function (t) { var e = this.getStyle(); if (e._tf.rotate !== t) { e.setRotate(t); this._tfChanged = true; this.conchModel && this.conchModel.rotate(t); this._renderType |= 4; var i = this._parent; if (i && i._repaint === 0) { i._repaint = 1; i.parentRepaint() } } }); u(0, t, "width", function () { if (!this.autoSize) return this._width; return this.getSelfBounds().width }, function (t) { if (this._width !== t) { this._width = t; this.conchModel && this.conchModel.size(t, this._height); this.repaint() } }); u(0, t, "x", function () { return this._x }, function (t) { if (this._x !== t) { if (this.destroyed) return; this._x = t; this.conchModel && this.conchModel.pos(t, this._y); var e = this._parent; if (e && e._repaint === 0) { e._repaint = 1; e.parentRepaint() } if (this._$P.maskParent && this._$P.maskParent._repaint === 0) { this._$P.maskParent._repaint = 1; this._$P.maskParent.parentRepaint() } } }); u(0, t, "globalScaleY", function () { var t = 1; var e = this; while (e) { if (e === T.stage) break; t *= e.scaleY; e = e.parent } return t }); u(0, t, "hitArea", function () { return this._$P.hitArea }, function (t) { this._set$P("hitArea", t) }); u(0, t, "staticCache", function () { return this._$P.staticCache }, function (t) { this._set$P("staticCache", t); if (!t) this.reCache() }); u(0, t, "texture", function () { return this._texture }, function (t) { if (this._texture != t) { this._texture = t; this.graphics.cleanByTexture(t, 0, 0) } }); u(0, t, "y", function () { return this._y }, function (t) { if (this._y !== t) { if (this.destroyed) return; this._y = t; this.conchModel && this.conchModel.pos(this._x, t); var e = this._parent; if (e && e._repaint === 0) { e._repaint = 1; e.parentRepaint() } if (this._$P.maskParent && this._$P.maskParent._repaint === 0) { this._$P.maskParent._repaint = 1; this._$P.maskParent.parentRepaint() } } }); u(0, t, "height", function () { if (!this.autoSize) return this._height; return this.getSelfBounds().height }, function (t) { if (this._height !== t) { this._height = t; this.conchModel && this.conchModel.size(this._width, t); this.repaint() } }); u(0, t, "blendMode", function () { return this._style.blendMode }, function (t) { this.getStyle().blendMode = t; this.conchModel && this.conchModel.blendMode(t); if (t && t != "source-over") this._renderType |= 8; else this._renderType &= ~8; this.parentRepaint() }); u(0, t, "scaleX", function () { return this._style._tf.scaleX }, function (t) { var e = this.getStyle(); if (e._tf.scaleX !== t) { e.setScaleX(t); this._tfChanged = true; this.conchModel && this.conchModel.scale(t, e._tf.scaleY); this._renderType |= 4; var i = this._parent; if (i && i._repaint === 0) { i._repaint = 1; i.parentRepaint() } } }); u(0, t, "scaleY", function () { return this._style._tf.scaleY }, function (t) { var e = this.getStyle(); if (e._tf.scaleY !== t) { e.setScaleY(t); this._tfChanged = true; this.conchModel && this.conchModel.scale(e._tf.scaleX, t); this._renderType |= 4; var i = this._parent; if (i && i._repaint === 0) { i._repaint = 1; i.parentRepaint() } } }); u(0, t, "stage", function () { return T.stage }); u(0, t, "skewX", function () { return this._style._tf.skewX }, function (t) { var e = this.getStyle(); if (e._tf.skewX !== t) { e.setSkewX(t); this._tfChanged = true; this.conchModel && this.conchModel.skew(t, e._tf.skewY); this._renderType |= 4; var i = this._parent; if (i && i._repaint === 0) { i._repaint = 1; i.parentRepaint() } } }); u(0, t, "scrollRect", function () { return this._style.scrollRect }, function (t) { this.getStyle().scrollRect = t; this.repaint(); if (t) { this._renderType |= 128; this.conchModel && this.conchModel.scrollRect(t.x, t.y, t.width, t.height) } else { this._renderType &= ~128; if (this.conchModel) { if (i.RUNTIMEVERION < "0.9.1") this.conchModel.removeType(64); else this.conchModel.removeType(128) } } }); u(0, t, "skewY", function () { return this._style._tf.skewY }, function (t) { var e = this.getStyle(); if (e._tf.skewY !== t) { e.setSkewY(t); this._tfChanged = true; this.conchModel && this.conchModel.skew(e._tf.skewX, t); this._renderType |= 4; var i = this._parent; if (i && i._repaint === 0) { i._repaint = 1; i.parentRepaint() } } }); u(0, t, "transform", function () { return this._tfChanged ? this._adjustTransform() : this._transform }, function (t) { this._tfChanged = false; this._transform = t; if (t) { this._x = t.tx; this._y = t.ty; t.tx = t.ty = 0; this.conchModel && this.conchModel.transform(t.a, t.b, t.c, t.d, this._x, this._y) } if (t) this._renderType |= 4; else { this._renderType &= ~4; this.conchModel && this.conchModel.removeType(4) } this.parentRepaint() }); u(0, t, "pivotX", function () { return this._style._tf.translateX }, function (t) { this.getStyle().setTranslateX(t); this.conchModel && this.conchModel.pivot(t, this._style._tf.translateY); this.repaint() }); u(0, t, "pivotY", function () { return this._style._tf.translateY }, function (t) { this.getStyle().setTranslateY(t); this.conchModel && this.conchModel.pivot(this._style._tf.translateX, t); this.repaint() }); u(0, t, "alpha", function () { return this._style.alpha }, function (t) { if (this._style && this._style.alpha !== t) { t = t < 0 ? 0 : t > 1 ? 1 : t; this.getStyle().alpha = t; this.conchModel && this.conchModel.alpha(t); if (t !== 1) this._renderType |= 2; else this._renderType &= ~2; this.parentRepaint() } }); u(0, t, "visible", function () { return this._style.visible }, function (t) { if (this._style && this._style.visible !== t) { this.getStyle().visible = t; this.conchModel && this.conchModel.visible(t); this.parentRepaint() } }); u(0, t, "graphics", function () { return this._graphics || (this.graphics = E.createGraphics()) }, function (t) { if (this._graphics) this._graphics._sp = null; this._graphics = t; if (t) { this._renderType &= ~1; this._renderType |= 512; t._sp = this; this.conchModel && this.conchModel.graphics(this._graphics) } else { this._renderType &= ~512; this._renderType &= ~1; if (this.conchModel) { if (i.RUNTIMEVERION < "0.9.1") this.conchModel.removeType(256); else this.conchModel.removeType(512) } } this.repaint() }); u(0, t, "filters", function () { return this._$P.filters }, function (t) { t && t.length === 0 && (t = null); if (this._$P.filters == t) return; this._set$P("filters", t ? t.slice() : null); if (U.isConchApp) { if (this.conchModel) { if (i.RUNTIMEVERION < "0.9.1") this.conchModel.removeType(16); else this.conchModel.removeType(32) } if (this._$P.filters && this._$P.filters.length == 1) { this._$P.filters[0].callNative(this) } } if (U.isWebGL) { if (t && t.length) { this._renderType |= 32 } else { this._renderType &= ~32 } } if (t && t.length > 0) { if (!this._getBit(1)) this._setUpNoticeType(1); if (!(U.isWebGL && t.length == 1 && t[0] instanceof laya.filters.ColorFilter)) { if (this.cacheAs != "bitmap") { if (!U.isConchNode) this.cacheAs = "bitmap"; this._set$P("cacheForFilters", true) } this._set$P("hasFilter", true) } } else { this._set$P("hasFilter", false); if (this._$P["cacheForFilters"] && this.cacheAs == "bitmap") { this.cacheAs = "none" } } this.repaint() }); u(0, t, "parent", s.prototype._$get_parent, function (t) { T.superSet(dt, this, "parent", t); if (t && this._getBit(2)) { this._$2__onDisplay() } }); u(0, t, "mask", function () { return this._$P._mask }, function (t) { if (t && this.mask && this.mask._$P.maskParent) return; if (t) { this.cacheAs = "bitmap"; this._set$P("_mask", t); t._set$P("maskParent", this) } else { this.mask && this.mask._set$P("maskParent", null); this._set$P("_mask", t); this.cacheAs = "none" } this.conchModel && this.conchModel.mask(t ? t.conchModel : null); this._renderType |= 64; this.parentRepaint() }); u(0, t, "mouseEnabled", function () { return this._mouseEnableState > 1 }, function (t) { this._mouseEnableState = t ? 2 : 1 }); u(0, t, "globalScaleX", function () { var t = 1; var e = this; while (e) { if (e === T.stage) break; t *= e.scaleX; e = e.parent } return t }); u(0, t, "mouseX", function () { return this.getMousePoint().x }); u(0, t, "mouseY", function () { return this.getMousePoint().y }); i.fromImage = function (t) { return (new i).loadImage(t) }; i.CustomList = []; h(i, ["RUNTIMEVERION", function () { return this.RUNTIMEVERION = a.conch ? conchConfig.getRuntimeVersion().substr(conchConfig.getRuntimeVersion().lastIndexOf("-") + 1) : "" }]); return i }(dt); var Rt = function (t) { function e(t) { this._audio = null; this._onEnd = null; this._resumePlay = null; e.__super.call(this); this._onEnd = ut.bind(this.__onEnd, this); this._resumePlay = ut.bind(this.__resumePlay, this); t.addEventListener("ended", this._onEnd); this._audio = t } v(e, "laya.media.h5audio.AudioSoundChannel", t); var i = e.prototype; i.__onEnd = function () { if (this.loops == 1) { if (this.completeHandler) { T.timer.once(10, this, this.__runComplete, [this.completeHandler], false); this.completeHandler = null } this.stop(); this.event("complete"); return } if (this.loops > 0) { this.loops-- } this.startTime = 0; this.play() }; i.__resumePlay = function () { if (this._audio) this._audio.removeEventListener("canplay", this._resumePlay); if (this.isStopped) return; try { this._audio.currentTime = this.startTime; X.container.appendChild(this._audio); this._audio.play() } catch (t) { this.event("error") } }; i.play = function () { this.isStopped = false; if (!this._audio) return; try { this._audio.playbackRate = B.playbackRate; this._audio.currentTime = this.startTime } catch (t) { this._audio.addEventListener("canplay", this._resumePlay); return } B.addChannel(this); X.container.appendChild(this._audio); if ("play" in this._audio) this._audio.play() }; i.stop = function () { this.isStopped = true; B.removeChannel(this); this.completeHandler = null; if (!this._audio) return; if ("pause" in this._audio) if (U.isConchApp) { this._audio.stop() } this._audio.pause(); this._audio.removeEventListener("ended", this._onEnd); this._audio.removeEventListener("canplay", this._resumePlay); if (!X.onIE) { if (this._audio != vt._musicAudio) { st.recover("audio:" + this.url, this._audio) } } X.removeElement(this._audio); this._audio = null }; i.pause = function () { this.isStopped = true; B.removeChannel(this); if ("pause" in this._audio) this._audio.pause() }; i.resume = function () { if (!this._audio) return; this.isStopped = false; B.addChannel(this); if ("play" in this._audio) this._audio.play() }; u(0, i, "position", function () { if (!this._audio) return 0; return this._audio.currentTime }); u(0, i, "duration", function () { if (!this._audio) return 0; return this._audio.duration }); u(0, i, "volume", function () { if (!this._audio) return 1; return this._audio.volume }, function (t) { if (!this._audio) return; this._audio.volume = t }); return e }(mt); var Pt = function (t) { function e() { this.audioBuffer = null; this.gain = null; this.bufferSource = null; this._currentTime = 0; this._volume = 1; this._startTime = 0; this._pauseTime = 0; this._onPlayEnd = null; this.context = yt.ctx; e.__super.call(this); this._onPlayEnd = ut.bind(this.__onPlayEnd, this); if (this.context["createGain"]) { this.gain = this.context["createGain"]() } else { this.gain = this.context["createGainNode"]() } } v(e, "laya.media.webaudio.WebAudioSoundChannel", t); var i = e.prototype; i.play = function () { B.addChannel(this); this.isStopped = false; this._clearBufferSource(); if (!this.audioBuffer) return; if (this.startTime >= this.duration) return this.stop(); var t = this.context; var e = this.gain; var i = t.createBufferSource(); this.bufferSource = i; i.buffer = this.audioBuffer; i.connect(e); if (e) e.disconnect(); e.connect(t.destination); i.onended = this._onPlayEnd; this._startTime = X.now(); if (this.gain.gain.setTargetAtTime) { this.gain.gain.setTargetAtTime(this._volume, this.context.currentTime, .001) } else this.gain.gain.value = this._volume; if (this.loops == 0) { i.loop = true } if (i.playbackRate.setTargetAtTime) { i.playbackRate.setTargetAtTime(B.playbackRate, this.context.currentTime, .001) } else i.playbackRate.value = B.playbackRate; i.start(0, this.startTime); this._currentTime = 0 }; i.__onPlayEnd = function () { if (this.loops == 1) { if (this.completeHandler) { T.timer.once(10, this, this.__runComplete, [this.completeHandler], false); this.completeHandler = null } this.stop(); this.event("complete"); return } if (this.loops > 0) { this.loops-- } this.startTime = 0; this.play() }; i._clearBufferSource = function () { if (this.bufferSource) { var t = this.bufferSource; if (t.stop) { t.stop(0) } else { t.noteOff(0) } t.disconnect(0); t.onended = null; if (!e._tryCleanFailed) this._tryClearBuffer(t); this.bufferSource = null } }; i._tryClearBuffer = function (t) { if (!X.onMac) { try { t.buffer = null } catch (t) { e._tryCleanFailed = true } return } try { t.buffer = yt._miniBuffer } catch (t) { e._tryCleanFailed = true } }; i.stop = function () { t.prototype.stop.call(this); this._clearBufferSource(); this.audioBuffer = null; if (this.gain) this.gain.disconnect(); this.isStopped = true; B.removeChannel(this); this.completeHandler = null; if (B.autoReleaseSound) T.timer.once(5e3, null, B.disposeSoundIfNotUsed, [this.url], false) }; i.pause = function () { if (!this.isStopped) { this._pauseTime = this.position } this._clearBufferSource(); if (this.gain) this.gain.disconnect(); this.isStopped = true; B.removeChannel(this); if (B.autoReleaseSound) T.timer.once(5e3, null, B.disposeSoundIfNotUsed, [this.url], false) }; i.resume = function () { this.startTime = this._pauseTime; this.play() }; u(0, i, "position", function () { if (this.bufferSource) { return (X.now() - this._startTime) / 1e3 + this.startTime } return 0 }); u(0, i, "duration", function () { if (this.audioBuffer) { return this.audioBuffer.duration } return 0 }); u(0, i, "volume", function () { return this._volume }, function (t) { if (this.isStopped) { return } this._volume = t; if (this.gain.gain.setTargetAtTime) { this.gain.gain.setTargetAtTime(t, this.context.currentTime, .001) } else this.gain.gain.value = t }); e._tryCleanFailed = false; e.SetTargetDelay = .001; return e }(mt); var Lt = function (t) { function e() { e.__super.call(this); this._w = 0; this._h = 0 } v(e, "laya.resource.Bitmap", t); var i = e.prototype; u(0, i, "width", function () { return this._w }); u(0, i, "height", function () { return this._h }); u(0, i, "source", function () { return this._source }); return e }(At); var kt = function (e) { function t() { this.loop = false; this.wrapMode = 0; this._index = 0; this._count = 0; this._isPlaying = false; this._labels = null; this._isReverse = false; this._frameRateChanged = false; this._controlNode = null; this._actionName = null; t.__super.call(this); this._interval = m.animationInterval; this._setUpNoticeType(1) } v(t, "laya.display.AnimationPlayerBase", e); var i = t.prototype; i.play = function (t, e, i, r) { t === void 0 && (t = 0); e === void 0 && (e = true); i === void 0 && (i = ""); r === void 0 && (r = true); this._isPlaying = true; this.index = typeof t == "string" ? this._getFrameByLabel(t) : t; this.loop = e; this._actionName = i; this._isReverse = this.wrapMode == 1; if (this.interval > 0) { this.timerLoop(this.interval, this, this._frameLoop, null, true, true) } }; i._getFrameByLabel = function (t) { var e = 0; for (e = 0; e < this._count; e++) { if (this._labels[e] && this._labels[e].indexOf(t) >= 0) return e } return 0 }; i._frameLoop = function () { if (this._isReverse) { this._index--; if (this._index < 0) { if (this.loop) { if (this.wrapMode == 2) { this._index = this._count > 0 ? 1 : 0; this._isReverse = false } else { this._index = this._count - 1 } this.event("complete") } else { this._index = 0; this.stop(); this.event("complete"); return } } } else { this._index++; if (this._index >= this._count) { if (this.loop) { if (this.wrapMode == 2) { this._index = this._count - 2 >= 0 ? this._count - 2 : 0; this._isReverse = true } else { this._index = 0 } this.event("complete") } else { this._index--; this.stop(); this.event("complete"); return } } } this.index = this._index }; i._setControlNode = function (t) { if (this._controlNode) { this._controlNode.off("display", this, this._checkResumePlaying); this._controlNode.off("undisplay", this, this._checkResumePlaying) } this._controlNode = t; if (t && t != this) { t.on("display", this, this._checkResumePlaying); t.on("undisplay", this, this._checkResumePlaying) } }; i._setDisplay = function (t) { e.prototype._setDisplay.call(this, t); this._checkResumePlaying() }; i._checkResumePlaying = function () { if (this._isPlaying) { if (this._controlNode.displayedInStage) this.play(this._index, this.loop, this._actionName); else this.clearTimer(this, this._frameLoop) } }; i.stop = function () { this._isPlaying = false; this.clearTimer(this, this._frameLoop) }; i.addLabel = function (t, e) { if (!this._labels) this._labels = {}; if (!this._labels[e]) this._labels[e] = []; this._labels[e].push(t) }; i.removeLabel = function (t) { if (!t) this._labels = null; else if (this._labels) { for (var e in this._labels) { this._removeLabelFromLabelList(this._labels[e], t) } } }; i._removeLabelFromLabelList = function (t, e) { if (!t) return; for (var i = t.length - 1; i >= 0; i--) { if (t[i] == e) { t.splice(i, 1) } } }; i.gotoAndStop = function (t) { this.index = typeof t == "string" ? this._getFrameByLabel(t) : t; this.stop() }; i._displayToIndex = function (t) { }; i.clear = function () { this.stop(); this._labels = null }; u(0, i, "interval", function () { return this._interval }, function (t) { if (this._interval != t) { this._frameRateChanged = true; this._interval = t; if (this._isPlaying && t > 0) { this.timerLoop(t, this, this._frameLoop, null, true, true) } } }); u(0, i, "isPlaying", function () { return this._isPlaying }); u(0, i, "index", function () { return this._index }, function (t) { this._index = t; this._displayToIndex(t); if (this._labels && this._labels[t]) { var e = this._labels[t]; for (var i = 0, r = e.length; i < r; i++) { this.event("label", e[i]) } } }); u(0, i, "count", function () { return this._count }); t.WRAP_POSITIVE = 0; t.WRAP_REVERSE = 1; t.WRAP_PINGPONG = 2; return t }(Et); var Dt = function (e) { function _() { this._clipPoint = null; this._currBitmapFont = null; this._text = null; this._isChanged = false; this._textWidth = 0; this._textHeight = 0; this._lines = []; this._lineWidths = []; this._startX = NaN; this._startY = NaN; this._lastVisibleLineIndex = -1; this._words = null; this._charSize = {}; this.underline = false; this._underlineColor = null; _.__super.call(this); this.overflow = _.VISIBLE; this._style = new pt(this); this._style.wordWrap = false } v(_, "laya.display.Text", e); var t = _.prototype; t.destroy = function (t) { t === void 0 && (t = true); e.prototype.destroy.call(this, t); this._lines = null; if (this._words) { this._words.length = 0; this._words = null } }; t._getBoundPointsM = function (t) { t === void 0 && (t = false); var e = D.TEMP; e.setTo(0, 0, this.width, this.height); return e._getBoundPoints() }; t.getGraphicBounds = function (t) { t === void 0 && (t = false); var e = D.TEMP; e.setTo(0, 0, this.width, this.height); return e }; t._getCSSStyle = function () { return this._style }; t.lang = function (t, e, i, r, s, n, a, o, h, l, u) { t = _.langPacks && _.langPacks[t] ? _.langPacks[t] : t; if (arguments.length < 2) { this._text = t } else { for (var c = 0, f = arguments.length; c < f; c++) { t = t.replace("{" + c + "}", arguments[c + 1]) } this._text = t } }; t._isPassWordMode = function () { var t = this._style; var e = t.password; if ("prompt" in this && this["prompt"] == this._text) e = false; return e }; t._getPassWordTxt = function (t) { var e = t.length; var i; i = ""; for (var r = e; r > 0; r--) { i += "●" } return i }; t.renderText = function (t, e) { var i = this.graphics; i.clear(true); var r = (this.italic ? "italic " : "") + (this.bold ? "bold " : "") + this.fontSize + "px " + (X.onIPhone ? laya.display.Text._fontFamilyMap[this.font] || this.font : this.font); X.context.font = r; var s = this.padding; var n = s[3]; var a = "left"; var o = this._lines; var h = this.leading + this._charSize.height; var l = this._currBitmapFont; if (l) { h = this.leading + l.getMaxHeight() } var u = s[0]; if (!l && this._width > 0 && this._textWidth <= this._width) { if (this.align == "right") { a = "right"; n = this._width - s[1] } else if (this.align == "center") { a = "center"; n = this._width * .5 + s[3] - s[1] } } if (this._height > 0) { var c = this._textHeight > this._height ? "top" : this.valign; if (c === "middle") u = (this._height - e * h) * .5 + s[0] - s[2]; else if (c === "bottom") u = this._height - e * h - s[2] } var f = this._style; if (l && l.autoScaleSize) { var _ = l.fontSize / this.fontSize } if (this._clipPoint) { i.save(); if (l && l.autoScaleSize) { var d = 0; var p = 0; this._width ? d = this._width - s[3] - s[1] : d = this._textWidth; this._height ? p = this._height - s[0] - s[2] : p = this._textHeight; d *= _; p *= _; i.clipRect(s[3], s[0], d, p) } else { i.clipRect(s[3], s[0], this._width ? this._width - s[3] - s[1] : this._textWidth, this._height ? this._height - s[0] - s[2] : this._textHeight) } } var v = f.password; if ("prompt" in this && this["prompt"] == this._text) v = false; var m = 0, g = 0; var y = Math.min(this._lines.length, e + t) || 1; for (var x = t; x < y; x++) { var b = o[x]; var w; if (v) { var T = b.length; b = ""; for (var C = T; C > 0; C--) { b += "●" } } if (b === undefined) b = ""; m = n - (this._clipPoint ? this._clipPoint.x : 0); g = u + h * x - (this._clipPoint ? this._clipPoint.y : 0); this.underline && this.drawUnderline(a, m, g, x); if (l) { var S = this.width; if (l.autoScaleSize) { S = this.width * _ } l.drawText(b, this, m, g, this.align, S) } else { if (U.isWebGL) { this._words || (this._words = []); w = this._words.length > x - t ? this._words[x - t] : new _t; w.setText(b) } else { w = b } f.stroke ? i.fillBorderText(w, m, g, r, this.color, f.strokeColor, f.stroke, a) : i.fillText(w, m, g, r, this.color, a) } } if (l && l.autoScaleSize) { var A = 1 / _; this.scale(A, A) } if (this._clipPoint) i.restore(); this._startX = n; this._startY = u }; t.drawUnderline = function (t, e, i, r) { var s = this._lineWidths[r]; switch (t) { case "center": e -= s / 2; break; case "right": e -= s; break; case "left": default: break }i += this._charSize.height; this._graphics.drawLine(e, i, e + s, i, this.underlineColor || this.color, 1) }; t.typeset = function () { this._isChanged = false; if (!this._text) { this._clipPoint = null; this._textWidth = this._textHeight = 0; this.graphics.clear(true); return } if (U.isConchApp) { var t = "" + this._getCSSStyle().font; var e = this._getCSSStyle(); if (e.stroke) { if (this._getCSSStyle().strokeColor) { t += " " + 1 + " " + this._getCSSStyle().strokeColor } } X.context.font = t } else { X.context.font = this._getCSSStyle().font } this._lines.length = 0; this._lineWidths.length = 0; if (this._isPassWordMode()) { this.parseLines(this._getPassWordTxt(this._text)) } else this.parseLines(this._text); this.evalTextSize(); if (this.checkEnabledViewportOrNot()) this._clipPoint || (this._clipPoint = new k(0, 0)); else this._clipPoint = null; var i = this._lines.length; if (this.overflow != _.VISIBLE) { var r = this.overflow == _.HIDDEN ? Math.floor : Math.ceil; i = Math.min(i, r((this.height - this.padding[0] - this.padding[2]) / (this.leading + this._charSize.height))) } var s = this.scrollY / (this._charSize.height + this.leading) | 0; this.renderText(s, i); this.repaint() }; t.evalTextSize = function () { var t = NaN, e = NaN; t = Math.max.apply(this, this._lineWidths); if (this._currBitmapFont) e = this._lines.length * (this._currBitmapFont.getMaxHeight() + this.leading) + this.padding[0] + this.padding[2]; else e = this._lines.length * (this._charSize.height + this.leading) + this.padding[0] + this.padding[2]; if (t != this._textWidth || e != this._textHeight) { this._textWidth = t; this._textHeight = e; if (!this._width || !this._height) this.conchModel && this.conchModel.size(this._width || this._textWidth, this._height || this._textHeight) } }; t.checkEnabledViewportOrNot = function () { return this.overflow == _.SCROLL && (this._width > 0 && this._textWidth > this._width || this._height > 0 && this._textHeight > this._height) }; t.changeText = function (t) { if (this._text !== t) { this.lang(t + ""); if (this._graphics && this._graphics.replaceText(this._text)) { } else { this.typeset() } } }; t.parseLines = function (t) { var e = this.wordWrap || this.overflow == _.HIDDEN; if (e) { var i = this.getWordWrapWidth() } if (this._charSize) { if (this._currBitmapFont) { this._charSize.width = this._currBitmapFont.getMaxWidth(); this._charSize.height = this._currBitmapFont.getMaxHeight() } else { var r = X.context.measureText(_._testWord); if (!r || U.isConchApp && r.width === 0 && r.height === 0) { r = X.context.measureText("W") } this._charSize.width = r.width; this._charSize.height = r.height || this.fontSize } } var s = t.replace(/\r\n/g, "\n").split("\n"); for (var n = 0, a = s.length; n < a; n++) { var o = s[n]; if (e) this.parseLine(o, i); else { this._lineWidths.push(this.getTextWidth(o)); this._lines.push(o) } } }; t.parseLine = function (t, e) { var i = X.context; var r = this._lines; var s = 0; var n; var a = NaN; var o = NaN; var h = 0; a = this.getTextWidth(t); if (a <= e) { r.push(t); this._lineWidths.push(a); return } a = this._charSize.width; s = Math.floor(e / a); s == 0 && (s = 1); a = this.getTextWidth(t.substring(0, s)); o = a; for (var l = s, u = t.length; l < u; l++) { a = this.getTextWidth(t.charAt(l)); o += a; if (o > e) { if (this.wordWrap) { var c = t.substring(h, l); if (c.charCodeAt(c.length - 1) < 255) { n = /(?:\w|-)+$/.exec(c); if (n) { l = n.index + h; if (n.index == 0) l += c.length; else c = t.substring(h, l) } } else if (_.RightToLeft) { n = /([\u0600-\u06FF])+$/.exec(c); if (n) { l = n.index + h; if (n.index == 0) l += c.length; else c = t.substring(h, l) } } r.push(c); this._lineWidths.push(o - a); h = l; if (l + s < u) { l += s; a = this.getTextWidth(t.substring(h, l)); o = a; l-- } else { r.push(t.substring(h, u)); this._lineWidths.push(this.getTextWidth(r[r.length - 1])); h = -1; break } } else if (this.overflow == _.HIDDEN) { r.push(t.substring(0, l)); this._lineWidths.push(this.getTextWidth(r[r.length - 1])); return } } } if (this.wordWrap && h != -1) { r.push(t.substring(h, u)); this._lineWidths.push(this.getTextWidth(r[r.length - 1])) } }; t.getTextWidth = function (t) { if (this._currBitmapFont) return this._currBitmapFont.getTextWidth(t); else return X.context.measureText(t).width }; t.getWordWrapWidth = function () { var t = this.padding; var e = NaN; if (this._currBitmapFont && this._currBitmapFont.autoScaleSize) e = this._width * (this._currBitmapFont.fontSize / this.fontSize); else e = this._width; if (e <= 0) { e = this.wordWrap ? 100 : X.width } e <= 0 && (e = 100); return e - t[3] - t[1] }; t.getCharPoint = function (t, e) { this._isChanged && T.timer.runCallLater(this, this.typeset); var i = 0, r = this._lines, s = 0; for (var n = 0, a = r.length; n < a; n++) { i += r[n].length; if (t < i) { var o = n; break } s = i } var h = (this.italic ? "italic " : "") + (this.bold ? "bold " : "") + this.fontSize + "px " + this.font; X.context.font = h; var l = this.getTextWidth(this._text.substring(s, t)); var u = e || new k; return u.setTo(this._startX + l - (this._clipPoint ? this._clipPoint.x : 0), this._startY + o * (this._charSize.height + this.leading) - (this._clipPoint ? this._clipPoint.y : 0)) }; u(0, t, "width", function () { if (this._width) return this._width; return this.textWidth + this.padding[1] + this.padding[3] }, function (t) { if (t != this._width) { T.superSet(Et, this, "width", t); this.isChanged = true } }); u(0, t, "textWidth", function () { this._isChanged && T.timer.runCallLater(this, this.typeset); return this._textWidth }); u(0, t, "height", function () { if (this._height) return this._height; return this.textHeight }, function (t) { if (t != this._height) { T.superSet(Et, this, "height", t); this.isChanged = true } }); u(0, t, "textHeight", function () { this._isChanged && T.timer.runCallLater(this, this.typeset); return this._textHeight }); u(0, t, "padding", function () { return this._getCSSStyle().padding }, function (t) { this._getCSSStyle().padding = t; this.isChanged = true }); u(0, t, "bold", function () { return this._getCSSStyle().bold }, function (t) { this._getCSSStyle().bold = t; this.isChanged = true }); u(0, t, "text", function () { return this._text || "" }, function (t) { if (this._text !== t) { this.lang(t + ""); this.isChanged = true; this.event("change") } }); u(0, t, "color", function () { return this._getCSSStyle().color }, function (t) { if (this._getCSSStyle().color != t) { this._getCSSStyle().color = t; if (!this._isChanged && this._graphics) { this._graphics.replaceTextColor(this.color) } else { this.isChanged = true } } }); u(0, t, "font", function () { return this._getCSSStyle().fontFamily }, function (t) { if (this._currBitmapFont) { this._currBitmapFont = null; this.scale(1, 1) } if (_._bitmapFonts && _._bitmapFonts[t]) { this._currBitmapFont = _._bitmapFonts[t] } this._getCSSStyle().fontFamily = t; this.isChanged = true }); u(0, t, "fontSize", function () { return this._getCSSStyle().fontSize }, function (t) { this._getCSSStyle().fontSize = t; this.isChanged = true }); u(0, t, "italic", function () { return this._getCSSStyle().italic }, function (t) { this._getCSSStyle().italic = t; this.isChanged = true }); u(0, t, "align", function () { return this._getCSSStyle().align }, function (t) { this._getCSSStyle().align = t; this.isChanged = true }); u(0, t, "valign", function () { return this._getCSSStyle().valign }, function (t) { this._getCSSStyle().valign = t; this.isChanged = true }); u(0, t, "wordWrap", function () { return this._getCSSStyle().wordWrap }, function (t) { this._getCSSStyle().wordWrap = t; this.isChanged = true }); u(0, t, "leading", function () { return this._getCSSStyle().leading }, function (t) { this._getCSSStyle().leading = t; this.isChanged = true }); u(0, t, "bgColor", function () { return this._getCSSStyle().backgroundColor }, function (t) { this._getCSSStyle().backgroundColor = t; this.isChanged = true }); u(0, t, "borderColor", function () { return this._getCSSStyle().borderColor }, function (t) { this._getCSSStyle().borderColor = t; this.isChanged = true }); u(0, t, "stroke", function () { return this._getCSSStyle().stroke }, function (t) { this._getCSSStyle().stroke = t; this.isChanged = true }); u(0, t, "strokeColor", function () { return this._getCSSStyle().strokeColor }, function (t) { this._getCSSStyle().strokeColor = t; this.isChanged = true }); u(0, t, "isChanged", null, function (t) { if (this._isChanged !== t) { this._isChanged = t; t && T.timer.callLater(this, this.typeset) } }); u(0, t, "scrollX", function () { if (!this._clipPoint) return 0; return this._clipPoint.x }, function (t) { if (this.overflow != _.SCROLL || (this.textWidth < this._width || !this._clipPoint)) return; t = t < this.padding[3] ? this.padding[3] : t; var e = this._textWidth - this._width; t = t > e ? e : t; var i = this._height / (this._charSize.height + this.leading) | 0 + 1; this._clipPoint.x = t; this.renderText(this._lastVisibleLineIndex, i) }); u(0, t, "scrollY", function () { if (!this._clipPoint) return 0; return this._clipPoint.y }, function (t) { if (this.overflow != _.SCROLL || (this.textHeight < this._height || !this._clipPoint)) return; t = t < this.padding[0] ? this.padding[0] : t; var e = this._textHeight - this._height; t = t > e ? e : t; var i = t / (this._charSize.height + this.leading) | 0; this._lastVisibleLineIndex = i; var r = (this._height / (this._charSize.height + this.leading) | 0) + 1; this._clipPoint.y = t; this.renderText(i, r) }); u(0, t, "maxScrollX", function () { return this.textWidth < this._width ? 0 : this._textWidth - this._width }); u(0, t, "maxScrollY", function () { return this.textHeight < this._height ? 0 : this._textHeight - this._height }); u(0, t, "lines", function () { if (this._isChanged) this.typeset(); return this._lines }); u(0, t, "underlineColor", function () { return this._underlineColor }, function (t) { this._underlineColor = t; this._isChanged = true; this.typeset() }); _.registerBitmapFont = function (t, e) { _._bitmapFonts || (_._bitmapFonts = {}); _._bitmapFonts[t] = e }; _.unregisterBitmapFont = function (t, e) { e === void 0 && (e = true); if (_._bitmapFonts && _._bitmapFonts[t]) { var i = _._bitmapFonts[t]; if (e) { i.destroy() } delete _._bitmapFonts[t] } }; _.setTextRightToLeft = function () { var t; t = X.canvas.source.style; t.display = "none"; t.position = "absolute"; t.direction = "rtl"; U._mainCanvas.source.style.direction = "rtl"; laya.display.Text.RightToLeft = true; X.document.body.appendChild(X.canvas.source) }; _.supportFont = function (t) { X.context.font = "10px sans-serif"; var e = X.context.measureText("abcji").width; X.context.font = "10px " + t; var i = X.context.measureText("abcji").width; console.log(e, i); if (e === i) return false; else return true }; _._testWord = "游"; _.langPacks = null; _.VISIBLE = "visible"; _.SCROLL = "scroll"; _.HIDDEN = "hidden"; _.CharacterCache = true; _.RightToLeft = false; _._bitmapFonts = null; h(_, ["_fontFamilyMap", function () { return this._fontFamilyMap = { "报隶": "报隶-简", "黑体": "黑体-简", "楷体": "楷体-简", "兰亭黑": "兰亭黑-简", "隶变": "隶变-简", "凌慧体": "凌慧体-简", "翩翩体": "翩翩体-简", "苹方": "苹方-简", "手札体": "手札体-简", "宋体": "宋体-简", "娃娃体": "娃娃体-简", "魏碑": "魏碑-简", "行楷": "行楷-简", "雅痞": "雅痞-简", "圆体": "圆体-简" } }]); return _ }(Et); var Bt = function (f) { function l() { this.focus = null; this.designWidth = 0; this.designHeight = 0; this.canvasRotation = false; this.canvasDegree = 0; this.renderingEnabled = true; this.screenAdaptationEnabled = true; this._screenMode = "none"; this._scaleMode = "noscale"; this._alignV = "top"; this._alignH = "left"; this._bgColor = "black"; this._mouseMoveTime = 0; this._renderCount = 0; this._frameStartTime = NaN; this._isFocused = false; this._isVisibility = false; this._scenes = null; this._frameRate = "fast"; this.useRetinalCanvas = false; l.__super.call(this); this.offset = new k; this._canvasTransform = new L; this._previousOrientation = X.window.orientation; var e = this; this.transform = L.create(); this._scenes = []; this.mouseEnabled = true; this.hitTestPrior = true; this.autoSize = false; this._displayedInStage = true; this._isFocused = true; this._isVisibility = true; this.useRetinalCanvas = m.useRetinalCanvas; var t = X.window; var i = this; t.addEventListener("focus", function () { e._isFocused = true; i.event("focus"); i.event("focuschange") }); t.addEventListener("blur", function () { e._isFocused = false; i.event("blur"); i.event("focuschange"); if (i._isInputting()) Vt["inputElement"].target.focus = false }); var r = "hidden", s = "visibilityState", n = "visibilitychange"; var a = t.document; if (typeof a.hidden !== "undefined") { n = "visibilitychange"; s = "visibilityState" } else if (typeof a.mozHidden !== "undefined") { n = "mozvisibilitychange"; s = "mozVisibilityState" } else if (typeof a.msHidden !== "undefined") { n = "msvisibilitychange"; s = "msVisibilityState" } else if (typeof a.webkitHidden !== "undefined") { n = "webkitvisibilitychange"; s = "webkitVisibilityState" } t.document.addEventListener(n, o); function o() { if (X.document[s] == "hidden") { i._setStageVisible(false) } else { i._setStageVisible(true) } } t.document.addEventListener("qbrowserVisibilityChange", h); function h(t) { i._setStageVisible(!t.hidden) } t.addEventListener("resize", function () { var t = X.window.orientation; if (t != null && t != e._previousOrientation && i._isInputting()) { Vt["inputElement"].target.focus = false } e._previousOrientation = t; if (i._isInputting()) return; i._resetCanvas() }); t.addEventListener("orientationchange", function (t) { i._resetCanvas() }); this.on("mousemove", this, this._onmouseMove); if (X.onMobile) this.on("mousedown", this, this._onmouseMove) } v(l, "laya.display.Stage", f); var t = l.prototype; t._setStageVisible = function (t) { if (this._isVisibility == t) return; this._isVisibility = t; if (!this._isVisibility) if (this._isInputting()) Vt["inputElement"].target.focus = false; this.event("visibilitychange") }; t._isInputting = function () { return X.onMobile && Vt.isInputting }; t._changeCanvasSize = function () { this.setScreenSize(X.clientWidth * X.pixelRatio, X.clientHeight * X.pixelRatio) }; t._resetCanvas = function () { if (!this.screenAdaptationEnabled) return; var t = U._mainCanvas; var e = t.source.style; t.size(1, 1); T.timer.once(100, this, this._changeCanvasSize) }; t.setScreenSize = function (t, e) { var i = false; if (this._screenMode !== "none") { var r = t / e < 1 ? "vertical" : "horizontal"; i = r !== this._screenMode; if (i) { var s = e; e = t; t = s } } this.canvasRotation = i; var n = U._mainCanvas; var a = n.source.style; var o = this._canvasTransform.identity(); var h = this._scaleMode; var l = t / this.designWidth; var u = e / this.designHeight; var c = m.useRetinalCanvas ? t : this.designWidth; var f = m.useRetinalCanvas ? e : this.designHeight; var _ = t; var d = e; var p = X.pixelRatio; this._width = this.designWidth; this._height = this.designHeight; switch (h) { case "noscale": l = u = 1; _ = this.designWidth; d = this.designHeight; break; case "showall": l = u = Math.min(l, u); c = _ = Math.round(this.designWidth * l); f = d = Math.round(this.designHeight * u); break; case "noborder": l = u = Math.max(l, u); _ = Math.round(this.designWidth * l); d = Math.round(this.designHeight * u); break; case "full": l = u = 1; this._width = c = t; this._height = f = e; break; case "fixedwidth": u = l; this._height = f = Math.round(e / l); break; case "fixedheight": l = u; this._width = c = Math.round(t / u); break; case "fixedauto": if (t / e < this.designWidth / this.designHeight) { u = l; this._height = f = Math.round(e / l) } else { l = u; this._width = c = Math.round(t / u) } break }if (this.conchModel) this.conchModel.size(this._width, this._height); if (m.useRetinalCanvas) { c = t; f = e } l *= this.scaleX; u *= this.scaleY; if (l === 1 && u === 1) { this.transform.identity() } else { this.transform.a = this._formatData(l / (_ / c)); this.transform.d = this._formatData(u / (d / f)); this.conchModel && this.conchModel.scale(this.transform.a, this.transform.d) } n.size(c, f); E.changeWebGLSize(c, f); o.scale(_ / c / p, d / f / p); if (this._alignH === "left") this.offset.x = 0; else if (this._alignH === "right") this.offset.x = (t - _) / p; else this.offset.x = (t - _) * .5 / p; if (this._alignV === "top") this.offset.y = 0; else if (this._alignV === "bottom") this.offset.y = (e - d) / p; else this.offset.y = (e - d) * .5 / p; this.offset.x = Math.round(this.offset.x); this.offset.y = Math.round(this.offset.y); o.translate(this.offset.x, this.offset.y); this.canvasDegree = 0; if (i) { if (this._screenMode === "horizontal") { o.rotate(Math.PI / 2); o.translate(e / p, 0); this.canvasDegree = 90 } else { o.rotate(-Math.PI / 2); o.translate(0, t / p); this.canvasDegree = -90 } } o.a = this._formatData(o.a); o.d = this._formatData(o.d); o.tx = this._formatData(o.tx); o.ty = this._formatData(o.ty); a.transformOrigin = a.webkitTransformOrigin = a.msTransformOrigin = a.mozTransformOrigin = a.oTransformOrigin = "0px 0px 0px"; a.transform = a.webkitTransform = a.msTransform = a.mozTransform = a.oTransform = "matrix(" + o.toString() + ")"; o.translate(parseInt(a.left) || 0, parseInt(a.top) || 0); this.visible = true; this._repaint = 1; this.event("resize") }; t._formatData = function (t) { if (Math.abs(t) < 1e-6) return 0; if (Math.abs(1 - t) < .001) return t > 0 ? 1 : -1; return t }; t.getMousePoint = function () { return k.TEMP.setTo(this.mouseX, this.mouseY) }; t.repaint = function () { this._repaint = 1 }; t.parentRepaint = function () { }; t._loop = function () { this.render(U.context, 0, 0); return true }; t._onmouseMove = function (t) { this._mouseMoveTime = X.now() }; t.getTimeFromFrameStart = function () { return X.now() - this._frameStartTime }; t.render = function (t, e, i) { if (this._frameRate === "sleep" && !U.isConchApp) { var r = X.now(); if (r - this._frameStartTime >= 1e3) this._frameStartTime = r; else return } this._renderCount++; U.isFlash && this.repaint(); if (!this._style.visible) { if (this._renderCount % 5 === 0) { at.loopCount++; b.instance.runEvent(); T.timer._update() } return } this._frameStartTime = X.now(); var s = this._frameRate === "mouse" ? this._frameStartTime - this._mouseMoveTime < 2e3 ? "fast" : "slow" : this._frameRate; var n = s !== "slow"; var a = this._renderCount % 2 === 0; at.renderSlow = !n; if (n || a || U.isConchApp) { at.loopCount++; b.instance.runEvent(); T.timer._update(); E.update3DLoop(); var o; var h = 0, l = 0; if (U.isConchNode) { for (h = 0, l = this._scenes.length; h < l; h++) { o = this._scenes[h]; o && o._updateSceneConch() } } else { for (h = 0, l = this._scenes.length; h < l; h++) { o = this._scenes[h]; o && o._updateScene() } } if (U.isConchNode) { var u = Et["CustomList"]; for (h = 0, l = u.length; h < l; h++) { var c = u[h]; c.customRender(c.customContext, 0, 0) } return } } if (U.isConchNode) return; if (this.renderingEnabled && (n || !a || U.isConchWebGL)) { if (U.isWebGL) { t.clear(); f.prototype.render.call(this, t, e, i); at._show && at._sp && at._sp.render(t, e, i); E.clear(this._bgColor); E.beginFlush(); t.flush(); E.endFinish(); ct.instance && ct.getInstance().endDispose() } else { E.clear(this._bgColor); f.prototype.render.call(this, t, e, i); at._show && at._sp && at._sp.render(t, e, i) } } }; t._requestFullscreen = function () { var t = X.document.documentElement; if (t.requestFullscreen) { t.requestFullscreen() } else if (t.mozRequestFullScreen) { t.mozRequestFullScreen() } else if (t.webkitRequestFullscreen) { t.webkitRequestFullscreen() } else if (t.msRequestFullscreen) { t.msRequestFullscreen() } }; t._fullScreenChanged = function () { T.stage.event("fullscreenchange") }; t.exitFullscreen = function () { var t = X.document; if (t.exitFullscreen) { t.exitFullscreen() } else if (t.mozCancelFullScreen) { t.mozCancelFullScreen() } else if (t.webkitExitFullscreen) { t.webkitExitFullscreen() } }; u(0, t, "clientScaleX", function () { return this._transform ? this._transform.getScaleX() : 1 }); u(0, t, "desginHeight", function () { console.debug("desginHeight已经弃用，请使用designHeight代替"); return this.designHeight }); u(0, t, "frameRate", function () { return this._frameRate }, function (t) { this._frameRate = t; if (U.isConchApp) { switch (this._frameRate) { case "slow": X.window.conch && X.window.conchConfig.setSlowFrame && X.window.conchConfig.setSlowFrame(true); break; case "fast": X.window.conch && X.window.conchConfig.setSlowFrame && X.window.conchConfig.setSlowFrame(false); break; case "mouse": X.window.conch && X.window.conchConfig.setMouseFrame && X.window.conchConfig.setMouseFrame(2e3); break; case "sleep": X.window.conch && X.window.conchConfig.setLimitFPS && X.window.conchConfig.setLimitFPS(1); break; default: throw new Error("Stage:frameRate invalid."); break } } }); u(0, t, "clientScaleY", function () { return this._transform ? this._transform.getScaleY() : 1 }); u(0, t, "width", f.prototype._$get_width, function (t) { this.designWidth = t; T.superSet(Et, this, "width", t); T.timer.callLater(this, this._changeCanvasSize) }); u(0, t, "alignH", function () { return this._alignH }, function (t) { this._alignH = t; T.timer.callLater(this, this._changeCanvasSize) }); u(0, t, "isFocused", function () { return this._isFocused }); u(0, t, "height", f.prototype._$get_height, function (t) { this.designHeight = t; T.superSet(Et, this, "height", t); T.timer.callLater(this, this._changeCanvasSize) }); u(0, t, "transform", function () { if (this._tfChanged) this._adjustTransform(); return this._transform = this._transform || L.create() }, f.prototype._$set_transform); u(0, t, "isVisibility", function () { return this._isVisibility }); u(0, t, "desginWidth", function () { console.debug("desginWidth已经弃用，请使用designWidth代替"); return this.designWidth }); u(0, t, "scaleMode", function () { return this._scaleMode }, function (t) { this._scaleMode = t; T.timer.callLater(this, this._changeCanvasSize) }); u(0, t, "alignV", function () { return this._alignV }, function (t) { this._alignV = t; T.timer.callLater(this, this._changeCanvasSize) }); u(0, t, "bgColor", function () { return this._bgColor }, function (t) { this._bgColor = t; this.conchModel && this.conchModel.bgColor(t); if (U.isWebGL) { if (t) { l._wgColor = q.create(t)._color } else { if (!X.onMiniGame && !X.onQGMiniGame && !X.onVVMiniGame) l._wgColor = null } } if (X.onLimixiu) { l._wgColor = q.create(t)._color } else if (t) { U.canvas.style.background = t } else { U.canvas.style.background = "none" } }); u(0, t, "mouseX", function () { return Math.round(b.instance.mouseX / this.clientScaleX) }); u(0, t, "mouseY", function () { return Math.round(b.instance.mouseY / this.clientScaleY) }); u(0, t, "screenMode", function () { return this._screenMode }, function (t) { this._screenMode = t }); u(0, t, "visible", f.prototype._$get_visible, function (t) { if (this.visible !== t) { T.superSet(Et, this, "visible", t); var e = U._mainCanvas.source.style; e.visibility = t ? "visible" : "hidden" } }); u(0, t, "fullScreenEnabled", null, function (t) { var e = X.document; var i = U.canvas; if (t) { i.addEventListener("mousedown", this._requestFullscreen); i.addEventListener("touchstart", this._requestFullscreen); e.addEventListener("fullscreenchange", this._fullScreenChanged); e.addEventListener("mozfullscreenchange", this._fullScreenChanged); e.addEventListener("webkitfullscreenchange", this._fullScreenChanged); e.addEventListener("msfullscreenchange", this._fullScreenChanged) } else { i.removeEventListener("mousedown", this._requestFullscreen); i.removeEventListener("touchstart", this._requestFullscreen); e.removeEventListener("fullscreenchange", this._fullScreenChanged); e.removeEventListener("mozfullscreenchange", this._fullScreenChanged); e.removeEventListener("webkitfullscreenchange", this._fullScreenChanged); e.removeEventListener("msfullscreenchange", this._fullScreenChanged) } }); l.SCALE_NOSCALE = "noscale"; l.SCALE_EXACTFIT = "exactfit"; l.SCALE_SHOWALL = "showall"; l.SCALE_NOBORDER = "noborder"; l.SCALE_FULL = "full"; l.SCALE_FIXED_WIDTH = "fixedwidth"; l.SCALE_FIXED_HEIGHT = "fixedheight"; l.SCALE_FIXED_AUTO = "fixedauto"; l.ALIGN_LEFT = "left"; l.ALIGN_RIGHT = "right"; l.ALIGN_CENTER = "center"; l.ALIGN_TOP = "top"; l.ALIGN_MIDDLE = "middle"; l.ALIGN_BOTTOM = "bottom"; l.SCREEN_NONE = "none"; l.SCREEN_HORIZONTAL = "horizontal"; l.SCREEN_VERTICAL = "vertical"; l.FRAME_FAST = "fast"; l.FRAME_SLOW = "slow"; l.FRAME_MOUSE = "mouse"; l.FRAME_SLEEP = "sleep"; l.FRAME_MOUSE_THREDHOLD = 2e3; h(l, ["_wgColor", function () { return this._wgColor = [0, 0, 0, 1] }]); return l }(Et); var Nt = function (t) { function e() { this.url = null; this._channel = null; this._tar = null; this._playEvents = null; this._stopEvents = null; e.__super.call(this); this.visible = false; this.on("added", this, this._onParentChange); this.on("removed", this, this._onParentChange) } v(e, "laya.media.SoundNode", t); var i = e.prototype; i._onParentChange = function () { this.target = this.parent }; i.play = function (t, e) { t === void 0 && (t = 1); if (isNaN(t)) { t = 1 } if (!this.url) return; this.stop(); this._channel = B.playSound(this.url, t, e) }; i.stop = function () { if (this._channel && !this._channel.isStopped) { this._channel.stop() } this._channel = null }; i._setPlayAction = function (t, e, i, r) { r === void 0 && (r = true); if (!this[i]) return; if (!t) return; if (r) { t.on(e, this, this[i]) } else { t.off(e, this, this[i]) } }; i._setPlayActions = function (t, e, i, r) { r === void 0 && (r = true); if (!t) return; if (!e) return; var s = e.split(","); var n = 0, a = 0; a = s.length; for (n = 0; n < a; n++) { this._setPlayAction(t, s[n], i, r) } }; u(0, i, "playEvent", null, function (t) { this._playEvents = t; if (!t) return; if (this._tar) { this._setPlayActions(this._tar, t, "play") } }); u(0, i, "target", null, function (t) { if (this._tar) { this._setPlayActions(this._tar, this._playEvents, "play", false); this._setPlayActions(this._tar, this._stopEvents, "stop", false) } this._tar = t; if (this._tar) { this._setPlayActions(this._tar, this._playEvents, "play", true); this._setPlayActions(this._tar, this._stopEvents, "stop", true) } }); u(0, i, "stopEvent", null, function (t) { this._stopEvents = t; if (!t) return; if (this._tar) { this._setPlayActions(this._tar, t, "stop") } }); return e }(Et); var Ft = function (t) { function e() { this._src = null; this._onload = null; this._onerror = null; e.__super.call(this) } v(e, "laya.resource.FileBitmap", t); var i = e.prototype; u(0, i, "src", function () { return this._src }, function (t) { this._src = t }); u(0, i, "onload", null, function (t) { }); u(0, i, "onerror", null, function (t) { }); return e }(Lt); var Ot = function (t) { function i(t, e) { this._is2D = false; i.__super.call(this); var r = this; this._source = this; if (t === "2D" || t === "AUTO" && !U.isWebGL) { this._is2D = true; this._source = e || X.createElement("canvas"); this._w = this._source.width; this._h = this._source.height; var s = this; s.getContext = function (t, e) { if (r._ctx) return r._ctx; var i = r._ctx = r._source.getContext(t, e); if (i) { i._canvas = s; if (!U.isFlash && !X.onLimixiu) i.size = function (t, e) { } } return i } } this.lock = true } v(i, "laya.resource.HTMLCanvas", t); var e = i.prototype; e.clear = function () { this._ctx && this._ctx.clear() }; e.destroy = function () { this._ctx && this._ctx.destroy(); this._ctx = null; laya.resource.Resource.prototype.destroy.call(this) }; e.release = function () { }; e._setContext = function (t) { this._ctx = t }; e.getContext = function (t, e) { return this._ctx ? this._ctx : this._ctx = i._createContext(this) }; e.getMemSize = function () { return 0 }; e.size = function (t, e) { if (this._w != t || this._h != e || this._source && (this._source.width != t || this._source.height != e)) { this._w = t; this._h = e; this.memorySize = this._w * this._h * 4; this._ctx && this._ctx.size(t, e); this._source && (this._source.height = e, this._source.width = t) } }; e.getCanvas = function () { return this._source }; e.toBase64 = function (t, e, i) { if (this._source) { if (U.isConchApp && this._source.toBase64) { this._source.toBase64(t, e, i) } else { var r = this._source.toDataURL(t, e); i.call(this, r) } } }; u(0, e, "context", function () { return this._ctx }); u(0, e, "asBitmap", null, function (t) { }); i.create = function (t, e) { return new i(t, e) }; i.TYPE2D = "2D"; i.TYPE3D = "3D"; i.TYPEAUTO = "AUTO"; i._createContext = null; return i }(Lt); var zt = function (t) { function h(t, e, i, r, s, n, a, o) { h.__super.call(this); throw new Error("不允许new！") } v(h, "laya.resource.HTMLSubImage", t); h.create = function (t, e, i, r, s, n, a, o) { o === void 0 && (o = false); return new h(t, e, i, r, s, n, a, o) }; return h }(Lt); var Ut = function (t) { function c() { this._frames = null; this._url = null; c.__super.call(this); this._setControlNode(this) } v(c, "laya.display.Animation", t); var e = c.prototype; e.destroy = function (t) { t === void 0 && (t = true); this.stop(); laya.display.Sprite.prototype.destroy.call(this, t); this._frames = null; this._labels = null }; e.play = function (t, e, i, r) { t === void 0 && (t = 0); e === void 0 && (e = true); i === void 0 && (i = ""); r === void 0 && (r = true); if (i) this._setFramesFromCache(i, r); this._isPlaying = true; this.index = typeof t == "string" ? this._getFrameByLabel(t) : t; this.loop = e; this._actionName = i; this._isReverse = this.wrapMode == 1; if (this._frames && this.interval > 0) { this.timerLoop(this.interval, this, this._frameLoop, null, true, true) } }; e._setFramesFromCache = function (t, e) { e === void 0 && (e = false); if (this._url) t = this._url + "#" + t; if (t && c.framesMap[t]) { var i; i = c.framesMap[t]; if (i instanceof Array) { this._frames = c.framesMap[t]; this._count = this._frames.length } else { if (i.nodeRoot) { c.framesMap[t] = this._parseGraphicAnimationByData(i); i = c.framesMap[t] } this._frames = i.frames; this._count = this._frames.length; if (!this._frameRateChanged) this._interval = i.interval; this._labels = this._copyLabels(i.labels) } return true } else { if (e) console.log("ani not found:", t) } return false }; e._copyLabels = function (t) { if (!t) return null; var e; e = {}; var i; for (i in t) { e[i] = ut.copyArray([], t[i]) } return e }; e._frameLoop = function () { if (this._style.visible && this._style.alpha > .01) { t.prototype._frameLoop.call(this) } }; e._displayToIndex = function (t) { if (this._frames) this.graphics = this._frames[t] }; e.clear = function () { this.stop(); this.graphics = null; this._frames = null; this._labels = null }; e.loadImages = function (t, e) { e === void 0 && (e = ""); this._url = ""; if (!this._setFramesFromCache(e)) { this.frames = c.framesMap[e] ? c.framesMap[e] : c.createFrames(t, e) } return this }; e.loadAtlas = function (e, i, r) { r === void 0 && (r = ""); this._url = ""; var s = this; function t(t) { if (e === t) { s.frames = c.framesMap[r] ? c.framesMap[r] : c.createFrames(e, r); if (i) i.run() } } if (!s._setFramesFromCache(r)) { if (bt.getAtlas(e)) t(e); else T.loader.load(e, g.create(null, t, [e]), null, "atlas") } return this }; e.loadAnimation = function (t, e, i) { this._url = t; var r = this; if (!this._actionName) this._actionName = ""; if (!r._setFramesFromCache(this._actionName)) { if (!i || bt.getAtlas(i)) { this._loadAnimationData(t, e, i) } else { T.loader.load(i, g.create(this, this._loadAnimationData, [t, e, i]), null, "atlas") } } else { r._setFramesFromCache(this._actionName, true); this.index = 0; if (e) e.run() } return this }; e._loadAnimationData = function (o, h, t) { var l = this; if (t && !bt.getAtlas(t)) { console.warn("atlas load fail:" + t); return } var u = this; function e(t) { if (!bt.getRes(t)) return; if (o === t) { var e; if (!c.framesMap[o + "#"]) { var i = u._parseGraphicAnimation(bt.getRes(o)); if (!i) return; var r = i.animationList; var s = 0, n = r.length; var a; for (s = 0; s < n; s++) { e = r[s]; c.framesMap[o + "#" + e.name] = e; if (!a) a = e } if (a) { c.framesMap[o + "#"] = a; u._setFramesFromCache(l._actionName, true); l.index = 0 } l._checkResumePlaying() } else { u._setFramesFromCache(l._actionName, true); l.index = 0; l._checkResumePlaying() } if (h) h.run() } } if (bt.getRes(o)) e(o); else T.loader.load(o, g.create(null, e, [o]), null, "json"); bt.clearRes(o) }; e._parseGraphicAnimation = function (t) { return Yt.parseAnimationData(t) }; e._parseGraphicAnimationByData = function (t) { return Yt.parseAnimationByData(t) }; u(0, e, "frames", function () { return this._frames }, function (t) { this._frames = t; if (t) { this._count = t.length; if (this._isPlaying) this.play(this._index, this.loop, this._actionName); else this.index = this._index } }); u(0, e, "autoPlay", null, function (t) { if (t) this.play(); else this.stop() }); u(0, e, "source", null, function (t) { if (t.indexOf(".ani") > -1) this.loadAnimation(t); else if (t.indexOf(".json") > -1 || t.indexOf("als") > -1 || t.indexOf("atlas") > -1) this.loadAtlas(t); else this.loadImages(t.split(",")) }); u(0, e, "autoAnimation", null, function (t) { this.play(0, true, t, false) }); c.createFrames = function (t, e) { var i, r = 0, s = 0, n; if (typeof t == "string") { var a = bt.getAtlas(t); if (a && a.length) { i = []; for (r = 0, s = a.length; r < s; r++) { n = new E.createGraphics; n.drawTexture(bt.getRes(a[r]), 0, 0); i.push(n) } } } else if (t instanceof Array) { i = []; for (r = 0, s = t.length; r < s; r++) { n = new E.createGraphics; n.loadImage(t[r], 0, 0); i.push(n) } } if (e) c.framesMap[e] = i; return i }; c.clearCache = function (t) { var e = c.framesMap; var i; var r = t + "#"; for (i in e) { if (i === t || i.indexOf(r) == 0) { delete c.framesMap[i] } } }; c.framesMap = {}; return c }(kt); var Wt = function (t) { function n() { this._targetDic = null; this._animationData = null; this._animationNewFrames = null; n.__super.call(this); if (n._sortIndexFun == null) { n._sortIndexFun = P.sortByKey("index", false, true) } } v(n, "laya.display.FrameAnimation", t); var e = n.prototype; e._setUp = function (t, e) { this._labels = null; this._animationNewFrames = null; this._targetDic = t; this._animationData = e; this.interval = 1e3 / e.frameRate; if (e.parsed) { this._count = e.count; this._labels = e.labels; this._animationNewFrames = e.animationNewFrames } else { this._animationNewFrames = []; this._calculateDatas() } e.parsed = true; e.labels = this._labels; e.count = this._count; e.animationNewFrames = this._animationNewFrames }; e.clear = function () { t.prototype.clear.call(this); this._targetDic = null; this._animationData = null }; e._displayToIndex = function (t) { if (!this._animationData) return; if (t < 0) t = 0; if (t > this._count) t = this._count; var e = this._animationData.nodes, i = 0, r = e.length; for (i = 0; i < r; i++) { this._displayNodeToFrame(e[i], t) } }; e._displayNodeToFrame = function (t, e, i) { if (!i) i = this._targetDic; var r = i[t.target]; if (!r) { return } var s = t.frames, n, a, o; var h = t.keys, l = 0, u = h.length; for (l = 0; l < u; l++) { n = h[l]; a = s[n]; if (a.length > e) { o = a[e] } else { o = a[a.length - 1] } r[n] = o } }; e._calculateDatas = function () { if (!this._animationData) return; var t = this._animationData.nodes, e = 0, i = t.length, r; this._count = 0; for (e = 0; e < i; e++) { r = t[e]; this._calculateNodeKeyFrames(r) } this._count += 1 }; e._calculateNodeKeyFrames = function (t) { var e = t.keyframes, i, r, s = t.target; if (!t.frames) { t.frames = {} } if (!t.keys) { t.keys = [] } else { t.keys.length = 0 } if (!t.initValues) { t.initValues = {} } for (i in e) { r = e[i]; if (!t.frames[i]) { t.frames[i] = [] } if (this._targetDic && this._targetDic[s]) { t.initValues[i] = this._targetDic[s][i] } r.sort(n._sortIndexFun); t.keys.push(i); this._calculateNodePropFrames(r, t.frames[i], i, s) } }; e.resetToInitState = function () { if (!this._targetDic) return; if (!this._animationData) return; var t = this._animationData.nodes, e = 0, i = t.length; var r; var s; for (e = 0; e < i; e++) { r = t[e]; s = r.initValues; if (!s) continue; var n = this._targetDic[r.target]; if (!n) continue; var a; for (a in s) { n[a] = s[a] } } }; e._calculateNodePropFrames = function (t, e, i, r) { var s = 0, n = t.length - 1; e.length = t[n].index + 1; for (s = 0; s < n; s++) { this._dealKeyFrame(t[s]); this._calculateFrameValues(t[s], t[s + 1], e) } if (n == 0) { e[t[0].index] = t[0].value; if (this._animationNewFrames) this._animationNewFrames[t[0].index] = true } this._dealKeyFrame(t[s]) }; e._dealKeyFrame = function (t) { if (t.label && t.label != "") this.addLabel(t.label, t.index) }; e._calculateFrameValues = function (t, e, i) { var r = 0, s; var n = t.index, a = e.index; var o = t.value; var h = e.value - t.value; var l = a - n; if (a > this._count) this._count = a; if (t.tween) { s = J[t.tweenMethod]; if (s == null) { s = J.linearNone } for (r = n; r < a; r++) { i[r] = s(r - n, o, h, l); if (this._animationNewFrames) { this._animationNewFrames[r] = true } } } else { for (r = n; r < a; r++) { i[r] = o } } if (this._animationNewFrames) { this._animationNewFrames[t.index] = true; this._animationNewFrames[e.index] = true } i[e.index] = e.value }; n._sortIndexFun = null; return n }(kt); var Vt = function (e) { function s() { this._focus = false; this._multiline = false; this._editable = true; this._restrictPattern = null; this._type = "text"; this._prompt = ""; this._promptColor = "#A9A9A9"; this._originColor = "#000000"; this._content = ""; s.__super.call(this); this._maxChars = 1e5; this._width = 100; this._height = 20; this.multiline = false; this.overflow = Dt.SCROLL; this.on("mousedown", this, this._onMouseDown); this.on("undisplay", this, this._onUnDisplay) } v(s, "laya.display.Input", e); var t = s.prototype; t.setSelection = function (t, e) { this.focus = true; laya.display.Input.inputElement.selectionStart = t; laya.display.Input.inputElement.selectionEnd = e }; t._onUnDisplay = function (t) { this.focus = false }; t._onMouseDown = function (t) { this.focus = true }; t._syncInputTransform = function () { var t = this.nativeInput; var e = ut.getTransformRelativeToWindow(this, this.padding[3], this.padding[0]); var i = this._width - this.padding[1] - this.padding[3]; var r = this._height - this.padding[0] - this.padding[2]; if (U.isConchApp) { t.setScale(e.scaleX, e.scaleY); t.setSize(i, r); t.setPos(e.x, e.y) } else { s.inputContainer.style.transform = s.inputContainer.style.webkitTransform = "scale(" + e.scaleX + "," + e.scaleY + ") rotate(" + T.stage.canvasDegree + "deg)"; t.style.width = i + "px"; t.style.height = r + "px"; s.inputContainer.style.left = e.x + "px"; s.inputContainer.style.top = e.y + "px" } }; t.select = function () { this.nativeInput.select() }; t._setInputMethod = function () { s.input.parentElement && s.inputContainer.removeChild(s.input); s.area.parentElement && s.inputContainer.removeChild(s.area); s.inputElement = this._multiline ? s.area : s.input; s.inputContainer.appendChild(s.inputElement); if (Dt.RightToLeft) { s.inputElement.style.direction = "rtl" } }; t._focusIn = function () { laya.display.Input.isInputting = true; var t = this.nativeInput; this._focus = true; var e = t.style; e.whiteSpace = this.wordWrap ? "pre-wrap" : "nowrap"; this._setPromptColor(); t.readOnly = !this._editable; if (U.isConchApp) { t.setType(this._type); t.setForbidEdit(!this._editable) } t.maxLength = this._maxChars; var i = this.padding; t.type = this._type; t.value = this._content; t.placeholder = this._prompt; T.stage.off("keydown", this, this._onKeyDown); T.stage.on("keydown", this, this._onKeyDown); T.stage.focus = this; this.event("focus"); if (X.onPC) t.focus(); if (!X.onMiniGame && !X.onBDMiniGame && !X.onTTMiniGame && !X.onQGMiniGame && !X.onVVMiniGame && !X.onBLMiniGame) { var r = this._text; this._text = null } this.typeset(); t.setColor(this._originColor); if (t.setBgColor) t.setBgColor(this.bgColor); t.setFontSize(this.fontSize); t.setFontFace(X.onIPhone ? Dt._fontFamilyMap[this.font] || this.font : this.font); if (U.isConchApp) { t.setMultiAble && t.setMultiAble(this._multiline) } e.lineHeight = this.leading + this.fontSize + "px"; e.fontStyle = this.italic ? "italic" : "normal"; e.fontWeight = this.bold ? "bold" : "normal"; e.textAlign = this.align; e.padding = "0 0"; this._syncInputTransform(); if (!U.isConchApp && X.onPC) T.timer.frameLoop(1, this, this._syncInputTransform) }; t._setPromptColor = function () { s.promptStyleDOM = X.getElementById("promptStyle"); if (!s.promptStyleDOM) { s.promptStyleDOM = X.createElement("style"); s.promptStyleDOM.setAttribute("id", "promptStyle"); X.document.head.appendChild(s.promptStyleDOM) } s.promptStyleDOM.innerText = "input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {" + "color:" + this._promptColor + "}" + "input:-moz-placeholder, textarea:-moz-placeholder {" + "color:" + this._promptColor + "}" + "input::-moz-placeholder, textarea::-moz-placeholder {" + "color:" + this._promptColor + "}" + "input:-ms-input-placeholder, textarea:-ms-input-placeholder {" + "color:" + this._promptColor + "}" }; t._focusOut = function () { laya.display.Input.isInputting = false; this._focus = false; this._text = null; this._content = this.nativeInput.value; if (!this._content) { T.superSet(Dt, this, "text", this._prompt); T.superSet(Dt, this, "color", this._promptColor) } else { T.superSet(Dt, this, "text", this._content); T.superSet(Dt, this, "color", this._originColor) } T.stage.off("keydown", this, this._onKeyDown); T.stage.focus = null; this.event("blur"); if (U.isConchApp) this.nativeInput.blur(); X.onPC && T.timer.clear(this, this._syncInputTransform) }; t._onKeyDown = function (t) { if (t.keyCode === 13) { if (X.onMobile && !this._multiline) this.focus = false; this.event("enter") } }; t.changeText = function (t) { this._content = t; if (this._focus) { this.nativeInput.value = t || ""; this.event("change") } else e.prototype.changeText.call(this, t) }; u(0, t, "color", e.prototype._$get_color, function (t) { if (this._focus) this.nativeInput.setColor(t); T.superSet(Dt, this, "color", this._content ? t : this._promptColor); this._originColor = t }); u(0, t, "inputElementYAdjuster", function () { console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementYAdjuster已弃用。"); return 0 }, function (t) { console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementYAdjuster已弃用。") }); u(0, t, "multiline", function () { return this._multiline }, function (t) { this._multiline = t; this.valign = t ? "top" : "middle" }); u(0, t, "maxChars", function () { return this._maxChars }, function (t) { if (t <= 0) t = 1e5; this._maxChars = t }); u(0, t, "text", function () { if (this._focus) return this.nativeInput.value; else return this._content || "" }, function (t) { T.superSet(Dt, this, "color", this._originColor); t += ""; if (this._focus) { this.nativeInput.value = t || ""; this.event("change") } else { if (!this._multiline) t = t.replace(/\r?\n/g, ""); this._content = t; if (t) T.superSet(Dt, this, "text", t); else { T.superSet(Dt, this, "text", this._prompt); T.superSet(Dt, this, "color", this.promptColor) } } }); u(0, t, "nativeInput", function () { return this._multiline ? s.area : s.input }); u(0, t, "prompt", function () { return this._prompt }, function (t) { if (!this._text && t) T.superSet(Dt, this, "color", this._promptColor); this.promptColor = this._promptColor; if (this._text) T.superSet(Dt, this, "text", this._text == this._prompt ? t : this._text); else T.superSet(Dt, this, "text", t); this._prompt = Dt.langPacks && Dt.langPacks[t] ? Dt.langPacks[t] : t }); u(0, t, "focus", function () { return this._focus }, function (t) { var e = this.nativeInput; if (this._focus !== t) { if (t) { if (e.target) { e.target._focusOut() } else { this._setInputMethod() } e.target = this; this._focusIn() } else { e.target = null; this._focusOut(); X.document.body.scrollTop = 0; e.blur(); if (U.isConchApp) { e.setPos(-1e4, -1e4) } else if (s.inputContainer.contains(e)) s.inputContainer.removeChild(e) } } }); u(0, t, "restrict", function () { if (this._restrictPattern) { return this._restrictPattern.source } return "" }, function (t) { if (t) { t = "[^" + t + "]"; if (t.indexOf("^^") > -1) t = t.replace("^^", ""); this._restrictPattern = new RegExp(t, "g") } else this._restrictPattern = null }); u(0, t, "editable", function () { return this._editable }, function (t) { this._editable = t; if (U.isConchApp) { s.input.setForbidEdit(!t) } }); u(0, t, "promptColor", function () { return this._promptColor }, function (t) { this._promptColor = t; if (!this._content) T.superSet(Dt, this, "color", t) }); u(0, t, "type", function () { return this._type }, function (t) { if (t == "password") this._getCSSStyle().password = true; else this._getCSSStyle().password = false; this._type = t; if (U.isConchApp) { this.nativeInput.setType(t) } }); u(0, t, "inputElementXAdjuster", function () { console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementXAdjuster已弃用。"); return 0 }, function (t) { console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementXAdjuster已弃用。") }); u(0, t, "asPassword", function () { return this._getCSSStyle().password }, function (t) { this._getCSSStyle().password = t; this._type = "password"; console.warn('deprecated: 使用type="password"替代设置asPassword, asPassword将在下次重大更新时删去'); this.isChanged = true }); s.__init__ = function () { s._createInputElement(); if (X.onMobile) { var t = false; if (X.onMiniGame || X.onBDMiniGame || X.onKGMiniGame || X.onTTMiniGame || X.onQGMiniGame || X.onVVMiniGame || X.onBLMiniGame) { t = true } U.canvas.addEventListener(s.IOS_IFRAME ? t ? "touchend" : "click" : "touchend", s._popupInputMethod) } }; s._popupInputMethod = function (t) { if (!laya.display.Input.isInputting) return; var e = laya.display.Input.inputElement; e.focus() }; s._createInputElement = function () { s._initInput(s.area = X.createElement("textarea")); s._initInput(s.input = X.createElement("input")); s.inputContainer = X.createElement("div"); s.inputContainer.style.position = "absolute"; s.inputContainer.style.zIndex = 1e5; X.container.appendChild(s.inputContainer); s.inputContainer.setPos = function (t, e) { s.inputContainer.style.left = t + "px"; s.inputContainer.style.top = e + "px" } }; s._initInput = function (e) { var t = e.style; t.cssText = "position:absolute;overflow:hidden;resize:none;transform-origin:0 0;-webkit-transform-origin:0 0;-moz-transform-origin:0 0;-o-transform-origin:0 0;"; t.resize = "none"; t.backgroundColor = "transparent"; t.border = "none"; t.outline = "none"; t.zIndex = 1; e.addEventListener("input", s._processInputting); e.addEventListener("mousemove", s._stopEvent); e.addEventListener("mousedown", s._stopEvent); e.addEventListener("touchmove", s._stopEvent); e.setFontFace = function (t) { e.style.fontFamily = t }; if (!U.isConchApp) { e.setColor = function (t) { e.style.color = t }; e.setFontSize = function (t) { e.style.fontSize = t + "px" } } }; s._processInputting = function (t) { var e = laya.display.Input.inputElement.target; if (!e) return; var i = laya.display.Input.inputElement.value; if (e._restrictPattern) { i = i.replace(/\u2006|\x27/g, ""); if (e._restrictPattern.test(i)) { i = i.replace(e._restrictPattern, ""); laya.display.Input.inputElement.value = i } } e._text = i; e.event("input") }; s._stopEvent = function (t) { if (t.type == "touchmove") t.preventDefault(); t.stopPropagation && t.stopPropagation() }; s.TYPE_TEXT = "text"; s.TYPE_PASSWORD = "password"; s.TYPE_EMAIL = "email"; s.TYPE_URL = "url"; s.TYPE_NUMBER = "number"; s.TYPE_RANGE = "range"; s.TYPE_DATE = "date"; s.TYPE_MONTH = "month"; s.TYPE_WEEK = "week"; s.TYPE_TIME = "time"; s.TYPE_DATE_TIME = "datetime"; s.TYPE_DATE_TIME_LOCAL = "datetime-local"; s.TYPE_SEARCH = "search"; s.input = null; s.area = null; s.inputElement = null; s.inputContainer = null; s.confirmButton = null; s.promptStyleDOM = null; s.inputHeight = 45; s.isInputting = false; s.stageMatrix = null; h(s, ["IOS_IFRAME", function () { return this.IOS_IFRAME = X.onIOS && X.window.top != X.window.self }]); return s }(Dt); var Ht = function (t) { function i(t, e) { this._recreateLock = false; this._needReleaseAgain = false; this._enableMerageInAtlas = true; i.__super.call(this); this._init_(t, e) } v(i, "laya.resource.HTMLImage", t); var e = i.prototype; e._init_ = function (t, e) { this._src = t; this._source = new X.window.Image; if (e) { e.onload && (this.onload = e.onload); e.onerror && (this.onerror = e.onerror); e.onCreate && e.onCreate(this) } if (t.indexOf("data:image") != 0) this._source.crossOrigin = ""; t && (this._source.src = t) }; e.recreateResource = function () { var t = this; if (this._src === "") throw new Error("src no null！"); this._needReleaseAgain = false; if (!this._source) { this._recreateLock = true; var e = this; this._source = new X.window.Image; this._source.crossOrigin = ""; this._source.onload = function () { if (e._needReleaseAgain) { e._needReleaseAgain = false; e._source.onload = null; e._source = null; return } e._source.onload = null; e.memorySize = t._w * t._h * 4; e._recreateLock = false; e.completeCreate() }; this._source.src = this._src } else { if (this._recreateLock) return; this.memorySize = this._w * this._h * 4; this._recreateLock = false; this.completeCreate() } }; e.disposeResource = function () { if (this._recreateLock) this._needReleaseAgain = true; this._source && (this._source = null, this.memorySize = 0) }; e.onresize = function () { this._w = this._source.width; this._h = this._source.height }; u(0, e, "onload", null, function (t) { var e = this; this._onload = t; this._source && (this._source.onload = this._onload != null ? function () { e.onresize(); e._onload() } : null) }); u(0, e, "onerror", null, function (t) { var e = this; this._onerror = t; this._source && (this._source.onerror = this._onerror != null ? function () { e._onerror() } : null) }); u(0, e, "enableMerageInAtlas", function () { return this._enableMerageInAtlas }, function (t) { this._enableMerageInAtlas = t; if (U.isConchApp) { if (this._source) this._source.enableMerageInAtlas = t } }); i.create = function (t, e) { return new i(t, e) }; return i }(Ft); var Gt = function (a) { function t() { this._target = null; this._playEvents = null; this._initData = {}; this._aniKeys = null; this._effectClass = null; t.__super.call(this) } v(t, "laya.display.EffectAnimation", a); var e = t.prototype; e._onOtherBegin = function (t) { if (t == this) return; this.stop() }; e.addEvent = function () { if (!this._target || !this._playEvents) return; this._setControlNode(this._target); this._target.on(this._playEvents, this, this._onPlayAction) }; e._onPlayAction = function () { this.play(0, false) }; e.play = function (t, e, i, r) { t === void 0 && (t = 0); e === void 0 && (e = true); i === void 0 && (i = ""); r === void 0 && (r = true); if (!this._target) return; this._target.event("effectanimationbegin", [this]); this._recordInitData(); laya.display.AnimationPlayerBase.prototype.play.call(this, t, e, i, r) }; e._recordInitData = function () { if (!this._aniKeys) return; var t = 0, e = 0; e = this._aniKeys.length; var i; for (t = 0; t < e; t++) { i = this._aniKeys[t]; this._initData[i] = this._target[i] } }; e._displayToIndex = function (t) { if (!this._animationData) return; if (t < 0) t = 0; if (t > this._count) t = this._count; var e = this._animationData.nodes, i = 0, r = e.length; r = r > 1 ? 1 : r; for (i = 0; i < r; i++) { this._displayNodeToFrame(e[i], t) } }; e._displayNodeToFrame = function (t, e, i) { if (!this._target) return; var r; r = this._target; var s = t.frames, n, a, o; var h = t.keys, l = 0, u = h.length; var c; c = t.secondFrames; var f = 0; var _; var d; var p; var v; for (l = 0; l < u; l++) { n = h[l]; a = s[n]; f = c[n]; if (f == -1) { o = this._initData[n] } else { if (e < f) { d = t.keyframes[n]; p = d[0]; if (p.tween) { _ = J[p.tweenMethod]; if (_ == null) { _ = J.linearNone } v = d[1]; o = _(e, this._initData[n], v.value - this._initData[n], v.index) } else { o = this._initData[n] } } else { if (a.length > e) { o = a[e] } else { o = a[a.length - 1] } } } r[n] = o } }; e._calculateNodeKeyFrames = function (t) { a.prototype._calculateNodeKeyFrames.call(this, t); var e = t.keyframes, i, r, s = t.target; var n; n = {}; t.secondFrames = n; for (i in e) { r = e[i]; if (r.length <= 1) { n[i] = -1 } else { n[i] = r[1].index } } }; u(0, e, "target", function () { return this._target }, function (t) { if (this._target) { this._target.off("effectanimationbegin", this, this._onOtherBegin) } this._target = t; if (this._target) { this._target.on("effectanimationbegin", this, this._onOtherBegin) } this.addEvent() }); u(0, e, "playEvent", null, function (t) { this._playEvents = t; if (!t) return; this.addEvent() }); u(0, e, "effectData", null, function (t) { if (t) { var e; e = t["animations"]; if (e && e[0]) { this._setUp({}, e[0]); if (e[0].nodes && e[0].nodes[0]) { this._aniKeys = e[0].nodes[0].keys } } } }); u(0, e, "effectClass", null, function (t) { this._effectClass = $.getClass(t); if (this._effectClass) { var e; e = this._effectClass["uiView"]; if (e) { var i; i = e["animations"]; if (i && i[0]) { this._setUp({}, i[0]); if (i[0].nodes && i[0].nodes[0]) { this._aniKeys = i[0].nodes[0].keys } } } } }); t.EffectAnimationBegin = "effectanimationbegin"; return t }(Wt); var Yt = function (e) { var M; function I() { this.animationList = null; this.animationDic = null; this._nodeList = null; this._nodeDefaultProps = null; this._gList = null; this._nodeIDAniDic = {}; this._rootNode = null; this._nodeGDic = null; I.__super.call(this) } v(I, "laya.utils.GraphicAnimation", e); var t = I.prototype; t._parseNodeList = function (t) { if (!this._nodeList) { this._nodeList = [] } this._nodeDefaultProps[t.compId] = t.props; if (t.compId) this._nodeList.push(t.compId); var e = t.child; if (e) { var i = 0, r = e.length; for (i = 0; i < r; i++) { this._parseNodeList(e[i]) } } }; t._calGraphicData = function (t) { this._setUp(null, t); this._createGraphicData(); if (this._nodeIDAniDic) { var e; for (e in this._nodeIDAniDic) { this._nodeIDAniDic[e] = null } } }; t._createGraphicData = function () { var t = []; var e = 0, i = this.count; var r = this._animationNewFrames; if (!r) r = []; var s; for (e = 0; e < i; e++) { if (r[e] || !s) { s = this._createFrameGraphic(e) } t.push(s) } this._gList = t }; t._createFrameGraphic = function (t) { var e = E.createGraphics(); if (!I._rootMatrix) I._rootMatrix = new L; this._updateNodeGraphic(this._rootNode, t, I._rootMatrix, e); return e }; t._updateNodeGraphic = function (t, e, i, r, s) { s === void 0 && (s = 1); var n; n = this._nodeGDic[t.compId] = this._getNodeGraphicData(t.compId, e, this._nodeGDic[t.compId]); var a = n.alpha * s; if (a < .01) return; if (!n.resultTransform) { n.resultTransform = L.create() } var o; o = n.resultTransform; L.mul(n.transform, i, o); var h; if (n.skin) { h = this._getTextureByUrl(n.skin); if (h) { if (o._checkTransform()) { r.drawTexture(h, 0, 0, n.width, n.height, o, a); n.resultTransform = null } else { r.drawTexture(h, o.tx, o.ty, n.width, n.height, null, a) } } } var l; l = t.child; if (!l) return; var u = 0, c = 0; c = l.length; for (u = 0; u < c; u++) { this._updateNodeGraphic(l[u], e, o, r, a) } }; t._updateNoChilds = function (t, e) { if (!t.skin) return; var i = this._getTextureByUrl(t.skin); if (!i) return; var r = t.transform; r._checkTransform(); var s = false; s = !r.bTransform; if (!s) { e.drawTexture(i, 0, 0, t.width, t.height, r.clone(), t.alpha) } else { e.drawTexture(i, r.tx, r.ty, t.width, t.height, null, t.alpha) } }; t._updateNodeGraphic2 = function (t, e, i) { var r; r = this._nodeGDic[t.compId] = this._getNodeGraphicData(t.compId, e, this._nodeGDic[t.compId]); if (!t.child) { this._updateNoChilds(r, i); return } var s = r.transform; s._checkTransform(); var n = false; n = !s.bTransform; var a = false; a = n && (s.tx != 0 || s.ty != 0); var o = false; o = s.bTransform || r.alpha != 1; if (o) { i.save() } if (r.alpha != 1) { i.alpha(r.alpha) } if (!n) { i.transform(s.clone()) } else if (a) { i.translate(s.tx, s.ty) } var h; h = t.child; var l; if (r.skin) { l = this._getTextureByUrl(r.skin); if (l) { i.drawTexture(l, 0, 0, r.width, r.height) } } if (h) { var u = 0, c = 0; c = h.length; for (u = 0; u < c; u++) { this._updateNodeGraphic2(h[u], e, i) } } if (o) { i.restore() } else { if (!n) { i.transform(s.clone().invert()) } else if (a) { i.translate(-s.tx, -s.ty) } } }; t._calculateNodeKeyFrames = function (t) { e.prototype._calculateNodeKeyFrames.call(this, t); this._nodeIDAniDic[t.target] = t }; t.getNodeDataByID = function (t) { return this._nodeIDAniDic[t] }; t._getParams = function (t, e, i, r) { var s = I._temParam; s.length = e.length; var n = 0, a = e.length; for (n = 0; n < a; n++) { s[n] = this._getObjVar(t, e[n][0], i, e[n][1], r) } return s }; t._getObjVar = function (t, e, i, r, s) { if (t.hasOwnProperty(e)) { var n = t[e]; if (i >= n.length) i = n.length - 1; if (t[e][i] != undefined) return t[e][i] } if (s.hasOwnProperty(e)) { return s[e] } return r }; t._getNodeGraphicData = function (t, e, i) { if (!i) i = M.create(); if (!i.transform) { i.transform = L.create() } else { i.transform.identity() } var r = this.getNodeDataByID(t); if (!r) return i; var s = r.frames; var n = this._getParams(s, I._drawTextureCmd, e, this._nodeDefaultProps[t]); var a = n[0]; var o = NaN, h = NaN; var l = n[5], u = n[6]; var c = n[13], f = n[14]; var _ = n[7], d = n[8]; var p = n[9]; var v = n[11], m = n[12]; o = n[3]; h = n[4]; if (o == 0 || h == 0) a = null; if (o == -1) o = 0; if (h == -1) h = 0; var g; i.skin = a; i.width = o; i.height = h; if (a) { g = this._getTextureByUrl(a); if (g) { if (!o) o = g.sourceWidth; if (!h) h = g.sourceHeight } else { console.warn("lost skin:", a, ",you may load pics first") } } i.alpha = n[10]; var y; y = i.transform; if (c != 0) { l = c * o } if (f != 0) { u = f * h } if (l != 0 || u != 0) { y.translate(-l, -u) } var x = null; if (p || _ !== 1 || d !== 1 || v || m) { x = I._tempMt; x.identity(); x.bTransform = true; var b = (p - v) * .0174532922222222; var w = (p + m) * .0174532922222222; var T = Math.cos(w); var C = Math.sin(w); var S = Math.sin(b); var A = Math.cos(b); x.a = _ * T; x.b = _ * C; x.c = -d * S; x.d = d * A; x.tx = x.ty = 0 } if (x) { y = L.mul(y, x, y) } y.translate(n[1], n[2]); return i }; t._getTextureByUrl = function (t) { return bt.getRes(t) }; t.setAniData = function (t, e) { if (t.animations) { this._nodeDefaultProps = {}; this._nodeGDic = {}; if (this._nodeList) this._nodeList.length = 0; this._rootNode = t; this._parseNodeList(t); var i = {}; var r = []; var s = t.animations; var n = 0, a = s.length; var o; for (n = 0; n < a; n++) { o = s[n]; this._labels = null; if (e && e != o.name) { continue } if (!o) continue; try { this._calGraphicData(o) } catch (t) { console.warn("parse animation fail:" + o.name + ",empty animation created"); this._gList = [] } var h = {}; h.interval = 1e3 / o["frameRate"]; h.frames = this._gList; h.labels = this._labels; h.name = o.name; r.push(h); i[o.name] = h } this.animationList = r; this.animationDic = i } I._temParam.length = 0 }; t.parseByData = function (t) { var e, i; e = t.nodeRoot; i = t.aniO; delete t.nodeRoot; delete t.aniO; this._nodeDefaultProps = {}; this._nodeGDic = {}; if (this._nodeList) this._nodeList.length = 0; this._rootNode = e; this._parseNodeList(e); this._labels = null; try { this._calGraphicData(i) } catch (t) { console.warn("parse animation fail:" + i.name + ",empty animation created"); this._gList = [] } var r = t; r.interval = 1e3 / i["frameRate"]; r.frames = this._gList; r.labels = this._labels; r.name = i.name; return r }; t.setUpAniData = function (t) { if (t.animations) { var e = {}; var i = []; var r = t.animations; var s = 0, n = r.length; var a; for (s = 0; s < n; s++) { a = r[s]; if (!a) continue; var o = {}; o.name = a.name; o.aniO = a; o.nodeRoot = t; i.push(o); e[a.name] = o } this.animationList = i; this.animationDic = e } }; t._clear = function () { this.animationList = null; this.animationDic = null; this._gList = null; if (this._nodeGDic) { var t; var e; for (t in this._nodeGDic) { e = this._nodeGDic[t]; if (e) e.recover() } } this._nodeGDic = null }; I.parseAnimationByData = function (t) { if (!I._I) I._I = new I; var e; e = I._I.parseByData(t); I._I._clear(); return e }; I.parseAnimationData = function (t) { if (!I._I) I._I = new I; I._I.setUpAniData(t); var e; e = {}; e.animationList = I._I.animationList; e.animationDic = I._I.animationDic; I._I._clear(); return e }; I._drawTextureCmd = [["skin", null], ["x", 0], ["y", 0], ["width", -1], ["height", -1], ["pivotX", 0], ["pivotY", 0], ["scaleX", 1], ["scaleY", 1], ["rotation", 0], ["alpha", 1], ["skewX", 0], ["skewY", 0], ["anchorX", 0], ["anchorY", 0]]; I._temParam = []; I._I = null; I._rootMatrix = null; h(I, ["_tempMt", function () { return this._tempMt = new L }]); I.__init$ = function () { M = function () { function t() { this.skin = null; this.transform = null; this.resultTransform = null; this.width = NaN; this.height = NaN; this.alpha = 1 } v(t, ""); var e = t.prototype; e.recover = function () { this.skin = null; this.width = 0; this.height = 0; this.alpha = 1; if (this.transform) { this.transform.destroy(); this.transform = null } if (this.resultTransform) { this.resultTransform.destroy(); this.resultTransform = null } st.recover("GraphicNode", this) }; t.create = function () { return st.getItemByClass("GraphicNode", t) }; return t }() }; return I }(Wt); T.__init([wt, n, Yt, U, X, ht, N, It]) })(window, document, Laya); (function (t, e, i) { var r = i.un, s = i.uns, n = i.static, a = i.class, o = i.getset, h = i.__newvec; var l = function () { function t() { } a(t, "LayaMain"); return t }(); new l })(window, document, Laya); if (typeof define === "function" && define.amd) { define("laya.core", ["require", "exports"], function (t, e) { "use strict"; Object.defineProperty(e, "__esModule", { value: true }); for (var i in Laya) { var r = Laya[i]; r && r.__isclass && (e[i] = r) } }) } (function (r, t, n) { var e = n.un, i = n.uns, s = n.static, a = n.class, o = n.getset, h = n.__newvec; var d = laya.utils.Browser, l = laya.events.Event, u = laya.events.EventDispatcher; var f = laya.resource.HTMLImage, m = laya.utils.Handler, c = laya.display.Input, g = laya.net.Loader; var _ = laya.net.LocalStorage, p = laya.maths.Matrix, v = laya.renders.Render, y = laya.utils.RunDriver; var x = laya.media.SoundChannel, b = laya.media.SoundManager, w = laya.net.URL, T = laya.utils.Utils; var C = function () { function u() { } a(u, "laya.wx.mini.MiniAdpter"); u.getJson = function (t) { return JSON.parse(t) }; u.init = function (t, e) { t === void 0 && (t = false); e === void 0 && (e = false); if (u._inited) return; u._inited = true; u.window = r; if (!u.window.hasOwnProperty("wx")) return; if (u.window.navigator.userAgent.indexOf("MiniGame") < 0) return; u.isZiYu = e; u.isPosMsgYu = t; u.EnvConfig = {}; try { laya.webgl.resource.WebGLCanvas.premulAlpha = true } catch (t) { } if (!u.isZiYu) { S.setNativeFileDir("/layaairGame"); S.existDir(S.fileNativeDir, m.create(u, u.onMkdirCallBack)) } u.systemInfo = u.window.wx.getSystemInfoSync(); if (u.systemInfo.system.toLowerCase() === "ios 10.1.1") { try { laya.webgl.resource.WebGLCharImage.canUseCanvas = false } catch (t) { } } u.window.focus = function () { }; n["_getUrlPath"] = function () { }; n["getUrlPath"] = function () { }; u.window.logtime = function (t) { }; u.window.alertTimeLog = function (t) { }; u.window.resetShareInfo = function () { }; u.window.CanvasRenderingContext2D = function () { }; u.window.CanvasRenderingContext2D.prototype = u.window.wx.createCanvas().getContext("2d").__proto__; u.window.document.body.appendChild = function () { }; u.EnvConfig.pixelRatioInt = 0; y.getPixelRatio = u.pixelRatio; u._preCreateElement = d.createElement; d["createElement"] = u.createElement; y.createShaderCondition = u.createShaderCondition; T["parseXMLFromString"] = u.parseXMLFromString; c["_createInputElement"] = M["_createInputElement"]; u.EnvConfig.load = g.prototype.load; g.prototype.load = L.prototype.load; g.prototype._loadImage = A.prototype._loadImage; _._baseClass = I; I.__init__(); u.onReciveData() }; u.onReciveData = function () { if (laya.wx.mini.MiniAdpter.isZiYu) { u.window.wx.onMessage(function (t) { if (t["isLoad"] == "opendatacontext") { if (t.url) { S.ziyuFileData[t.url] = t.atlasdata; S.ziyuFileTextureData[t.imgReadyUrl] = t.imgNativeUrl } } else if (t["isLoad"] == "openJsondatacontext") { if (t.url) { S.ziyuFileData[t.url] = t.atlasdata } } else if (t["isLoad"] == "openJsondatacontextPic") { S.ziyuFileTextureData[t.imgReadyUrl] = t.imgNativeUrl } }) } }; u.measureText = function (t) { var e = u._measureText(t); if (!e) { e = { width: 16 }; console.warn("-------微信获取文字宽度失败----等待修复---------") } return e }; u.getUrlEncode = function (t, e) { if (e == "arraybuffer") return ""; return "utf8" }; u.downLoadFile = function (t, e, i, r) { e === void 0 && (e = ""); r === void 0 && (r = "utf8"); var s = S.getFileInfo(t); if (!s) S.downLoadFile(t, e, i, r); else { i != null && i.runWith([0]) } }; u.remove = function (t, e) { S.deleteFile("", t, e, "", 0) }; u.removeAll = function () { S.deleteAll() }; u.hasNativeFile = function (t) { return S.isLocalNativeFile(t) }; u.getFileInfo = function (t) { return S.getFileInfo(t) }; u.getFileList = function () { return S.filesListObj }; u.exitMiniProgram = function () { u.window.wx.exitMiniProgram() }; u.onMkdirCallBack = function (t, e) { if (!t) { S.filesListObj = JSON.parse(e.data); S.fakeObj = S.filesListObj } }; u.pixelRatio = function () { if (!u.EnvConfig.pixelRatioInt) { try { u.EnvConfig.pixelRatioInt = u.systemInfo.pixelRatio; return u.systemInfo.pixelRatio } catch (t) { } } return u.EnvConfig.pixelRatioInt }; u.createElement = function (t) { if (t == "canvas") { var e; if (u.idx == 1) { if (u.isZiYu) { e = u.window.sharedCanvas; e.style = {} } else { e = u.window.canvas } } else { e = u.window.wx.createCanvas() } u.idx++; return e } else if (t == "textarea" || t == "input") { return u.onCreateInput(t) } else if (t == "div") { var i = u._preCreateElement(t); i.contains = function (t) { return null }; i.removeChild = function (t) { }; return i } else { return u._preCreateElement(t) } }; u.onCreateInput = function (t) { var e = u._preCreateElement(t); e.focus = M.wxinputFocus; e.blur = M.wxinputblur; e.style = {}; e.value = 0; e.parentElement = {}; e.placeholder = {}; e.type = {}; e.setColor = function (t) { }; e.setType = function (t) { }; e.setFontFace = function (t) { }; e.addEventListener = function (t) { }; e.contains = function (t) { return null }; e.removeChild = function (t) { }; return e }; u.createShaderCondition = function (e) { var i = this; var t = function () { var t = e; return i[e.replace("this.", "")] }; return t }; u.sendAtlasToOpenDataContext = function (t) { if (!laya.wx.mini.MiniAdpter.isZiYu) { var e = g.getRes(w.formatURL(t)); if (e) { var i = e.meta.image.split(","); if (e.meta && e.meta.image) { var r = e.meta.image.split(","); var s = t.indexOf("/") >= 0 ? "/" : "\\"; var n = t.lastIndexOf(s); var a = n >= 0 ? t.substr(0, n + 1) : ""; for (var o = 0, h = r.length; o < h; o++) { r[o] = a + r[o] } } else { r = [t.replace(".json", ".png")] } for (o = 0; o < r.length; o++) { var l = r[o]; u.postInfoToContext(t, l, e) } } else { throw "传递的url没有获取到对应的图集数据信息，请确保图集已经过！" } } }; u.postInfoToContext = function (t, e, i) { var r = { frames: i.frames, meta: i.meta }; var s = e; var n = S.getFileInfo(w.formatURL(e)); if (n) { var a = n.md5; var o = S.getFileNativePath(a) } else { o = s } if (o) { u.window.wx.postMessage({ url: t, atlasdata: r, imgNativeUrl: o, imgReadyUrl: s, isLoad: "opendatacontext" }) } else { throw "获取图集的磁盘url路径不存在！" } }; u.sendSinglePicToOpenDataContext = function (t) { var e = w.formatURL(t); var i = S.getFileInfo(e); if (i) { var r = i.md5; var s = S.getFileNativePath(r); t = e } else { s = t } if (s) { u.window.wx.postMessage({ url: t, imgNativeUrl: s, imgReadyUrl: t, isLoad: "openJsondatacontextPic" }) } else { throw "获取图集的磁盘url路径不存在！" } }; u.sendJsonDataToDataContext = function (t) { if (!laya.wx.mini.MiniAdpter.isZiYu) { var e = g.getRes(t); if (e) { u.window.wx.postMessage({ url: t, atlasdata: e, isLoad: "openJsondatacontext" }) } else { throw "传递的url没有获取到对应的图集数据信息，请确保图集已经过！" } } }; u.EnvConfig = null; u.window = null; u._preCreateElement = null; u._inited = false; u.systemInfo = null; u.isZiYu = false; u.isPosMsgYu = false; u.autoCacheFile = true; u.minClearSize = 5 * 1024 * 1024; u.subNativeFiles = null; u.subNativeheads = []; u.subMaps = []; u.AutoCacheDownFile = false; u._measureText = null; u.parseXMLFromString = function (t) { var e; var i; t = t.replace(/>\s+</g, "><"); try { e = (new r.Parser.DOMParser).parseFromString(t, "text/xml") } catch (t) { throw "需要引入xml解析库文件" } return e }; u.idx = 1; s(u, ["nativefiles", function () { return this.nativefiles = ["layaNativeDir", "wxlocal"] }]); return u }(); var S = function () { function _() { } a(_, "laya.wx.mini.MiniFileMgr"); _.isLocalNativeFile = function (t) { for (var e = 0, i = C.nativefiles.length; e < i; e++) { if (t.indexOf(C.nativefiles[e]) != -1) return true } return false }; _.getFileInfo = function (t) { var e = t; var i = _.fakeObj[e]; if (i == null) return null; else return i; return null }; _.read = function (t, e, i, r, s, n) { e === void 0 && (e = "utf8"); r === void 0 && (r = ""); s === void 0 && (s = false); n === void 0 && (n = ""); var a; if (r != "" && (r.indexOf("http://") != -1 || r.indexOf("https://") != -1)) { a = _.getFileNativePath(t) } else { a = t } _.fs.readFile({ filePath: a, encoding: e, success: function (t) { i != null && i.runWith([0, t]) }, fail: function (t) { if (t && r != "") _.downFiles(r, e, i, r, s, n); else i != null && i.runWith([1]) } }) }; _.downFiles = function (e, i, r, s, n, a, o) { i === void 0 && (i = "ascii"); s === void 0 && (s = ""); n === void 0 && (n = false); a === void 0 && (a = ""); o === void 0 && (o = true); var t = _.wxdown({ url: e, success: function (t) { if (t.statusCode === 200) _.readFile(t.tempFilePath, i, r, s, n, a, o); else if (t.statusCode === 403) { r != null && r.runWith([0, e]) } else { r != null && r.runWith([1, t]) } }, fail: function (t) { r != null && r.runWith([1, t]) } }); t.onProgressUpdate(function (t) { r != null && r.runWith([2, t.progress]) }) }; _.readFile = function (e, i, r, s, n, t, a) { i === void 0 && (i = "utf8"); s === void 0 && (s = ""); n === void 0 && (n = false); t === void 0 && (t = ""); a === void 0 && (a = true); _.fs.readFile({ filePath: e, encoding: i, success: function (t) { if (e.indexOf("http://") != -1 || e.indexOf("https://") != -1) { if (C.autoCacheFile || n) { r != null && r.runWith([0, t]); _.copyFile(e, s, null, i, a) } else r != null && r.runWith([0, t]) } else r != null && r.runWith([0, t]) }, fail: function (t) { if (t) r != null && r.runWith([1, t]) } }) }; _.downOtherFiles = function (t, e, i, r, s) { i === void 0 && (i = ""); r === void 0 && (r = false); s === void 0 && (s = true); _.wxdown({ url: t, success: function (t) { if (t.statusCode === 200) { if ((C.autoCacheFile || r) && i.indexOf("wx.qlogo.cn") == -1 && i.indexOf(".php") == -1) { e != null && e.runWith([0, t.tempFilePath]); _.copyFile(t.tempFilePath, i, null, "", s) } else e != null && e.runWith([0, t.tempFilePath]) } else { e != null && e.runWith([1, t]) } }, fail: function (t) { e != null && e.runWith([1, t]) } }) }; _.downLoadFile = function (t, e, i, r) { e === void 0 && (e = ""); r === void 0 && (r = "ascii"); if (C.window.navigator.userAgent.indexOf("MiniGame") < 0) { n.loader.load(t, i) } else { if (e == "image" || e == "sound") _.downOtherFiles(t, i, t, true, false); else _.downFiles(t, r, i, t, true, e, false) } }; _.copyFile = function (t, i, r, s, n) { s === void 0 && (s = ""); n === void 0 && (n = true); var e = t.indexOf("//tmp_") >= 0 ? t.split("//tmp_") : t.split("/"); var a = e[e.length - 1]; var o = i; var h = _.getFileInfo(i); var l = _.getFileNativePath(a); _.fakeObj[i] = { md5: a, readyUrl: i, size: 0, times: d.now(), encoding: s }; var u = 50 * 1024 * 1024; var c = 4 * 1024 * 1024; var f = _.getCacheUseSize(); if (h) { if (h.readyUrl != i) { _.fs.getFileInfo({ filePath: t, success: function (t) { if (n && f + c + t.size >= u) { if (t.size > C.minClearSize) C.minClearSize = t.size; _.onClearCacheRes() } _.deleteFile(a, i, r, s, t.size) }, fail: function (t) { r != null && r.runWith([1, t]) } }) } else r != null && r.runWith([0]) } else { _.fs.getFileInfo({ filePath: t, success: function (e) { if (n && f + c + e.size >= u) { if (e.size > C.minClearSize) C.minClearSize = e.size; _.onClearCacheRes() } _.fs.copyFile({ srcPath: t, destPath: l, success: function (t) { _.onSaveFile(i, a, true, s, r, e.size) }, fail: function (t) { r != null && r.runWith([1, t]) } }) }, fail: function (t) { r != null && r.runWith([1, t]) } }) } }; _.onClearCacheRes = function () { var t = C.minClearSize; var e = []; for (var i in _.filesListObj) { e.push(_.filesListObj[i]) } _.sortOn(e, "times", 16); var r = 0; for (var s = 1, n = e.length; s < n; s++) { var a = e[s]; if (r >= t) break; r += a.size; _.deleteFile("", a.readyUrl) } }; _.sortOn = function (t, i, e) { e === void 0 && (e = 0); if (e == 16) return t.sort(function (t, e) { return t[i] - e[i] }); if (e == (16 | 2)) return t.sort(function (t, e) { return e[i] - t[i] }); return t.sort(function (t, e) { return t[i] - e[i] }) }; _.getFileNativePath = function (t) { return laya.wx.mini.MiniFileMgr.fileNativeDir + "/" + t }; _.deleteFile = function (r, s, n, a, o) { s === void 0 && (s = ""); a === void 0 && (a = ""); o === void 0 && (o = 0); var t = _.getFileInfo(s); var e = _.getFileNativePath(t.md5); _.fs.unlink({ filePath: e, success: function (t) { var e = r != "" ? true : false; if (r != "") { var i = _.getFileNativePath(r); _.fs.copyFile({ srcPath: r, destPath: i, success: function (t) { _.onSaveFile(s, r, e, a, n, t.size) }, fail: function (t) { n != null && n.runWith([1, t]) } }) } else { _.onSaveFile(s, r, e, a, n, o) } }, fail: function (t) { } }) }; _.deleteAll = function () { var t = []; for (var e in _.filesListObj) { t.push(_.filesListObj[e]) } for (var i = 1, r = t.length; i < r; i++) { var s = t[i]; _.deleteFile("", s.readyUrl) } if (laya.wx.mini.MiniFileMgr.filesListObj && laya.wx.mini.MiniFileMgr.filesListObj.fileUsedSize) { laya.wx.mini.MiniFileMgr.filesListObj.fileUsedSize = 0 } laya.wx.mini.MiniFileMgr.writeFilesList("", JSON.stringify({}), false) }; _.onSaveFile = function (t, e, i, r, s, n) { i === void 0 && (i = true); r === void 0 && (r = ""); n === void 0 && (n = 0); var a = t; if (_.filesListObj["fileUsedSize"] == null) _.filesListObj["fileUsedSize"] = 0; if (i) { var o = _.getFileNativePath(e); _.filesListObj[a] = { md5: e, readyUrl: t, size: n, times: d.now(), encoding: r }; _.filesListObj["fileUsedSize"] = parseInt(_.filesListObj["fileUsedSize"]) + n; _.writeFilesList(a, JSON.stringify(_.filesListObj), true); s != null && s.runWith([0]) } else { if (_.filesListObj[a]) { var h = parseInt(_.filesListObj[a].size); _.filesListObj["fileUsedSize"] = parseInt(_.filesListObj["fileUsedSize"]) - h; delete _.filesListObj[a]; _.writeFilesList(a, JSON.stringify(_.filesListObj), false); s != null && s.runWith([0]) } } }; _.writeFilesList = function (t, e, i) { var r = _.fileNativeDir + "/" + _.fileListName; _.fs.writeFile({ filePath: r, encoding: "utf8", data: e, success: function (t) { }, fail: function (t) { } }); if (!C.isZiYu && C.isPosMsgYu && C.window.wx.postMessage) { C.window.wx.postMessage({ url: t, data: _.filesListObj[t], isLoad: "filenative", isAdd: i }) } }; _.getCacheUseSize = function () { if (_.filesListObj && _.filesListObj["fileUsedSize"]) return _.filesListObj["fileUsedSize"]; return 0 }; _.existDir = function (t, e) { _.fs.mkdir({ dirPath: t, success: function (t) { e != null && e.runWith([0, { data: JSON.stringify({}) }]) }, fail: function (t) { if (t.errMsg.indexOf("file already exists") != -1) _.readSync(_.fileListName, "utf8", e); else e != null && e.runWith([1, t]) } }) }; _.readSync = function (t, e, i, r) { e === void 0 && (e = "utf8"); r === void 0 && (r = ""); var s = _.getFileNativePath(t); var n; try { n = _.fs.readFileSync(s, e); i != null && i.runWith([0, { data: n }]) } catch (t) { i != null && i.runWith([1]) } }; _.setNativeFileDir = function (t) { _.fileNativeDir = C.window.wx.env.USER_DATA_PATH + t }; _.filesListObj = {}; _.fakeObj = {}; _.fileNativeDir = null; _.fileListName = "layaairfiles.txt"; _.ziyuFileData = {}; _.ziyuFileTextureData = {}; _.loadPath = ""; _.DESCENDING = 2; _.NUMERIC = 16; s(_, ["fs", function () { return this.fs = C.window.wx.getFileSystemManager() }, "wxdown", function () { return this.wxdown = C.window.wx.downloadFile }]); return _ }(); var A = function () { function u() { } a(u, "laya.wx.mini.MiniImage"); var t = u.prototype; t._loadImage = function (t) { var e = this; if (C.isZiYu) { u.onCreateImage(t, e, true); return } var i = false; if (!S.isLocalNativeFile(t)) { i = true; t = w.formatURL(t) } else { if (t.indexOf("http://") != -1 || t.indexOf("https://") != -1) { if (S.loadPath != "") { t = t.split(S.loadPath)[1] } else { var r = w.rootPath != "" ? w.rootPath : w.basePath; var s = t; if (r != "") t = t.split(r)[1]; if (!t) { t = s } } } if (C.subNativeFiles && C.subNativeheads.length == 0) { for (var n in C.subNativeFiles) { var a = C.subNativeFiles[n]; C.subNativeheads = C.subNativeheads.concat(a); for (var o = 0; o < a.length; o++) { C.subMaps[a[o]] = n + "/" + a[o] } } } if (C.subNativeFiles && t.indexOf("/") != -1) { var h = t.split("/")[0] + "/"; if (h && C.subNativeheads.indexOf(h) != -1) { var l = C.subMaps[h]; t = t.replace(h, l) } } } if (!S.getFileInfo(t) || S.getFileInfoSize && !S.getFileInfoSize(t)) { if (t.indexOf("http://") != -1 || t.indexOf("https://") != -1) { if (C.isZiYu) { u.onCreateImage(t, e, true) } else { S.downOtherFiles(t, new m(u, u.onDownImgCallBack, [t, e]), t) } } else u.onCreateImage(t, e, true) } else { u.onCreateImage(t, e, !i) } }; u.onDownImgCallBack = function (t, e, i, r) { r === void 0 && (r = ""); if (!i) u.onCreateImage(t, e, false, r); else { e.onError(null) } }; u.onCreateImage = function (e, i, t, r) { t === void 0 && (t = false); r === void 0 && (r = ""); var s; if (C.autoCacheFile) { if (!t) { if (r != "") { s = r } else { var n = S.getFileInfo(e); var a = n.md5; s = S.getFileNativePath(a) } } else if (C.isZiYu) { var o = w.formatURL(e); if (S.ziyuFileTextureData[o]) { s = S.ziyuFileTextureData[o] } else s = e } else s = e } else { if (!t) s = r; else s = e } if (i.imgCache == null) i.imgCache = {}; var h; function l() { h.onload = null; h.onerror = null; delete i.imgCache[e] } var u = function () { l(); i.onLoaded(h) }; var c = function () { l(); i.event("error", "Load image failed") }; if (i._type == "nativeimage") { h = new d.window.Image; h.crossOrigin = ""; h.onload = u; h.onerror = c; h.src = s; i.imgCache[e] = h } else { new f.create(s, { onload: u, onerror: c, onCreate: function (t) { h = t; i.imgCache[e] = t } }) } }; return u }(); var M = function () { function i() { } a(i, "laya.wx.mini.MiniInput"); i._createInputElement = function () { c["_initInput"](c["area"] = d.createElement("textarea")); c["_initInput"](c["input"] = d.createElement("input")); c["inputContainer"] = d.createElement("div"); c["inputContainer"].style.position = "absolute"; c["inputContainer"].style.zIndex = 1e5; d.container.appendChild(c["inputContainer"]); c["inputContainer"].setPos = function (t, e) { c["inputContainer"].style.left = t + "px"; c["inputContainer"].style.top = e + "px" }; n.stage.on("resize", null, i._onStageResize); wx.onWindowResize && wx.onWindowResize(function (t) { r.dispatchEvent && r.dispatchEvent("resize") }); b._soundClass = k; b._musicClass = k; var t = C.systemInfo.model; var e = C.systemInfo.system; if (t.indexOf("iPhone") != -1) { d.onIPhone = true; d.onIOS = true; d.onIPad = true; d.onAndroid = false } if (e.indexOf("Android") != -1 || e.indexOf("Adr") != -1) { d.onAndroid = true; d.onIPhone = false; d.onIOS = false; d.onIPad = false } }; i._onStageResize = function () { var t = n.stage._canvasTransform.identity(); t.scale(d.width / v.canvas.width / y.getPixelRatio(), d.height / v.canvas.height / y.getPixelRatio()) }; i.wxinputFocus = function (t) { var i = c["inputElement"].target; if (i && !i.editable) { return } C.window.wx.offKeyboardConfirm(); C.window.wx.offKeyboardInput(); C.window.wx.showKeyboard({ defaultValue: i.text, maxLength: i.maxChars, multiple: i.multiline, confirmHold: true, confirmType: "done", success: function (t) { }, fail: function (t) { } }); C.window.wx.onKeyboardConfirm(function (t) { var e = t ? t.value : ""; i.text = e; i.event("input"); laya.wx.mini.MiniInput.inputEnter() }); C.window.wx.onKeyboardInput(function (t) { var e = t ? t.value : ""; if (!i.multiline) { if (e.indexOf("\n") != -1) { laya.wx.mini.MiniInput.inputEnter(); return } } i.text = e; i.event("input") }) }; i.inputEnter = function () { c["inputElement"].target.focus = false }; i.wxinputblur = function () { i.hideKeyboard() }; i.hideKeyboard = function () { C.window.wx.offKeyboardConfirm(); C.window.wx.offKeyboardInput(); C.window.wx.hideKeyboard({ success: function (t) { console.log("隐藏键盘") }, fail: function (t) { console.log("隐藏键盘出错:" + (t ? t.errMsg : "")) } }) }; return i }(); var I = function () { function i() { } a(i, "laya.wx.mini.MiniLocalStorage"); i.__init__ = function () { i.items = i }; i.setItem = function (e, i) { try { wx.setStorageSync(e, i) } catch (t) { wx.setStorage({ key: e, data: i }) } }; i.getItem = function (t) { return wx.getStorageSync(t) }; i.setJSON = function (t, e) { i.setItem(t, e) }; i.getJSON = function (t) { return i.getItem(t) }; i.removeItem = function (t) { wx.removeStorageSync(t) }; i.clear = function () { wx.clearStorageSync() }; i.getStorageInfoSync = function () { try { var t = wx.getStorageInfoSync(); console.log(t.keys); console.log(t.currentSize); console.log(t.limitSize); return t } catch (t) { } return null }; i.support = true; i.items = null; return i }(); var E = function () { function s() { } a(s, "laya.wx.mini.MiniLocation"); s.__init__ = function () { C.window.navigator.geolocation.getCurrentPosition = s.getCurrentPosition; C.window.navigator.geolocation.watchPosition = s.watchPosition; C.window.navigator.geolocation.clearWatch = s.clearWatch }; s.getCurrentPosition = function (e, t, i) { var r; r = {}; r.success = s; r.fail = t; C.window.wx.getLocation(r); function s(t) { if (e != null) { e(t) } } }; s.watchPosition = function (t, e, i) { s._curID++; var r; r = {}; r.success = t; r.error = e; s._watchDic[s._curID] = r; n.timer.loop(1e3, null, s._myLoop); return s._curID }; s.clearWatch = function (t) { delete s._watchDic[t]; if (!s._hasWatch()) { n.timer.clear(null, s._myLoop) } }; s._hasWatch = function () { var t; for (t in s._watchDic) { if (s._watchDic[t]) return true } return false }; s._myLoop = function () { s.getCurrentPosition(s._mySuccess, s._myError) }; s._mySuccess = function (t) { var e = {}; e.coords = t; e.timestamp = d.now(); var i; for (i in s._watchDic) { if (s._watchDic[i].success) { s._watchDic[i].success(e) } } }; s._myError = function (t) { var e; for (e in s._watchDic) { if (s._watchDic[e].error) { s._watchDic[e].error(t) } } }; s._watchDic = {}; s._curID = 0; return s }(); var R = function () { function t(t, e) { this.videoend = false; this.videourl = ""; this.videoElement = null; this.onPlayFunc = null; this.onEndedFunC = null; this._duration = NaN; this.position = NaN; t === void 0 && (t = 320); e === void 0 && (e = 240); this.videoElement = C.window.wx.createVideo({ width: t, height: e, autoplay: true }) } a(t, "laya.wx.mini.MiniVideo"); var e = t.prototype; e.on = function (t, e, i) { if (t == "loadedmetadata") { this.onPlayFunc = i.bind(e); this.videoElement.onPlay = this.onPlayFunction.bind(this) } else if (t == "ended") { this.onEndedFunC = i.bind(e); this.videoElement.onEnded = this.onEndedFunction.bind(this) } this.videoElement.onTimeUpdate = this.onTimeUpdateFunc.bind(this) }; e.onTimeUpdateFunc = function (t) { this.position = t.position; this._duration = t.duration }; e.onPlayFunction = function () { if (this.videoElement) this.videoElement.readyState = 200; console.log("=====视频加载完成========"); this.onPlayFunc != null && this.onPlayFunc() }; e.onEndedFunction = function () { if (!this.videoElement) return; this.videoend = true; console.log("=====视频播放完毕========"); this.onEndedFunC != null && this.onEndedFunC() }; e.off = function (t, e, i) { if (t == "loadedmetadata") { this.onPlayFunc = i.bind(e); this.videoElement.offPlay = this.onPlayFunction.bind(this) } else if (t == "ended") { this.onEndedFunC = i.bind(e); this.videoElement.offEnded = this.onEndedFunction.bind(this) } }; e.load = function (t) { if (!this.videoElement) return; this.videoElement.src = t }; e.play = function () { if (!this.videoElement) return; this.videoend = false; this.videoElement.play() }; e.pause = function () { if (!this.videoElement) return; this.videoend = true; this.videoElement.pause() }; e.size = function (t, e) { if (!this.videoElement) return; this.videoElement.width = t; this.videoElement.height = e }; e.destroy = function () { if (this.videoElement) this.videoElement.destroy(); this.videoElement = null; this.onEndedFunC = null; this.onPlayFunc = null; this.videoend = false; this.videourl = null }; e.reload = function () { if (!this.videoElement) return; this.videoElement.src = this.videourl }; o(0, e, "duration", function () { return this._duration }); o(0, e, "paused", function () { if (!this.videoElement) return false; return this.videoElement.paused }); o(0, e, "loop", function () { if (!this.videoElement) return false; return this.videoElement.loop }, function (t) { if (!this.videoElement) return; this.videoElement.loop = t }); o(0, e, "currentTime", function () { if (!this.videoElement) return 0; return this.videoElement.initialTime }, function (t) { if (!this.videoElement) return; this.videoElement.initialTime = t }); o(0, e, "ended", function () { return this.videoend }); o(0, e, "muted", function () { if (!this.videoElement) return false; return this.videoElement.muted }, function (t) { if (!this.videoElement) return; this.videoElement.muted = t }); o(0, e, "videoWidth", function () { if (!this.videoElement) return 0; return this.videoElement.width }); o(0, e, "videoHeight", function () { if (!this.videoElement) return 0; return this.videoElement.height }); o(0, e, "playbackRate", function () { if (!this.videoElement) return 0; return this.videoElement.playbackRate }, function (t) { if (!this.videoElement) return; this.videoElement.playbackRate = t }); o(0, e, "x", function () { if (!this.videoElement) return 0; return this.videoElement.x }, function (t) { if (!this.videoElement) return; this.videoElement.x = t }); o(0, e, "y", function () { if (!this.videoElement) return 0; return this.videoElement.y }, function (t) { if (!this.videoElement) return; this.videoElement.y = t }); o(0, e, "currentSrc", function () { return this.videoElement.src }); t.__init__ = function () { laya.device.media.Video = t }; return t }(); var P = function (s) { function n() { n.__super.call(this) } a(n, "laya.wx.mini.MiniAccelerator", s); var t = n.prototype; t.on = function (t, e, i, r) { s.prototype.on.call(this, t, e, i, r); n.startListen(this["onDeviceOrientationChange"]); return this }; t.off = function (t, e, i, r) { r === void 0 && (r = false); if (!this.hasListener(t)) n.stopListen(); return s.prototype.off.call(this, t, e, i, r) }; n.__init__ = function () { try { var t; t = laya.device.motion.Accelerator; if (!t) return; t["prototype"]["on"] = n["prototype"]["on"]; t["prototype"]["off"] = n["prototype"]["off"] } catch (t) { } }; n.startListen = function (t) { n._callBack = t; if (n._isListening) return; n._isListening = true; try { C.window.wx.onAccelerometerChange(laya.wx.mini.MiniAccelerator.onAccelerometerChange) } catch (t) { } }; n.stopListen = function () { n._isListening = false; try { C.window.wx.stopAccelerometer({}) } catch (t) { } }; n.onAccelerometerChange = function (t) { var e; e = {}; e.acceleration = t; e.accelerationIncludingGravity = t; e.rotationRate = {}; if (n._callBack != null) { n._callBack(e) } }; n._isListening = false; n._callBack = null; return n }(u); var L = function (t) { function v() { v.__super.call(this) } a(v, "laya.wx.mini.MiniLoader", t); var e = v.prototype; e.load = function (t, e, i, r, s) { i === void 0 && (i = true); s === void 0 && (s = false); var n = this; n._url = t; if (t.indexOf("data:image") === 0) n._type = e = "image"; else { n._type = e || (e = n.getTypeFromUrl(t)) } n._cache = i; n._data = null; if (!s && g.loadedMap[w.formatURL(t)]) { n._data = g.loadedMap[w.formatURL(t)]; this.event("progress", 1); this.event("complete", n._data); return } if (g.parserMap[e] != null) { n._customParse = true; if (g.parserMap[e] instanceof laya.utils.Handler) g.parserMap[e].runWith(this); else g.parserMap[e].call(null, this); return } var a = C.getUrlEncode(t, e); var o = T.getFileExtension(t); if (v._fileTypeArr.indexOf(o) != -1) { C.EnvConfig.load.call(this, t, e, i, r, s) } else { if (C.isZiYu && !S.ziyuFileData[t]) { t = w.formatURL(t) } if (C.isZiYu && S.ziyuFileData[t]) { var h = S.ziyuFileData[t]; n.onLoaded(h); return } if (!S.getFileInfo(t)) { if (S.isLocalNativeFile(t)) { if (C.subNativeFiles && C.subNativeheads.length == 0) { for (var l in C.subNativeFiles) { var u = C.subNativeFiles[l]; C.subNativeheads = C.subNativeheads.concat(u); for (var c = 0; c < u.length; c++) { C.subMaps[u[c]] = l + "/" + u[c] } } } if (C.subNativeFiles && t.indexOf("/") != -1) { var f = t.split("/")[0] + "/"; if (f && C.subNativeheads.indexOf(f) != -1) { var _ = C.subMaps[f]; t = t.replace(f, _) } } S.read(t, a, new m(v, v.onReadNativeCallBack, [a, t, e, i, r, s, n])); return } var d = t; t = w.formatURL(t); if (t.indexOf("http://") != -1 || t.indexOf("https://") != -1 && !C.AutoCacheDownFile) { C.EnvConfig.load.call(n, d, e, i, r, s) } else { p = S.getFileInfo(t); if (p) { p.encoding = p.encoding == null ? "utf8" : p.encoding; S.readFile(p.url, a, new m(v, v.onReadNativeCallBack, [a, t, e, i, r, s, n]), t) } else if (n.type == "image" || n.type == "htmlimage") { C.EnvConfig.load.call(n, t, e, i, r, s) } else { t = w.formatURL(t); if (t.indexOf("http://") == -1 && t.indexOf("https://") == -1 || S.isLocalNativeFile(t)) { S.readFile(t, a, new m(v, v.onReadNativeCallBack, [a, t, e, i, r, s, n]), t) } else { S.downFiles(t, a, new m(v, v.onReadNativeCallBack, [a, t, e, i, r, s, n]), t, i) } } } } else { var p = S.getFileInfo(t); p.encoding = p.encoding == null ? "utf8" : p.encoding; S.readFile(t, p.encoding, new m(v, v.onReadNativeCallBack, [a, t, e, i, r, s, n]), t) } } }; v.onReadNativeCallBack = function (t, e, i, r, s, n, a, o, h) { r === void 0 && (r = true); n === void 0 && (n = false); o === void 0 && (o = 0); if (!o) { var l; if (i == "json" || i == "atlas") { l = C.getJson(h.data) } else if (i == "xml") { l = T.parseXMLFromString(h.data) } else { l = h.data } if (!C.isZiYu && C.isPosMsgYu && i != "arraybuffer" && C.window.wx) { C.window.wx.postMessage({ url: e, data: l, isLoad: "filedata" }) } a.onLoaded(l) } else if (o == 1) { console.log("-----------本地加载失败，尝试外网加载----"); C.EnvConfig.load.call(a, e, i, r, s, n) } }; s(v, ["_fileTypeArr", function () { return this._fileTypeArr = ["png", "jpg", "bmp", "jpeg", "gif"] }]); return v }(u); var k = function (t) { function h() { this._sound = null; this.url = null; this.loaded = false; this.readyUrl = null; h.__super.call(this) } a(h, "laya.wx.mini.MiniSound", t); var e = h.prototype; e.load = function (t) { if (!S.isLocalNativeFile(t)) { t = w.formatURL(t) } else { if (t.indexOf("http://") != -1 || t.indexOf("https://") != -1) { if (S.loadPath != "") { t = t.split(S.loadPath)[1] } else { var e = w.rootPath != "" ? w.rootPath : w.basePath; if (e != "") t = t.split(e)[1] } } } this.url = t; this.readyUrl = t; if (h._audioCache[this.readyUrl]) { this.event("complete"); return } if (C.autoCacheFile && S.getFileInfo(t)) { this.onDownLoadCallBack(t, 0) } else { if (!C.autoCacheFile) { this.onDownLoadCallBack(t, 0) } else { if (S.isLocalNativeFile(t)) { e = w.rootPath != "" ? w.rootPath : w.basePath; var i = t; if (e != "") t = t.split(e)[1]; if (!t) { t = i } if (C.subNativeFiles && C.subNativeheads.length == 0) { for (var r in C.subNativeFiles) { var s = C.subNativeFiles[r]; C.subNativeheads = C.subNativeheads.concat(s); for (var n = 0; n < s.length; n++) { C.subMaps[s[n]] = r + "/" + s[n] } } } if (C.subNativeFiles && t.indexOf("/") != -1) { var a = t.split("/")[0] + "/"; if (a && C.subNativeheads.indexOf(a) != -1) { var o = C.subMaps[a]; t = t.replace(a, o) } } this.onDownLoadCallBack(t, 0) } else { S.downOtherFiles(t, m.create(this, this.onDownLoadCallBack, [t]), t) } } } }; e.onDownLoadCallBack = function (t, e) { if (!e) { var i; if (C.autoCacheFile) { var r = S.getFileInfo(t); if (r && r.md5) { var s = r.md5; i = S.getFileNativePath(s) } else { i = t } this._sound = h._createSound(); this._sound.src = this.url = i } else { this._sound = h._createSound(); this._sound.src = t } this._sound.onCanplay(h.bindToThis(this.onCanPlay, this)); this._sound.onError(h.bindToThis(this.onError, this)) } else { this.event("error") } }; e.onError = function (t) { try { console.log("-----1---------------minisound-----id:" + h._id); console.log(t) } catch (t) { console.log("-----2---------------minisound-----id:" + h._id); console.log(t) } this.event("error"); this._sound.offError(null) }; e.onCanPlay = function () { this.loaded = true; this.event("complete"); this._sound.offCanplay(null) }; e.play = function (t, e) { t === void 0 && (t = 0); e === void 0 && (e = 0); var i; if (this.url == b._tMusic) { if (!h._musicAudio) h._musicAudio = h._createSound(); i = h._musicAudio } else { if (h._audioCache[this.readyUrl]) { i = h._audioCache[this.readyUrl]._sound } else { i = h._createSound() } } if (C.autoCacheFile && S.getFileInfo(this.url)) { var r; var s = S.getFileInfo(this.url); var n = s.md5; i.src = this.url = S.getFileNativePath(n) } else { i.src = this.url } var a = new D(i, this); a.url = this.url; a.loops = e; a.loop = e === 0 ? true : false; a.startTime = t; a.play(); b.addChannel(a); return a }; e.dispose = function () { var t = h._audioCache[this.readyUrl]; if (t) { t.src = ""; if (t._sound) { t._sound.destroy(); t._sound = null; t = null } delete h._audioCache[this.readyUrl] } }; o(0, e, "duration", function () { return this._sound.duration }); h._createSound = function () { h._id++; return C.window.wx.createInnerAudioContext() }; h.bindToThis = function (t, e) { var i = t; i = t.bind(e); return i }; h._musicAudio = null; h._id = 0; h._audioCache = {}; return h }(u); var D = function (t) { function i(t, e) { this._audio = null; this._onEnd = null; this._miniSound = null; i.__super.call(this); this._audio = t; this._miniSound = e; this._onEnd = i.bindToThis(this.__onEnd, this); t.onEnded(this._onEnd) } a(i, "laya.wx.mini.MiniSoundChannel", t); var e = i.prototype; e.__onEnd = function () { if (this.loops == 1) { if (this.completeHandler) { n.timer.once(10, this, this.__runComplete, [this.completeHandler], false); this.completeHandler = null } this.stop(); this.event("complete"); return } if (this.loops > 0) { this.loops-- } this.startTime = 0; this.play() }; e.play = function () { this.isStopped = false; b.addChannel(this); this._audio.play() }; e.stop = function () { this.isStopped = true; b.removeChannel(this); this.completeHandler = null; if (!this._audio) return; this._audio.pause(); this._audio.offEnded(null); this._audio = null; this._miniSound = null; this._onEnd = null }; e.pause = function () { this.isStopped = true; this._audio.pause() }; e.resume = function () { if (!this._audio) return; this.isStopped = false; b.addChannel(this); this._audio.play() }; o(0, e, "startTime", null, function (t) { if (this._audio) { this._audio.startTime = t } }); o(0, e, "autoplay", function () { return this._audio.autoplay }, function (t) { this._audio.autoplay = t }); o(0, e, "position", function () { if (!this._audio) return 0; return this._audio.currentTime }); o(0, e, "duration", function () { if (!this._audio) return 0; return this._audio.duration }); o(0, e, "loop", function () { return this._audio.loop }, function (t) { this._audio.loop = t }); o(0, e, "volume", function () { if (!this._audio) return 1; return this._audio.volume }, function (t) { if (!this._audio) return; this._audio.volume = t }); i.bindToThis = function (t, e) { var i = t; i = t.bind(e); return i }; return i }(x) })(window, document, Laya); if (typeof define === "function" && define.amd) { define("laya.core", ["require", "exports"], function (t, e) { "use strict"; Object.defineProperty(e, "__esModule", { value: true }); for (var i in Laya) { var r = Laya[i]; r && r.__isclass && (e[i] = r) } }) } (function (t, e, w) { var i = w.un, r = w.uns, a = w.static, v = w.class, h = w.getset, n = w.__newvec; var c = laya.maths.Arith, f = laya.maths.Bezier, s = laya.resource.Bitmap, _ = laya.utils.Browser; var d = laya.utils.Byte, p = laya.utils.Color, o = laya.filters.ColorFilter, T = w.Config, l = laya.resource.Context; var u = laya.events.Event, C = laya.filters.Filter, m = laya.display.Graphics, g = laya.resource.HTMLCanvas; var y = laya.utils.HTMLChar, x = laya.resource.HTMLImage, b = laya.resource.HTMLSubImage; var S = laya.utils.Handler, A = laya.net.Loader, M = laya.maths.Matrix, I = laya.maths.Point, E = laya.maths.Rectangle; var R = laya.renders.Render, P = laya.renders.RenderContext, L = laya.renders.RenderSprite; var k = laya.resource.Resource, D = laya.resource.ResourceManager, B = laya.utils.RunDriver; var N = laya.display.Sprite, F = laya.display.Stage, O = laya.utils.Stat, z = laya.utils.StringKey; var U = laya.display.css.Style, W = laya.system.System, V = laya.display.Text, H = laya.resource.Texture; var G = laya.display.css.TransformInfo, Y = laya.net.URL, X = laya.utils.Utils, j = laya.utils.VectorGraphManager; var K = laya.utils.WordText; w.interface("laya.webgl.shapes.IShape"); w.interface("laya.webgl.submit.ISubmit"); w.interface("laya.webgl.text.ICharSegment"); w.interface("laya.webgl.canvas.save.ISaveData"); w.interface("laya.webgl.resource.IMergeAtlasBitmap"); w.interface("laya.filters.IFilterActionGL", "laya.filters.IFilterAction"); var $ = function () { function t() { } v(t, "laya.filters.webgl.FilterActionGL"); var e = t.prototype; w.imps(e, { "laya.filters.IFilterActionGL": true }); e.setValue = function (t) { }; e.setValueMix = function (t) { }; e.apply3d = function (t, e, i, r, s) { return null }; e.apply = function (t) { return null }; h(0, e, "typeMix", function () { return 0 }); return t }(); var q = function () { function t() { } v(t, "laya.webgl.shader.ShaderValue"); return t }(); var Z = function () { var r, s; function t(t, e, i) { this._atlasID = 0; this._width = 0; this._height = 0; this._texCount = 0; this._rowInfo = null; this._cells = null; this._failSize = new s; t === void 0 && (t = 0); e === void 0 && (e = 0); i === void 0 && (i = 0); this._cells = null; this._rowInfo = null; this._init(t, e); this._atlasID = i } v(t, "laya.webgl.atlas.AtlasGrid"); var e = t.prototype; e.getAltasID = function () { return this._atlasID }; e.setAltasID = function (t) { if (t >= 0) { this._atlasID = t } }; e.addTex = function (t, e, i) { var r = this._get(e, i); if (r.ret == false) { return r } this._fill(r.x, r.y, e, i, t); this._texCount++; return r }; e._release = function () { if (this._cells != null) { this._cells.length = 0; this._cells = null } if (this._rowInfo) { this._rowInfo.length = 0; this._rowInfo = null } }; e._init = function (t, e) { this._width = t; this._height = e; this._release(); if (this._width == 0) return false; this._cells = new Uint8Array(this._width * this._height * 3); this._rowInfo = n(this._height); for (var i = 0; i < this._height; i++) { this._rowInfo[i] = new r } this._clear(); return true }; e._get = function (t, e) { var i = new J; if (t >= this._failSize.width && e >= this._failSize.height) { return i } var r = -1; var s = -1; var n = this._width; var a = this._height; var o = this._cells; for (var h = 0; h < a; h++) { if (this._rowInfo[h].spaceCount < t) continue; for (var l = 0; l < n;) { var u = (h * n + l) * 3; if (o[u] != 0 || o[u + 1] < t || o[u + 2] < e) { l += o[u + 1]; continue } r = l; s = h; for (var c = 0; c < t; c++) { if (o[3 * c + u + 2] < e) { r = -1; break } } if (r < 0) { l += o[u + 1]; continue } i.ret = true; i.x = r; i.y = s; return i } } return i }; e._fill = function (t, e, i, r, s) { var n = this._width; var a = this._height; this._check(t + i <= n && e + r <= a); for (var o = e; o < r + e; ++o) { this._check(this._rowInfo[o].spaceCount >= i); this._rowInfo[o].spaceCount -= i; for (var h = 0; h < i; h++) { var l = (t + o * n + h) * 3; this._check(this._cells[l] == 0); this._cells[l] = s; this._cells[l + 1] = i; this._cells[l + 2] = r } } if (t > 0) { for (o = 0; o < r; ++o) { var u = 0; for (h = t - 1; h >= 0; --h, ++u) { if (this._cells[((e + o) * n + h) * 3] != 0) break } for (h = u; h > 0; --h) { this._cells[((e + o) * n + t - h) * 3 + 1] = h; this._check(h > 0) } } } if (e > 0) { for (h = t; h < t + i; ++h) { u = 0; for (o = e - 1; o >= 0; --o, u++) { if (this._cells[(h + o * n) * 3] != 0) break } for (o = u; o > 0; --o) { this._cells[(h + (e - o) * n) * 3 + 2] = o; this._check(o > 0) } } } }; e._check = function (t) { if (t == false) { console.log("xtexMerger 错误啦") } }; e._clear = function () { this._texCount = 0; for (var t = 0; t < this._height; t++) { this._rowInfo[t].spaceCount = this._width } for (var e = 0; e < this._height; e++) { for (var i = 0; i < this._width; i++) { var r = (e * this._width + i) * 3; this._cells[r] = 0; this._cells[r + 1] = this._width - i; this._cells[r + 2] = this._width - e } } this._failSize.width = this._width + 1; this._failSize.height = this._height + 1 }; t.__init$ = function () { r = function () { function t() { this.spaceCount = 0 } v(t, ""); return t }(); s = function () { function t() { this.width = 0; this.height = 0 } v(t, ""); return t }() }; return t }(); var Q = function () { function y(t, e, i, r) { this._currentAtlasCount = 0; this._maxAtlaserCount = 0; this._width = 0; this._height = 0; this._gridSize = 0; this._gridNumX = 0; this._gridNumY = 0; this._init = false; this._curAtlasIndex = 0; this._setAtlasParam = false; this._atlaserArray = null; this._needGC = false; this._setAtlasParam = true; this._width = t; this._height = e; this._gridSize = i; this._maxAtlaserCount = r; this._gridNumX = t / i; this._gridNumY = e / i; this._curAtlasIndex = 0; this._atlaserArray = [] } v(y, "laya.webgl.atlas.AtlasResourceManager"); var t = y.prototype; t.setAtlasParam = function (t, e, i, r) { if (this._setAtlasParam == true) { y._sid_ = 0; this._width = t; this._height = e; this._gridSize = i; this._maxAtlaserCount = r; this._gridNumX = t / i; this._gridNumY = e / i; this._curAtlasIndex = 0; this.freeAll(); return true } else { console.log("设置大图合集参数错误，只能在开始页面设置各种参数"); throw -1; return false } return false }; t.pushData = function (t) { var e = t.bitmap; var i = -1; var r = null; var s = 0, n = 0, a = 0; for (s = 0, n = this._atlaserArray.length; s < n; s++) { a = (this._curAtlasIndex + s) % n; r = this._atlaserArray[a]; i = r.findBitmapIsExist(e); if (i != -1) { break } } if (i != -1) { var o = r.InAtlasWebGLImagesOffsetValue[i]; v = o[0]; m = o[1]; r.addToAtlas(t, v, m); return true } else { var h = t; this._setAtlasParam = false; var l = false; var u = Math.ceil((t.bitmap.width + 2) / this._gridSize); var c = Math.ceil((t.bitmap.height + 2) / this._gridSize); var f = false; for (var _ = 0; _ < 2; _++) { var d = this._maxAtlaserCount; for (s = 0; s < d; s++) { a = (this._curAtlasIndex + s) % d; this._atlaserArray.length - 1 >= a || this._atlaserArray.push(new Vt(this._gridNumX, this._gridNumY, this._width, this._height, y._sid_++)); var p = this._atlaserArray[a]; var v = 0, m = 0; var g = p.addTex(1, u, c); if (g.ret) { v = g.x * this._gridSize + 1; m = g.y * this._gridSize + 1; e.lock = true; p.addToAtlasTexture(e, v, m); p.addToAtlas(t, v, m); f = true; this._curAtlasIndex = a; break } } if (f) break; this._atlaserArray.push(new Vt(this._gridNumX, this._gridNumY, this._width, this._height, y._sid_++)); this._needGC = true; this.garbageCollection(); this._curAtlasIndex = this._atlaserArray.length - 1 } if (!f) { console.log(">>>AtlasManager pushData error") } return f } }; t.addToAtlas = function (t) { laya.webgl.atlas.AtlasResourceManager.instance.pushData(t) }; t.garbageCollection = function () { if (this._needGC === true) { var t = this._atlaserArray.length - this._maxAtlaserCount; for (var e = 0; e < t; e++) { this._atlaserArray[e].dispose(); console.log("AtlasResourceManager:Dispose the inner Atlas。") } console.log(">>>>altas garbageCollection =" + t); this._atlaserArray.splice(0, t); this._needGC = false } return true }; t.freeAll = function () { for (var t = 0, e = this._atlaserArray.length; t < e; t++) { this._atlaserArray[t].dispose() } this._atlaserArray.length = 0; this._curAtlasIndex = 0 }; t.getAtlaserCount = function () { return this._atlaserArray.length }; t.getAtlaserByIndex = function (t) { return this._atlaserArray[t] }; h(1, y, "instance", function () { if (!y._Instance) { y._Instance = new y(laya.webgl.atlas.AtlasResourceManager.atlasTextureWidth, laya.webgl.atlas.AtlasResourceManager.atlasTextureHeight, 16, laya.webgl.atlas.AtlasResourceManager.maxTextureCount) } return y._Instance }); h(1, y, "enabled", function () { return T.atlasEnable }); h(1, y, "atlasLimitWidth", function () { return y._atlasLimitWidth }, function (t) { y._atlasLimitWidth = t }); h(1, y, "atlasLimitHeight", function () { return y._atlasLimitHeight }, function (t) { y._atlasLimitHeight = t }); y._enable = function () { T.atlasEnable = true }; y._disable = function () { T.atlasEnable = false }; y.__init__ = function () { y.atlasTextureWidth = 2048; y.atlasTextureHeight = 2048; y.maxTextureCount = 6; y.atlasLimitWidth = 512; y.atlasLimitHeight = 512 }; y._atlasLimitWidth = 0; y._atlasLimitHeight = 0; y.gridSize = 16; y.atlasTextureWidth = 0; y.atlasTextureHeight = 0; y.maxTextureCount = 0; y._atlasRestore = 0; y.BOARDER_TYPE_NO = 0; y.BOARDER_TYPE_RIGHT = 1; y.BOARDER_TYPE_LEFT = 2; y.BOARDER_TYPE_BOTTOM = 4; y.BOARDER_TYPE_TOP = 8; y.BOARDER_TYPE_ALL = 15; y._sid_ = 0; y._Instance = null; return y }(); var J = function () { function t() { this.x = 0; this.y = 0; this.ret = false; this.ret = false; this.x = 0; this.y = 0 } v(t, "laya.webgl.atlas.MergeFillInfo"); return t }(); var tt = function () { function e() { } v(e, "laya.webgl.canvas.BlendMode"); e._init_ = function (t) { e.fns = [e.BlendNormal, e.BlendAdd, e.BlendMultiply, e.BlendScreen, e.BlendOverlay, e.BlendLight, e.BlendMask, e.BlendDestinationOut]; e.targetFns = [e.BlendNormalTarget, e.BlendAddTarget, e.BlendMultiplyTarget, e.BlendScreenTarget, e.BlendOverlayTarget, e.BlendLightTarget, e.BlendMask, e.BlendDestinationOut] }; e.BlendNormal = function (t) { t.blendFunc(1, 771) }; e.BlendAdd = function (t) { t.blendFunc(1, 772) }; e.BlendMultiply = function (t) { t.blendFunc(774, 771) }; e.BlendScreen = function (t) { t.blendFunc(1, 1) }; e.BlendOverlay = function (t) { t.blendFunc(1, 769) }; e.BlendLight = function (t) { t.blendFunc(1, 1) }; e.BlendNormalTarget = function (t) { t.blendFunc(1, 771) }; e.BlendAddTarget = function (t) { t.blendFunc(1, 772) }; e.BlendMultiplyTarget = function (t) { t.blendFunc(774, 771) }; e.BlendScreenTarget = function (t) { t.blendFunc(1, 1) }; e.BlendOverlayTarget = function (t) { t.blendFunc(1, 769) }; e.BlendLightTarget = function (t) { t.blendFunc(1, 1) }; e.BlendMask = function (t) { t.blendFunc(0, 770) }; e.BlendDestinationOut = function (t) { t.blendFunc(0, 0) }; e.activeBlendFunction = null; e.NAMES = ["normal", "add", "multiply", "screen", "overlay", "light", "mask", "destination-out"]; e.TOINT = { normal: 0, add: 1, multiply: 2, screen: 3, lighter: 1, overlay: 4, light: 5, mask: 6, "destination-out": 7 }; e.NORMAL = "normal"; e.ADD = "add"; e.MULTIPLY = "multiply"; e.SCREEN = "screen"; e.LIGHT = "light"; e.OVERLAY = "overlay"; e.DESTINATIONOUT = "destination-out"; e.fns = []; e.targetFns = []; return e }(); var et = function () { function i(t) { this._color = p.create("black"); this.setValue(t) } v(i, "laya.webgl.canvas.DrawStyle"); var t = i.prototype; t.setValue = function (t) { if (t) { if (typeof t == "string") { this._color = p.create(t); return } if (t instanceof laya.utils.Color) { this._color = t; return } } }; t.reset = function () { this._color = p.create("black") }; t.equal = function (t) { if (typeof t == "string") return this._color.strColor === t; if (t instanceof laya.utils.Color) return this._color.numColor === t.numColor; return false }; t.toColorStr = function () { return this._color.strColor }; i.create = function (t) { if (t) { var e; if (typeof t == "string") e = p.create(t); else if (t instanceof laya.utils.Color) e = t; if (e) { return e._drawStyle || (e._drawStyle = new i(t)) } } return laya.webgl.canvas.DrawStyle.DEFAULT }; a(i, ["DEFAULT", function () { return this.DEFAULT = new i("#000000") }]); return i }(); var it = function () { function t() { this._x = 0; this._y = 0; this.dirty = false; this.offset = 0; this.count = 0; this.geoStart = 0; this.tempArray = []; this.closePath = false; this.geomatrys = []; var t = Bt.mainContext; this.ib = pe.create(35048); this.vb = ve.create(5) } v(t, "laya.webgl.canvas.Path"); var e = t.prototype; e.addPoint = function (t, e) { this.tempArray.push(t, e) }; e.getEndPointX = function () { return this.tempArray[this.tempArray.length - 2] }; e.getEndPointY = function () { return this.tempArray[this.tempArray.length - 1] }; e.polygon = function (t, e, i, r, s, n) { var a; this.geomatrys.push(this._curGeomatry = a = new jt(t, e, i, r, s, n)); if (!r) a.fill = false; if (n == undefined) a.borderWidth = 0; return a }; e.setGeomtry = function (t) { this.geomatrys.push(this._curGeomatry = t) }; e.drawLine = function (t, e, i, r, s) { var n; if (this.closePath) { this.geomatrys.push(this._curGeomatry = n = new Xt(t, e, i, r, s)) } else { this.geomatrys.push(this._curGeomatry = n = new Yt(t, e, i, r, s)) } n.fill = false; return n }; e.update = function () { var t = this.ib._byteLength; var e = this.geomatrys.length; this.offset = t; for (var i = this.geoStart; i < e; i++) { this.geomatrys[i].getData(this.ib, this.vb, this.vb._byteLength / 20) } this.geoStart = e; this.count = (this.ib._byteLength - t) / Et.BYTES_PIDX }; e.reset = function () { this.vb.clear(); this.ib.clear(); this.offset = this.count = this.geoStart = 0; this.geomatrys.length = 0 }; e.recover = function () { this._curGeomatry = null; this.vb.destory(); this.vb = null; this.ib.destory(); this.ib = null }; return t }(); var rt = function () { function o() { } v(o, "laya.webgl.canvas.save.SaveBase"); var t = o.prototype; w.imps(t, { "laya.webgl.canvas.save.ISaveData": true }); t.isSaveMark = function () { return false }; t.restore = function (t) { this._dataObj[this._valueName] = this._value; o._cache[o._cache._length++] = this; this._newSubmit && (t._curSubmit = yt.RENDERBASE, t._renderKey = 0) }; o._createArray = function () { var t = []; t._length = 0; return t }; o._init = function () { var t = o._namemap = {}; t[1] = "ALPHA"; t[2] = "fillStyle"; t[8] = "font"; t[256] = "lineWidth"; t[512] = "strokeStyle"; t[8192] = "_mergeID"; t[1024] = t[2048] = t[4096] = []; t[16384] = "textBaseline"; t[32768] = "textAlign"; t[65536] = "_nBlendType"; t[1048576] = "shader"; t[2097152] = "filters"; return t }; o.save = function (t, e, i, r) { if ((t._saveMark._saveuse & e) !== e) { t._saveMark._saveuse |= e; var s = o._cache; var n = s._length > 0 ? s[--s._length] : new o; n._value = i[n._valueName = o._namemap[e]]; n._dataObj = i; n._newSubmit = r; var a = t._save; a[a._length++] = n } }; o._cache = laya.webgl.canvas.save.SaveBase._createArray(); o._namemap = o._init(); return o }(); var st = function () { function n() { this._clipRect = new E } v(n, "laya.webgl.canvas.save.SaveClipRect"); var t = n.prototype; w.imps(t, { "laya.webgl.canvas.save.ISaveData": true }); t.isSaveMark = function () { return false }; t.restore = function (t) { t._clipRect = this._clipSaveRect; n._cache[n._cache._length++] = this; this._submitScissor.submitLength = t._submits._length - this._submitScissor.submitIndex; t._curSubmit = yt.RENDERBASE; t._renderKey = 0 }; n.save = function (t, e) { if ((t._saveMark._saveuse & 131072) == 131072) return; t._saveMark._saveuse |= 131072; var i = n._cache; var r = i._length > 0 ? i[--i._length] : new n; r._clipSaveRect = t._clipRect; t._clipRect = r._clipRect.copyFrom(t._clipRect); r._submitScissor = e; var s = t._save; s[s._length++] = r }; a(n, ["_cache", function () { return this._cache = rt._createArray() }]); return n }(); var nt = function () { function _() { this._contextX = 0; this._contextY = 0; this._clipRect = new E; this._rect = new E; this._matrix = new M } v(_, "laya.webgl.canvas.save.SaveClipRectStencil"); var t = _.prototype; w.imps(t, { "laya.webgl.canvas.save.ISaveData": true }); t.isSaveMark = function () { return false }; t.restore = function (t) { Ct.restore(t, this._rect, this._saveMatrix, this._contextX, this._contextY); t._clipRect = this._clipSaveRect; t._curMat = this._saveMatrix; t._x = this._contextX; t._y = this._contextY; _._cache[_._cache._length++] = this; t._curSubmit = yt.RENDERBASE }; _.save = function (t, e, i, r, s, n, a, o, h, l) { if ((t._saveMark._saveuse & 262144) == 262144) return; t._saveMark._saveuse |= 262144; var u = _._cache; var c = u._length > 0 ? u[--u._length] : new _; c._clipSaveRect = t._clipRect; c._clipRect.setTo(a, o, h, l); t._clipRect = c._clipRect; c._rect.x = i; c._rect.y = r; c._rect.width = s; c._rect.height = n; c._contextX = t._x; c._contextY = t._y; c._saveMatrix = t._curMat; t._curMat.copyTo(c._matrix); t._curMat = c._matrix; c._submitStencil = e; var f = t._save; f[f._length++] = c }; a(_, ["_cache", function () { return this._cache = rt._createArray() }]); return _ }(); var at = function () { function r() { this._saveuse = 0 } v(r, "laya.webgl.canvas.save.SaveMark"); var t = r.prototype; w.imps(t, { "laya.webgl.canvas.save.ISaveData": true }); t.isSaveMark = function () { return true }; t.restore = function (t) { t._saveMark = this._preSaveMark; r._no[r._no._length++] = this }; r.Create = function (t) { var e = r._no; var i = e._length > 0 ? e[--e._length] : new r; i._saveuse = 0; i._preSaveMark = t._saveMark; t._saveMark = i; return i }; a(r, ["_no", function () { return this._no = rt._createArray() }]); return r }(); var ot = function () { function n() { this._matrix = new M } v(n, "laya.webgl.canvas.save.SaveTransform"); var t = n.prototype; w.imps(t, { "laya.webgl.canvas.save.ISaveData": true }); t.isSaveMark = function () { return false }; t.restore = function (t) { t._curMat = this._savematrix; n._no[n._no._length++] = this }; n.save = function (t) { var e = t._saveMark; if ((e._saveuse & 2048) === 2048) return; e._saveuse |= 2048; var i = n._no; var r = i._length > 0 ? i[--i._length] : new n; r._savematrix = t._curMat; t._curMat = t._curMat.copyTo(r._matrix); var s = t._save; s[s._length++] = r }; a(n, ["_no", function () { return this._no = rt._createArray() }]); return n }(); var ht = function () { function s() { } v(s, "laya.webgl.canvas.save.SaveTranslate"); var t = s.prototype; w.imps(t, { "laya.webgl.canvas.save.ISaveData": true }); t.isSaveMark = function () { return false }; t.restore = function (t) { var e = t._curMat; t._x = this._x; t._y = this._y; s._no[s._no._length++] = this }; s.save = function (t) { var e = s._no; var i = e._length > 0 ? e[--e._length] : new s; i._x = t._x; i._y = t._y; var r = t._save; r[r._length++] = i }; a(s, ["_no", function () { return this._no = rt._createArray() }]); return s }(); var lt = function () { function t() { this.target = null; this.repaint = false; this._width = NaN; this._height = NaN; this._sp = null; this._clipRect = new E } v(t, "laya.webgl.resource.RenderTargetMAX"); var e = t.prototype; e.setSP = function (t) { this._sp = t }; e.size = function (t, e) { var i = this; if (this._width === t && this._height === e) { this.target.size(t, e); return } this.repaint = true; this._width = t; this._height = e; if (!this.target) this.target = Qt.create(t, e); else this.target.size(t, e); if (!this.target.hasListener("recovered")) { this.target.on("recovered", this, function (t) { w.timer.callLater(i._sp, i._sp.repaint) }) } }; e._flushToTarget = function (t, e) { if (e._destroy) return; var i = kt.worldScissorTest; var r = kt.worldClipRect; kt.worldClipRect = this._clipRect; this._clipRect.x = this._clipRect.y = 0; this._clipRect.width = this._width; this._clipRect.height = this._height; kt.worldScissorTest = false; Bt.mainContext.disable(3089); var s = kt.worldAlpha; var n = kt.worldMatrix4; var a = kt.worldMatrix; var o = kt.worldFilters; var h = kt.worldShaderDefines; kt.worldMatrix = M.EMPTY; kt.restoreTempArray(); kt.worldMatrix4 = kt.TEMPMAT4_ARRAY; kt.worldAlpha = 1; kt.worldFilters = null; kt.worldShaderDefines = null; Zt.activeShader = null; e.start(); T.showCanvasMark ? e.clear(0, 1, 0, .3) : e.clear(0, 0, 0, 0); t.flush(); e.end(); Zt.activeShader = null; kt.worldAlpha = s; kt.worldMatrix4 = n; kt.worldMatrix = a; kt.worldFilters = o; kt.worldShaderDefines = h; kt.worldScissorTest = i; if (i) { var l = kt.height - r.y - r.height; Bt.mainContext.scissor(r.x, l, r.width, r.height); Bt.mainContext.enable(3089) } kt.worldClipRect = r }; e.flush = function (t) { if (this.repaint) { this._flushToTarget(t, this.target); this.repaint = false } }; e.drawTo = function (t, e, i, r, s) { t.drawTexture(this.target.getTexture(), e, i, r, s, 0, 0) }; e.destroy = function () { if (this.target) { this.target.destroy(); this.target = null; this._sp = null } }; return t }(); var ut = function () { function t() { this.ALPHA = 1; this.shaderType = 0; this.defines = new Ht } v(t, "laya.webgl.shader.d2.Shader2D"); var e = t.prototype; e.destroy = function () { this.defines = null; this.filters = null; this.glTexture = null; this.strokeStyle = null; this.fillStyle = null }; t.__init__ = function () { ue.addInclude("parts/ColorFilter_ps_uniform.glsl", "uniform vec4 colorAlpha;\nuniform mat4 colorMat;"); ue.addInclude("parts/ColorFilter_ps_logic.glsl", "mat4 alphaMat =colorMat;\n\nalphaMat[0][3] *= gl_FragColor.a;\nalphaMat[1][3] *= gl_FragColor.a;\nalphaMat[2][3] *= gl_FragColor.a;\n\ngl_FragColor = gl_FragColor * alphaMat;\ngl_FragColor += colorAlpha/255.0*gl_FragColor.a;\n"); ue.addInclude("parts/GlowFilter_ps_uniform.glsl", "uniform vec4 u_color;\nuniform float u_strength;\nuniform float u_blurX;\nuniform float u_blurY;\nuniform float u_offsetX;\nuniform float u_offsetY;\nuniform float u_textW;\nuniform float u_textH;"); ue.addInclude("parts/GlowFilter_ps_logic.glsl", "const float c_IterationTime = 10.0;\nfloat floatIterationTotalTime = c_IterationTime * c_IterationTime;\nvec4 vec4Color = vec4(0.0,0.0,0.0,0.0);\nvec2 vec2FilterDir = vec2(-(u_offsetX)/u_textW,-(u_offsetY)/u_textH);\nvec2 vec2FilterOff = vec2(u_blurX/u_textW/c_IterationTime * 2.0,u_blurY/u_textH/c_IterationTime * 2.0);\nfloat maxNum = u_blurX * u_blurY;\nvec2 vec2Off = vec2(0.0,0.0);\nfloat floatOff = c_IterationTime/2.0;\nfor(float i = 0.0;i<=c_IterationTime; ++i){\n\tfor(float j = 0.0;j<=c_IterationTime; ++j){\n\t\tvec2Off = vec2(vec2FilterOff.x * (i - floatOff),vec2FilterOff.y * (j - floatOff));\n\t\tvec4Color += texture2D(texture, v_texcoord + vec2FilterDir + vec2Off)/floatIterationTotalTime;\n\t}\n}\ngl_FragColor = vec4(u_color.rgb,vec4Color.a * u_strength);\ngl_FragColor.rgb *= gl_FragColor.a;"); ue.addInclude("parts/BlurFilter_ps_logic.glsl", "gl_FragColor =   blur();\ngl_FragColor.w*=alpha;"); ue.addInclude("parts/BlurFilter_ps_uniform.glsl", "uniform vec4 strength_sig2_2sig2_gauss1;\nuniform vec2 blurInfo;\n\n#define PI 3.141593\n\n//float sigma=strength/3.0;//3σ以外影响很小。即当σ=1的时候，半径为3\n//float sig2 = sigma*sigma;\n//float _2sig2 = 2.0*sig2;\n//return 1.0/(2*PI*sig2)*exp(-(x*x+y*y)/_2sig2)\n//float gauss1 = 1.0/(2.0*PI*sig2);\n\nfloat getGaussian(float x, float y){\n    return strength_sig2_2sig2_gauss1.w*exp(-(x*x+y*y)/strength_sig2_2sig2_gauss1.z);\n}\n\nvec4 blur(){\n    const float blurw = 9.0;\n    vec4 vec4Color = vec4(0.0,0.0,0.0,0.0);\n    vec2 halfsz=vec2(blurw,blurw)/2.0/blurInfo;    \n    vec2 startpos=v_texcoord-halfsz;\n    vec2 ctexcoord = startpos;\n    vec2 step = 1.0/blurInfo;  //每个像素      \n    \n    for(float y = 0.0;y<=blurw; ++y){\n        ctexcoord.x=startpos.x;\n        for(float x = 0.0;x<=blurw; ++x){\n            //TODO 纹理坐标的固定偏移应该在vs中处理\n            vec4Color += texture2D(texture, ctexcoord)*getGaussian(x-blurw/2.0,y-blurw/2.0);\n            ctexcoord.x+=step.x;\n        }\n        ctexcoord.y+=step.y;\n    }\n    return vec4Color;\n}"); ue.addInclude("parts/ColorAdd_ps_uniform.glsl", "uniform vec4 colorAdd;\n"); ue.addInclude("parts/ColorAdd_ps_logic.glsl", "gl_FragColor = vec4(colorAdd.rgb,colorAdd.a*gl_FragColor.a);\ngl_FragColor.xyz *= colorAdd.a;"); var t, e; t = "attribute vec4 position;\nattribute vec2 texcoord;\nuniform vec2 size;\n\n#ifdef WORLDMAT\nuniform mat4 mmat;\n#endif\nvarying vec2 v_texcoord;\nvoid main() {\n  #ifdef WORLDMAT\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  #else\n  gl_Position =vec4((position.x/size.x-0.5)*2.0,(0.5-position.y/size.y)*2.0,position.z,1.0);\n  #endif\n  \n  v_texcoord = texcoord;\n}"; e = 'precision mediump float;\n//precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D texture;\nuniform float alpha;\n#include?BLUR_FILTER  "parts/BlurFilter_ps_uniform.glsl";\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\n#include?GLOW_FILTER "parts/GlowFilter_ps_uniform.glsl";\n#include?COLOR_ADD "parts/ColorAdd_ps_uniform.glsl";\n\nvoid main() {\n   vec4 color= texture2D(texture, v_texcoord);\n   color.a*=alpha;\n   color.rgb*=alpha;\n   gl_FragColor=color;\n   #include?COLOR_ADD "parts/ColorAdd_ps_logic.glsl";   \n   #include?BLUR_FILTER  "parts/BlurFilter_ps_logic.glsl";\n   #include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n   #include?GLOW_FILTER "parts/GlowFilter_ps_logic.glsl";\n}'; ue.preCompile2D(0, 1, t, e, null); t = "attribute vec4 position;\nuniform vec2 size;\nuniform mat4 mmat;\nvoid main() {\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n}"; e = 'precision mediump float;\nuniform vec4 color;\nuniform float alpha;\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\nvoid main() {\n\tvec4 a = vec4(color.r, color.g, color.b, color.a);\n\ta.w = alpha;\n\ta.xyz *= alpha;\n\tgl_FragColor = a;\n\t#include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n}'; ue.preCompile2D(0, 2, t, e, null); t = "attribute vec4 position;\nattribute vec3 a_color;\nuniform mat4 mmat;\nuniform mat4 u_mmat2;\nuniform vec2 u_pos;\nuniform vec2 size;\nvarying vec3 color;\nvoid main(){\n  vec4 tPos = vec4(position.x + u_pos.x,position.y + u_pos.y,position.z,position.w);\n  vec4 pos=mmat*u_mmat2*tPos;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  color=a_color;\n}"; e = "precision mediump float;\n//precision mediump float;\nvarying vec3 color;\nuniform float alpha;\nvoid main(){\n\t//vec4 a=vec4(color.r, color.g, color.b, 1);\n\t//a.a*=alpha;\n    gl_FragColor=vec4(color.r, color.g, color.b, alpha);\n\tgl_FragColor.rgb*=alpha;\n}"; ue.preCompile2D(0, 4, t, e, null); t = "attribute vec4 position;\nattribute vec2 texcoord;\nuniform vec2 size;\n\n#ifdef WORLDMAT\nuniform mat4 mmat;\n#endif\nvarying vec2 v_texcoord;\nvoid main() {\n  #ifdef WORLDMAT\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  #else\n  gl_Position =vec4((position.x/size.x-0.5)*2.0,(0.5-position.y/size.y)*2.0,position.z,1.0);\n  #endif\n  \n  v_texcoord = texcoord;\n}"; e = '#ifdef FSHIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n//precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D texture;\nuniform float alpha;\nuniform vec4 u_TexRange;\nuniform vec2 u_offset;\n#include?BLUR_FILTER  "parts/BlurFilter_ps_uniform.glsl";\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\n#include?GLOW_FILTER "parts/GlowFilter_ps_uniform.glsl";\n#include?COLOR_ADD "parts/ColorAdd_ps_uniform.glsl";\n\nvoid main() {\n   vec2 newTexCoord;\n   newTexCoord.x = mod(u_offset.x + v_texcoord.x,u_TexRange.y) + u_TexRange.x;\n   newTexCoord.y = mod(u_offset.y + v_texcoord.y,u_TexRange.w) + u_TexRange.z;\n   vec4 color= texture2D(texture, newTexCoord);\n   color.a*=alpha;\n   gl_FragColor=color;\n   #include?COLOR_ADD "parts/ColorAdd_ps_logic.glsl";   \n   #include?BLUR_FILTER  "parts/BlurFilter_ps_logic.glsl";\n   #include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n   #include?GLOW_FILTER "parts/GlowFilter_ps_logic.glsl";\n}'; ue.preCompile2D(0, 256, t, e, null); t = "attribute vec2 position;\nattribute vec2 texcoord;\nattribute vec4 color;\nuniform vec2 size;\nuniform float offsetX;\nuniform float offsetY;\nuniform mat4 mmat;\nuniform mat4 u_mmat2;\nvarying vec2 v_texcoord;\nvarying vec4 v_color;\nvoid main() {\n  vec4 pos=mmat*u_mmat2*vec4(offsetX+position.x,offsetY+position.y,0,1 );\n  gl_Position = vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  v_color = color;\n  v_color.rgb *= v_color.a;\n  v_texcoord = texcoord;  \n}"; e = "precision mediump float;\nvarying vec2 v_texcoord;\nvarying vec4 v_color;\nuniform sampler2D texture;\nuniform float alpha;\nvoid main() {\n\tvec4 t_color = texture2D(texture, v_texcoord);\n\tgl_FragColor = t_color.rgba * v_color;\n\tgl_FragColor *= alpha;\n}"; ue.preCompile2D(0, 512, t, e, null) }; return t }(); var ct = function () { function e(t, e, i) { this._value = 0; this._name2int = t; this._int2name = e; this._int2nameMap = i } v(e, "laya.webgl.shader.ShaderDefines"); var t = e.prototype; t.add = function (t) { if (typeof t == "string") t = this._name2int[t]; this._value |= t; return this._value }; t.addInt = function (t) { this._value |= t; return this._value }; t.remove = function (t) { if (typeof t == "string") t = this._name2int[t]; this._value &= ~t; return this._value }; t.isDefine = function (t) { return (this._value & t) === t }; t.getValue = function () { return this._value }; t.setValue = function (t) { this._value = t }; t.toNameDic = function () { var t = this._int2nameMap[this._value]; return t ? t : e._toText(this._value, this._int2name, this._int2nameMap) }; e._reg = function (t, e, i, r) { i[t] = e; r[e] = t }; e._toText = function (t, e, i) { var r = i[t]; if (r) return r; var s = {}; var n = 1; for (var a = 0; a < 32; a++) { n = 1 << a; if (n > t) break; if (t & n) { var o = e[n]; o && (s[o] = "") } } i[t] = s; return s }; e._toInt = function (t, e) { var i = t.split("."); var r = 0; for (var s = 0, n = i.length; s < n; s++) { var a = e[i[s]]; if (!a) throw new Error("Defines to int err:" + t + "/" + i[s]); r |= a } return r }; return e }(); var ft = function () { function l() { this.mVBBuffer = null; this.mIBBuffer = null; this.mVBData = null; this.mIBData = null; this.mEleNum = 0; this.mTexture = null; this.transform = null; this._vs = null; this._ps = null; this._indexStart = -1; this._verticles = null; this._uvs = null; this._tempMatrix = new M } v(l, "laya.webgl.shader.d2.skinAnishader.SkinMesh"); var t = l.prototype; t.init = function (t, e, i) { if (e) { this._vs = e } else { this._vs = []; var r = t.width; var s = t.height; var n = 1; var a = 1; var o = 1; var h = 1; this._vs.push(0, 0, 0, 0, n, a, o, h); this._vs.push(r, 0, 1, 0, n, a, o, h); this._vs.push(r, s, 1, 1, n, a, o, h); this._vs.push(0, s, 0, 1, n, a, o, h) } if (i) { this._ps = i } else { if (!l._defaultPS) { l._defaultPS = []; l._defaultPS.push(0, 1, 3, 3, 1, 2) } this._ps = l._defaultPS } this.mVBData = new Float32Array(this._vs); this.mIBData = new Uint16Array(this._ps.length); this.mIBData["start"] = -1; this.mEleNum = this._ps.length; this.mTexture = t }; t.init2 = function (t, e, i, r, s) { if (this.transform) this.transform = null; if (i) { this._ps = i } else { this._ps = []; this._ps.push(0, 1, 3, 3, 1, 2) } this._verticles = r; this._uvs = s; this.mEleNum = this._ps.length; this.mTexture = t; if (R.isConchNode || R.isConchApp) { this._initMyData(); this.mVBData = new Float32Array(this._vs) } }; t._initMyData = function () { var t = 0; var e = 0; var i = this._verticles.length; var r = i * 4; this._vs = l._tempVS; var s = false; if (R.isConchNode || R.isConchApp) { this._vs.length = r; s = true } else { if (this._vs.length < r) { this._vs.length = r; s = true } } l._tVSLen = r; if (s) { while (t < r) { this._vs[t] = this._verticles[e]; this._vs[t + 1] = this._verticles[e + 1]; this._vs[t + 2] = this._uvs[e]; this._vs[t + 3] = this._uvs[e + 1]; this._vs[t + 4] = 1; this._vs[t + 5] = 1; this._vs[t + 6] = 1; this._vs[t + 7] = 1; t += 8; e += 2 } } else { while (t < r) { this._vs[t] = this._verticles[e]; this._vs[t + 1] = this._verticles[e + 1]; this._vs[t + 2] = this._uvs[e]; this._vs[t + 3] = this._uvs[e + 1]; t += 8; e += 2 } } }; t.getData2 = function (t, e, i) { this.mVBBuffer = t; this.mIBBuffer = e; this._initMyData(); t.appendEx2(this._vs, Float32Array, l._tVSLen, 4); this._indexStart = e._byteLength; var r; r = l._tempIB; if (r.length < this._ps.length) { r.length = this._ps.length } for (var s = 0, n = this._ps.length; s < n; s++) { r[s] = this._ps[s] + i } e.appendEx2(r, Uint16Array, this._ps.length, 2) }; t.getData = function (t, e, i) { this.mVBBuffer = t; this.mIBBuffer = e; t.append(this.mVBData); this._indexStart = e._byteLength; if (this.mIBData["start"] != i) { for (var r = 0, s = this._ps.length; r < s; r++) { this.mIBData[r] = this._ps[r] + i } this.mIBData["start"] = i } e.append(this.mIBData) }; t.render = function (t, e, i) { if (R.isWebGL && this.mTexture) { t._renderKey = 0; t._shader2D.glTexture = null; _t.getInstance().addSkinMesh(this); var r = yt.createShape(t, this.mIBBuffer, this.mVBBuffer, this.mEleNum, this._indexStart, zt.create(512, 0)); this.transform || (this.transform = M.EMPTY); this.transform.translate(e, i); M.mul(this.transform, t._curMat, this._tempMatrix); this.transform.translate(-e, -i); var s = r.shaderValue; var n = s.u_mmat2 || kt.getMatrArray(); kt.mat2MatArray(this._tempMatrix, n); s.textureHost = this.mTexture; s.offsetX = 0; s.offsetY = 0; s.u_mmat2 = n; s.ALPHA = t._shader2D.ALPHA; t._submits[t._submits._length++] = r } else if (R.isConchApp && this.mTexture) { this.transform || (this.transform = M.EMPTY); t.setSkinMesh && t.setSkinMesh(e, i, this._ps, this.mVBData, this.mEleNum, 0, this.mTexture, this.transform) } }; l._tempVS = []; l._tempIB = []; l._defaultPS = null; l._tVSLen = 0; return l }(); var _t = function () { function t() { this.ib = null; this.vb = null; var t = Bt.mainContext; this.ib = pe.create(35048); this.vb = ve.create(8) } v(t, "laya.webgl.shader.d2.skinAnishader.SkinMeshBuffer"); var e = t.prototype; e.addSkinMesh = function (t) { t.getData2(this.vb, this.ib, this.vb._byteLength / 32) }; e.reset = function () { this.vb.clear(); this.ib.clear() }; t.getInstance = function () { return t.instance = t.instance || new t }; t.instance = null; return t }(); var dt = function () { function t(t, e, i, r, s, n, a, o, h) { this.r0 = 0; this.fill = true; this.r1 = Math.PI / 2; h === void 0 && (h = 0); this.x = t; this.y = e; this.width = i; this.height = r; this.edges = s; this.color = n; this.borderWidth = a; this.borderColor = o } v(t, "laya.webgl.shapes.BasePoly"); var e = t.prototype; w.imps(e, { "laya.webgl.shapes.IShape": true }); e.getData = function (t, e, i) { }; e.rebuild = function (t) { }; e.setMatrix = function (t) { }; e.needUpdate = function (t) { return true }; e.sector = function (t, e, i) { var r = this.x, s = this.y, n = this.edges, a = (this.r1 - this.r0) / n; var o = this.width, h = this.height, l = this.color; var u = (l >> 16 & 255) / 255, c = (l >> 8 & 255) / 255, f = (l & 255) / 255; t.push(r, s, u, c, f); for (var _ = 0; _ < n + 1; _++) { t.push(r + Math.sin(a * _ + this.r0) * o, s + Math.cos(a * _ + this.r0) * h); t.push(u, c, f) } for (_ = 0; _ < n; _++) { e.push(i, i + _ + 1, i + _ + 2) } }; e.createLine2 = function (t, e, i, r, s, n) { var a = t.concat(); var o = s; var h = this.borderColor; var l = (h >> 16 & 255) / 255, u = (h >> 8 & 255) / 255, c = (h & 255) / 255; var f = a.length / 2; var _ = r, d = i / 2; var p, v, m, g, y, x, b, w; var T, C, S, A, M, I; var E, R, P, L, k, D; var B, N, F; m = a[0]; g = a[1]; y = a[2]; x = a[3]; T = -(g - x); C = m - y; F = Math.sqrt(T * T + C * C); T = T / F * d; C = C / F * d; o.push(m - T + this.x, g - C + this.y, l, u, c, m + T + this.x, g + C + this.y, l, u, c); for (var O = 1; O < f - 1; O++) { m = a[(O - 1) * 2]; g = a[(O - 1) * 2 + 1]; y = a[O * 2]; x = a[O * 2 + 1]; b = a[(O + 1) * 2]; w = a[(O + 1) * 2 + 1]; T = -(g - x); C = m - y; F = Math.sqrt(T * T + C * C); T = T / F * d; C = C / F * d; S = -(x - w); A = y - b; F = Math.sqrt(S * S + A * A); S = S / F * d; A = A / F * d; E = -C + g - (-C + x); R = -T + y - (-T + m); P = (-T + m) * (-C + x) - (-T + y) * (-C + g); L = -A + w - (-A + x); k = -S + y - (-S + b); D = (-S + b) * (-A + x) - (-S + y) * (-A + w); B = E * k - L * R; if (Math.abs(B) < .1) { B += 10.1; o.push(y - T + this.x, x - C + this.y, l, u, c, y + T + this.x, x + C + this.y, l, u, c); continue } p = (R * D - k * P) / B; v = (L * P - E * D) / B; N = (p - y) * (p - y) + (v - x) + (v - x); o.push(p + this.x, v + this.y, l, u, c, y - (p - y) + this.x, x - (v - x) + this.y, l, u, c) } m = a[a.length - 4]; g = a[a.length - 3]; y = a[a.length - 2]; x = a[a.length - 1]; T = -(g - x); C = m - y; F = Math.sqrt(T * T + C * C); T = T / F * d; C = C / F * d; o.push(y - T + this.x, x - C + this.y, l, u, c, y + T + this.x, x + C + this.y, l, u, c); var z = n; for (O = 1; O < z; O++) { e.push(_ + (O - 1) * 2, _ + (O - 1) * 2 + 1, _ + O * 2 + 1, _ + O * 2 + 1, _ + O * 2, _ + (O - 1) * 2) } return o }; e.createLine = function (t, e, i, r) { var s = t.concat(); var n = t; var a = this.borderColor; var o = (a >> 16 & 255) / 255, h = (a >> 8 & 255) / 255, l = (a & 255) / 255; s.splice(0, 5); var u = s.length / 5; var c = r, f = i / 2; var _, d, p, v, m, g, y, x; var b, w, T, C, S, A; var M, I, E, R, P, L; var k, D, B; p = s[0]; v = s[1]; m = s[5]; g = s[6]; b = -(v - g); w = p - m; B = Math.sqrt(b * b + w * w); b = b / B * f; w = w / B * f; n.push(p - b, v - w, o, h, l, p + b, v + w, o, h, l); for (var N = 1; N < u - 1; N++) { p = s[(N - 1) * 5]; v = s[(N - 1) * 5 + 1]; m = s[N * 5]; g = s[N * 5 + 1]; y = s[(N + 1) * 5]; x = s[(N + 1) * 5 + 1]; b = -(v - g); w = p - m; B = Math.sqrt(b * b + w * w); b = b / B * f; w = w / B * f; T = -(g - x); C = m - y; B = Math.sqrt(T * T + C * C); T = T / B * f; C = C / B * f; M = -w + v - (-w + g); I = -b + m - (-b + p); E = (-b + p) * (-w + g) - (-b + m) * (-w + v); R = -C + x - (-C + g); P = -T + m - (-T + y); L = (-T + y) * (-C + g) - (-T + m) * (-C + x); k = M * P - R * I; if (Math.abs(k) < .1) { k += 10.1; n.push(m - b, g - w, o, h, l, m + b, g + w, o, h, l); continue } _ = (I * L - P * E) / k; d = (R * E - M * L) / k; D = (_ - m) * (_ - m) + (d - g) + (d - g); n.push(_, d, o, h, l, m - (_ - m), g - (d - g), o, h, l) } p = s[s.length - 10]; v = s[s.length - 9]; m = s[s.length - 5]; g = s[s.length - 4]; b = -(v - g); w = p - m; B = Math.sqrt(b * b + w * w); b = b / B * f; w = w / B * f; n.push(m - b, g - w, o, h, l, m + b, g + w, o, h, l); var F = this.edges + 1; for (N = 1; N < F; N++) { e.push(c + (N - 1) * 2, c + (N - 1) * 2 + 1, c + N * 2 + 1, c + N * 2 + 1, c + N * 2, c + (N - 1) * 2) } return n }; e.createLoopLine = function (t, e, i, r, s, n) { var a = t.concat(); var o = s ? s : t; var h = this.borderColor; var l = (h >> 16 & 255) / 255, u = (h >> 8 & 255) / 255, c = (h & 255) / 255; a.splice(0, 5); var f = [a[0], a[1]]; var _ = [a[a.length - 5], a[a.length - 4]]; var d = _[0] + (f[0] - _[0]) * .5; var p = _[1] + (f[1] - _[1]) * .5; a.unshift(d, p, 0, 0, 0); a.push(d, p, 0, 0, 0); var v = a.length / 5; var m = r, g = i / 2; var y, x, b, w, T, C, S, A; var M, I, E, R, P, L; var k, D, B, N, F, O; var z, U, W; b = a[0]; w = a[1]; T = a[5]; C = a[6]; M = -(w - C); I = b - T; W = Math.sqrt(M * M + I * I); M = M / W * g; I = I / W * g; o.push(b - M, w - I, l, u, c, b + M, w + I, l, u, c); for (var V = 1; V < v - 1; V++) { b = a[(V - 1) * 5]; w = a[(V - 1) * 5 + 1]; T = a[V * 5]; C = a[V * 5 + 1]; S = a[(V + 1) * 5]; A = a[(V + 1) * 5 + 1]; M = -(w - C); I = b - T; W = Math.sqrt(M * M + I * I); M = M / W * g; I = I / W * g; E = -(C - A); R = T - S; W = Math.sqrt(E * E + R * R); E = E / W * g; R = R / W * g; k = -I + w - (-I + C); D = -M + T - (-M + b); B = (-M + b) * (-I + C) - (-M + T) * (-I + w); N = -R + A - (-R + C); F = -E + T - (-E + S); O = (-E + S) * (-R + C) - (-E + T) * (-R + A); z = k * F - N * D; if (Math.abs(z) < .1) { z += 10.1; o.push(T - M, C - I, l, u, c, T + M, C + I, l, u, c); continue } y = (D * O - F * B) / z; x = (N * B - k * O) / z; U = (y - T) * (y - T) + (x - C) + (x - C); o.push(y, x, l, u, c, T - (y - T), C - (x - C), l, u, c) } if (n) { e = n } var H = this.edges + 1; for (V = 1; V < H; V++) { e.push(m + (V - 1) * 2, m + (V - 1) * 2 + 1, m + V * 2 + 1, m + V * 2 + 1, m + V * 2, m + (V - 1) * 2) } e.push(m + (V - 1) * 2, m + (V - 1) * 2 + 1, m + 1, m + 1, m, m + (V - 1) * 2); return o }; return t }(); var pt = function () { function p() { } v(p, "laya.webgl.shapes.Earcut"); p.earcut = function (t, e, i) { i = i || 2; var r = e && e.length, s = r ? e[0] * i : t.length, n = p.linkedList(t, 0, s, i, true), a = []; if (!n) return a; var o, h, l, u, c, f, _; if (r) n = p.eliminateHoles(t, e, n, i); if (t.length > 80 * i) { o = l = t[0]; h = u = t[1]; for (var d = i; d < s; d += i) { c = t[d]; f = t[d + 1]; if (c < o) o = c; if (f < h) h = f; if (c > l) l = c; if (f > u) u = f } _ = Math.max(l - o, u - h); _ = _ !== 0 ? 1 / _ : 0 } p.earcutLinked(n, a, i, o, h, _); return a }; p.linkedList = function (t, e, i, r, s) { var n, a; if (s === p.signedArea(t, e, i, r) > 0) { for (n = e; n < i; n += r)a = p.insertNode(n, t[n], t[n + 1], a) } else { for (n = i - r; n >= e; n -= r)a = p.insertNode(n, t[n], t[n + 1], a) } if (a && p.equals(a, a.next)) { p.removeNode(a); a = a.next } return a }; p.filterPoints = function (t, e) { if (!t) return t; if (!e) e = t; var i = t, r; do { r = false; if (!i.steiner && (p.equals(i, i.next) || p.area(i.prev, i, i.next) === 0)) { p.removeNode(i); i = e = i.prev; if (i === i.next) break; r = true } else { i = i.next } } while (r || i !== e); return e }; p.earcutLinked = function (t, e, i, r, s, n, a) { if (!t) return; if (!a && n) p.indexCurve(t, r, s, n); var o = t, h, l; while (t.prev !== t.next) { h = t.prev; l = t.next; if (n ? p.isEarHashed(t, r, s, n) : p.isEar(t)) { e.push(h.i / i); e.push(t.i / i); e.push(l.i / i); p.removeNode(t); t = l.next; o = l.next; continue } t = l; if (t === o) { if (!a) { p.earcutLinked(p.filterPoints(t, null), e, i, r, s, n, 1) } else if (a === 1) { t = p.cureLocalIntersections(t, e, i); p.earcutLinked(t, e, i, r, s, n, 2) } else if (a === 2) { p.splitEarcut(t, e, i, r, s, n) } break } } }; p.isEar = function (t) { var e = t.prev, i = t, r = t.next; if (p.area(e, i, r) >= 0) return false; var s = t.next.next; while (s !== t.prev) { if (p.pointInTriangle(e.x, e.y, i.x, i.y, r.x, r.y, s.x, s.y) && p.area(s.prev, s, s.next) >= 0) return false; s = s.next } return true }; p.isEarHashed = function (t, e, i, r) { var s = t.prev, n = t, a = t.next; if (p.area(s, n, a) >= 0) return false; var o = s.x < n.x ? s.x < a.x ? s.x : a.x : n.x < a.x ? n.x : a.x, h = s.y < n.y ? s.y < a.y ? s.y : a.y : n.y < a.y ? n.y : a.y, l = s.x > n.x ? s.x > a.x ? s.x : a.x : n.x > a.x ? n.x : a.x, u = s.y > n.y ? s.y > a.y ? s.y : a.y : n.y > a.y ? n.y : a.y; var c = p.zOrder(o, h, e, i, r), f = p.zOrder(l, u, e, i, r); var _ = t.nextZ; while (_ && _.z <= f) { if (_ !== t.prev && _ !== t.next && p.pointInTriangle(s.x, s.y, n.x, n.y, a.x, a.y, _.x, _.y) && p.area(_.prev, _, _.next) >= 0) return false; _ = _.nextZ } _ = t.prevZ; while (_ && _.z >= c) { if (_ !== t.prev && _ !== t.next && p.pointInTriangle(s.x, s.y, n.x, n.y, a.x, a.y, _.x, _.y) && p.area(_.prev, _, _.next) >= 0) return false; _ = _.prevZ } return true }; p.cureLocalIntersections = function (t, e, i) { var r = t; do { var s = r.prev, n = r.next.next; if (!p.equals(s, n) && p.intersects(s, r, r.next, n) && p.locallyInside(s, n) && p.locallyInside(n, s)) { e.push(s.i / i); e.push(r.i / i); e.push(n.i / i); p.removeNode(r); p.removeNode(r.next); r = t = n } r = r.next } while (r !== t); return r }; p.splitEarcut = function (t, e, i, r, s, n) { var a = t; do { var o = a.next.next; while (o !== a.prev) { if (a.i !== o.i && p.isValidDiagonal(a, o)) { var h = p.splitPolygon(a, o); a = p.filterPoints(a, a.next); h = p.filterPoints(h, h.next); p.earcutLinked(a, e, i, r, s, n); p.earcutLinked(h, e, i, r, s, n); return } o = o.next } a = a.next } while (a !== t) }; p.eliminateHoles = function (t, e, i, r) { var s = [], n, a, o, h, l; for (n = 0, a = e.length; n < a; n++) { o = e[n] * r; h = n < a - 1 ? e[n + 1] * r : t.length; l = p.linkedList(t, o, h, r, false); if (l === l.next) l.steiner = true; s.push(p.getLeftmost(l)) } s.sort(p.compareX); for (n = 0; n < s.length; n++) { p.eliminateHole(s[n], i); i = p.filterPoints(i, i.next) } return i }; p.compareX = function (t, e) { return t.x - e.x }; p.eliminateHole = function (t, e) { e = p.findHoleBridge(t, e); if (e) { var i = p.splitPolygon(e, t); p.filterPoints(i, i.next) } }; p.findHoleBridge = function (t, e) { var i = e, r = t.x, s = t.y, n = -Infinity, a; do { if (s <= i.y && s >= i.next.y && i.next.y !== i.y) { var o = i.x + (s - i.y) * (i.next.x - i.x) / (i.next.y - i.y); if (o <= r && o > n) { n = o; if (o === r) { if (s === i.y) return i; if (s === i.next.y) return i.next } a = i.x < i.next.x ? i : i.next } } i = i.next } while (i !== e); if (!a) return null; if (r === n) return a.prev; var h = a, l = a.x, u = a.y, c = Infinity, f; i = a.next; while (i !== h) { if (r >= i.x && i.x >= l && r !== i.x && p.pointInTriangle(s < u ? r : n, s, l, u, s < u ? n : r, s, i.x, i.y)) { f = Math.abs(s - i.y) / (r - i.x); if ((f < c || f === c && i.x > a.x) && p.locallyInside(i, t)) { a = i; c = f } } i = i.next } return a }; p.indexCurve = function (t, e, i, r) { var s = t; do { if (s.z === null) s.z = p.zOrder(s.x, s.y, e, i, r); s.prevZ = s.prev; s.nextZ = s.next; s = s.next } while (s !== t); s.prevZ.nextZ = null; s.prevZ = null; p.sortLinked(s) }; p.sortLinked = function (t) { var e, i, r, s, n, a, o, h, l = 1; do { i = t; t = null; n = null; a = 0; while (i) { a++; r = i; o = 0; for (e = 0; e < l; e++) { o++; r = r.nextZ; if (!r) break } h = l; while (o > 0 || h > 0 && r) { if (o !== 0 && (h === 0 || !r || i.z <= r.z)) { s = i; i = i.nextZ; o-- } else { s = r; r = r.nextZ; h-- } if (n) n.nextZ = s; else t = s; s.prevZ = n; n = s } i = r } n.nextZ = null; l *= 2 } while (a > 1); return t }; p.zOrder = function (t, e, i, r, s) { t = 32767 * (t - i) * s; e = 32767 * (e - r) * s; t = (t | t << 8) & 16711935; t = (t | t << 4) & 252645135; t = (t | t << 2) & 858993459; t = (t | t << 1) & 1431655765; e = (e | e << 8) & 16711935; e = (e | e << 4) & 252645135; e = (e | e << 2) & 858993459; e = (e | e << 1) & 1431655765; return t | e << 1 }; p.getLeftmost = function (t) { var e = t, i = t; do { if (e.x < i.x) i = e; e = e.next } while (e !== t); return i }; p.pointInTriangle = function (t, e, i, r, s, n, a, o) { return (s - a) * (e - o) - (t - a) * (n - o) >= 0 && (t - a) * (r - o) - (i - a) * (e - o) >= 0 && (i - a) * (n - o) - (s - a) * (r - o) >= 0 }; p.isValidDiagonal = function (t, e) { return t.next.i !== e.i && t.prev.i !== e.i && !p.intersectsPolygon(t, e) && p.locallyInside(t, e) && p.locallyInside(e, t) && p.middleInside(t, e) }; p.area = function (t, e, i) { return (e.y - t.y) * (i.x - e.x) - (e.x - t.x) * (i.y - e.y) }; p.equals = function (t, e) { return t.x === e.x && t.y === e.y }; p.intersects = function (t, e, i, r) { if (p.equals(t, e) && p.equals(i, r) || p.equals(t, r) && p.equals(i, e)) return true; return p.area(t, e, i) > 0 !== p.area(t, e, r) > 0 && p.area(i, r, t) > 0 !== p.area(i, r, e) > 0 }; p.intersectsPolygon = function (t, e) { var i = t; do { if (i.i !== t.i && i.next.i !== t.i && i.i !== e.i && i.next.i !== e.i && p.intersects(i, i.next, t, e)) return true; i = i.next } while (i !== t); return false }; p.locallyInside = function (t, e) { return p.area(t.prev, t, t.next) < 0 ? p.area(t, e, t.next) >= 0 && p.area(t, t.prev, e) >= 0 : p.area(t, e, t.prev) < 0 || p.area(t, t.next, e) < 0 }; p.middleInside = function (t, e) { var i = t, r = false, s = (t.x + e.x) / 2, n = (t.y + e.y) / 2; do { if (i.y > n !== i.next.y > n && i.next.y !== i.y && s < (i.next.x - i.x) * (n - i.y) / (i.next.y - i.y) + i.x) r = !r; i = i.next } while (i !== t); return r }; p.splitPolygon = function (t, e) { var i = new vt(t.i, t.x, t.y), r = new vt(e.i, e.x, e.y), s = t.next, n = e.prev; t.next = e; e.prev = t; i.next = s; s.prev = i; r.next = i; i.prev = r; n.next = r; r.prev = n; return r }; p.insertNode = function (t, e, i, r) { var s = new vt(t, e, i); if (!r) { s.prev = s; s.next = s } else { s.next = r.next; s.prev = r; r.next.prev = s; r.next = s } return s }; p.removeNode = function (t) { t.next.prev = t.prev; t.prev.next = t.next; if (t.prevZ) t.prevZ.nextZ = t.nextZ; if (t.nextZ) t.nextZ.prevZ = t.prevZ }; p.signedArea = function (t, e, i, r) { var s = 0; for (var n = e, a = i - r; n < i; n += r) { s += (t[a] - t[n]) * (t[n + 1] + t[a + 1]); a = n } return s }; return p }(); var vt = function () { function t(t, e, i) { this.i = null; this.x = null; this.y = null; this.prev = null; this.next = null; this.z = null; this.prevZ = null; this.nextZ = null; this.steiner = null; this.i = t; this.x = e; this.y = i; this.prev = null; this.next = null; this.z = null; this.prevZ = null; this.nextZ = null; this.steiner = false } v(t, "laya.webgl.shapes.EarcutNode"); return t }(); var mt = function () { function t(t, e, i, r, s, n, a) { this.lineWidth = t; this.lineColor = e; this.lineAlpha = i; this.fillColor = r; this.fillAlpha = s; this.shape = a; this.fill = n } v(t, "laya.webgl.shapes.GeometryData"); var e = t.prototype; e.clone = function () { return new t(this.lineWidth, this.lineColor, this.lineAlpha, this.fillColor, this.fillAlpha, this.fill, this.shape) }; e.getIndexData = function () { return null }; e.getVertexData = function () { return null }; e.destroy = function () { this.shape = null }; return t }(); var gt = function () { function t(t) { if (t instanceof Float32Array) this.points = t; else if (t instanceof Array) { var e = t.length; this.points = new Float32Array(t) } } v(t, "laya.webgl.shapes.Vertex"); var e = t.prototype; w.imps(e, { "laya.webgl.shapes.IShape": true }); e.getData = function (t, e, i) { }; e.needUpdate = function (t) { return false }; e.rebuild = function (t) { }; e.setMatrix = function (t) { }; return t }(); var yt = function () { function h(t) { t === void 0 && (t = 1e4); this._renderType = t } v(h, "laya.webgl.submit.Submit"); var t = h.prototype; w.imps(t, { "laya.webgl.submit.ISubmit": true }); t.releaseRender = function () { var t = h._cache; t[t._length++] = this; this.shaderValue.release(); this._vb = null }; t.getRenderType = function () { return this._renderType }; t.renderSubmit = function () { if (this._numEle === 0) return 1; var t = this.shaderValue.textureHost; if (t) { var e = t.source; if (!t.bitmap || !e) return 1; this.shaderValue.texture = e } this._vb.bind_upload(this._ib); var i = Bt.mainContext; this.shaderValue.upload(); if (tt.activeBlendFunction !== this._blendFn) { i.enable(3042); this._blendFn(i); tt.activeBlendFunction = this._blendFn } O.drawCall++; O.trianglesFaces += this._numEle / 3; i.drawElements(4, this._numEle, 5123, this._startIdx); return 1 }; h.__init__ = function () { var t = h.RENDERBASE = new h(-1); t.shaderValue = new zt(0, 0); t.shaderValue.ALPHA = -1234 }; h.createSubmit = function (t, e, i, r, s) { var n = h._cache._length ? h._cache[--h._cache._length] : new h; if (i == null) { i = n._selfVb || (n._selfVb = ve.create(-1)); i.clear(); r = 0 } n._ib = e; n._vb = i; n._startIdx = r * Et.BYTES_PIDX; n._numEle = 0; var a = t._nBlendType; n._blendFn = t._targets ? tt.targetFns[a] : tt.fns[a]; n.shaderValue = s; n.shaderValue.setValue(t._shader2D); var o = t._shader2D.filters; o && n.shaderValue.setFilters(o); return n }; h.createShape = function (t, e, i, r, s, n) { var a = !h._cache._length ? new h : h._cache[--h._cache._length]; a._ib = e; a._vb = i; a._numEle = r; a._startIdx = s; a.shaderValue = n; a.shaderValue.setValue(t._shader2D); var o = t._nBlendType; a._blendFn = t._targets ? tt.targetFns[o] : tt.fns[o]; return a }; h.TYPE_2D = 1e4; h.TYPE_CANVAS = 10003; h.TYPE_CMDSETRT = 10004; h.TYPE_CUSTOM = 10005; h.TYPE_BLURRT = 10006; h.TYPE_CMDDESTORYPRERT = 10007; h.TYPE_DISABLESTENCIL = 10008; h.TYPE_OTHERIBVB = 10009; h.TYPE_PRIMITIVE = 10010; h.TYPE_RT = 10011; h.TYPE_BLUR_RT = 10012; h.TYPE_TARGET = 10013; h.TYPE_CHANGE_VALUE = 10014; h.TYPE_SHAPE = 10015; h.TYPE_TEXTURE = 10016; h.TYPE_FILLTEXTURE = 10017; h.RENDERBASE = null; h._cache = (h._cache = [], h._cache._length = 0, h._cache); return h }(); var xt = function () { function r() { this.fun = null; this.args = null } v(r, "laya.webgl.submit.SubmitCMD"); var t = r.prototype; w.imps(t, { "laya.webgl.submit.ISubmit": true }); t.renderSubmit = function () { this.fun.apply(null, this.args); return 1 }; t.getRenderType = function () { return 0 }; t.releaseRender = function () { var t = r._cache; t[t._length++] = this }; r.create = function (t, e) { var i = r._cache._length ? r._cache[--r._cache._length] : new r; i.fun = e; i.args = t; return i }; r._cache = (r._cache = [], r._cache._length = 0, r._cache); return r }(); var bt = function () { function e() { this.variables = {} } v(e, "laya.webgl.submit.SubmitCMDScope"); var t = e.prototype; t.getValue = function (t) { return this.variables[t] }; t.addValue = function (t, e) { return this.variables[t] = e }; t.setValue = function (t, e) { if (this.variables.hasOwnProperty(t)) { return this.variables[t] = e } return null }; t.clear = function () { for (var t in this.variables) { delete this.variables[t] } }; t.recycle = function () { this.clear(); e.POOL.push(this) }; e.create = function () { var t = e.POOL.pop(); t || (t = new e); return t }; e.POOL = []; return e }(); var wt = function () { function c() { this.offset = 0; this.startIndex = 0; this._mat = M.create() } v(c, "laya.webgl.submit.SubmitOtherIBVB"); var t = c.prototype; w.imps(t, { "laya.webgl.submit.ISubmit": true }); t.releaseRender = function () { var t = c._cache; t[t._length++] = this }; t.getRenderType = function () { return 10009 }; t.renderSubmit = function () { var t = this._shaderValue.textureHost; if (t) { var e = t.source; if (!t.bitmap || !e) return 1; this._shaderValue.texture = e } this._vb.bind_upload(this._ib); var i = kt.worldMatrix4; var r = M.TEMP; M.mulPre(this._mat, i[0], i[1], i[4], i[5], i[12], i[13], r); var s = kt.worldMatrix4 = c.tempMatrix4; s[0] = r.a; s[1] = r.b; s[4] = r.c; s[5] = r.d; s[12] = r.tx; s[13] = r.ty; this._shader._offset = this.offset; this._shaderValue.refresh(); this._shader.upload(this._shaderValue); this._shader._offset = 0; var n = Bt.mainContext; if (tt.activeBlendFunction !== this._blendFn) { n.enable(3042); this._blendFn(n); tt.activeBlendFunction = this._blendFn } O.drawCall++; O.trianglesFaces += this._numEle / 3; n.drawElements(4, this._numEle, 5123, this.startIndex); kt.worldMatrix4 = i; Zt.activeShader = null; return 1 }; c.create = function (t, e, i, r, s, n, a, o, h) { h === void 0 && (h = 0); var l = !c._cache._length ? new c : c._cache[--c._cache._length]; l._ib = i; l._vb = e; l._numEle = r; l._shader = s; l._shaderValue = n; var u = t._nBlendType; l._blendFn = t._targets ? tt.targetFns[u] : tt.fns[u]; switch (h) { case 0: l.offset = 0; l.startIndex = o / (Et.BYTES_PE * e.vertexStride) * 1.5; l.startIndex *= Et.BYTES_PIDX; break; case 1: l.startIndex = a; l.offset = o; break }return l }; c._cache = (c._cache = [], c._cache._length = 0, c._cache); c.tempMatrix4 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]; return c }(); var Tt = function () { function i() { this.submitIndex = 0; this.submitLength = 0; this.context = null; this.clipRect = new E; this.screenRect = new E } v(i, "laya.webgl.submit.SubmitScissor"); var t = i.prototype; w.imps(t, { "laya.webgl.submit.ISubmit": true }); t._scissor = function (t, e, i, r) { var s = kt.worldMatrix4; var n = s[0], a = s[5], o = s[12], h = s[13]; t = t * n + o; e = e * a + h; i *= n; r *= a; if (i < 1 || r < 1) { return false } var l = t + i; var u = e + r; t < 0 && (t = 0, i = l - t); e < 0 && (e = 0, r = u - e); var c = kt.worldClipRect; t = Math.max(t, c.x); e = Math.max(e, c.y); i = Math.min(l, c.right) - t; r = Math.min(u, c.bottom) - e; if (i < 1 || r < 1) { return false } var f = kt.worldScissorTest; this.screenRect.copyFrom(c); c.x = t; c.y = e; c.width = i; c.height = r; kt.worldScissorTest = true; e = kt.height - e - r; Bt.mainContext.scissor(t, e, i, r); Bt.mainContext.enable(3089); this.context.submitElement(this.submitIndex, this.submitIndex + this.submitLength); if (f) { e = kt.height - this.screenRect.y - this.screenRect.height; Bt.mainContext.scissor(this.screenRect.x, e, this.screenRect.width, this.screenRect.height); Bt.mainContext.enable(3089) } else { Bt.mainContext.disable(3089); kt.worldScissorTest = false } c.copyFrom(this.screenRect); return true }; t._scissorWithTagart = function (t, e, i, r) { if (i < 1 || r < 1) { return false } var s = t + i; var n = e + r; t < 0 && (t = 0, i = s - t); e < 0 && (e = 0, r = n - e); var a = kt.worldClipRect; t = Math.max(t, a.x); e = Math.max(e, a.y); i = Math.min(s, a.right) - t; r = Math.min(n, a.bottom) - e; if (i < 1 || r < 1) { return false } var o = kt.worldScissorTest; this.screenRect.copyFrom(a); kt.worldScissorTest = true; a.x = t; a.y = e; a.width = i; a.height = r; e = kt.height - e - r; Bt.mainContext.scissor(t, e, i, r); Bt.mainContext.enable(3089); this.context.submitElement(this.submitIndex, this.submitIndex + this.submitLength); if (o) { e = kt.height - this.screenRect.y - this.screenRect.height; Bt.mainContext.scissor(this.screenRect.x, e, this.screenRect.width, this.screenRect.height); Bt.mainContext.enable(3089) } else { Bt.mainContext.disable(3089); kt.worldScissorTest = false } a.copyFrom(this.screenRect); return true }; t.renderSubmit = function () { this.submitLength = Math.min(this.context._submits._length - 1, this.submitLength); if (this.submitLength < 1 || this.clipRect.width < 1 || this.clipRect.height < 1) return this.submitLength + 1; if (this.context._targets) this._scissorWithTagart(this.clipRect.x, this.clipRect.y, this.clipRect.width, this.clipRect.height); else this._scissor(this.clipRect.x, this.clipRect.y, this.clipRect.width, this.clipRect.height); return this.submitLength + 1 }; t.getRenderType = function () { return 0 }; t.releaseRender = function () { var t = i._cache; t[t._length++] = this; this.context = null }; i.create = function (t) { var e = i._cache._length ? i._cache[--i._cache._length] : new i; e.context = t; return e }; i._cache = (i._cache = [], i._cache._length = 0, i._cache); return i }(); var Ct = function () { function u() { this.step = 0; this.blendMode = null; this.level = 0 } v(u, "laya.webgl.submit.SubmitStencil"); var t = u.prototype; w.imps(t, { "laya.webgl.submit.ISubmit": true }); t.renderSubmit = function () { switch (this.step) { case 1: this.do1(); break; case 2: this.do2(); break; case 3: this.do3(); break; case 4: this.do4(); break; case 5: this.do5(); break; case 6: this.do6(); break; case 7: this.do7(); break; case 8: this.do8(); break }return 1 }; t.getRenderType = function () { return 0 }; t.releaseRender = function () { var t = u._cache; t[t._length++] = this }; t.do1 = function () { var t = Bt.mainContext; t.enable(2960); t.clear(1024); t.colorMask(false, false, false, false); t.stencilFunc(514, this.level, 255); t.stencilOp(7680, 7680, 7682) }; t.do2 = function () { var t = Bt.mainContext; t.stencilFunc(514, this.level + 1, 255); t.colorMask(true, true, true, true); t.stencilOp(7680, 7680, 7680) }; t.do3 = function () { var t = Bt.mainContext; t.colorMask(true, true, true, true); t.stencilOp(7680, 7680, 7680); t.clear(1024); t.disable(2960) }; t.do4 = function () { var t = Bt.mainContext; if (this.level == 0) { t.enable(2960); t.clear(1024) } t.colorMask(false, false, false, false); t.stencilFunc(519, 0, 255); t.stencilOp(7680, 7680, 7682) }; t.do5 = function () { var t = Bt.mainContext; t.stencilFunc(514, this.level, 255); t.colorMask(true, true, true, true); t.stencilOp(7680, 7680, 7680) }; t.do6 = function () { var t = Bt.mainContext; tt.targetFns[tt.TOINT[this.blendMode]](t) }; t.do7 = function () { var t = Bt.mainContext; t.colorMask(false, false, false, false); t.stencilOp(7680, 7680, 7683) }; t.do8 = function () { var t = Bt.mainContext; t.colorMask(true, true, true, true); t.stencilFunc(514, this.level, 255); t.stencilOp(7680, 7680, 7680) }; u.restore = function (t, e, i, r, s) { var n; t._renderKey = 0; if (u._mask > 0) { u._mask-- } if (u._mask == 0) { n = laya.webgl.submit.SubmitStencil.create(3); t.addRenderObject(n); t._curSubmit = yt.RENDERBASE } else { n = laya.webgl.submit.SubmitStencil.create(7); t.addRenderObject(n); var a = t._vb; var o = a._byteLength >> 2; if (Rt.fillRectImgVb(a, null, e.x, e.y, e.width, e.height, H.DEF_UV, i, r, s, 0, 0)) { var h = t._shader2D; h.glTexture = null; var l = t._curSubmit = yt.createSubmit(t, t._ib, a, (a._byteLength - 16 * 4) / 32 * 3, zt.create(2, 0)); l.shaderValue.ALPHA = 1; t._submits[t._submits._length++] = l; t._curSubmit._numEle += 6; t._curSubmit = yt.RENDERBASE } else { alert("clipRect calc stencil rect error") } n = laya.webgl.submit.SubmitStencil.create(8); t.addRenderObject(n) } }; u.restore2 = function (t, e) { var i; t._renderKey = 0; if (u._mask > 0) { u._mask-- } if (u._mask == 0) { i = laya.webgl.submit.SubmitStencil.create(3); t.addRenderObject(i); t._curSubmit = yt.RENDERBASE } else { i = laya.webgl.submit.SubmitStencil.create(7); t.addRenderObject(i); t._submits[t._submits._length++] = e; i = laya.webgl.submit.SubmitStencil.create(8); t.addRenderObject(i) } }; u.create = function (t) { var e = u._cache._length ? u._cache[--u._cache._length] : new u; e.step = t; if (t == 5)++u._mask; e.level = u._mask; return e }; u._cache = (u._cache = [], u._cache._length = 0, u._cache); u._mask = 0; return u }(); var St = function () { function o() { this._renderType = 0; this._vb = null; this._ib = null; this._startIdx = 0; this._numEle = 0; this.shaderValue = null; this.blendType = 0; this.proName = null; this.scope = null } v(o, "laya.webgl.submit.SubmitTarget"); var t = o.prototype; w.imps(t, { "laya.webgl.submit.ISubmit": true }); t.renderSubmit = function () { this._vb.bind_upload(this._ib); var t = this.scope.getValue(this.proName); if (t) { this.shaderValue.texture = t.source; if (this.shaderValue["strength"] && !this.shaderValue["blurInfo"]) { this.shaderValue["blurInfo"] = [t.width, t.height] } this.shaderValue.upload(); this.blend(); O.drawCall++; O.trianglesFaces += this._numEle / 3; Bt.mainContext.drawElements(4, this._numEle, 5123, this._startIdx) } return 1 }; t.blend = function () { if (tt.activeBlendFunction !== tt.fns[this.blendType]) { var t = Bt.mainContext; t.enable(3042); tt.fns[this.blendType](t); tt.activeBlendFunction = tt.fns[this.blendType] } }; t.getRenderType = function () { return 0 }; t.releaseRender = function () { var t = o._cache; t[t._length++] = this }; o.create = function (t, e, i, r, s, n) { var a = o._cache._length ? o._cache[--o._cache._length] : new o; a._ib = e; a._vb = i; a.proName = n; a._startIdx = r * Et.BYTES_PIDX; a._numEle = 0; a.blendType = t._nBlendType; a.shaderValue = s; a.shaderValue.setValue(t._shader2D); return a }; o._cache = (o._cache = [], o._cache._length = 0, o._cache); return o }(); var At = function () { function t() { this._sourceStr = null } v(t, "laya.webgl.text.CharSegment"); var e = t.prototype; w.imps(e, { "laya.webgl.text.ICharSegment": true }); e.textToSpit = function (t) { this._sourceStr = t }; e.getChar = function (t) { return this._sourceStr.charAt(t) }; e.getCharCode = function (t) { return this._sourceStr.charCodeAt(t) }; e.length = function () { return this._sourceStr.length }; return t }(); var Mt = function () { var t; function P() { } v(P, "laya.webgl.text.DrawText"); P.__init__ = function () { P._charsTemp = new Array; P._drawValue = new t; P._charSeg = new At }; P.customCharSeg = function (t) { P._charSeg = t }; P.getChar = function (t, e, i) { var r = oe.createOneChar(t, i); if (e != -1) P._charsCache[e] = r; return r }; P._drawSlow = function (t, e, i, r, s, n, a, o, h, l, u, c, f, _, d) { var p = P._drawValue.value(n, o, h, l, f, _, d); var v = 0, m = 0; var g = P._charsTemp; var y = 0, x, b, w = NaN; if (r) { g.length = r.length; for (v = 0, m = r.length; v < m; v++) { b = r[v]; w = b.charNum + p.txtID; g[v] = x = P._charsCache[w] || P.getChar(b.char, w, p); x.active() } } else { var T = i instanceof laya.utils.WordText ? i.toString() : i; if (V.CharacterCache) { P._charSeg.textToSpit(T); var C = P._charSeg.length(); g.length = C; for (v = 0, m = C; v < m; v++) { w = P._charSeg.getCharCode(v) + p.txtID; g[v] = x = P._charsCache[w] || P.getChar(P._charSeg.getChar(v), w, p); x.active(); y += x.cw } } else { g.length = 0; x = P.getChar(T, -1, p); x.active(); y += x.cw; g[0] = x } } var S = 0; if (a !== null && a !== "left") S = -(a == "center" ? y / 2 : y); var A, M = NaN, I, E, R = 0; if (r) { for (v = 0, m = g.length; v < m; v++) { x = g[v]; if (!x.isSpace) { b = r[v]; M = x.borderSize; I = x.texture; e._drawText(I, u + S + b.x * f - M, c + b.y * _ - M, I.width, I.height, s, 0, 0, 0, 0) } } } else { for (v = 0, m = g.length; v < m; v++) { x = g[v]; if (!x.isSpace) { M = x.borderSize; I = x.texture; e._drawText(I, u + S - M, c - M, I.width, I.height, s, 0, 0, 0, 0); t && (E = t[R++], E || (E = t[R - 1] = []), E[0] = I, E[1] = S - M, E[2] = -M) } S += x.cw } t && (t.length = R) } }; P._drawFast = function (t, e, i, r, s) { var n, a; for (var o = 0, h = t.length; o < h; o++) { a = t[o]; n = a[0]; n.active(); e._drawText(n, r + a[1], s + a[2], n.width, n.height, i, 0, 0, 0, 0) } }; P.drawText = function (t, e, i, r, s, n, a, o, h, l, u, c) { c === void 0 && (c = 0); if (e && e.length === 0 || i && i.length === 0) return; var f = r.a, _ = r.d; (r.b !== 0 || r.c !== 0) && (f = _ = 1); var d = f !== 1 || _ !== 1; if (d && w.stage.transform) { var p = w.stage.transform; d = p.a === f && p.d === _ } else d = false; if (d) { r = r.copyTo(Ot._tmpMatrix); var v = r.tx; var m = r.ty; r.scale(1 / f, 1 / _); r._checkTransform(); l *= f; u *= _; l += v - r.tx; u += m - r.ty } else f = _ = 1; if (i) { P._drawSlow(null, t, e, i, r, s, n, a, o, h, l, u, f, _, c) } else { if (e.toUpperCase === null) { var g = f + _ * 1e5; var y = e; if (!y.changed && y.id === g) { P._drawFast(y.save, t, r, l, u) } else { y.id = g; y.changed = false; P._drawSlow(y.save, t, e, i, r, s, n, a, o, h, l, u, f, _, c) } return } var x = e + s.toString() + a + o + h + f + _ + n; var b = P._textsCache[x]; if (V.CharacterCache) { if (b) { P._drawFast(b, t, r, l, u) } else { P._textsCache.__length || (P._textsCache.__length = 0); if (P._textsCache.__length > T.WebGLTextCacheCount) { P._textsCache = {}; P._textsCache.__length = 0; P._curPoolIndex = 0 } P._textCachesPool[P._curPoolIndex] ? (b = P._textsCache[x] = P._textCachesPool[P._curPoolIndex], b.length = 0) : P._textCachesPool[P._curPoolIndex] = b = P._textsCache[x] = []; P._textsCache.__length++; P._curPoolIndex++; P._drawSlow(b, t, e, i, r, s, n, a, o, h, l, u, f, _, c) } } else { P._drawSlow(b, t, e, i, r, s, n, a, o, h, l, u, f, _, c) } } }; P._charsTemp = null; P._textCachesPool = []; P._curPoolIndex = 0; P._charsCache = {}; P._textsCache = {}; P._drawValue = null; P.d = []; P._charSeg = null; P.__init$ = function () { t = function () { function h() { } v(h, ""); var t = h.prototype; t.value = function (t, e, i, r, s, n, a) { this.font = t; this.fillColor = e; this.borderColor = i; this.lineWidth = r; this.scaleX = s; this.scaleY = n; this.underLine = a; var o = t.toString() + s + n + r + e + i + a; this.txtID = h._keymap[o]; if (!this.txtID) { this.txtID = ++h._keymapCount * 1e-7; h._keymap[o] = this.txtID } return this }; h.clear = function () { h._keymap = {}; h._keymapCount = 1 }; h._keymap = {}; h._keymapCount = 1; return h }() }; return P }(); var It = function () { function s(t) { this._index = 0; this._size = 14; this._italic = -2; s._cache2 = s._cache2 || []; this.setFont(t || "14px Arial") } v(s, "laya.webgl.text.FontInContext"); var t = s.prototype; t.setFont = function (t) { var e = s._cache2[t]; if (!e) { this._words = t.split(" "); for (var i = 0, r = this._words.length; i < r; i++) { if (this._words[i].indexOf("px") > 0) { this._index = i; break } } this._size = parseInt(this._words[this._index]); s._cache2[t] = [this._words, this._size] } else { this._words = e[0]; this._size = e[1] } this._text = null; this._italic = -2 }; t.getItalic = function () { this._italic === -2 && (this._italic = this.hasType("italic")); return this._italic }; t.hasType = function (t) { for (var e = 0, i = this._words.length; e < i; e++)if (this._words[e] === t) return e; return -1 }; t.removeType = function (t) { for (var e = 0, i = this._words.length; e < i; e++)if (this._words[e] === t) { this._words.splice(e, 1); if (this._index > e) this._index--; break } this._text = null; this._italic = -2 }; t.copyTo = function (t) { t._text = this._text; t._size = this._size; t._index = this._index; t._words = this._words.slice(); t._italic = -2; return t }; t.toString = function () { return this._text ? this._text : this._text = this._words.join(" ") }; h(0, t, "size", function () { return this._size }, function (t) { this._size = t; this._words[this._index] = t + "px"; this._text = null }); s.create = function (t) { var e = s._cache[t]; if (e) return e; e = s._cache[t] = new s(t); return e }; s.EMPTY = new s; s._cache = {}; s._cache2 = null; return s }(); var Et = function () { function t() { } v(t, "laya.webgl.utils.CONST3D2D"); t.defaultMatrix4 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]; t.defaultMinusYMatrix4 = [1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]; t.uniformMatrix3 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0]; t._TMPARRAY = []; t._OFFSETX = 0; t._OFFSETY = 0; a(t, ["BYTES_PE", function () { return this.BYTES_PE = Float32Array.BYTES_PER_ELEMENT }, "BYTES_PIDX", function () { return this.BYTES_PIDX = Uint16Array.BYTES_PER_ELEMENT }]); return t }(); var Rt = function () { function d() { } v(d, "laya.webgl.utils.GlUtils"); d.make2DProjection = function (t, e, i) { return [2 / t, 0, 0, 0, 0, -2 / e, 0, 0, 0, 0, 2 / i, 0, -1, 1, 0, 1] }; d.fillIBQuadrangle = function (t, e) { if (e > 65535 / 4) { throw Error("IBQuadrangle count:" + e + " must<:" + Math.floor(65535 / 4)); return false } e = Math.floor(e); t._resizeBuffer((e + 1) * 6 * 2, false); t.byteLength = t.bufferLength; var i = t.getUint16Array(); var r = 0; for (var s = 0; s < e; s++) { i[r++] = s * 4; i[r++] = s * 4 + 2; i[r++] = s * 4 + 1; i[r++] = s * 4; i[r++] = s * 4 + 3; i[r++] = s * 4 + 2 } t.setNeedUpload(); return true }; d.expandIBQuadrangle = function (t, e) { t.bufferLength >= e * 6 * 2 || d.fillIBQuadrangle(t, e) }; d.mathCeilPowerOfTwo = function (t) { t--; t |= t >> 1; t |= t >> 2; t |= t >> 4; t |= t >> 8; t |= t >> 16; t++; return t }; d.fillQuadrangleImgVb = function (t, e, i, r, s, n, a, o) { var h = (t._byteLength >> 2) + 16; t.byteLength = h << 2; var l = t.getFloat32Array(); h -= 16; l[h + 2] = s[0]; l[h + 3] = s[1]; l[h + 6] = s[2]; l[h + 7] = s[3]; l[h + 10] = s[4]; l[h + 11] = s[5]; l[h + 14] = s[6]; l[h + 15] = s[7]; var u = n.a, c = n.b, f = n.c, _ = n.d; if (u !== 1 || c !== 0 || f !== 0 || _ !== 1) { n.bTransform = true; var d = n.tx + a, p = n.ty + o; l[h] = (r[0] + e) * u + (r[1] + i) * f + d; l[h + 1] = (r[0] + e) * c + (r[1] + i) * _ + p; l[h + 4] = (r[2] + e) * u + (r[3] + i) * f + d; l[h + 5] = (r[2] + e) * c + (r[3] + i) * _ + p; l[h + 8] = (r[4] + e) * u + (r[5] + i) * f + d; l[h + 9] = (r[4] + e) * c + (r[5] + i) * _ + p; l[h + 12] = (r[6] + e) * u + (r[7] + i) * f + d; l[h + 13] = (r[6] + e) * c + (r[7] + i) * _ + p } else { n.bTransform = false; e += n.tx + a; i += n.ty + o; l[h] = e + r[0]; l[h + 1] = i + r[1]; l[h + 4] = e + r[2]; l[h + 5] = i + r[3]; l[h + 8] = e + r[4]; l[h + 9] = i + r[5]; l[h + 12] = e + r[6]; l[h + 13] = i + r[7] } t._upload = true; return true }; d.fillTranglesVB = function (t, e, i, r, s, n, a) { var o = (t._byteLength >> 2) + r.length; t.byteLength = o << 2; var h = t.getFloat32Array(); o -= r.length; var l = r.length; var u = s.a, c = s.b, f = s.c, _ = s.d; for (var d = 0; d < l; d += 4) { h[o + d + 2] = r[d + 2]; h[o + d + 3] = r[d + 3]; if (u !== 1 || c !== 0 || f !== 0 || _ !== 1) { s.bTransform = true; var p = s.tx + n, v = s.ty + a; h[o + d] = (r[d] + e) * u + (r[d + 1] + i) * f + p; h[o + d + 1] = (r[d] + e) * c + (r[d + 1] + i) * _ + v } else { s.bTransform = false; e += s.tx + n; i += s.ty + a; h[o + d] = e + r[d]; h[o + d + 1] = i + r[d + 1] } } t._upload = true; return true }; d.copyPreImgVb = function (t, e, i) { var r = t._byteLength >> 2; t.byteLength = r + 16 << 2; var s = t.getFloat32Array(); for (var n = 0, a = r - 16; n < 4; n++) { s[r] = s[a] + e; ++r; ++a; s[r] = s[a] + i; ++r; ++a; s[r] = s[a]; ++r; ++a; s[r] = s[a]; ++r; ++a } t._upload = true }; d.fillRectImgVb = function (t, e, i, r, s, n, a, o, h, l, u, c, f) { f === void 0 && (f = false); var _ = 1; var d, p, v, m; var g, y, x, b; var w, T, C, S; var A, M, I, E; var R = o.a, P = o.b, L = o.c, k = o.d; var D = e && e.width < 99999999; if (R !== 1 || P !== 0 || L !== 0 || k !== 1) { o.bTransform = true; if (P === 0 && L === 0) { _ = 23; w = s + i, T = n + r; C = o.tx + h, S = o.ty + l; d = R * i + C; v = R * w + C; p = k * r + S; m = k * T + S } } else { _ = 23; o.bTransform = false; d = i + o.tx + h; v = d + s; p = r + o.ty + l; m = p + n } if (D) { g = e.x, y = e.y, x = e.width + g, b = e.height + y } if (_ !== 1) { if (Math.min(d, v) >= x) return false; if (Math.min(p, m) >= b) return false; if (Math.max(v, d) <= g) return false; if (Math.max(m, p) <= y) return false } var B = t._byteLength >> 2; t.byteLength = B + 16 << 2; var N = t.getFloat32Array(); N[B + 2] = a[0]; N[B + 3] = a[1]; N[B + 6] = a[2]; N[B + 7] = a[3]; N[B + 10] = a[4]; N[B + 11] = a[5]; N[B + 14] = a[6]; N[B + 15] = a[7]; switch (_) { case 1: C = o.tx + h, S = o.ty + l; w = s + i, T = n + r; var F = i, O = r; var z = R * F, U = L * O, W = k * O, V = P * F; var H = R * w, G = L * T, Y = k * T, X = P * w; if (f) { A = z + U + C; I = Math.round(A) - A; M = W + V + S; E = Math.round(M) - M; N[B] = A + I; N[B + 1] = M + E; N[B + 4] = H + U + C + I; N[B + 5] = W + X + S + E; N[B + 8] = H + G + C + I; N[B + 9] = Y + X + S + E; N[B + 12] = z + G + C + I; N[B + 13] = Y + V + S + E } else { N[B] = z + U + C; N[B + 1] = W + V + S; N[B + 4] = H + U + C; N[B + 5] = W + X + S; N[B + 8] = H + G + C; N[B + 9] = Y + X + S; N[B + 12] = z + G + C; N[B + 13] = Y + V + S } break; case 23: if (f) { A = d + u; I = Math.round(A) - A; M = p; E = Math.round(M) - M; N[B] = A + I; N[B + 1] = M + E; N[B + 4] = v + u + I; N[B + 5] = p + E; N[B + 8] = v + I; N[B + 9] = m + E; N[B + 12] = d + I; N[B + 13] = m + E } else { N[B] = d + u; N[B + 1] = p; N[B + 4] = v + u; N[B + 5] = p; N[B + 8] = v; N[B + 9] = m; N[B + 12] = d; N[B + 13] = m } break }t._upload = true; return true }; d.fillLineVb = function (t, e, i, r, s, n, a, o) { var h = a * .5; var l = d._fillLineArray; var u = -(r - n), c = i - s; var f = Math.sqrt(u * u + c * c); u /= f, c /= f, u *= h, c *= h; l[0] = i - u, l[1] = r - c, l[4] = i + u, l[5] = r + c, l[8] = s + u, l[9] = n + c, l[12] = s - u, l[13] = n - c; o && o.transformPointArray(l, l); var _ = (t._byteLength >> 2) + 16; t.byteLength = _ << 2; t.insertData(l, _ - 16); return true }; d._fillLineArray = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; return d }(); var Pt = function () { function h() { } v(h, "laya.webgl.utils.MatirxArray"); h.ArrayMul = function (t, e, i) { if (!t) { h.copyArray(e, i); return } if (!e) { h.copyArray(t, i); return } var r = NaN, s = NaN, n = NaN, a = NaN; for (var o = 0; o < 4; o++) { r = t[o]; s = t[o + 4]; n = t[o + 8]; a = t[o + 12]; i[o] = r * e[0] + s * e[1] + n * e[2] + a * e[3]; i[o + 4] = r * e[4] + s * e[5] + n * e[6] + a * e[7]; i[o + 8] = r * e[8] + s * e[9] + n * e[10] + a * e[11]; i[o + 12] = r * e[12] + s * e[13] + n * e[14] + a * e[15] } }; h.copyArray = function (t, e) { if (!t) return; if (!e) return; for (var i = 0; i < t.length; i++) { e[i] = t[i] } }; return h }(); var Lt = function () { function e(t, e, i) { this._stride = 0; this.vertNum = 0; this.indexNum = 0; this._applied = false; this._vb = null; this._ib = null; this._vao = null; this._attribInfo = null; this._quadNum = 0; this.canReuse = false; this._stride = t; this._vb = new ve(t, 35048); if (e) { this._vb._resizeBuffer(e, false) } else { } this._ib = new pe; if (i) { this._ib._resizeBuffer(i, false) } } v(e, "laya.webgl.utils.Mesh2D"); var t = e.prototype; t.cloneWithNewVB = function () { var t = new e(this._stride, 0, 0); t._ib = this._ib; t._quadNum = this._quadNum; t._attribInfo = this._attribInfo; return t }; t.cloneWithNewVBIB = function () { var t = new e(this._stride, 0, 0); t._attribInfo = this._attribInfo; return t }; t.getVBW = function () { this._vb.setNeedUpload(); return this._vb }; t.getVBR = function () { return this._vb }; t.getIBR = function () { return this._ib }; t.getIBW = function () { this._ib.setNeedUpload(); return this._ib }; t.createQuadIB = function (t) { this._quadNum = t; this._ib._resizeBuffer(t * 6 * 2, false); this._ib.byteLength = this._ib.bufferLength; var e = this._ib.getUint16Array(); var i = 0; var r = 0; for (var s = 0; s < t; s++) { e[i++] = r; e[i++] = r + 2; e[i++] = r + 1; e[i++] = r; e[i++] = r + 3; e[i++] = r + 2; r += 4 } this._ib.setNeedUpload() }; t.setAttributes = function (t) { this._attribInfo = t; if (this._attribInfo.length % 3 != 0) { throw "Mesh2D setAttributes error!" } }; t.getEleNum = function () { return this._ib.getBuffer().byteLength / 2 }; t.releaseMesh = function () { }; t.destroy = function () { }; t.clearVB = function () { this._vb.clear() }; e._gvaoid = 0; return e }(); var kt = function () { function s() { } v(s, "laya.webgl.utils.RenderState2D"); s.getMatrArray = function () { return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1] }; s.mat2MatArray = function (t, e) { var i = t; var r = e; r[0] = i.a; r[1] = i.b; r[2] = s.EMPTYMAT4_ARRAY[2]; r[3] = s.EMPTYMAT4_ARRAY[3]; r[4] = i.c; r[5] = i.d; r[6] = s.EMPTYMAT4_ARRAY[6]; r[7] = s.EMPTYMAT4_ARRAY[7]; r[8] = s.EMPTYMAT4_ARRAY[8]; r[9] = s.EMPTYMAT4_ARRAY[9]; r[10] = s.EMPTYMAT4_ARRAY[10]; r[11] = s.EMPTYMAT4_ARRAY[11]; r[12] = i.tx; r[13] = i.ty; r[14] = s.EMPTYMAT4_ARRAY[14]; r[15] = s.EMPTYMAT4_ARRAY[15]; return e }; s.restoreTempArray = function () { s.TEMPMAT4_ARRAY[0] = 1; s.TEMPMAT4_ARRAY[1] = 0; s.TEMPMAT4_ARRAY[4] = 0; s.TEMPMAT4_ARRAY[5] = 1; s.TEMPMAT4_ARRAY[12] = 0; s.TEMPMAT4_ARRAY[13] = 0 }; s.clear = function () { s.worldScissorTest = false; s.worldShaderDefines = null; s.worldFilters = null; s.worldAlpha = 1; s.worldClipRect.x = s.worldClipRect.y = 0; s.worldClipRect.width = s.width; s.worldClipRect.height = s.height; s.curRenderTarget = null }; s._MAXSIZE = 99999999; s.EMPTYMAT4_ARRAY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]; s.TEMPMAT4_ARRAY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]; s.worldMatrix4 = s.TEMPMAT4_ARRAY; s.worldAlpha = 1; s.worldScissorTest = false; s.worldFilters = null; s.worldShaderDefines = null; s.curRenderTarget = null; s.width = 0; s.height = 0; a(s, ["worldMatrix", function () { return this.worldMatrix = new M }, "worldClipRect", function () { return this.worldClipRect = new E(0, 0, 99999999, 99999999) }]); return s }(); var Dt = function () { var g, i; function y(t, e, i, r, s) { var n = this; function a(t) { var e = []; var i = new g(e); n._compileToTree(i, t.split("\n"), 0, e, s); return i } var o = _.now(); this._VS = a(e); this._PS = a(i); this._nameMap = r; if (_.now() - o > 2) console.log("ShaderCompile use time:" + (_.now() - o) + "  size:" + e.length + "/" + i.length) } v(y, "laya.webgl.utils.ShaderCompile"); var t = y.prototype; t._compileToTree = function (t, e, i, r, s) { var n, a; var o, h, l; var u = 0, c, f; var _ = 0, d = 0, p = 0; for (_ = i; _ < e.length; _++) { o = e[_]; if (o.length < 1) continue; u = o.indexOf("//"); if (u === 0) continue; if (u >= 0) o = o.substr(0, u); n = f || new g(r); f = null; n.text = o; n.noCompile = true; if ((u = o.indexOf("#")) >= 0) { h = "#"; for (p = u + 1, d = o.length; p < d; p++) { var v = o.charAt(p); if (v === " " || v === "\t" || v === "?") break; h += v } n.name = h; switch (h) { case "#ifdef": case "#ifndef": n.src = o; n.noCompile = o.match(/[!&|()=<>]/) != null; if (!n.noCompile) { c = o.replace(/^\s*/, "").split(/\s+/); n.setCondition(c[1], h === "#ifdef" ? 1 : 2); n.text = "//" + n.text } else { console.log("function():Boolean{return " + o.substr(u + n.name.length) + "}") } n.setParent(t); t = n; if (s) { c = o.substr(p).split(y._splitToWordExps3); for (p = 0; p < c.length; p++) { o = c[p]; o.length && (s[o] = true) } } continue; case "#if": n.src = o; n.noCompile = true; n.setParent(t); t = n; if (s) { c = o.substr(p).split(y._splitToWordExps3); for (p = 0; p < c.length; p++) { o = c[p]; o.length && o != "defined" && (s[o] = true) } } continue; case "#else": n.src = o; t = t.parent; a = t.childs[t.childs.length - 1]; n.noCompile = a.noCompile; if (!n.noCompile) { n.condition = a.condition; n.conditionType = a.conditionType == 1 ? 2 : 1; n.text = "//" + n.text + " " + a.text + " " + n.conditionType } n.setParent(t); t = n; continue; case "#endif": t = t.parent; a = t.childs[t.childs.length - 1]; n.noCompile = a.noCompile; if (!n.noCompile) { n.text = "//" + n.text } n.setParent(t); continue; case "#include": c = y.splitToWords(o, null); var m = y.includes[c[1]]; if (!m) { throw "ShaderCompile error no this include file:" + c[1]; return } if ((u = c[0].indexOf("?")) < 0) { n.setParent(t); o = m.getWith(c[2] == "with" ? c[3] : null); this._compileToTree(n, o.split("\n"), 0, r, s); n.text = ""; continue } n.setCondition(c[0].substr(u + 1), 1); n.text = m.getWith(c[2] == "with" ? c[3] : null); break; case "#import": c = y.splitToWords(o, null); l = c[1]; r.push({ node: n, file: y.includes[l], ofs: n.text.length }); continue } } else { a = t.childs[t.childs.length - 1]; if (a && !a.name) { r.length > 0 && y.splitToWords(o, a); f = n; a.text += "\n" + o; continue } r.length > 0 && y.splitToWords(o, n) } n.setParent(t) } }; t.createShader = function (t, e, i) { var r = {}; var s = ""; if (t) { for (var n in t) { s += "#define " + n + "\n"; r[n] = true } } var a = this._VS.toscript(r, []); var o = this._PS.toscript(r, []); return (i || ue.create)(s + a.join("\n"), s + o.join("\n"), e, this._nameMap) }; y._parseOne = function (t, e, i, r, s, n) { var a = { type: y.shaderParamsMap[i[r + 1]], name: i[r + 2], size: isNaN(parseInt(i[r + 3])) ? 1 : parseInt(i[r + 3]) }; if (n) { if (s == "attribute") { t.push(a) } else { e.push(a) } } if (i[r + 3] == ":") { a.type = i[r + 4]; r += 2 } r += 2; return r }; y.addInclude = function (t, e) { if (!e || e.length === 0) throw new Error("add shader include file err:" + t); if (y.includes[t]) throw new Error("add shader include file err, has add:" + t); y.includes[t] = new i(e) }; y.preGetParams = function (t, e) { var i = [t, e]; var r = {}; var s = []; var n = []; var a = {}; var o = []; r.attributes = s; r.uniforms = n; r.defines = a; var h = 0, l = 0, u; for (var c = 0; c < 2; c++) { i[c] = i[c].replace(y._removeAnnotation, ""); var f = i[c].match(y._reg); var _; for (h = 0, l = f.length; h < l; h++) { var d = f[h]; if (d != "attribute" && d != "uniform") { if (d == "#define") { d = f[++h]; o[d] = 1; continue } else if (d == "#ifdef") { _ = f[++h]; var p = a[_] = a[_] || []; for (h++; h < l; h++) { d = f[h]; if (d != "attribute" && d != "uniform") { if (d == "#else") { for (h++; h < l; h++) { d = f[h]; if (d != "attribute" && d != "uniform") { if (d == "#endif") { break } continue } h = y._parseOne(s, n, f, h, d, !o[_]) } } continue } h = y._parseOne(s, n, f, h, d, o[_]) } } continue } h = y._parseOne(s, n, f, h, d, true) } } return r }; y.splitToWords = function (t, e) { var i = []; var r; var s = -1; var n; for (var a = 0, o = t.length; a < o; a++) { r = t.charAt(a); if (" \t=+-*/&%!<>()'\",;".indexOf(r) >= 0) { if (s >= 0 && a - s > 1) { n = t.substr(s, a - s); i.push(n) } if (r == '"' || r == "'") { var h = t.indexOf(r, a + 1); if (h < 0) { throw "Sharder err:" + t } i.push(t.substr(a + 1, h - a - 1)); a = h; s = -1; continue } if (r == "(" && e && i.length > 0) { n = i[i.length - 1] + ";"; if ("vec4;main;".indexOf(n) < 0) e.useFuns += n } s = -1; continue } if (s < 0) s = a } if (s < o && o - s > 1) { n = t.substr(s, o - s); i.push(n) } return i }; y.IFDEF_NO = 0; y.IFDEF_YES = 1; y.IFDEF_ELSE = 2; y.IFDEF_PARENT = 3; y._removeAnnotation = new RegExp("(/\\*([^*]|[\\r\\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+/)|(//.*)", "g"); y._reg = new RegExp("(\".*\")|('.*')|([#\\w\\*-\\.+/()=<>{}\\\\]+)|([,;:\\\\])", "g"); y._splitToWordExps = new RegExp("[(\".*\")]+|[('.*')]+|([ \\t=\\+\\-*/&%!<>!%(),;])", "g"); y.includes = {}; a(y, ["shaderParamsMap", function () { return this.shaderParamsMap = { float: 5126, int: 5124, bool: 35670, vec2: 35664, vec3: 35665, vec4: 35666, ivec2: 35667, ivec3: 35668, ivec4: 35669, bvec2: 35671, bvec3: 35672, bvec4: 35673, mat2: 35674, mat3: 35675, mat4: 35676, sampler2D: 35678, samplerCube: 35680 } }, "_splitToWordExps3", function () { return this._splitToWordExps3 = new RegExp("[ \\t=\\+\\-*/&%!<>!%(),;\\|]", "g") }]); y.__init$ = function () { g = function () { function i(t) { this.childs = []; this.text = ""; this.parent = null; this.name = null; this.noCompile = false; this.includefiles = null; this.condition = null; this.conditionType = 0; this.useFuns = ""; this.z = 0; this.src = null; this.includefiles = t } v(i, ""); var t = i.prototype; t.setParent = function (t) { t.childs.push(this); this.z = t.z + 1; this.parent = t }; t.setCondition = function (t, e) { if (t) { this.conditionType = e; t = t.replace(/(\s*$)/g, ""); this.condition = function () { return this[t] }; this.condition.__condition = t } }; t.toscript = function (t, e) { return this._toscript(t, e, ++i.__id) }; t._toscript = function (r, s, n) { if (this.childs.length < 1 && !this.text) return s; var t = s.length; if (this.condition) { var e = !!this.condition.call(r); this.conditionType === 2 && (e = !e); if (!e) return s } this.text && s.push(this.text); this.childs.length > 0 && this.childs.forEach(function (t, e, i) { t._toscript(r, s, n) }); if (this.includefiles.length > 0 && this.useFuns.length > 0) { var i; for (var a = 0, o = this.includefiles.length; a < o; a++) { if (this.includefiles[a].curUseID == n) { continue } i = this.includefiles[a].file.getFunsScript(this.useFuns); if (i.length > 0) { this.includefiles[a].curUseID = n; s[0] = i + s[0] } } } return s }; i.__id = 1; return i }(); i = function () { function t(t) { this.script = null; this.codes = {}; this.funs = {}; this.curUseID = -1; this.funnames = ""; this.script = t; var e = 0, i = 0, r = 0; while (true) { e = t.indexOf("#begin", e); if (e < 0) break; r = e + 5; while (true) { r = t.indexOf("#end", r); if (r < 0) break; if (t.charAt(r + 4) === "i") r += 5; else break } if (r < 0) { throw "add include err,no #end:" + t; return } i = t.indexOf("\n", e); var s = y.splitToWords(t.substr(e, i - e), null); if (s[1] == "code") { this.codes[s[2]] = t.substr(i + 1, r - i - 1) } else if (s[1] == "function") { i = t.indexOf("function", e); i += "function".length; this.funs[s[3]] = t.substr(i + 1, r - i - 1); this.funnames += s[3] + ";" } e = r + 1 } } v(t, ""); var e = t.prototype; e.getWith = function (t) { var e = t ? this.codes[t] : this.script; if (!e) { throw "get with error:" + t } return e }; e.getFunsScript = function (t) { var e = ""; for (var i in this.funs) { if (t.indexOf(i + ";") >= 0) { e += this.funs[i] } } return e }; return t }() }; return y }(); var Bt = function () { function a() { } v(a, "laya.webgl.WebGL"); a._uint8ArraySlice = function () { var t = this; var e = t.length; var i = new Uint8Array(t.length); for (var r = 0; r < e; r++)i[r] = t[r]; return i }; a._float32ArraySlice = function () { var t = this; var e = t.length; var i = new Float32Array(t.length); for (var r = 0; r < e; r++)i[r] = t[r]; return i }; a._uint16ArraySlice = function (t) { var e = arguments; var i = this; var r = 0; var s; var n = 0; if (e.length === 0) { r = i.length; s = new Uint16Array(r); for (n = 0; n < r; n++)s[n] = i[n] } else if (e.length === 2) { var a = e[0]; var o = e[1]; if (o > a) { r = o - a; s = new Uint16Array(r); for (n = a; n < o; n++)s[n - a] = i[n] } else { s = new Uint16Array(0) } } return s }; a.expandContext = function () { var t = l.prototype; var e = CanvasRenderingContext2D.prototype; e.fillTrangles = t.fillTrangles; ce.__int__(null); e.setIBVB = function (t, e, i, r, s, n, a, o, h, l) { h === void 0 && (h = 0); l === void 0 && (l = 0); if (i === null) { this._ib = this._ib || pe.QuadrangleIB; i = this._ib; Rt.expandIBQuadrangle(i, r._byteLength / (4 * 16) + 8) } this._setIBVB(t, e, i, r, s, n, a, o, h, l) }; e.fillTrangles = function (t, e, i, r, s) { this._curMat = this._curMat || M.create(); this._vb = this._vb || ve.create(); if (!this._ib) { this._ib = pe.create(); Rt.fillIBQuadrangle(this._ib, a / 4) } var n = this._vb; var a = r.length >> 4; Rt.fillTranglesVB(n, e, i, r, s || this._curMat, 0, 0); Rt.expandIBQuadrangle(this._ib, n._byteLength / (4 * 16) + 8); var o = new zt(1, 0); o.textureHost = t; var h = new de("attribute vec2 position; attribute vec2 texcoord; uniform vec2 size; uniform mat4 mmat; varying vec2 v_texcoord; void main() { vec4 p=vec4(position.xy,0.0,1.0);vec4 pos=mmat*p; gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0); v_texcoord = texcoord; }", "precision mediump float; varying vec2 v_texcoord; uniform sampler2D texture; void main() {vec4 color= texture2D(texture, v_texcoord); color.a*=1.0; gl_FragColor= color;}"); n._vertType = 3; this._setIBVB(e, i, this._ib, n, a * 6, s, h, o, 0, 0) } }; a.enable = function () { _.__init__(); if (R.isConchApp) { if (!R.isConchWebGL) { B.skinAniSprite = function () { var t = new ft; return t }; a.expandContext(); return false } } B.getWebGLContext = function t(e) { var i; var r = ["webgl", "experimental-webgl", "webkit-3d", "moz-webgl"]; for (var s = 0; s < r.length; s++) { try { i = e.getContext(r[s], { stencil: T.isStencil, alpha: T.isAlpha, antialias: T.isAntialias, premultipliedAlpha: T.premultipliedAlpha, preserveDrawingBuffer: T.preserveDrawingBuffer }) } catch (t) { } if (i) return i } return null }; a.mainContext = B.getWebGLContext(R._mainCanvas); if (a.mainContext == null) return false; if (R.isWebGL) return true; x.create = function (t, e) { return new me(t, e) }; b.create = function (t, e, i, r, s, n, a) { return new le(t, e, i, r, s, n, a) }; R.WebGL = a; R.isWebGL = true; Mt.__init__(); B.createRenderSprite = function (t, e) { return new Ut(t, e) }; B.createWebGLContext2D = function (t) { return new Ot(t) }; B.changeWebGLSize = function (t, e) { laya.webgl.WebGL.onStageResize(t, e) }; B.createGraphics = function () { return new Ft }; var t = B.createFilterAction; B.createFilterAction = t ? t : function (t) { return new Wt }; B.clear = function (t) { kt.worldScissorTest && laya.webgl.WebGL.mainContext.disable(3089); var e = R.context.ctx; var i = e._submits._length == 0 || T.preserveDrawingBuffer ? p.create(t)._color : F._wgColor; if (i) e.clearBG(i[0], i[1], i[2], i[3]); kt.clear() }; B.addToAtlas = function (t, e) { e === void 0 && (e = false); var i = t.bitmap; if (!R.optimizeTextureMemory(t.url, t)) { i.enableMerageInAtlas = false; return } if (w.__typeof(i, "laya.webgl.resource.IMergeAtlasBitmap") && i.allowMerageInAtlas) { i.on("recovered", t, t.addTextureToAtlas) } }; B.isAtlas = function (t) { return t instanceof laya.webgl.atlas.AtlasWebGLCanvas }; Q._enable(); B.beginFlush = function () { var t = Q.instance; var e = t.getAtlaserCount(); for (var i = 0; i < e; i++) { var r = t.getAtlaserByIndex(i).texture; r._flashCacheImageNeedFlush && B.flashFlushImage(r) } }; B.drawToCanvas = function (t, e, i, r, s, n) { if (i <= 0 || r <= 0) { console.log("[error] canvasWidth and canvasHeight should greater than zero") } i |= 0; r |= 0; s |= 0; n |= 0; var a = Qt.create(i, r, 6408, 5121, 0, false); a.start(); a.clear(0, 0, 0, 0); R.context.clear(); L.renders[e]._fun(t, R.context, s, kt.height - r + n); R.context.flush(); a.end(); var o = a.getData(0, 0, i, r); a.recycle(); if (o.byteLength != i * r * 4) { console.log("drawToCanvas error: w:" + i + ",h:" + r + ",datalen:" + o.byteLength); return } var h = new ae; h._canvas = _.createElement("canvas"); h.size(i, r); var l = h._canvas.getContext("2d"); _.canvas.size(i, r); var u = _.context; var c = u.createImageData(i, r); c.data.set(new Uint8ClampedArray(o.buffer)); h._imgData = c; u.putImageData(c, 0, 0); l.save(); l.translate(0, r); l.scale(1, -1); l.drawImage(_.canvas.source, 0, 0); l.restore(); return h }; B.createFilterAction = function (t) { var e; switch (t) { case 32: e = new Wt; break }return e }; B.addTextureToAtlas = function (t) { t._uvID++; Q._atlasRestore++; t.bitmap.enableMerageInAtlas && Q.instance.addToAtlas(t) }; B.getTexturePixels = function (t, e, i, r, s) { R.context.ctx.clear(); var n = new N; n.graphics.drawTexture(t, -e, -i); var a = Qt.create(r, s); a.start(); a.clear(0, 0, 0, 0); n.render(R.context, 0, 0); R.context.ctx.flush(); a.end(); var o = a.getData(0, 0, r, s); var h = []; var l = 0; for (var u = s - 1; u >= 0; u--) { for (var c = 0; c < r; c++) { l = (u * r + c) * 4; h.push(o[l]); h.push(o[l + 1]); h.push(o[l + 2]); h.push(o[l + 3]) } } return h }; B.skinAniSprite = function () { var t = new ft; return t }; g.create = function (t, e) { var i = new ae; i._imgData = e; i.flipY = false; return i }; C._filterStart = function (t, e, i, r, s) { var n = t.getValue("bounds"); var a = Qt.create(n.width, n.height); a.start(); a.clear(0, 0, 0, 0); t.addValue("src", a); t.addValue("ScissorTest", kt.worldScissorTest); if (kt.worldScissorTest) { var o = new E; o.copyFrom(i.ctx._clipRect); t.addValue("clipRect", o); kt.worldScissorTest = false; laya.webgl.WebGL.mainContext.disable(3089) } }; C._filterEnd = function (t, e, i, r, s) { var n = t.getValue("bounds"); var a = t.getValue("src"); a.end(); var o = Qt.create(n.width, n.height); o.start(); o.clear(0, 0, 0, 0); t.addValue("out", o); e._set$P("_filterCache", o); e._set$P("_isHaveGlowFilter", t.getValue("_isHaveGlowFilter")) }; C._EndTarget = function (t, e) { var i = t.getValue("src"); i.recycle(); var r = t.getValue("out"); r.end(); var s = t.getValue("ScissorTest"); if (s) { kt.worldScissorTest = true; laya.webgl.WebGL.mainContext.enable(3089); e.ctx.save(); var n = t.getValue("clipRect"); e.ctx.clipRect(n.x, n.y, n.width, n.height) } }; C._useSrc = function (t) { var e = t.getValue("out"); e.end(); e = t.getValue("src"); e.start(); e.clear(0, 0, 0, 0) }; C._endSrc = function (t) { var e = t.getValue("src"); e.end() }; C._useOut = function (t) { var e = t.getValue("src"); e.end(); e = t.getValue("out"); e.start(); e.clear(0, 0, 0, 0) }; C._endOut = function (t) { var e = t.getValue("out"); e.end() }; C._recycleScope = function (t) { t.recycle() }; C._filter = function (t, e, i, r) { var s = this._next; if (s) { var n = t.filters, a = n.length; if (a == 1 && n[0].type == 32) { e.ctx.save(); e.ctx.setFilters([n[0]]); s._fun.call(s, t, e, i, r); e.ctx.restore(); return } var o; var h; var l = bt.create(); var u = I.TEMP; var c = e.ctx._getTransformMatrix(); var f = M.create(); c.copyTo(f); var _ = 0; var d = 0; var p = false; var v = t._$P._filterCache ? t._$P._filterCache : null; if (!v || t._repaint) { p = t._isHaveGlowFilter(); l.addValue("_isHaveGlowFilter", p); if (p) { _ = 50; d = 25 } h = new E; h.copyFrom(t.getSelfBounds()); h.x += t.x; h.y += t.y; h.x -= t.pivotX + 4; h.y -= t.pivotY + 4; var m = h.x; var g = h.y; h.width += _ + 8; h.height += _ + 8; u.x = h.x * f.a + h.y * f.c; u.y = h.y * f.d + h.x * f.b; h.x = u.x; h.y = u.y; u.x = h.width * f.a + h.height * f.c; u.y = h.height * f.d + h.width * f.b; h.width = u.x; h.height = u.y; if (h.width <= 0 || h.height <= 0) { return } v && v.recycle(); l.addValue("bounds", h); var y = xt.create([l, t, e, 0, 0], C._filterStart); e.addRenderObject(y); e.ctx._renderKey = 0; e.ctx._shader2D.glTexture = null; var x = t.x - m + d; var b = t.y - g + d; s._fun.call(s, t, e, x, b); y = xt.create([l, t, e, 0, 0], C._filterEnd); e.addRenderObject(y); for (var w = 0; w < a; w++) { if (w != 0) { y = xt.create([l], C._useSrc); e.addRenderObject(y); o = zt.create(1, 0); M.TEMP.identity(); e.ctx.drawTarget(l, 0, 0, h.width, h.height, M.TEMP, "out", o, null, tt.TOINT.overlay); y = xt.create([l], C._useOut); e.addRenderObject(y) } var T = n[w]; T.action.apply3d(l, t, e, 0, 0) } y = xt.create([l, e], C._EndTarget); e.addRenderObject(y) } else { p = t._$P._isHaveGlowFilter ? t._$P._isHaveGlowFilter : false; if (p) { _ = 50; d = 25 } h = t.getBounds(); if (h.width <= 0 || h.height <= 0) { return } h.width += _; h.height += _; u.x = h.x * f.a + h.y * f.c; u.y = h.y * f.d + h.x * f.b; h.x = u.x; h.y = u.y; u.x = h.width * f.a + h.height * f.c; u.y = h.height * f.d + h.width * f.b; h.width = u.x; h.height = u.y; l.addValue("out", v) } i = i - d - t.x; r = r - d - t.y; u.setTo(i, r); f.transformPoint(u); i = u.x + h.x; r = u.y + h.y; o = zt.create(1, 0); M.TEMP.identity(); e.ctx.drawTarget(l, i, r, h.width, h.height, M.TEMP, "out", o, null, tt.TOINT.overlay); y = xt.create([l], C._recycleScope); e.addRenderObject(y); f.destroy() } }; Float32Array.prototype.slice || (Float32Array.prototype.slice = a._float32ArraySlice); Uint16Array.prototype.slice || (Uint16Array.prototype.slice = a._uint16ArraySlice); Uint8Array.prototype.slice || (Uint8Array.prototype.slice = a._uint8ArraySlice); return true }; a.onStageResize = function (t, e) { if (a.mainContext == null) return; a.mainContext.viewport(0, 0, t, e); kt.width = t; kt.height = e }; a.onInvalidGLRes = function () { Q.instance.freeAll(); D.releaseContentManagers(true); a.doNodeRepaint(w.stage); a.mainContext.viewport(0, 0, kt.width, kt.height); w.stage.event("devicelost") }; a.doNodeRepaint = function (t) { t.numChildren == 0 && t.repaint(); for (var e = 0; e < t.numChildren; e++)a.doNodeRepaint(t.getChildAt(e)) }; a.init = function (t, e, i) { a.mainCanvas = t; g._createContext = function (t) { return new Ot(t) }; ae._createContext = function (t) { return new Ot(t) }; var r = laya.webgl.WebGL.mainContext; if (r.getShaderPrecisionFormat != null) { var s = r.getShaderPrecisionFormat(35633, 36338); var n = r.getShaderPrecisionFormat(35632, 36338); a.shaderHighPrecision = s.precision && n.precision ? true : false } else { a.shaderHighPrecision = false } a.compressAstc = r.getExtension("WEBGL_compressed_texture_astc"); a.compressAtc = r.getExtension("WEBGL_compressed_texture_atc"); a.compressEtc = r.getExtension("WEBGL_compressed_texture_etc"); a.compressEtc1 = r.getExtension("WEBGL_compressed_texture_etc1"); a.compressPvrtc = r.getExtension("WEBGL_compressed_texture_pvrtc"); a.compressS3tc = r.getExtension("WEBGL_compressed_texture_s3tc"); a.compressS3tc_srgb = r.getExtension("WEBGL_compressed_texture_s3tc_srgb"); r.deleteTexture1 = r.deleteTexture; r.deleteTexture = function (t) { if (t == Nt.curBindTexValue) { Nt.curBindTexValue = null } r.deleteTexture1(t) }; a.onStageResize(e, i); if (a.mainContext == null) throw new Error("webGL getContext err!"); W.__init__(); Q.__init__(); Ht.__init__(); yt.__init__(); Ot.__init__(); zt.__init__(); ut.__init__(); ce.__int__(r); tt._init_(r); if (R.isConchApp) { conch.setOnInvalidGLRes(a.onInvalidGLRes) } }; a.compressAstc = null; a.compressAtc = null; a.compressEtc = null; a.compressEtc1 = null; a.compressPvrtc = null; a.compressS3tc = null; a.compressS3tc_srgb = null; a.mainCanvas = null; a.mainContext = null; a.antialias = true; a.shaderHighPrecision = false; a._bg_null = [0, 0, 0, 0]; return a }(); var Nt = function () { function r() { } v(r, "laya.webgl.WebGLContext"); r.UseProgram = function (t) { if (r._useProgram === t) return false; Bt.mainContext.useProgram(t); r._useProgram = t; return true }; r.setDepthTest = function (t, e) { e !== r._depthTest && (r._depthTest = e, e ? t.enable(2929) : t.disable(2929)) }; r.setDepthMask = function (t, e) { e !== r._depthMask && (r._depthMask = e, t.depthMask(e)) }; r.setDepthFunc = function (t, e) { e !== r._depthFunc && (r._depthFunc = e, t.depthFunc(e)) }; r.setBlend = function (t, e) { e !== r._blend && (r._blend = e, e ? t.enable(3042) : t.disable(3042)) }; r.setBlendFunc = function (t, e, i) { (e !== r._sFactor || i !== r._dFactor) && (r._sFactor = e, r._dFactor = i, t.blendFunc(e, i)) }; r.setCullFace = function (t, e) { e !== r._cullFace && (r._cullFace = e, e ? t.enable(2884) : t.disable(2884)) }; r.setFrontFace = function (t, e) { e !== r._frontFace && (r._frontFace = e, t.frontFace(e)) }; r.bindTexture = function (t, e, i) { t.bindTexture(e, i); r.curBindTexTarget = e; r.curBindTexValue = i }; r.DEPTH_BUFFER_BIT = 256; r.STENCIL_BUFFER_BIT = 1024; r.COLOR_BUFFER_BIT = 16384; r.POINTS = 0; r.LINES = 1; r.LINE_LOOP = 2; r.LINE_STRIP = 3; r.TRIANGLES = 4; r.TRIANGLE_STRIP = 5; r.TRIANGLE_FAN = 6; r.ZERO = 0; r.ONE = 1; r.SRC_COLOR = 768; r.ONE_MINUS_SRC_COLOR = 769; r.SRC_ALPHA = 770; r.ONE_MINUS_SRC_ALPHA = 771; r.DST_ALPHA = 772; r.ONE_MINUS_DST_ALPHA = 773; r.DST_COLOR = 774; r.ONE_MINUS_DST_COLOR = 775; r.SRC_ALPHA_SATURATE = 776; r.FUNC_ADD = 32774; r.BLEND_EQUATION = 32777; r.BLEND_EQUATION_RGB = 32777; r.BLEND_EQUATION_ALPHA = 34877; r.FUNC_SUBTRACT = 32778; r.FUNC_REVERSE_SUBTRACT = 32779; r.BLEND_DST_RGB = 32968; r.BLEND_SRC_RGB = 32969; r.BLEND_DST_ALPHA = 32970; r.BLEND_SRC_ALPHA = 32971; r.CONSTANT_COLOR = 32769; r.ONE_MINUS_CONSTANT_COLOR = 32770; r.CONSTANT_ALPHA = 32771; r.ONE_MINUS_CONSTANT_ALPHA = 32772; r.BLEND_COLOR = 32773; r.ARRAY_BUFFER = 34962; r.ELEMENT_ARRAY_BUFFER = 34963; r.ARRAY_BUFFER_BINDING = 34964; r.ELEMENT_ARRAY_BUFFER_BINDING = 34965; r.STREAM_DRAW = 35040; r.STATIC_DRAW = 35044; r.DYNAMIC_DRAW = 35048; r.BUFFER_SIZE = 34660; r.BUFFER_USAGE = 34661; r.CURRENT_VERTEX_ATTRIB = 34342; r.FRONT = 1028; r.BACK = 1029; r.CULL_FACE = 2884; r.FRONT_AND_BACK = 1032; r.BLEND = 3042; r.DITHER = 3024; r.STENCIL_TEST = 2960; r.DEPTH_TEST = 2929; r.SCISSOR_TEST = 3089; r.POLYGON_OFFSET_FILL = 32823; r.SAMPLE_ALPHA_TO_COVERAGE = 32926; r.SAMPLE_COVERAGE = 32928; r.NO_ERROR = 0; r.INVALID_ENUM = 1280; r.INVALID_VALUE = 1281; r.INVALID_OPERATION = 1282; r.OUT_OF_MEMORY = 1285; r.CW = 2304; r.CCW = 2305; r.LINE_WIDTH = 2849; r.ALIASED_POINT_SIZE_RANGE = 33901; r.ALIASED_LINE_WIDTH_RANGE = 33902; r.CULL_FACE_MODE = 2885; r.FRONT_FACE = 2886; r.DEPTH_RANGE = 2928; r.DEPTH_WRITEMASK = 2930; r.DEPTH_CLEAR_VALUE = 2931; r.DEPTH_FUNC = 2932; r.STENCIL_CLEAR_VALUE = 2961; r.STENCIL_FUNC = 2962; r.STENCIL_FAIL = 2964; r.STENCIL_PASS_DEPTH_FAIL = 2965; r.STENCIL_PASS_DEPTH_PASS = 2966; r.STENCIL_REF = 2967; r.STENCIL_VALUE_MASK = 2963; r.STENCIL_WRITEMASK = 2968; r.STENCIL_BACK_FUNC = 34816; r.STENCIL_BACK_FAIL = 34817; r.STENCIL_BACK_PASS_DEPTH_FAIL = 34818; r.STENCIL_BACK_PASS_DEPTH_PASS = 34819; r.STENCIL_BACK_REF = 36003; r.STENCIL_BACK_VALUE_MASK = 36004; r.STENCIL_BACK_WRITEMASK = 36005; r.VIEWPORT = 2978; r.SCISSOR_BOX = 3088; r.COLOR_CLEAR_VALUE = 3106; r.COLOR_WRITEMASK = 3107; r.UNPACK_ALIGNMENT = 3317; r.PACK_ALIGNMENT = 3333; r.MAX_TEXTURE_SIZE = 3379; r.MAX_VIEWPORT_DIMS = 3386; r.SUBPIXEL_BITS = 3408; r.RED_BITS = 3410; r.GREEN_BITS = 3411; r.BLUE_BITS = 3412; r.ALPHA_BITS = 3413; r.DEPTH_BITS = 3414; r.STENCIL_BITS = 3415; r.POLYGON_OFFSET_UNITS = 10752; r.POLYGON_OFFSET_FACTOR = 32824; r.TEXTURE_BINDING_2D = 32873; r.SAMPLE_BUFFERS = 32936; r.SAMPLES = 32937; r.SAMPLE_COVERAGE_VALUE = 32938; r.SAMPLE_COVERAGE_INVERT = 32939; r.NUM_COMPRESSED_TEXTURE_FORMATS = 34466; r.COMPRESSED_TEXTURE_FORMATS = 34467; r.DONT_CARE = 4352; r.FASTEST = 4353; r.NICEST = 4354; r.GENERATE_MIPMAP_HINT = 33170; r.BYTE = 5120; r.UNSIGNED_BYTE = 5121; r.SHORT = 5122; r.UNSIGNED_SHORT = 5123; r.INT = 5124; r.UNSIGNED_INT = 5125; r.FLOAT = 5126; r.DEPTH_COMPONENT = 6402; r.ALPHA = 6406; r.RGB = 6407; r.RGBA = 6408; r.LUMINANCE = 6409; r.LUMINANCE_ALPHA = 6410; r.UNSIGNED_SHORT_4_4_4_4 = 32819; r.UNSIGNED_SHORT_5_5_5_1 = 32820; r.UNSIGNED_SHORT_5_6_5 = 33635; r.FRAGMENT_SHADER = 35632; r.VERTEX_SHADER = 35633; r.MAX_VERTEX_ATTRIBS = 34921; r.MAX_VERTEX_UNIFORM_VECTORS = 36347; r.MAX_VARYING_VECTORS = 36348; r.MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661; r.MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660; r.MAX_TEXTURE_IMAGE_UNITS = 34930; r.MAX_FRAGMENT_UNIFORM_VECTORS = 36349; r.SHADER_TYPE = 35663; r.DELETE_STATUS = 35712; r.LINK_STATUS = 35714; r.VALIDATE_STATUS = 35715; r.ATTACHED_SHADERS = 35717; r.ACTIVE_UNIFORMS = 35718; r.ACTIVE_ATTRIBUTES = 35721; r.SHADING_LANGUAGE_VERSION = 35724; r.CURRENT_PROGRAM = 35725; r.NEVER = 512; r.LESS = 513; r.EQUAL = 514; r.LEQUAL = 515; r.GREATER = 516; r.NOTEQUAL = 517; r.GEQUAL = 518; r.ALWAYS = 519; r.KEEP = 7680; r.REPLACE = 7681; r.INCR = 7682; r.DECR = 7683; r.INVERT = 5386; r.INCR_WRAP = 34055; r.DECR_WRAP = 34056; r.VENDOR = 7936; r.RENDERER = 7937; r.VERSION = 7938; r.NEAREST = 9728; r.LINEAR = 9729; r.NEAREST_MIPMAP_NEAREST = 9984; r.LINEAR_MIPMAP_NEAREST = 9985; r.NEAREST_MIPMAP_LINEAR = 9986; r.LINEAR_MIPMAP_LINEAR = 9987; r.TEXTURE_MAG_FILTER = 10240; r.TEXTURE_MIN_FILTER = 10241; r.TEXTURE_WRAP_S = 10242; r.TEXTURE_WRAP_T = 10243; r.TEXTURE_2D = 3553; r.TEXTURE = 5890; r.TEXTURE_CUBE_MAP = 34067; r.TEXTURE_BINDING_CUBE_MAP = 34068; r.TEXTURE_CUBE_MAP_POSITIVE_X = 34069; r.TEXTURE_CUBE_MAP_NEGATIVE_X = 34070; r.TEXTURE_CUBE_MAP_POSITIVE_Y = 34071; r.TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072; r.TEXTURE_CUBE_MAP_POSITIVE_Z = 34073; r.TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074; r.MAX_CUBE_MAP_TEXTURE_SIZE = 34076; r.TEXTURE0 = 33984; r.TEXTURE1 = 33985; r.TEXTURE2 = 33986; r.TEXTURE3 = 33987; r.TEXTURE4 = 33988; r.TEXTURE5 = 33989; r.TEXTURE6 = 33990; r.TEXTURE7 = 33991; r.TEXTURE8 = 33992; r.TEXTURE9 = 33993; r.TEXTURE10 = 33994; r.TEXTURE11 = 33995; r.TEXTURE12 = 33996; r.TEXTURE13 = 33997; r.TEXTURE14 = 33998; r.TEXTURE15 = 33999; r.TEXTURE16 = 34e3; r.TEXTURE17 = 34001; r.TEXTURE18 = 34002; r.TEXTURE19 = 34003; r.TEXTURE20 = 34004; r.TEXTURE21 = 34005; r.TEXTURE22 = 34006; r.TEXTURE23 = 34007; r.TEXTURE24 = 34008; r.TEXTURE25 = 34009; r.TEXTURE26 = 34010; r.TEXTURE27 = 34011; r.TEXTURE28 = 34012; r.TEXTURE29 = 34013; r.TEXTURE30 = 34014; r.TEXTURE31 = 34015; r.ACTIVE_TEXTURE = 34016; r.REPEAT = 10497; r.CLAMP_TO_EDGE = 33071; r.MIRRORED_REPEAT = 33648; r.FLOAT_VEC2 = 35664; r.FLOAT_VEC3 = 35665; r.FLOAT_VEC4 = 35666; r.INT_VEC2 = 35667; r.INT_VEC3 = 35668; r.INT_VEC4 = 35669; r.BOOL = 35670; r.BOOL_VEC2 = 35671; r.BOOL_VEC3 = 35672; r.BOOL_VEC4 = 35673; r.FLOAT_MAT2 = 35674; r.FLOAT_MAT3 = 35675; r.FLOAT_MAT4 = 35676; r.SAMPLER_2D = 35678; r.SAMPLER_CUBE = 35680; r.VERTEX_ATTRIB_ARRAY_ENABLED = 34338; r.VERTEX_ATTRIB_ARRAY_SIZE = 34339; r.VERTEX_ATTRIB_ARRAY_STRIDE = 34340; r.VERTEX_ATTRIB_ARRAY_TYPE = 34341; r.VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922; r.VERTEX_ATTRIB_ARRAY_POINTER = 34373; r.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975; r.COMPILE_STATUS = 35713; r.LOW_FLOAT = 36336; r.MEDIUM_FLOAT = 36337; r.HIGH_FLOAT = 36338; r.LOW_INT = 36339; r.MEDIUM_INT = 36340; r.HIGH_INT = 36341; r.FRAMEBUFFER = 36160; r.RENDERBUFFER = 36161; r.RGBA4 = 32854; r.RGB5_A1 = 32855; r.RGB565 = 36194; r.DEPTH_COMPONENT16 = 33189; r.STENCIL_INDEX = 6401; r.STENCIL_INDEX8 = 36168; r.DEPTH_STENCIL = 34041; r.RENDERBUFFER_WIDTH = 36162; r.RENDERBUFFER_HEIGHT = 36163; r.RENDERBUFFER_INTERNAL_FORMAT = 36164; r.RENDERBUFFER_RED_SIZE = 36176; r.RENDERBUFFER_GREEN_SIZE = 36177; r.RENDERBUFFER_BLUE_SIZE = 36178; r.RENDERBUFFER_ALPHA_SIZE = 36179; r.RENDERBUFFER_DEPTH_SIZE = 36180; r.RENDERBUFFER_STENCIL_SIZE = 36181; r.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048; r.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049; r.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050; r.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051; r.COLOR_ATTACHMENT0 = 36064; r.DEPTH_ATTACHMENT = 36096; r.STENCIL_ATTACHMENT = 36128; r.DEPTH_STENCIL_ATTACHMENT = 33306; r.NONE = 0; r.FRAMEBUFFER_COMPLETE = 36053; r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054; r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055; r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057; r.FRAMEBUFFER_UNSUPPORTED = 36061; r.FRAMEBUFFER_BINDING = 36006; r.RENDERBUFFER_BINDING = 36007; r.MAX_RENDERBUFFER_SIZE = 34024; r.INVALID_FRAMEBUFFER_OPERATION = 1286; r.UNPACK_FLIP_Y_WEBGL = 37440; r.UNPACK_PREMULTIPLY_ALPHA_WEBGL = 37441; r.CONTEXT_LOST_WEBGL = 37442; r.UNPACK_COLORSPACE_CONVERSION_WEBGL = 37443; r.BROWSER_DEFAULT_WEBGL = 37444; r._useProgram = null; r._depthTest = true; r._depthMask = true; r._blend = false; r._cullFace = false; r.curBindTexTarget = null; r.curBindTexValue = null; a(r, ["_depthFunc", function () { return this._depthFunc = 513 }, "_sFactor", function () { return this._sFactor = 1 }, "_dFactor", function () { return this._dFactor = 0 }, "_frontFace", function () { return this._frontFace = 2305 }]); return r }(); var Ft = function (t) { function e() { e.__super.call(this) } v(e, "laya.webgl.display.GraphicsGL", t); var i = e.prototype; i.setShader = function (t) { this._saveToCmd(R.context._setShader, [t]) }; i.setIBVB = function (t, e, i, r, s, n) { this._saveToCmd(R.context._setIBVB, [t, e, i, r, s, n]) }; i.drawParticle = function (t, e, i) { var r = B.createParticleTemplate2D(i); r.x = t; r.y = e; this._saveToCmd(R.context._drawParticle, [r]) }; return e }(m); var Ot = function (t) { var i; function Y(t) { this._x = 0; this._y = 0; this._id = ++Y._COUNT; this._path = null; this._drawCount = 1; this._maxNumEle = 0; this._clear = false; this._isMain = false; this._atlasResourceChange = 0; this._submits = null; this._curSubmit = null; this._ib = null; this._vb = null; this._nBlendType = 0; this._saveMark = null; this._shader2D = null; this.meshlist = []; this.mId = -1; this.mHaveKey = false; this.mHaveLineKey = false; this.mX = 0; this.mY = 0; Y.__super.call(this); this._width = 99999999; this._height = 99999999; this._clipRect = Y.MAXCLIPRECT; this.mOutPoint; this._canvas = t; Y._contextcount++; if (R.isFlash) { this._ib = pe.create(35044); Rt.fillIBQuadrangle(this._ib, 16) } else this._ib = pe.QuadrangleIB; this.clear() } v(Y, "laya.webgl.canvas.WebGLContext2D", t); var e = Y.prototype; e.setIsMainContext = function () { this._isMain = true }; e.clearBG = function (t, e, i, r) { var s = Bt.mainContext; s.clearColor(t, e, i, r); s.clear(16384) }; e._getSubmits = function () { return this._submits }; e._releaseMem = function () { if (!this._submits) return; this._curMat.destroy(); this._curMat = null; this._shader2D.destroy(); this._shader2D = null; for (var t = 0, e = this._submits._length; t < e; t++)this._submits[t].releaseRender(); this._submits.length = 0; this._submits._length = 0; this._submits = null; this._curSubmit = null; this._path && this._path.recover(); this._path = null; this._other && (this._other.font = null); this._save = null; if (this._vb) { this._vb.releaseResource(); this._vb.destroy(); this._vb.destory(); this._vb = null } }; e.destroy = function () { --Y._contextcount; this.sprite = null; this._releaseMem(); this._targets && this._targets.destroy(); this._targets = null; this._canvas = null; this._ib && this._ib != pe.QuadrangleIB && this._ib.releaseResource() }; e.clear = function () { if (!this._submits) { this._other = i.DEFAULT; this._curMat = M.create(); this._vb = ve.create(-1); this._submits = []; this._save = [at.Create(this)]; this._save.length = 10; this._shader2D = new ut; this._triangleMesh = qt.getAMesh() } this._vb.clear(); this._targets && (this._targets.repaint = true); this._other = i.DEFAULT; this._clear = true; this._repaint = false; this._drawCount = 1; this._renderKey = 0; this._other.lineWidth = this._shader2D.ALPHA = 1; this._nBlendType = 0; this._clipRect = Y.MAXCLIPRECT; this._curSubmit = yt.RENDERBASE; this._shader2D.glTexture = null; this._shader2D.fillStyle = this._shader2D.strokeStyle = et.DEFAULT; for (var t = 0, e = this._submits._length; t < e; t++)this._submits[t].releaseRender(); this._submits._length = 0; this._curMat.identity(); this._other.clear(); this._saveMark = this._save[0]; this._save._length = 1 }; e.size = function (t, e) { if (this._width != t || this._height != e) { if (t == 0 || e == 0) { if (this._vb._byteLength != 0) { this._width = t; this._height = e; this._vb.clear(); this._vb.upload() } for (var i = 0, r = this._submits._length; i < r; i++)this._submits[i].releaseRender(); this._submits.length = 0; this._submits._length = 0; this._curSubmit = null; this._path && this._path.recover(); this._path = null; this.sprite = null; this._targets && this._targets.destroy(); this._targets = null } else { this._width = t; this._height = e; this._targets && this._targets.size(t, e); this._canvas.memorySize -= this._canvas.memorySize } } if (t === 0 && e === 0) this._releaseMem() }; e._getTransformMatrix = function () { return this._curMat }; e.translate = function (t, e) { if (t !== 0 || e !== 0) { ht.save(this); if (this._curMat.bTransform) { ot.save(this); this._curMat.transformPointN(I.TEMP.setTo(t, e)); t = I.TEMP.x; e = I.TEMP.y } this._x += t; this._y += e } }; e.save = function () { this._save[this._save._length++] = at.Create(this) }; e.restore = function () { var t = this._save._length; if (t < 1) return; for (var e = t - 1; e >= 0; e--) { var i = this._save[e]; i.restore(this); if (i.isSaveMark()) { this._save._length = e; return } } }; e._fillText = function (t, e, i, r, s, n, a, o, h, l) { l === void 0 && (l = 0); var u = this._shader2D; var c = this._curSubmit.shaderValue; var f = s ? It.create(s) : this._other.font; if (Q.enabled) { if (u.ALPHA !== c.ALPHA) u.glTexture = null; Mt.drawText(this, t, e, this._curMat, f, h || this._other.textAlign, n, a, o, i, r, l) } else { var _ = this._shader2D.defines.getValue(); var d = n ? p.create(n)._color : u.colorAdd; if (u.ALPHA !== c.ALPHA || d !== u.colorAdd || c.colorAdd !== u.colorAdd) { u.glTexture = null; u.colorAdd = d } Mt.drawText(this, t, e, this._curMat, f, h || this._other.textAlign, n, a, o, i, r, l) } }; e.fillWords = function (t, e, i, r, s, n) { this._fillText(null, t, e, i, r, s, null, -1, null, n) }; e.fillBorderWords = function (t, e, i, r, s, n, a) { this._fillBorderText(null, t, e, i, r, s, n, a, null) }; e.fillText = function (t, e, i, r, s, n) { this._fillText(t, null, e, i, r, s, null, -1, n) }; e.strokeText = function (t, e, i, r, s, n, a) { this._fillText(t, null, e, i, r, null, s, n || 1, a) }; e.fillBorderText = function (t, e, i, r, s, n, a, o) { this._fillBorderText(t, null, e, i, r, s, n, a, o) }; e._fillBorderText = function (t, e, i, r, s, n, a, o, h) { if (!Q.enabled) { this._fillText(t, e, i, r, s, null, a, o || 1, h); this._fillText(t, e, i, r, s, n, null, -1, h); return } var l = this._shader2D; var u = this._curSubmit.shaderValue; if (l.ALPHA !== u.ALPHA) l.glTexture = null; var c = s ? (Y._fontTemp.setFont(s), Y._fontTemp) : this._other.font; Mt.drawText(this, t, e, this._curMat, c, h || this._other.textAlign, n, a, o || 1, i, r, 0) }; e.fillRect = function (t, e, i, r, s) { var n = this._vb; if (Rt.fillRectImgVb(n, this._clipRect, t, e, i, r, H.DEF_UV, this._curMat, this._x, this._y, 0, 0)) { this._renderKey = 0; var a = this._shader2D.fillStyle; s && (this._shader2D.fillStyle = et.create(s)); var o = this._shader2D; var h = this._curSubmit.shaderValue; if (o.fillStyle !== h.fillStyle || o.ALPHA !== h.ALPHA) { o.glTexture = null; var l = this._curSubmit = yt.createSubmit(this, this._ib, n, (n._byteLength - 16 * 4) / 32 * 3, zt.create(2, 0)); l.shaderValue.color = o.fillStyle._color._color; l.shaderValue.ALPHA = o.ALPHA; this._submits[this._submits._length++] = l } this._curSubmit._numEle += 6; this._shader2D.fillStyle = a } }; e.fillTexture = function (t, e, i, r, s, n, a, o) { if (!(t.loaded && t.bitmap && t.source)) { if (this.sprite) { w.timer.callLater(this, this._repaintSprite) } return } var h = this._vb; var l = t.bitmap.width, u = t.bitmap.height, c = t.uv; var f = a.x % t.width, _ = a.y % t.height; if (l != o.w || u != o.h) { if (!o.w && !o.h) { o.oy = o.ox = 0; switch (n) { case "repeat": o.width = r; o.height = s; break; case "repeat-x": o.width = r; if (_ < 0) { if (t.height + _ > s) { o.height = s } else { o.height = t.height + _ } } else { o.oy = _; if (t.height + _ > s) { o.height = s - _ } else { o.height = t.height } } break; case "repeat-y": if (f < 0) { if (t.width + f > r) { o.width = r } else { o.width = t.width + f } } else { o.ox = f; if (t.width + f > r) { o.width = r - f } else { o.width = t.width } } o.height = s; break; case "no-repeat": if (f < 0) { if (t.width + f > r) { o.width = r } else { o.width = t.width + f } } else { o.ox = f; if (t.width + f > r) { o.width = r - f } else { o.width = t.width } } if (_ < 0) { if (t.height + _ > s) { o.height = s } else { o.height = t.height + _ } } else { o.oy = _; if (t.height + _ > s) { o.height = s - _ } else { o.height = t.height } } break; default: o.width = r; o.height = s; break } } o.w = l; o.h = u; o.uv = [0, 0, o.width / l, 0, o.width / l, o.height / u, 0, o.height / u] } e += o.ox; i += o.oy; f -= o.ox; _ -= o.oy; if (Rt.fillRectImgVb(h, this._clipRect, e, i, o.width, o.height, o.uv, this._curMat, this._x, this._y, 0, 0)) { this._renderKey = 0; var d = $t.create(this, this._ib, h, (h._byteLength - 16 * 4) / 32 * 3, zt.create(256, 0)); this._submits[this._submits._length++] = d; var p = d.shaderValue; p.textureHost = t; var v = c[0] * l; var m = c[1] * u; var g = (c[2] - c[0]) * l; var y = (c[5] - c[3]) * u; var x = -f / l; var b = -_ / u; p.u_TexRange[0] = v / l; p.u_TexRange[1] = g / l; p.u_TexRange[2] = m / u; p.u_TexRange[3] = y / u; p.u_offset[0] = x; p.u_offset[1] = b; if (Q.enabled && !this._isMain) d.addTexture(t, (h._byteLength >> 2) - 16); this._curSubmit = d; d._renderType = 10017; d._numEle += 6 } }; e.setShader = function (t) { rt.save(this, 1048576, this._shader2D, true); this._shader2D.shader = t }; e.setFilters = function (t) { rt.save(this, 2097152, this._shader2D, true); this._shader2D.filters = t; this._curSubmit = yt.RENDERBASE; this._renderKey = 0; this._drawCount++ }; e.drawTexture = function (t, e, i, r, s, n, a) { this._drawTextureM(t, e, i, r, s, n, a, null, 1) }; e.addTextureVb = function (t, e, i) { var r = this._curSubmit._vb || this._vb; var s = r._byteLength >> 2; r.byteLength = s + 16 << 2; var n = r.getFloat32Array(); for (var a = 0, o = 0; a < 16; a += 4) { n[s++] = t[a] + e; n[s++] = t[a + 1] + i; n[s++] = t[a + 2]; n[s++] = t[a + 3] } this._curSubmit._numEle += 6; this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle); r._upload = true }; e.willDrawTexture = function (t, e) { if (!(t.loaded && t.bitmap && t.source)) { if (this.sprite) { w.timer.callLater(this, this._repaintSprite) } return 0 } var i = t.bitmap; var r = i.id + this._shader2D.ALPHA * e + 10016; if (r == this._renderKey) return r; var s = this._shader2D; var n = s.ALPHA; var a = this._curSubmit.shaderValue; s.ALPHA *= e; this._renderKey = r; this._drawCount++; s.glTexture = i; var o = this._vb; var h = null; var l = o._byteLength / 32 * 3; h = $t.create(this, this._ib, o, l, zt.create(1, 0)); this._submits[this._submits._length++] = h; h.shaderValue.textureHost = t; h._renderType = 10016; h._preIsSameTextureShader = this._curSubmit._renderType === 10016 && s.ALPHA === a.ALPHA; this._curSubmit = h; s.ALPHA = n; return r }; e.drawTextures = function (t, e, i, r) { if (!(t.loaded && t.bitmap && t.source)) { this.sprite && w.timer.callLater(this, this._repaintSprite); return } var s = this._clipRect; this._clipRect = Y.MAXCLIPRECT; if (!this._drawTextureM(t, e[0], e[1], t.width, t.height, i, r, null, 1)) { alert("drawTextures err"); return } this._clipRect = s; O.drawCall++; if (e.length < 4) return; var n = this._curSubmit._vb || this._vb; var a = this._curMat.a, o = this._curMat.d; for (var h = 2, l = e.length; h < l; h += 2) { Rt.copyPreImgVb(n, (e[h] - e[h - 2]) * a, (e[h + 1] - e[h - 1]) * o); this._curSubmit._numEle += 6 } this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle) }; e._drawTextureM = function (t, e, i, r, s, n, a, o, h) { if (!(t.loaded && t.source)) { if (this.sprite) { w.timer.callLater(this, this._repaintSprite) } return false } var l = this._curSubmit._vb || this._vb; var u = t.bitmap; e += n; i += a; this._drawCount++; var c = u.id + this._shader2D.ALPHA * h + 10016; if (c != this._renderKey) { this._renderKey = c; var f = this._curSubmit.shaderValue; var _ = this._shader2D; var d = _.ALPHA; _.ALPHA *= h; _.glTexture = u; var p = this._vb; var v = null; var m = p._byteLength / 32 * 3; v = $t.create(this, this._ib, p, m, zt.create(1, 0)); this._submits[this._submits._length++] = v; v.shaderValue.textureHost = t; v._renderType = 10016; v._preIsSameTextureShader = this._curSubmit._renderType === 10016 && _.ALPHA === f.ALPHA; this._curSubmit = v; l = this._curSubmit._vb || this._vb; _.ALPHA = d } if (Rt.fillRectImgVb(l, this._clipRect, e, i, r || t.width, s || t.height, t.uv, o || this._curMat, this._x, this._y, 0, 0)) { if (Q.enabled && !this._isMain) this._curSubmit.addTexture(t, (l._byteLength >> 2) - 16); this._curSubmit._numEle += 6; this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle); return true } return false }; e._repaintSprite = function () { if (this.sprite) this.sprite.repaint() }; e._drawText = function (t, e, i, r, s, n, a, o, h, l) { var u = t.bitmap; this._drawCount++; var c = u.id + this._shader2D.ALPHA + 10016; if (c != this._renderKey) { this._renderKey = c; var f = this._curSubmit.shaderValue; var _ = this._shader2D; _.glTexture = u; var d = this._vb; var p = null; var v = NaN; var m = d._byteLength / 32 * 3; if (Q.enabled) { p = $t.create(this, this._ib, d, m, zt.create(1, 0)) } else { p = $t.create(this, this._ib, d, m, _e.create()) } p._preIsSameTextureShader = this._curSubmit._renderType === 10016 && _.ALPHA === f.ALPHA; this._submits[this._submits._length++] = p; p.shaderValue.textureHost = t; p._renderType = 10016; this._curSubmit = p } t.active(); var g = this._curSubmit._vb || this._vb; if (Rt.fillRectImgVb(g, this._clipRect, e + a, i + o, r || t.width, s || t.height, t.uv, n || this._curMat, this._x, this._y, h, l, true)) { if (Q.enabled && !this._isMain) { this._curSubmit.addTexture(t, (g._byteLength >> 2) - 16) } this._curSubmit._numEle += 6; this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle) } }; e.drawTextureWithTransform = function (t, e, i, r, s, n, a, o, h) { if (!n) { this._drawTextureM(t, e, i, r, s, a, o, null, h); return } var l = this._curMat; var u = this._x; var c = this._y; (a !== 0 || o !== 0) && (this._x = a * l.a + o * l.c, this._y = o * l.d + a * l.b); if (n && l.bTransform) { M.mul(n, l, Y._tmpMatrix); n = Y._tmpMatrix; n._checkTransform() } else { this._x += l.tx; this._y += l.ty } this._drawTextureM(t, e, i, r, s, 0, 0, n, h); this._x = u; this._y = c }; e.fillQuadrangle = function (t, e, i, r, s) { var n = this._curSubmit; var a = this._vb; var o = this._shader2D; var h = n.shaderValue; this._renderKey = 0; if (t.bitmap) { var l = t.bitmap; if (o.glTexture != l || o.ALPHA !== h.ALPHA) { o.glTexture = l; n = this._curSubmit = yt.createSubmit(this, this._ib, a, a._byteLength / 32 * 3, zt.create(1, 0)); n.shaderValue.glTexture = l; this._submits[this._submits._length++] = n } Rt.fillQuadrangleImgVb(a, e, i, r, t.uv, s || this._curMat, this._x, this._y) } else { if (!n.shaderValue.fillStyle || !n.shaderValue.fillStyle.equal(t) || o.ALPHA !== h.ALPHA) { o.glTexture = null; n = this._curSubmit = yt.createSubmit(this, this._ib, a, a._byteLength / 32 * 3, zt.create(2, 0)); n.shaderValue.defines.add(2); n.shaderValue.fillStyle = et.create(t); this._submits[this._submits._length++] = n } Rt.fillQuadrangleImgVb(a, e, i, r, H.DEF_UV, s || this._curMat, this._x, this._y) } n._numEle += 6 }; e.drawTexture2 = function (t, e, i, r, s, n, a, o) { if (n == 0) return; var h = this._curMat; this._x = t * h.a + e * h.c; this._y = e * h.d + t * h.b; if (s) { if (h.bTransform || s.bTransform) { M.mul(s, h, Y._tmpMatrix); s = Y._tmpMatrix } else { this._x += s.tx + h.tx; this._y += s.ty + h.ty; s = M.EMPTY } } if (n === 1 && !a) this._drawTextureM(o[0], o[1] - i, o[2] - r, o[3], o[4], 0, 0, s, 1); else { var l = this._shader2D.ALPHA; var u = this._nBlendType; this._shader2D.ALPHA = n; a && (this._nBlendType = tt.TOINT(a)); this._drawTextureM(o[0], o[1] - i, o[2] - r, o[3], o[4], 0, 0, s, 1); this._shader2D.ALPHA = l; this._nBlendType = u } this._x = this._y = 0 }; e.drawCanvas = function (t, e, i, r, s) { var n = t.context; this._renderKey = 0; if (n._targets) { this._submits[this._submits._length++] = Kt.create(n, 0, null); this._curSubmit = yt.RENDERBASE; n._targets.drawTo(this, e, i, r, s) } else { var a = this._submits[this._submits._length++] = Kt.create(n, this._shader2D.ALPHA, this._shader2D.filters); var o = r / t.width; var h = s / t.height; var l = a._matrix; this._curMat.copyTo(l); o != 1 && h != 1 && l.scale(o, h); var u = l.tx, c = l.ty; l.tx = l.ty = 0; l.transformPoint(I.TEMP.setTo(e, i)); l.translate(I.TEMP.x + u, I.TEMP.y + c); this._curSubmit = yt.RENDERBASE } if (T.showCanvasMark) { this.save(); this.lineWidth = 4; this.strokeStyle = n._targets ? "yellow" : "green"; this.strokeRect(e - 1, i - 1, r + 2, s + 2, 1); this.strokeRect(e, i, r, s, 1); this.restore() } }; e.drawTarget = function (t, e, i, r, s, n, a, o, h, l) { l === void 0 && (l = -1); var u = this._vb; if (Rt.fillRectImgVb(u, this._clipRect, e, i, r, s, h || H.DEF_UV, n || this._curMat, this._x, this._y, 0, 0)) { this._renderKey = 0; var c = this._shader2D; c.glTexture = null; var f = this._curSubmit.shaderValue; var _ = this._curSubmit = St.create(this, this._ib, u, (u._byteLength - 16 * 4) / 32 * 3, o, a); if (l == -1) { _.blendType = this._nBlendType } else { _.blendType = l } _.scope = t; this._submits[this._submits._length++] = _; this._curSubmit._numEle += 6 } }; e.mixRGBandAlpha = function (t) { return this._mixRGBandAlpha(t, this._shader2D.ALPHA) }; e._mixRGBandAlpha = function (t, e) { var i = (t & 4278190080) >>> 24; if (i != 0) { i *= e } else { i = e * 255 } return t & 16777215 | i << 24 }; e.drawTriangles = function (t, e, i, r, s, n, a, o, h, l) { if (!(t.loaded && t.source)) { if (this.sprite) { w.timer.callLater(this, this._repaintSprite) } return false } this._drawCount++; var u = t.bitmap; var c = this._mixRGBandAlpha(4294967295, o); var f = r.length / 2; var _ = n.length; this._renderKey = -1; var d = this._curSubmit = $t.create(this, this._triangleMesh.getIBR(), this._triangleMesh.getVBR(), this._triangleMesh.indexNum, zt.create(1, 0)); d.shaderValue.textureHost = t; d._renderType = 10016; this._submits[this._submits._length++] = d; if (a) { Y._tmpMatrix.a = a.a; Y._tmpMatrix.b = a.b; Y._tmpMatrix.c = a.c; Y._tmpMatrix.d = a.d; Y._tmpMatrix.tx = a.tx + e; Y._tmpMatrix.ty = a.ty + i; M.mul(Y._tmpMatrix, this._curMat, Y._tmpMatrix) } else { Y._tmpMatrix.a = this._curMat.a; Y._tmpMatrix.b = this._curMat.b; Y._tmpMatrix.c = this._curMat.c; Y._tmpMatrix.d = this._curMat.d; Y._tmpMatrix.tx = this._curMat.tx + e; Y._tmpMatrix.ty = this._curMat.ty + i } this._triangleMesh.addData(r, s, n, Y._tmpMatrix, c, this); this._curSubmit._numEle += _; this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle); return true }; e.transform = function (t, e, i, r, s, n) { ot.save(this); M.mul(M.TEMP.setTo(t, e, i, r, s, n), this._curMat, this._curMat); this._curMat._checkTransform() }; e.setTransformByMatrix = function (t) { t.copyTo(this._curMat) }; e.transformByMatrix = function (t) { ot.save(this); M.mul(t, this._curMat, this._curMat); this._curMat._checkTransform() }; e.rotate = function (t) { ot.save(this); this._curMat.rotateEx(t) }; e.scale = function (t, e) { ot.save(this); this._curMat.scaleEx(t, e) }; e.clipRect = function (t, e, i, r) { if (this._curMat.b != 0 || this._curMat.c != 0) { this._renderKey = 0; var s = Ct.create(4); this.addRenderObject(s); var n = this._vb; var a = n._byteLength >> 2; if (Rt.fillRectImgVb(n, null, t, e, i, r, H.DEF_UV, this._curMat, this._x, this._y, 0, 0)) { var o = this._shader2D; o.glTexture = null; var h = this._curSubmit = yt.createSubmit(this, this._ib, n, (n._byteLength - 16 * 4) / 32 * 3, zt.create(2, 0)); h.shaderValue.ALPHA = 1; this._submits[this._submits._length++] = h; this._curSubmit._numEle += 6 } else { alert("clipRect calc stencil rect error") } var l = Ct.create(5); this.addRenderObject(l); var u = n.getFloat32Array(); var c = Math.min(Math.min(Math.min(u[a + 0], u[a + 4]), u[a + 8]), u[a + 12]); var f = Math.max(Math.max(Math.max(u[a + 0], u[a + 4]), u[a + 8]), u[a + 12]); var _ = Math.min(Math.min(Math.min(u[a + 1], u[a + 5]), u[a + 9]), u[a + 13]); var d = Math.max(Math.max(Math.max(u[a + 1], u[a + 5]), u[a + 9]), u[a + 13]); nt.save(this, l, t, e, i, r, c, _, f - c, d - _); this._curSubmit = yt.RENDERBASE } else { i *= this._curMat.a; r *= this._curMat.d; var p = I.TEMP; this._curMat.transformPoint(p.setTo(t, e)); if (i < 0) { p.x = p.x + i; i = -i } if (r < 0) { p.y = p.y + r; r = -r } this._renderKey = 0; var v = this._curSubmit = Tt.create(this); this._submits[this._submits._length++] = v; v.submitIndex = this._submits._length; v.submitLength = 9999999; st.save(this, v); var m = this._clipRect; var g = m.x, y = m.y; var x = p.x + i, b = p.y + r; g < p.x && (m.x = p.x); y < p.y && (m.y = p.y); m.width = Math.min(x, g + m.width) - m.x; m.height = Math.min(b, y + m.height) - m.y; this._shader2D.glTexture = null; v.clipRect.copyFrom(m); this._curSubmit = yt.RENDERBASE } }; e.setIBVB = function (t, e, i, r, s, n, a, o, h, l, u) { h === void 0 && (h = 0); l === void 0 && (l = 0); u === void 0 && (u = 0); if (i === null) { if (!R.isFlash) { i = this._ib } else { var c = r; c._selfIB || (c._selfIB = pe.create(35044)); c._selfIB.clear(); i = c._selfIB } Rt.expandIBQuadrangle(i, r._byteLength / (4 * r.vertexStride * 4)) } if (!o || !a) throw Error("setIBVB must input:shader shaderValues"); var f = wt.create(this, r, i, s, a, o, h, l, u); n || (n = M.EMPTY); n.translate(t, e); M.mul(n, this._curMat, f._mat); n.translate(-t, -e); this._submits[this._submits._length++] = f; this._curSubmit = yt.RENDERBASE; this._renderKey = 0 }; e.addRenderObject = function (t) { this._submits[this._submits._length++] = t }; e.fillTrangles = function (t, e, i, r, s) { var n = this._curSubmit; var a = this._vb; var o = this._shader2D; var h = n.shaderValue; var l = r.length >> 4; var u = t.bitmap; this._renderKey = 0; if (o.glTexture != u || o.ALPHA !== h.ALPHA) { n = this._curSubmit = yt.createSubmit(this, this._ib, a, a._byteLength / 32 * 3, zt.create(1, 0)); n.shaderValue.textureHost = t; this._submits[this._submits._length++] = n } Rt.fillTranglesVB(a, e, i, r, s || this._curMat, this._x, this._y); n._numEle += l * 6 }; e.submitElement = function (t, e) { var i = this._submits; e < 0 && (e = i._length); while (t < e) { t += i[t].renderSubmit() } }; e.finish = function () { Bt.mainContext.finish() }; e.flush = function () { var t = Math.max(this._vb._byteLength / (4 * 16), this._maxNumEle / 6) + 8; if (t > this._ib.bufferLength / (6 * 2)) { Rt.expandIBQuadrangle(this._ib, t) } if (!this._isMain && Q.enabled && Q._atlasRestore > this._atlasResourceChange) { this._atlasResourceChange = Q._atlasRestore; var e = this._submits; for (var i = 0, r = e._length; i < r; i++) { var s = e[i]; if (s.getRenderType() === 10016) s.checkTexture() } } this.submitElement(0, this._submits._length); this._path && this._path.reset(); _t.instance && _t.getInstance().reset(); var n = 0; for (i = 0, n = this.meshlist.length; i < n; i++) { var a = this.meshlist[i]; a.canReuse ? a.releaseMesh() : a.destroy() } this.meshlist.length = 0; this._curSubmit = yt.RENDERBASE; this._renderKey = 0; this._triangleMesh = qt.getAMesh(); this.meshlist.push(this._triangleMesh); return this._submits._length }; e.setPathId = function (t) { this.mId = t; if (this.mId != -1) { this.mHaveKey = false; var e = j.getInstance(); if (e.shapeDic[this.mId]) { this.mHaveKey = true } this.mHaveLineKey = false; if (e.shapeLineDic[this.mId]) { this.mHaveLineKey = true } } }; e.movePath = function (t, e) { var i = t, r = e; t = this._curMat.a * i + this._curMat.c * r + this._curMat.tx; e = this._curMat.b * i + this._curMat.d * r + this._curMat.ty; this.mX += t; this.mY += e }; e.beginPath = function () { var t = this._getPath(); t.tempArray.length = 0; t.closePath = false; this.mX = 0; this.mY = 0 }; e.closePath = function () { this._path.closePath = true }; e.fill = function (t) { t === void 0 && (t = false); var e = this._getPath(); this.drawPoly(0, 0, e.tempArray, this.fillStyle._color.numColor, 0, 0, t) }; e.stroke = function () { var t = this._getPath(); if (this.lineWidth > 0) { if (this.mId == -1) { t.drawLine(0, 0, t.tempArray, this.lineWidth, this.strokeStyle._color.numColor) } else { if (this.mHaveLineKey) { var e = j.getInstance().shapeLineDic[this.mId]; e.rebuild(t.tempArray); t.setGeomtry(e) } else { j.getInstance().addLine(this.mId, t.drawLine(0, 0, t.tempArray, this.lineWidth, this.strokeStyle._color.numColor)) } } t.update(); var i = [this.mX, this.mY]; var r = yt.createShape(this, t.ib, t.vb, t.count, t.offset, zt.create(4, 0)); r.shaderValue.ALPHA = this._shader2D.ALPHA; r.shaderValue.u_pos = i; r.shaderValue.u_mmat2 = kt.TEMPMAT4_ARRAY; this._submits[this._submits._length++] = r; this._renderKey = -1 } }; e.line = function (t, e, i, r, s, n) { var a = this._curSubmit; var o = this._vb; if (Rt.fillLineVb(o, this._clipRect, t, e, i, r, s, n)) { this._renderKey = 0; var h = this._shader2D; var l = a.shaderValue; if (h.strokeStyle !== l.strokeStyle || h.ALPHA !== l.ALPHA) { h.glTexture = null; a = this._curSubmit = yt.createSubmit(this, this._ib, o, (o._byteLength - 16 * 4) / 32 * 3, zt.create(2, 0)); a.shaderValue.strokeStyle = h.strokeStyle; a.shaderValue.mainID = 2; a.shaderValue.ALPHA = h.ALPHA; this._submits[this._submits._length++] = a } a._numEle += 6 } }; e.moveTo = function (t, e, i) { i === void 0 && (i = true); var r = this._getPath(); if (i) { var s = t, n = e; t = this._curMat.a * s + this._curMat.c * n; e = this._curMat.b * s + this._curMat.d * n } r.addPoint(t, e) }; e.lineTo = function (t, e, i) { i === void 0 && (i = true); var r = this._getPath(); if (i) { var s = t, n = e; t = this._curMat.a * s + this._curMat.c * n; e = this._curMat.b * s + this._curMat.d * n } r.addPoint(t, e) }; e.drawCurves = function (t, e, i) { this.setPathId(-1); this.beginPath(); this.strokeStyle = i[3]; this.lineWidth = i[4]; var r = i[2]; t += i[0], e += i[1]; this.movePath(t, e); this.moveTo(r[0], r[1]); var s = 2, n = r.length; while (s < n) { this.quadraticCurveTo(r[s++], r[s++], r[s++], r[s++]) } this.stroke() }; e.arcTo = function (t, e, i, r, s) { if (this.mId != -1) { if (this.mHaveKey) { return } } var n = 0; var a = 0, o = 0; var h = this._getPath(); this._curMat.copyTo(Y._tmpMatrix); Y._tmpMatrix.tx = Y._tmpMatrix.ty = 0; Y._tempPoint.setTo(h.getEndPointX(), h.getEndPointY()); Y._tmpMatrix.invertTransformPoint(Y._tempPoint); var l = Y._tempPoint.x - t; var u = Y._tempPoint.y - e; var c = Math.sqrt(l * l + u * u); if (c <= 1e-6) { return } var f = l / c; var _ = u / c; var d = i - t; var p = r - e; var v = d * d + p * p; var m = Math.sqrt(v); if (m <= 1e-6) { return } var g = d / m; var y = p / m; var x = f + g; var b = _ + y; var w = Math.sqrt(x * x + b * b); if (w <= 1e-6) { return } var T = x / w; var C = b / w; var S = Math.acos(T * f + C * _); var A = Math.PI / 2 - S; c = s / Math.tan(A); var M = c * f + t; var I = c * _ + e; var E = Math.sqrt(c * c + s * s); var R = t + T * E; var P = e + C * E; var L = c * g + t; var k = c * y + e; var D = f * y - _ * g; var B = 0; var N = 0; var F = 0; if (D >= 0) { B = A * 2; var O = B / Y.SEGNUM; N = Math.sin(O); F = Math.cos(O) } else { B = -A * 2; O = B / Y.SEGNUM; N = Math.sin(O); F = Math.cos(O) } a = this._curMat.a * M + this._curMat.c * I; o = this._curMat.b * M + this._curMat.d * I; if (a != this._path.getEndPointX() || o != this._path.getEndPointY()) { h.addPoint(a, o) } var z = M - R; var U = I - P; var W = 0; var V = 0; for (n = 0; n < Y.SEGNUM; n++) { var H = z * F + U * N; var G = -z * N + U * F; a = H + R; o = G + P; t = this._curMat.a * a + this._curMat.c * o; e = this._curMat.b * a + this._curMat.d * o; a = t; o = e; if (a != this._path.getEndPointX() || o != this._path.getEndPointY()) { h.addPoint(a, o) } z = H; U = G } }; e.arc = function (t, e, i, r, s, n, a) { n === void 0 && (n = false); a === void 0 && (a = true); if (this.mId != -1) { var o = j.getInstance().shapeDic[this.mId]; if (o) { if (this.mHaveKey && !o.needUpdate(this._curMat)) return } t = 0; e = 0 } var h = 0, l = 0, u = 0, c = 0; var f = 0, _ = 0, d = 0, p = 0, v = 0, m = 0; var g = 0, y = 0, x = 0, b = 0; var w = 0, T = 0, C = 0; l = s - r; if (!n) { if (Math.abs(l) >= Math.PI * 2) { l = Math.PI * 2 } else { while (l < 0) { l += Math.PI * 2 } } } else { if (Math.abs(l) >= Math.PI * 2) { l = -Math.PI * 2 } else { while (l > 0) { l -= Math.PI * 2 } } } if (i < 101) { T = Math.max(10, l * i / 5) } else if (i < 201) { T = Math.max(10, l * i / 20) } else { T = Math.max(10, l * i / 40) } u = l / T / 2; c = Math.abs(4 / 3 * (1 - Math.cos(u)) / Math.sin(u)); if (n) c = -c; C = 0; var S = this._getPath(); var A = NaN, M = NaN; for (w = 0; w <= T; w++) { h = r + l * (w / T); f = Math.cos(h); _ = Math.sin(h); d = t + f * i; p = e + _ * i; if (a) { A = d, M = p; d = this._curMat.a * A + this._curMat.c * M; p = this._curMat.b * A + this._curMat.d * M } if (d != this._path.getEndPointX() || p != this._path.getEndPointY()) { S.addPoint(d, p) } } f = Math.cos(s); _ = Math.sin(s); d = t + f * i; p = e + _ * i; if (a) { A = d, M = p; d = this._curMat.a * A + this._curMat.c * M; p = this._curMat.b * A + this._curMat.d * M } if (d != this._path.getEndPointX() || p != this._path.getEndPointY()) { S.addPoint(d, p) } }; e.quadraticCurveTo = function (t, e, i, r) { var s = f.I; var n = []; var a = i, o = r; i = this._curMat.a * a + this._curMat.c * o; r = this._curMat.b * a + this._curMat.d * o; a = t, o = e; t = this._curMat.a * a + this._curMat.c * o; e = this._curMat.b * a + this._curMat.d * o; var h = s.getBezierPoints([this._path.getEndPointX(), this._path.getEndPointY(), t, e, i, r], 30, 2); for (var l = 0, u = h.length / 2; l < u; l++) { this.lineTo(h[l * 2], h[l * 2 + 1], false) } this.lineTo(i, r, false) }; e.rect = function (t, e, i, r) { this._other = this._other.make(); this._other.path || (this._other.path = new it); this._other.path.rect(t, e, i, r) }; e.strokeRect = function (t, e, i, r, s) { var n = s * .5; this.line(t - n, e, t + i + n, e, s, this._curMat); this.line(t + i, e, t + i, e + r, s, this._curMat); this.line(t, e, t, e + r, s, this._curMat); this.line(t - n, e + r, t + i + n, e + r, s, this._curMat) }; e.clip = function () { }; e.drawPoly = function (t, e, i, r, s, n, a) { a === void 0 && (a = false); this._renderKey = 0; this._shader2D.glTexture = null; var o = this._getPath(); if (this.mId == -1) { o.polygon(t, e, i, r, s ? s : 1, n) } else { if (this.mHaveKey) { var h = j.getInstance().shapeDic[this.mId]; h.setMatrix(this._curMat); h.rebuild(o.tempArray); o.setGeomtry(h) } else { var l = o.polygon(t, e, i, r, s ? s : 1, n); j.getInstance().addShape(this.mId, l); l.setMatrix(this._curMat) } } o.update(); var u = [this.mX, this.mY]; var c; c = yt.createShape(this, o.ib, o.vb, o.count, o.offset, zt.create(4, 0)); c.shaderValue.ALPHA = this._shader2D.ALPHA; c.shaderValue.u_pos = u; c.shaderValue.u_mmat2 = kt.EMPTYMAT4_ARRAY; this._submits[this._submits._length++] = c; if (s > 0) { if (this.mHaveLineKey) { var f = j.getInstance().shapeLineDic[this.mId]; f.rebuild(o.tempArray); o.setGeomtry(f) } else { j.getInstance().addShape(this.mId, o.drawLine(t, e, i, s, n)) } o.update(); c = yt.createShape(this, o.ib, o.vb, o.count, o.offset, zt.create(4, 0)); c.shaderValue.ALPHA = this._shader2D.ALPHA; c.shaderValue.u_mmat2 = kt.EMPTYMAT4_ARRAY; this._submits[this._submits._length++] = c } }; e.drawParticle = function (t, e, i) { i.x = t; i.y = e; this._submits[this._submits._length++] = i }; e._getPath = function () { return this._path || (this._path = new it) }; h(0, e, "globalCompositeOperation", function () { return tt.NAMES[this._nBlendType] }, function (t) { var e = tt.TOINT[t]; e == null || this._nBlendType === e || (rt.save(this, 65536, this, true), this._curSubmit = yt.RENDERBASE, this._renderKey = 0, this._nBlendType = e) }); h(0, e, "strokeStyle", function () { return this._shader2D.strokeStyle }, function (t) { this._shader2D.strokeStyle.equal(t) || (rt.save(this, 512, this._shader2D, false), this._shader2D.strokeStyle = et.create(t)) }); h(0, e, "globalAlpha", function () { return this._shader2D.ALPHA }, function (t) { t = Math.floor(t * 1e3) / 1e3; if (t != this._shader2D.ALPHA) { rt.save(this, 1, this._shader2D, true); this._shader2D.ALPHA = t } }); h(0, e, "asBitmap", null, function (t) { if (t) { this._targets || (this._targets = new lt); this._targets.repaint = true; if (!this._width || !this._height) throw Error("asBitmap no size!"); this._targets.setSP(this.sprite); this._targets.size(this._width, this._height) } else this._targets = null }); h(0, e, "fillStyle", function () { return this._shader2D.fillStyle }, function (t) { this._shader2D.fillStyle.equal(t) || (rt.save(this, 2, this._shader2D, false), this._shader2D.fillStyle = et.create(t)) }); h(0, e, "textAlign", function () { return this._other.textAlign }, function (t) { this._other.textAlign === t || (this._other = this._other.make(), rt.save(this, 32768, this._other, false), this._other.textAlign = t) }); h(0, e, "lineWidth", function () { return this._other.lineWidth }, function (t) { this._other.lineWidth === t || (this._other = this._other.make(), rt.save(this, 256, this._other, false), this._other.lineWidth = t) }); h(0, e, "textBaseline", function () { return this._other.textBaseline }, function (t) { this._other.textBaseline === t || (this._other = this._other.make(), rt.save(this, 16384, this._other, false), this._other.textBaseline = t) }); h(0, e, "font", null, function (t) { if (t == this._other.font.toString()) return; this._other = this._other.make(); rt.save(this, 8, this._other, false); this._other.font === It.EMPTY ? this._other.font = new It(t) : this._other.font.setFont(t) }); Y.__init__ = function () { i.DEFAULT = new i }; Y._tempPoint = new I; Y._SUBMITVBSIZE = 32e3; Y._MAXSIZE = 99999999; Y._RECTVBSIZE = 16; Y.MAXCLIPRECT = new E(0, 0, 99999999, 99999999); Y._COUNT = 0; Y._tmpMatrix = new M; Y.SEGNUM = 32; Y._contextcount = 0; a(Y, ["_fontTemp", function () { return this._fontTemp = new It }, "_drawStyleTemp", function () { return this._drawStyleTemp = new et(null) }]); Y.__init$ = function () { i = function () { function t() { this.lineWidth = 1; this.path = null; this.textAlign = null; this.textBaseline = null; this.font = It.EMPTY } v(t, ""); var e = t.prototype; e.clear = function () { this.lineWidth = 1; this.path && this.path.clear(); this.textAlign = this.textBaseline = null; this.font = It.EMPTY }; e.make = function () { return this === t.DEFAULT ? new t : this }; t.DEFAULT = null; return t }() }; return Y }(l); var zt = function (t) { function r(t, e) { this.size = [0, 0]; this.alpha = 1; this.ALPHA = 1; this.subID = 0; this._cacheID = 0; r.__super.call(this); this.defines = new Ht; this.position = r._POSITION; this.mainID = t; this.subID = e; this.textureHost = null; this.texture = null; this.fillStyle = null; this.color = null; this.strokeStyle = null; this.colorAdd = null; this.glTexture = null; this.u_mmat2 = null; this._cacheID = t | e; this._inClassCache = r._cache[this._cacheID]; if (t > 0 && !this._inClassCache) { this._inClassCache = r._cache[this._cacheID] = []; this._inClassCache._length = 0 } this.clear() } v(r, "laya.webgl.shader.d2.value.Value2D", t); var e = r.prototype; e.setValue = function (t) { }; e.refresh = function () { var t = this.size; t[0] = kt.width; t[1] = kt.height; this.alpha = this.ALPHA * kt.worldAlpha; this.mmat = kt.worldMatrix4; return this }; e._ShaderWithCompile = function () { return ue.withCompile2D(0, this.mainID, this.defines.toNameDic(), this.mainID | this.defines._value, de.create) }; e._withWorldShaderDefines = function () { var t = kt.worldShaderDefines; var e = ue.sharders[this.mainID | this.defines._value | t.getValue()]; if (!e) { var i = {}; var r; var s; r = this.defines.toNameDic(); for (s in r) i[s] = ""; r = t.toNameDic(); for (s in r) i[s] = ""; e = ue.withCompile2D(0, this.mainID, i, this.mainID | this.defines._value | t.getValue(), de.create) } var n = kt.worldFilters; if (!n) return e; var a = n.length, o; for (var h = 0; h < a; h++) { (o = n[h]) && o.action.setValue(this) } return e }; e.upload = function () { var t = kt; this.alpha = this.ALPHA * t.worldAlpha; if (kt.worldMatrix4 !== kt.TEMPMAT4_ARRAY) this.defines.add(128); Bt.shaderHighPrecision && this.defines.add(1024); var e = t.worldShaderDefines ? this._withWorldShaderDefines() : ue.sharders[this.mainID | this.defines._value] || this._ShaderWithCompile(); var i; this.size[0] = t.width, this.size[1] = t.height; this.mmat = t.worldMatrix4; if (Zt.activeShader !== e) { if (e._shaderValueWidth !== t.width || e._shaderValueHeight !== t.height) { e._shaderValueWidth = t.width; e._shaderValueHeight = t.height } else { i = e._params2dQuick2 || e._make2dQuick2() } e.upload(this, i) } else { if (e._shaderValueWidth !== t.width || e._shaderValueHeight !== t.height) { e._shaderValueWidth = t.width; e._shaderValueHeight = t.height } else { i = e._params2dQuick1 || e._make2dQuick1() } e.upload(this, i) } }; e.setFilters = function (t) { this.filters = t; if (!t) return; var e = t.length, i; for (var r = 0; r < e; r++) { i = t[r]; if (i) { this.defines.add(i.type); i.action.setValue(this) } } }; e.clear = function () { this.defines.setValue(this.subID) }; e.release = function () { this._inClassCache[this._inClassCache._length++] = this; this.fillStyle = null; this.strokeStyle = null; this.clear() }; r._initone = function (t, e) { r._typeClass[t] = e; r._cache[t] = []; r._cache[t]._length = 0 }; r.__init__ = function () { r._POSITION = [2, 5126, false, 4 * Et.BYTES_PE, 0]; r._TEXCOORD = [2, 5126, false, 4 * Et.BYTES_PE, 2 * Et.BYTES_PE]; r._initone(2, ee); r._initone(4, se); r._initone(256, ie); r._initone(512, te); r._initone(1, re); r._initone(1 | 64, _e); r._initone(1 | 8, re) }; r.create = function (t, e) { var i = r._cache[t | e]; if (i._length) return i[--i._length]; else return new r._typeClass[t | e](e) }; r._POSITION = null; r._TEXCOORD = null; r._cache = []; r._typeClass = []; r.TEMPMAT4_ARRAY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]; return r }(q); var Ut = function (t) { function m(t, e) { m.__super.call(this, t, e) } v(m, "laya.webgl.utils.RenderSprite3D", t); var e = m.prototype; e.onCreate = function (t) { switch (t) { case 8: this._fun = this._blend; return; case 4: this._fun = this._transform; return } }; e._mask = function (t, e, i, r) { var s = this._next; var n = t.mask; var a; var o; if (n) { e.ctx.save(); var h = e.ctx.globalCompositeOperation; var l = new E; l.copyFrom(n.getBounds()); l.width = Math.round(l.width); l.height = Math.round(l.height); l.x = Math.round(l.x); l.y = Math.round(l.y); if (l.width > 0 && l.height > 0) { var u = t._style._tf; var c = bt.create(); c.addValue("bounds", l); a = xt.create([c, e], laya.webgl.utils.RenderSprite3D.tmpTarget); e.addRenderObject(a); n.render(e, -l.x, -l.y); a = xt.create([c], laya.webgl.utils.RenderSprite3D.endTmpTarget); e.addRenderObject(a); e.ctx.save(); e.clipRect(i - u.translateX + l.x, r - u.translateY + l.y, l.width, l.height); s._fun.call(s, t, e, i, r); e.ctx.restore(); o = Ct.create(6); h = e.ctx.globalCompositeOperation; o.blendMode = "mask"; e.addRenderObject(o); M.TEMP.identity(); var f = zt.create(1, 0); var _ = H.INV_UV; var d = l.width; var p = l.height; var v = 32; if (l.width < v || l.height < v) { _ = m.tempUV; _[0] = 0; _[1] = 0; _[2] = l.width >= 32 ? 1 : l.width / v; _[3] = 0; _[4] = l.width >= 32 ? 1 : l.width / v; _[5] = l.height >= 32 ? 1 : l.height / v; _[6] = 0; _[7] = l.height >= 32 ? 1 : l.height / v; l.width = l.width >= 32 ? l.width : v; l.height = l.height >= 32 ? l.height : v; _[1] *= -1; _[3] *= -1; _[5] *= -1; _[7] *= -1; _[1] += 1; _[3] += 1; _[5] += 1; _[7] += 1 } e.ctx.drawTarget(c, i + l.x - u.translateX, r + l.y - u.translateY, d, p, M.TEMP, "tmpTarget", f, _, 6); a = xt.create([c], laya.webgl.utils.RenderSprite3D.recycleTarget); e.addRenderObject(a); o = Ct.create(6); o.blendMode = h; e.addRenderObject(o) } e.ctx.restore() } else { s._fun.call(s, t, e, i, r) } }; e._blend = function (t, e, i, r) { var s = t._style; var n = this._next; if (s.blendMode) { e.ctx.save(); e.ctx.globalCompositeOperation = s.blendMode; n._fun.call(n, t, e, i, r); e.ctx.restore() } else { n._fun.call(n, t, e, i, r) } }; e._transform = function (t, e, i, r) { var s = t.transform, n = this._next; if (s && n != L.NORENDER) { var a = e.ctx; var o = t._style; s.tx = i; s.ty = r; var h = a._getTransformMatrix(); var l = h.clone(); M.mul(s, h, h); h._checkTransform(); s.tx = s.ty = 0; n._fun.call(n, t, e, 0, 0); l.copyTo(h); l.destroy() } else { n._fun.call(n, t, e, i, r) } }; m.tmpTarget = function (t, e) { var i = t.getValue("bounds"); var r = Qt.create(i.width, i.height); r.start(); r.clear(0, 0, 0, 0); t.addValue("tmpTarget", r) }; m.endTmpTarget = function (t) { var e = t.getValue("tmpTarget"); e.end() }; m.recycleTarget = function (t) { var e = t.getValue("tmpTarget"); e.recycle(); t.recycle() }; a(m, ["tempUV", function () { return this.tempUV = new Array(8) }]); return m }(L); var Wt = function (t) { function e() { this.data = null; e.__super.call(this) } v(e, "laya.filters.webgl.ColorFilterActionGL", t); var i = e.prototype; w.imps(i, { "laya.filters.IFilterActionGL": true }); i.setValue = function (t) { t.colorMat = this.data._mat; t.colorAlpha = this.data._alpha }; i.apply3d = function (t, e, i, r, s) { var n = t.getValue("bounds"); var a = zt.create(1, 0); a.setFilters([this.data]); var o = M.TEMP; o.identity(); i.ctx.drawTarget(t, 0, 0, n.width, n.height, o, "src", a) }; return e }($); var Vt = function (t) { function n(t, e, i, r, s) { this._atlasCanvas = null; this._inAtlasTextureKey = null; this._inAtlasTextureBitmapValue = null; this._inAtlasTextureOriUVValue = null; this._InAtlasWebGLImagesKey = null; this._InAtlasWebGLImagesOffsetValue = null; n.__super.call(this, t, e, s); this._inAtlasTextureKey = []; this._inAtlasTextureBitmapValue = []; this._inAtlasTextureOriUVValue = []; this._InAtlasWebGLImagesKey = {}; this._InAtlasWebGLImagesOffsetValue = []; this._atlasCanvas = new ne; this._atlasCanvas._atlaser = this; this._atlasCanvas.width = i; this._atlasCanvas.height = r; this._atlasCanvas.activeResource(); this._atlasCanvas.lock = true } v(n, "laya.webgl.atlas.Atlaser", t); var e = n.prototype; e.computeUVinAtlasTexture = function (t, e, i, r) { var s = t; var n = Q.atlasTextureWidth; var a = Q.atlasTextureHeight; var o = i / n, h = r / a, l = (i + t.bitmap.width) / n, u = (r + t.bitmap.height) / a; var c = t.bitmap.width / n, f = t.bitmap.height / a; t.uv = [o + e[0] * c, h + e[1] * f, l - (1 - e[2]) * c, h + e[3] * f, l - (1 - e[4]) * c, u - (1 - e[5]) * f, o + e[6] * c, u - (1 - e[7]) * f] }; e.findBitmapIsExist = function (t) { if (t instanceof laya.webgl.resource.WebGLImage) { var e = t; var i = e.url; var r = this._InAtlasWebGLImagesKey[i ? i : e.id]; if (r) { return r.offsetInfoID } } return -1 }; e.addToAtlasTexture = function (t, e, i) { if (t instanceof laya.webgl.resource.WebGLImage) { var r = t; var s = r.url; this._InAtlasWebGLImagesKey[s ? s : r.id] = { bitmap: t, offsetInfoID: this._InAtlasWebGLImagesOffsetValue.length }; this._InAtlasWebGLImagesOffsetValue.push([e, i]) } this._atlasCanvas.texSubImage2D(e, i, t.atlasImgData || t.atlasSource); t.clearAtlasSource() }; e.addToAtlas = function (t, e, i) { t._atlasID = this._inAtlasTextureKey.length; var r = t.uv.slice(); var s = t.bitmap; this._inAtlasTextureKey.push(t); this._inAtlasTextureOriUVValue.push(r); this._inAtlasTextureBitmapValue.push(s); this.computeUVinAtlasTexture(t, r, e, i); t.bitmap = this._atlasCanvas }; e.clear = function () { for (var t = 0, e = this._inAtlasTextureKey.length; t < e; t++) { this._inAtlasTextureKey[t].bitmap = this._inAtlasTextureBitmapValue[t]; this._inAtlasTextureKey[t].uv = this._inAtlasTextureOriUVValue[t]; this._inAtlasTextureKey[t]._atlasID = -1; this._inAtlasTextureKey[t].bitmap.lock = false; this._inAtlasTextureKey[t].bitmap.releaseResource() } this._inAtlasTextureKey.length = 0; this._inAtlasTextureBitmapValue.length = 0; this._inAtlasTextureOriUVValue.length = 0; this._InAtlasWebGLImagesKey = null; this._InAtlasWebGLImagesOffsetValue.length = 0 }; e.dispose = function () { this.clear(); this._atlasCanvas.destroy() }; h(0, e, "InAtlasWebGLImagesOffsetValue", function () { return this._InAtlasWebGLImagesOffsetValue }); h(0, e, "texture", function () { return this._atlasCanvas }); h(0, e, "inAtlasWebGLImagesKey", function () { return this._InAtlasWebGLImagesKey }); return n }(Z); var Ht = function (t) { function i() { i.__super.call(this, i.__name2int, i.__int2name, i.__int2nameMap) } v(i, "laya.webgl.shader.d2.ShaderDefines2D", t); i.__init__ = function () { i.reg("TEXTURE2D", 1); i.reg("COLOR2D", 2); i.reg("PRIMITIVE", 4); i.reg("GLOW_FILTER", 8); i.reg("BLUR_FILTER", 16); i.reg("COLOR_FILTER", 32); i.reg("COLOR_ADD", 64); i.reg("WORLDMAT", 128); i.reg("FILLTEXTURE", 256); i.reg("FSHIGHPRECISION", 1024) }; i.reg = function (t, e) { ct._reg(t, e, i.__name2int, i.__int2name) }; i.toText = function (t, e, i) { return ct._toText(t, e, i) }; i.toInt = function (t) { return ct._toInt(t, i.__name2int) }; i.TEXTURE2D = 1; i.COLOR2D = 2; i.PRIMITIVE = 4; i.FILTERGLOW = 8; i.FILTERBLUR = 16; i.FILTERCOLOR = 32; i.COLORADD = 64; i.WORLDMAT = 128; i.FILLTEXTURE = 256; i.SKINMESH = 512; i.SHADERDEFINE_FSHIGHPRECISION = 1024; i.__name2int = {}; i.__int2name = []; i.__int2nameMap = []; return i }(ct); var Gt = function (t) { function o(t, e, i, r, s, n, a) { o.__super.call(this, t, e, i, r, 40, s, n, a) } v(o, "laya.webgl.shapes.Ellipse", t); return o }(dt); var Yt = function (t) { function n(t, e, i, r, s) { this._points = []; this.rebuild(i); n.__super.call(this, t, e, 0, 0, 0, s, r, s, 0) } v(n, "laya.webgl.shapes.Line", t); var e = n.prototype; e.rebuild = function (t) { var e = t.length; var i = this._points.length; if (e != i) { this.mUint16Array = new Uint16Array((e / 2 - 1) * 6); this.mFloat32Array = new Float32Array(e * 5) } this._points.length = 0; var r = NaN; var s = NaN; var n = -1; var a = -1; var o = t.length / 2; for (var h = 0; h < o; h++) { r = t[h * 2]; s = t[h * 2 + 1]; if (Math.abs(n - r) > .01 || Math.abs(a - s) > .01) { this._points.push(r, s) } n = r; a = s } }; e.getData = function (t, e, i) { var r = []; var s = []; this.borderWidth > 0 && this.createLine2(this._points, r, this.borderWidth, i, s, this._points.length / 2); this.mUint16Array.set(r, 0); this.mFloat32Array.set(s, 0); t.append(this.mUint16Array); e.append(this.mFloat32Array) }; return n }(dt); var Xt = function (t) { function c(t, e, i, r, s) { this._points = []; var n = NaN; var a = NaN; var o = -1; var h = -1; var l = i.length / 2 - 1; for (var u = 0; u < l; u++) { n = i[u * 2]; a = i[u * 2 + 1]; if (Math.abs(o - n) > .01 || Math.abs(h - a) > .01) { this._points.push(n, a) } o = n; h = a } n = i[l * 2]; a = i[l * 2 + 1]; o = this._points[0]; h = this._points[1]; if (Math.abs(o - n) > .01 || Math.abs(h - a) > .01) { this._points.push(n, a) } c.__super.call(this, t, e, 0, 0, this._points.length / 2, 0, r, s) } v(c, "laya.webgl.shapes.LoopLine", t); var e = c.prototype; e.getData = function (t, e, i) { if (this.borderWidth > 0) { var r = this.color; var s = (r >> 16 & 255) / 255, n = (r >> 8 & 255) / 255, a = (r & 255) / 255; var o = []; var h = -1, l = -1; var u = 0, c = 0; var f = []; var _ = Math.floor(this._points.length / 2); for (var d = 0; d < _; d++) { u = this._points[d * 2]; c = this._points[d * 2 + 1]; o.push(this.x + u, this.y + c, s, n, a) } this.createLoopLine(o, f, this.borderWidth, i + o.length / 5); t.append(new Uint16Array(f)); e.append(new Float32Array(o)) } }; e.createLoopLine = function (t, e, i, r, s, n) { var a = t.length / 5; var o = t.concat(); var h = s ? s : t; var l = this.borderColor; var u = (l >> 16 & 255) / 255, c = (l >> 8 & 255) / 255, f = (l & 255) / 255; var _ = [o[0], o[1]]; var d = [o[o.length - 5], o[o.length - 4]]; var p = d[0] + (_[0] - d[0]) * .5; var v = d[1] + (_[1] - d[1]) * .5; o.unshift(p, v, 0, 0, 0); o.push(p, v, 0, 0, 0); var m = o.length / 5; var g = r, y = i / 2; var x, b, w, T, C, S, A, M; var I, E, R, P, L, k; var D, B, N, F, O, z; var U, W, V; w = o[0]; T = o[1]; C = o[5]; S = o[6]; I = -(T - S); E = w - C; V = Math.sqrt(I * I + E * E); I = I / V * y; E = E / V * y; h.push(w - I, T - E, u, c, f, w + I, T + E, u, c, f); for (var H = 1; H < m - 1; H++) { w = o[(H - 1) * 5]; T = o[(H - 1) * 5 + 1]; C = o[H * 5]; S = o[H * 5 + 1]; A = o[(H + 1) * 5]; M = o[(H + 1) * 5 + 1]; I = -(T - S); E = w - C; V = Math.sqrt(I * I + E * E); I = I / V * y; E = E / V * y; R = -(S - M); P = C - A; V = Math.sqrt(R * R + P * P); R = R / V * y; P = P / V * y; D = -E + T - (-E + S); B = -I + C - (-I + w); N = (-I + w) * (-E + S) - (-I + C) * (-E + T); F = -P + M - (-P + S); O = -R + C - (-R + A); z = (-R + A) * (-P + S) - (-R + C) * (-P + M); U = D * O - F * B; if (Math.abs(U) < .1) { U += 10.1; h.push(C - I, S - E, u, c, f, C + I, S + E, u, c, f); continue } x = (B * z - O * N) / U; b = (F * N - D * z) / U; W = (x - C) * (x - C) + (b - S) + (b - S); h.push(x, b, u, c, f, C - (x - C), S - (b - S), u, c, f) } if (n) { e = n } var G = this.edges + 1; for (H = 1; H < G; H++) { e.push(g + (H - 1) * 2, g + (H - 1) * 2 + 1, g + H * 2 + 1, g + H * 2 + 1, g + H * 2, g + (H - 1) * 2) } e.push(g + (H - 1) * 2, g + (H - 1) * 2 + 1, g + 1, g + 1, g, g + (H - 1) * 2); return h }; return c }(dt); var jt = function (t) { function a(t, e, i, r, s, n) { this._points = null; this._start = -1; this._repaint = false; this.earcutTriangles = null; this._mat = M.create(); this._points = i.slice(0, i.length); a.__super.call(this, t, e, 0, 0, this._points.length / 2, r, s, n) } v(a, "laya.webgl.shapes.Polygon", t); var e = a.prototype; e.rebuild = function (t) { if (!this._repaint) { this._points.length = 0; this._points = this._points.concat(t) } }; e.setMatrix = function (t) { t.copyTo(this._mat) }; e.needUpdate = function (t) { this._repaint = this._mat.a == t.a && this._mat.b == t.b && this._mat.c == t.c && this._mat.d == t.d && this._mat.tx == t.tx && this._mat.ty == t.ty; return !this._repaint }; e.getData = function (t, e, i) { var r, s = 0; var n = this._points; var a = 0; if (this.mUint16Array && this.mFloat32Array && this._repaint) { if (this._start != i) { this._start = i; r = []; a = this.earcutTriangles.length; for (s = 0; s < a; s++) { r.push(this.earcutTriangles[s] + i) } this.mUint16Array = new Uint16Array(r) } } else { this._start = i; r = []; var o = []; var h = []; var l = this.color; var u = (l >> 16 & 255) / 255, c = (l >> 8 & 255) / 255, f = (l & 255) / 255; a = Math.floor(n.length / 2); for (s = 0; s < a; s++) { o.push(this.x + n[s * 2], this.y + n[s * 2 + 1], u, c, f); h.push(this.x + n[s * 2], this.y + n[s * 2 + 1]) } this.earcutTriangles = pt.earcut(h, null, 2); a = this.earcutTriangles.length; for (s = 0; s < a; s++) { r.push(this.earcutTriangles[s] + i) } this.mUint16Array = new Uint16Array(r); this.mFloat32Array = new Float32Array(o) } t.append(this.mUint16Array); e.append(this.mFloat32Array) }; return a }(dt); var Kt = function (t) { function n() { this._matrix = new M; this._matrix4 = Et.defaultMatrix4.concat(); n.__super.call(this, 1e4); this.shaderValue = new zt(0, 0) } v(n, "laya.webgl.submit.SubmitCanvas", t); var e = n.prototype; e.renderSubmit = function () { if (this._ctx_src._targets) { this._ctx_src._targets.flush(this._ctx_src); return 1 } var t = kt.worldAlpha; var e = kt.worldMatrix4; var i = kt.worldMatrix; var r = kt.worldFilters; var s = kt.worldShaderDefines; var n = this.shaderValue; var a = this._matrix; var o = this._matrix4; var h = M.TEMP; M.mul(a, i, h); o[0] = h.a; o[1] = h.b; o[4] = h.c; o[5] = h.d; o[12] = h.tx; o[13] = h.ty; kt.worldMatrix = h.clone(); kt.worldMatrix4 = o; kt.worldAlpha = kt.worldAlpha * n.alpha; if (n.filters && n.filters.length) { kt.worldFilters = n.filters; kt.worldShaderDefines = n.defines } this._ctx_src.flush(); kt.worldAlpha = t; kt.worldMatrix4 = e; kt.worldMatrix.destroy(); kt.worldMatrix = i; kt.worldFilters = r; kt.worldShaderDefines = s; return 1 }; e.releaseRender = function () { var t = n._cache; this._ctx_src = null; t[t._length++] = this }; e.getRenderType = function () { return 10003 }; n.create = function (t, e, i) { var r = !n._cache._length ? new n : n._cache[--n._cache._length]; r._ctx_src = t; var s = r.shaderValue; s.alpha = e; s.defines.setValue(0); i && i.length && s.setFilters(i); return r }; n._cache = (n._cache = [], n._cache._length = 0, n._cache); return n }(yt); var $t = function (t) { function l(t) { this._preIsSameTextureShader = false; this._isSameTexture = true; this._texs = new Array; this._texsID = new Array; this._vbPos = new Array; t === void 0 && (t = 1e4); l.__super.call(this, t) } v(l, "laya.webgl.submit.SubmitTexture", t); var e = l.prototype; e.releaseRender = function () { var t = l._cache; t[t._length++] = this; this.shaderValue.release(); this._preIsSameTextureShader = false; this._vb = null; this._texs.length = 0; this._vbPos.length = 0; this._isSameTexture = true }; e.addTexture = function (t, e) { this._texsID[this._texs.length] = t._uvID; this._texs.push(t); this._vbPos.push(e) }; e.checkTexture = function () { if (this._texs.length < 1) { this._isSameTexture = true; return } var t = this.shaderValue.textureHost; var e = t.bitmap; if (e === null) return; var i = this._vb.getFloat32Array(); for (var r = 0, s = this._texs.length; r < s; r++) { var n = this._texs[r]; n.active(); var a = n.uv; if (this._texsID[r] !== n._uvID) { this._texsID[r] = n._uvID; var o = this._vbPos[r]; i[o + 2] = a[0]; i[o + 3] = a[1]; i[o + 6] = a[2]; i[o + 7] = a[3]; i[o + 10] = a[4]; i[o + 11] = a[5]; i[o + 14] = a[6]; i[o + 15] = a[7]; this._vb.setNeedUpload() } if (n.bitmap !== e) { this._isSameTexture = false } } }; e.renderSubmit = function () { if (this._numEle === 0) { l._shaderSet = false; return 1 } var t = this.shaderValue.textureHost; if (t) { var e = t.source; if (!t.bitmap || !e) { l._shaderSet = false; return 1 } this.shaderValue.texture = e } this._vb.bind_upload(this._ib); var i = Bt.mainContext; if (tt.activeBlendFunction !== this._blendFn) { i.enable(3042); this._blendFn(i); tt.activeBlendFunction = this._blendFn } O.drawCall++; O.trianglesFaces += this._numEle / 3; if (this._preIsSameTextureShader && Zt.activeShader && l._shaderSet) Zt.activeShader.uploadTexture2D(this.shaderValue.texture); else this.shaderValue.upload(); l._shaderSet = true; if (this._texs.length > 1 && !this._isSameTexture) { var r = t.bitmap; var s = 0; var n = Zt.activeShader; for (var a = 0, o = this._texs.length; a < o; a++) { var h = this._texs[a]; if (h.bitmap !== r || a + 1 === o) { n.uploadTexture2D(h.source); i.drawElements(4, (a - s + 1) * 6, 5123, this._startIdx + s * 6 * Et.BYTES_PIDX); r = h.bitmap; s = a } } } else { i.drawElements(4, this._numEle, 5123, this._startIdx) } return 1 }; l.create = function (t, e, i, r, s) { var n = l._cache._length ? l._cache[--l._cache._length] : new l; if (i == null) { i = n._selfVb || (n._selfVb = ve.create(-1)); i.clear(); r = 0 } n._ib = e; n._vb = i; n._startIdx = r * Et.BYTES_PIDX; n._numEle = 0; var a = t._nBlendType; n._blendFn = t._targets ? tt.targetFns[a] : tt.fns[a]; n.shaderValue = s; n.shaderValue.setValue(t._shader2D); var o = t._shader2D.filters; o && n.shaderValue.setFilters(o); return n }; l._cache = (l._cache = [], l._cache._length = 0, l._cache); l._shaderSet = true; return l }(yt); var qt = function (t) { function y() { y.__super.call(this, laya.webgl.utils.MeshTexture.const_stride, 0, 0); this.canReuse = true; this.setAttributes(laya.webgl.utils.MeshTexture._fixattriInfo) } v(y, "laya.webgl.utils.MeshTexture", t); var e = y.prototype; e.addData = function (t, e, i, r, s, n) { var a = t.length / 2; var o = this._vb.needSize(a * y.const_stride); var h = o >> 2; var l = this._vb.getFloat32Array(); var u = 0; for (var c = 0; c < a; c++) { var f = t[u], _ = t[u + 1]; var d = f * r.a + _ * r.c + r.tx; var p = f * r.b + _ * r.d + r.ty; l[h++] = d; l[h++] = p; l[h++] = e[u]; l[h++] = e[u + 1]; u += 2 } this._vb.setNeedUpload(); var v = this.vertNum; if (v > 0) { var m = i.length; if (m > y.tmpIdx.length) y.tmpIdx = new Uint16Array(m); for (var g = 0; g < m; g++) { y.tmpIdx[g] = i[g] + v } this._ib.appendU16Array(y.tmpIdx, i.length) } else { this._ib.append(i) } this._ib.setNeedUpload(); this.vertNum += a; this.indexNum += i.length }; e.releaseMesh = function () { this._vb._byteLength = 0; this._ib._byteLength = 0; this.vertNum = 0; this.indexNum = 0; laya.webgl.utils.MeshTexture._POOL.push(this) }; e.destroy = function () { this._ib.destroy(); this._vb.destroy() }; y.getAMesh = function () { if (laya.webgl.utils.MeshTexture._POOL.length) { return laya.webgl.utils.MeshTexture._POOL.pop() } return new y }; y.const_stride = 16; y._POOL = []; a(y, ["_fixattriInfo", function () { return this._fixattriInfo = [5126, 2, 0, 5126, 2, 8] }, "tmpIdx", function () { return this.tmpIdx = new Uint16Array(4) }]); return y }(Lt); var Zt = function (t) { function e() { e.__super.call(this); this.lock = true } v(e, "laya.webgl.shader.BaseShader", t); e.activeShader = null; e.bindShader = null; return e }(k); var Qt = function (e) { function u(t, e, i, r, s, n, a, o, h) { this._type = 0; this._svWidth = NaN; this._svHeight = NaN; this._preRenderTarget = null; this._alreadyResolved = false; this._looked = false; this._surfaceFormat = 0; this._surfaceType = 0; this._depthStencilFormat = 0; this._mipMap = false; this._repeat = false; this._minFifter = 0; this._magFifter = 0; this._destroy = false; i === void 0 && (i = 6408); r === void 0 && (r = 5121); s === void 0 && (s = 34041); n === void 0 && (n = false); a === void 0 && (a = false); o === void 0 && (o = -1); h === void 0 && (h = -1); this._type = 1; this._w = t; this._h = e; this._surfaceFormat = i; this._surfaceType = r; this._depthStencilFormat = s; if (R.isConchWebGL && this._depthStencilFormat === 34041) { this._depthStencilFormat = 33189 } this._mipMap = n; this._repeat = a; this._minFifter = o; this._magFifter = h; this._createWebGLRenderTarget(); this.bitmap.lock = true; u.__super.call(this, this.bitmap, H.INV_UV) } v(u, "laya.webgl.resource.RenderTarget2D", e); var t = u.prototype; w.imps(t, { "laya.resource.IDispose": true }); t.getType = function () { return this._type }; t.getTexture = function () { return this }; t.size = function (t, e) { if (this._w == t && this._h == e) return; this._w = t; this._h = e; this.release(); if (this._w != 0 && this._h != 0) this._createWebGLRenderTarget() }; t.release = function () { this.destroy() }; t.recycle = function () { u.POOL.push(this) }; t.start = function () { var t = Bt.mainContext; this._preRenderTarget = kt.curRenderTarget; kt.curRenderTarget = this; t.bindFramebuffer(36160, this.bitmap.frameBuffer); this._alreadyResolved = false; if (this._type == 1) { t.viewport(0, 0, this._w, this._h); this._svWidth = kt.width; this._svHeight = kt.height; kt.width = this._w; kt.height = this._h; Zt.activeShader = null } return this }; t.clear = function (t, e, i, r) { t === void 0 && (t = 0); e === void 0 && (e = 0); i === void 0 && (i = 0); r === void 0 && (r = 1); var s = Bt.mainContext; s.clearColor(t, e, i, r); var n = 16384; switch (this._depthStencilFormat) { case 33189: n |= 256; break; case 36168: n |= 1024; break; case 34041: n |= 256; n |= 1024; break }s.clear(n) }; t.end = function () { var t = Bt.mainContext; t.bindFramebuffer(36160, this._preRenderTarget ? this._preRenderTarget.bitmap.frameBuffer : null); this._alreadyResolved = true; kt.curRenderTarget = this._preRenderTarget; if (this._type == 1) { t.viewport(0, 0, this._svWidth, this._svHeight); kt.width = this._svWidth; kt.height = this._svHeight; Zt.activeShader = null } else t.viewport(0, 0, w.stage.width, w.stage.height) }; t.getData = function (t, e, i, r) { var s = Bt.mainContext; s.bindFramebuffer(36160, this.bitmap.frameBuffer); var n = s.checkFramebufferStatus(36160) === 36053; if (!n) { s.bindFramebuffer(36160, null); return null } var a = new Uint8Array(this._w * this._h * 4); s.readPixels(t, e, i, r, this._surfaceFormat, this._surfaceType, a); s.bindFramebuffer(36160, null); return a }; t.destroy = function (t) { t === void 0 && (t = false); if (!this._destroy) { this._loaded = false; this.bitmap.offAll(); this.bitmap.disposeResource(); this.bitmap.dispose(); this.offAll(); this.bitmap = null; this._alreadyResolved = false; this._destroy = true; e.prototype.destroy.call(this) } }; t.dispose = function () { }; t._createWebGLRenderTarget = function () { this.bitmap = new he(this.width, this.height, this._surfaceFormat, this._surfaceType, this._depthStencilFormat, this._mipMap, this._repeat, this._minFifter, this._magFifter); this.bitmap.activeResource(); this._alreadyResolved = true; this._destroy = false; this._loaded = true; this.bitmap.on("recovered", this, function (t) { this.event("recovered") }) }; h(0, t, "surfaceFormat", function () { return this._surfaceFormat }); h(0, t, "magFifter", function () { return this._magFifter }); h(0, t, "surfaceType", function () { return this._surfaceType }); h(0, t, "mipMap", function () { return this._mipMap }); h(0, t, "depthStencilFormat", function () { return this._depthStencilFormat }); h(0, t, "minFifter", function () { return this._minFifter }); h(0, t, "source", function () { if (this._alreadyResolved) return w.superGet(H, this, "source"); return null }); u.create = function (t, e, i, r, s, n, a, o, h) { i === void 0 && (i = 6408); r === void 0 && (r = 5121); s === void 0 && (s = 34041); n === void 0 && (n = false); a === void 0 && (a = false); o === void 0 && (o = -1); h === void 0 && (h = -1); var l = u.POOL.pop(); l || (l = new u(t, e)); if (!l.bitmap || l._w != t || l._h != e || l._surfaceFormat != i || l._surfaceType != r || l._depthStencilFormat != s || l._mipMap != n || l._repeat != a || l._minFifter != o || l._magFifter != h) { l._w = t; l._h = e; l._surfaceFormat = i; l._surfaceType = r; l._depthStencilFormat = s; if (R.isConchWebGL && l._depthStencilFormat === 34041) { l._depthStencilFormat = 33189 } l._mipMap = n; l._repeat = a; l._minFifter = o; l._magFifter = h; l.release(); l._createWebGLRenderTarget() } return l }; u.TYPE2D = 1; u.TYPE3D = 2; u.POOL = []; return u }(H); var Jt = function (t) { function e() { this._glBuffer = null; this._buffer = null; this._bufferType = 0; this._bufferUsage = 0; this._byteLength = 0; e.__super.call(this); e._gl = Bt.mainContext } v(e, "laya.webgl.utils.Buffer", t); var i = e.prototype; i._bind = function () { this.activeResource(); if (e._bindActive[this._bufferType] !== this._glBuffer) { this._bufferType === 34962 && (e._bindVertexBuffer = this._glBuffer); e._gl.bindBuffer(this._bufferType, e._bindActive[this._bufferType] = this._glBuffer); Zt.activeShader = null } }; i.recreateResource = function () { this._glBuffer || (this._glBuffer = e._gl.createBuffer()); this.completeCreate() }; i.disposeResource = function () { if (this._glBuffer) { Bt.mainContext.deleteBuffer(this._glBuffer); this._glBuffer = null } this.memorySize = 0 }; h(0, i, "bufferUsage", function () { return this._bufferUsage }); e._gl = null; e._bindActive = {}; e._bindVertexBuffer = null; e._enableAtributes = []; return e }(k); var te = function (t) { function i(t) { this.texcoord = null; this.offsetX = 300; this.offsetY = 0; i.__super.call(this, 512, 0); var e = 8 * Et.BYTES_PE; this.position = [2, 5126, false, e, 0]; this.texcoord = [2, 5126, false, e, 2 * Et.BYTES_PE]; this.color = [4, 5126, false, e, 4 * Et.BYTES_PE] } v(i, "laya.webgl.shader.d2.skinAnishader.SkinSV", t); return i }(zt); var ee = function (t) { function e(t) { e.__super.call(this, 2, 0); this.color = [] } v(e, "laya.webgl.shader.d2.value.Color2dSV", t); var i = e.prototype; i.setValue = function (t) { t.fillStyle && (this.color = t.fillStyle._color._color); t.strokeStyle && (this.color = t.strokeStyle._color._color) }; return e }(zt); var ie = function (t) { function e(t) { this.u_colorMatrix = null; this.strength = 0; this.colorMat = null; this.colorAlpha = null; this.u_TexRange = [0, 1, 0, 1]; this.u_offset = [0, 0]; this.texcoord = zt._TEXCOORD; e.__super.call(this, 256, 0) } v(e, "laya.webgl.shader.d2.value.FillTextureSV", t); var i = e.prototype; i.setValue = function (t) { this.ALPHA = t.ALPHA; t.filters && this.setFilters(t.filters) }; i.clear = function () { this.texture = null; this.shader = null; this.defines.setValue(0) }; return e }(zt); var re = function (t) { function e(t) { this.u_colorMatrix = null; this.strength = 0; this.blurInfo = null; this.colorMat = null; this.colorAlpha = null; this.texcoord = zt._TEXCOORD; t === void 0 && (t = 0); e.__super.call(this, 1, t) } v(e, "laya.webgl.shader.d2.value.TextureSV", t); var i = e.prototype; i.setValue = function (t) { this.ALPHA = t.ALPHA; t.filters && this.setFilters(t.filters) }; i.clear = function () { this.texture = null; this.shader = null; this.defines.setValue(0) }; return e }(zt); var se = function (t) { function e(t) { this.a_color = null; this.u_pos = [0, 0]; e.__super.call(this, 4, 0); this.position = [2, 5126, false, 5 * Et.BYTES_PE, 0]; this.a_color = [3, 5126, false, 5 * Et.BYTES_PE, 2 * Et.BYTES_PE] } v(e, "laya.webgl.shader.d2.value.PrimitiveSV", t); return e }(zt); var ne = function (t) { function e() { this._atlaser = null; this._flashCacheImage = null; this._flashCacheImageNeedFlush = false; e.__super.call(this) } v(e, "laya.webgl.atlas.AtlasWebGLCanvas", t); var i = e.prototype; i.recreateResource = function () { var t = Bt.mainContext; var e = this._source = t.createTexture(); var i = Nt.curBindTexTarget; var r = Nt.curBindTexValue; Nt.bindTexture(t, 3553, e); t.texImage2D(3553, 0, 6408, this._w, this._h, 0, 6408, 5121, null); t.texParameteri(3553, 10241, 9729); t.texParameteri(3553, 10240, 9729); t.texParameteri(3553, 10242, 33071); t.texParameteri(3553, 10243, 33071); i && r && Nt.bindTexture(t, i, r); this.memorySize = this._w * this._h * 4; this.completeCreate() }; i.disposeResource = function () { if (this._source) { Bt.mainContext.deleteTexture(this._source); this._source = null; this.memorySize = 0 } }; i.texSubImage2D = function (t, e, i) { if (!R.isFlash) { var r = Bt.mainContext; var s = Nt.curBindTexTarget; var n = Nt.curBindTexValue; Nt.bindTexture(r, 3553, this._source); if (R.isConchWebGL) { if (i !== ConchTextCanvas) { t - 1 >= 0 && r.texSubImage2DEx(true, 3553, 0, t - 1, e, 6408, 5121, i); t + 1 <= this._w && r.texSubImage2DEx(true, 3553, 0, t + 1, e, 6408, 5121, i); e - 1 >= 0 && r.texSubImage2DEx(true, 3553, 0, t, e - 1, 6408, 5121, i); e + 1 <= this._h && r.texSubImage2DEx(true, 3553, 0, t, e + 1, 6408, 5121, i) } r.texSubImage2DEx(true, 3553, 0, t, e, 6408, 5121, i) } else { r.pixelStorei(37441, true); t - 1 >= 0 && r.texSubImage2D(3553, 0, t - 1, e, 6408, 5121, i); t + 1 <= this._w && r.texSubImage2D(3553, 0, t + 1, e, 6408, 5121, i); e - 1 >= 0 && r.texSubImage2D(3553, 0, t, e - 1, 6408, 5121, i); e + 1 <= this._h && r.texSubImage2D(3553, 0, t, e + 1, 6408, 5121, i); r.texSubImage2D(3553, 0, t, e, 6408, 5121, i); r.pixelStorei(37441, false) } s && n && Nt.bindTexture(r, s, n) } else { if (!this._flashCacheImage) { this._flashCacheImage = x.create(""); this._flashCacheImage._image.createCanvas(this._w, this._h) } var a = i.bitmapdata; this._flashCacheImage._image.copyPixels(a, 0, 0, a.width, a.height, t, e); this._flashCacheImageNeedFlush || (this._flashCacheImageNeedFlush = true) } }; i.texSubImage2DPixel = function (t, e, i, r, s) { var n = Bt.mainContext; var a = Nt.curBindTexTarget; var o = Nt.curBindTexValue; Nt.bindTexture(n, 3553, this._source); var h = new Uint8Array(s.data); if (R.isConchWebGL) { n.texSubImage2DEx(true, 3553, 0, t, e, i, r, 6408, 5121, h) } else { n.pixelStorei(37441, true); n.texSubImage2D(3553, 0, t, e, i, r, 6408, 5121, h); n.pixelStorei(37441, false) } a && o && Nt.bindTexture(n, a, o) }; h(0, i, "width", t.prototype._$get_width, function (t) { this._w = t }); h(0, i, "height", t.prototype._$get_height, function (t) { this._h = t }); return e }(s); var ae = function (t) { function s() { this.flipY = true; this.alwaysChange = false; s.__super.call(this) } v(s, "laya.webgl.resource.WebGLCanvas", t); var e = s.prototype; e.getCanvas = function () { return this._canvas }; e.clear = function () { this._ctx && this._ctx.clear() }; e.destroy = function () { this._ctx && this._ctx.destroy(); this._ctx = null; laya.resource.Resource.prototype.destroy.call(this) }; e._setContext = function (t) { this._ctx = t }; e.getContext = function (t, e) { return this._ctx ? this._ctx : this._ctx = s._createContext(this) }; e.size = function (t, e) { if (this._w != t || this._h != e) { this._w = t; this._h = e; this._ctx && this._ctx.size(t, e); this._canvas && (this._canvas.height = e, this._canvas.width = t) } }; e.activeResource = function (t) { t === void 0 && (t = false); if (!this._source) { this.recreateResource() } }; e.recreateResource = function () { this.createWebGlTexture(); this.completeCreate() }; e.disposeResource = function () { if (this._source && !this.iscpuSource) { Bt.mainContext.deleteTexture(this._source); this._source = null; this.memorySize = 0 } }; e.createWebGlTexture = function () { var t = Bt.mainContext; if (!this._canvas) { } var e = this._source = t.createTexture(); this.iscpuSource = false; var i = Nt.curBindTexTarget; var r = Nt.curBindTexValue; Nt.bindTexture(t, 3553, e); t.pixelStorei(37440, this.flipY ? 1 : 0); if (R.isConchWebGL) { t.texImage2DEx(s.premulAlpha, 3553, 0, 6408, 6408, 5121, this._imgData) } else { s.premulAlpha && t.pixelStorei(37441, true); t.texImage2D(3553, 0, 6408, 6408, 5121, this._imgData); s.premulAlpha && t.pixelStorei(37441, false) } t.texParameteri(3553, 10240, 9729); t.texParameteri(3553, 10241, 9729); t.texParameteri(3553, 10242, 33071); t.texParameteri(3553, 10243, 33071); t.pixelStorei(37440, 0); this.memorySize = this._w * this._h * 4; i && r && Nt.bindTexture(t, i, r) }; e.reloadCanvasData = function () { var t = Bt.mainContext; if (!this._source) { throw "reloadCanvasData error, gl texture not created!" } var e = Nt.curBindTexTarget; var i = Nt.curBindTexValue; Nt.bindTexture(t, 3553, this._source); if (R.isConchWebGL) { t.texImage2DEx(s.premulAlpha, 3553, 0, 6408, 6408, 5121, this._imgData) } else { s.premulAlpha && t.pixelStorei(37441, true); t.texImage2D(3553, 0, 6408, 6408, 5121, this._imgData); s.premulAlpha && t.pixelStorei(37441, false) } t.pixelStorei(37440, 0); e && i && Nt.bindTexture(t, e, i) }; e.texSubImage2D = function (t, e, i) { var r = Bt.mainContext; var s = Nt.curBindTexTarget; var n = Nt.curBindTexValue; Nt.bindTexture(r, 3553, this._source); if (R.isConchWebGL) { r.texSubImage2DEx(true, 3553, 0, e, i, 6408, 5121, t._source) } else { r.pixelStorei(37441, true); r.texSubImage2D(3553, 0, e, i, 6408, 5121, t._source); r.pixelStorei(37441, false) } s && n && Nt.bindTexture(r, s, n) }; e.toBase64 = function (t, e, i) { var r = null; if (this._canvas) { r = this._canvas.toDataURL(t, e) } i.call(this, r) }; h(0, e, "context", function () { return this._ctx }); h(0, e, "source", function () { if (this.alwaysChange) this.reloadCanvasData(); return this._source }); h(0, e, "asBitmap", null, function (t) { this._ctx && (this._ctx.asBitmap = t) }); s._createContext = null; s.premulAlpha = false; return s }(s); var oe = function (t) { function n(t, e) { n.__super.call(this); this.char = t; this.isSpace = t === " "; this.xs = e.scaleX; this.ys = e.scaleY; this.font = e.font.toString(); this.fontSize = e.font.size; this.fillColor = e.fillColor; this.borderColor = e.borderColor; this.lineWidth = e.lineWidth; this.underLine = e.underLine; var i = R.isConchApp; var r; if (i) { r = ConchTextCanvas; r._source = ConchTextCanvas; r._source.canvas = ConchTextCanvas } else { r = _.canvas.source } this.canvas = r; this._enableMerageInAtlas = true; if (i) { this._ctx = r } else { this._ctx = this.canvas.getContext("2d", undefined) } var s = X.measureText(this.char, this.font); this.cw = s.width * this.xs; this.ch = (s.height || this.fontSize) * this.ys; this.onresize(this.cw + T.CborderSize * 2, this.ch + T.CborderSize * 2); this.texture = new H(this) } v(n, "laya.webgl.resource.WebGLCharImage", t); var e = n.prototype; w.imps(e, { "laya.webgl.resource.IMergeAtlasBitmap": true }); e.active = function () { this.texture.active() }; e.recreateResource = function () { var t = R.isConchApp; this.onresize(this.cw + T.CborderSize * 2, this.ch + T.CborderSize * 2); this.canvas && (this.canvas.height = this._h, this.canvas.width = this._w); if (t) { var e = this.fontSize; if (this.xs != 1 || this.ys != 1) { e = parseInt(e * (this.xs > this.ys ? this.xs : this.ys) + "") } var i = "normal 100 " + this.font; i = i.replace(n._fontSizeReg, e); if (this.borderColor) { i += " 1 " + this.borderColor } this._ctx.font = i; this._ctx.textBaseline = "top"; this._ctx.fillStyle = this.fillColor; this._ctx.fillText(this.char, T.CborderSize, T.CborderSize, null, null, null) } else { this._ctx.save(); this._ctx.lineJoin = "round"; this._ctx.clearRect(0, 0, this.cw + T.CborderSize * 2, this.ch + T.CborderSize * 2); this._ctx.font = this.font; if (V.RightToLeft) { this._ctx.textAlign = "end" } this._ctx.textBaseline = "top"; if (this.xs != 1 || this.ys != 1) { this._ctx.setTransform(this.xs, 0, 0, this.ys, T.CborderSize, T.CborderSize) } else { this._ctx.setTransform(1, 0, 0, 1, T.CborderSize, T.CborderSize) } if (this.fillColor && this.borderColor) { this._ctx.strokeStyle = this.borderColor; this._ctx.lineWidth = this.lineWidth; this._ctx.strokeText(this.char, 0, 0, null, null, 0, null); this._ctx.fillStyle = this.fillColor; this._ctx.fillText(this.char, 0, 0, null, null, null) } else { if (this.lineWidth === -1) { this._ctx.fillStyle = this.fillColor ? this.fillColor : "white"; this._ctx.fillText(this.char, 0, 0, null, null, null) } else { this._ctx.strokeStyle = this.borderColor ? this.borderColor : "white"; this._ctx.lineWidth = this.lineWidth; this._ctx.strokeText(this.char, 0, 0, null, null, 0, null) } } if (this.underLine) { this._ctx.lineWidth = 1; this._ctx.strokeStyle = this.fillColor; this._ctx.beginPath(); this._ctx.moveTo(0, this.fontSize + 1); var r = this._ctx.measureText(this.char).width + 1; this._ctx.lineTo(r, this.fontSize + 1); this._ctx.stroke() } this._ctx.restore() } this.borderSize = T.CborderSize; this.completeCreate() }; e.onresize = function (t, e) { this._w = t; this._h = e; this._allowMerageInAtlas = true }; e.clearAtlasSource = function () { }; h(0, e, "allowMerageInAtlas", function () { return this._allowMerageInAtlas }); h(0, e, "atlasSource", function () { return this.canvas }); h(0, e, "atlasImgData", function () { if (!n.canUseCanvas) { if (this._ctx.getImageData) return this._ctx.getImageData(0, 0, this._w, this._h) } return null }); h(0, e, "enableMerageInAtlas", function () { return this._enableMerageInAtlas }, function (t) { this._enableMerageInAtlas = t }); n.createOneChar = function (t, e) { var i = new n(t, e); return i }; n.canUseCanvas = true; n._fontSizeReg = new RegExp("\\d+(?=px)", "g"); return n }(s); var he = function (t) { function l(t, e, i, r, s, n, a, o, h) { i === void 0 && (i = 6408); r === void 0 && (r = 5121); s === void 0 && (s = 34041); n === void 0 && (n = false); a === void 0 && (a = false); o === void 0 && (o = -1); h === void 0 && (h = 1); l.__super.call(this); this._w = t; this._h = e; this._surfaceFormat = i; this._surfaceType = r; this._depthStencilFormat = s; if (R.isConchWebGL && this._depthStencilFormat === 34041) { this._depthStencilFormat = 33189 } this._mipMap = n; this._repeat = a; this._minFifter = o; this._magFifter = h } v(l, "laya.webgl.resource.WebGLRenderTarget", t); var e = l.prototype; e.recreateResource = function () { var t = Bt.mainContext; this._frameBuffer || (this._frameBuffer = t.createFramebuffer()); this._source || (this._source = t.createTexture()); var e = Nt.curBindTexTarget; var i = Nt.curBindTexValue; Nt.bindTexture(t, 3553, this._source); t.texImage2D(3553, 0, 6408, this._w, this._h, 0, this._surfaceFormat, this._surfaceType, null); var r = this._minFifter; var s = this._magFifter; var n = this._repeat ? 10497 : 33071; var a = c.isPOT(this._w, this._h); if (a) { if (this._mipMap) r !== -1 || (r = 9987); else r !== -1 || (r = 9729); s !== -1 || (s = 9729); t.texParameteri(3553, 10241, r); t.texParameteri(3553, 10240, s); t.texParameteri(3553, 10242, n); t.texParameteri(3553, 10243, n); this._mipMap && t.generateMipmap(3553) } else { r !== -1 || (r = 9729); s !== -1 || (s = 9729); t.texParameteri(3553, 10241, r); t.texParameteri(3553, 10240, s); t.texParameteri(3553, 10242, 33071); t.texParameteri(3553, 10243, 33071) } t.bindFramebuffer(36160, this._frameBuffer); t.framebufferTexture2D(36160, 36064, 3553, this._source, 0); if (this._depthStencilFormat) { this._depthStencilBuffer || (this._depthStencilBuffer = t.createRenderbuffer()); t.bindRenderbuffer(36161, this._depthStencilBuffer); t.renderbufferStorage(36161, this._depthStencilFormat, this._w, this._h); switch (this._depthStencilFormat) { case 33189: t.framebufferRenderbuffer(36160, 36096, 36161, this._depthStencilBuffer); break; case 36168: t.framebufferRenderbuffer(36160, 36128, 36161, this._depthStencilBuffer); break; case 34041: t.framebufferRenderbuffer(36160, 33306, 36161, this._depthStencilBuffer); break } } t.bindFramebuffer(36160, null); e && i && Nt.bindTexture(t, e, i); t.bindRenderbuffer(36161, null); if (a && this._mipMap) this.memorySize = this._w * this._h * 4 * (1 + 1 / 3); else this.memorySize = this._w * this._h * 4; this.completeCreate() }; e.disposeResource = function () { if (this._frameBuffer) { Bt.mainContext.deleteTexture(this._source); Bt.mainContext.deleteFramebuffer(this._frameBuffer); Bt.mainContext.deleteRenderbuffer(this._depthStencilBuffer); this._source = null; this._frameBuffer = null; this._depthStencilBuffer = null; this.memorySize = 0 } }; h(0, e, "depthStencilBuffer", function () { return this._depthStencilBuffer }); h(0, e, "frameBuffer", function () { return this._frameBuffer }); return l }(s); var le = function (t) { function o(t, e, i, r, s, n, a) { this.offsetX = 0; this.offsetY = 0; o.__super.call(this); this.repeat = true; this.mipmap = false; this.minFifter = -1; this.magFifter = -1; this.atlasImage = n; this.canvas = t; this._ctx = t.getContext("2d", undefined); this._w = r; this._h = s; this.offsetX = e; this.offsetY = i; this.src = a; this._enableMerageInAtlas = true; Q.enabled && (this._w < Q.atlasLimitWidth && this._h < Q.atlasLimitHeight) ? this._allowMerageInAtlas = true : this._allowMerageInAtlas = false } v(o, "laya.webgl.resource.WebGLSubImage", t); var e = o.prototype; w.imps(e, { "laya.webgl.resource.IMergeAtlasBitmap": true }); e.size = function (t, e) { this._w = t; this._h = e; this._ctx && this._ctx.size(t, e); this.canvas && (this.canvas.height = e, this.canvas.width = t) }; e.recreateResource = function () { this.size(this._w, this._h); this._ctx.drawImage(this.atlasImage, this.offsetX, this.offsetY, this._w, this._h, 0, 0, this._w, this._h); !(this._allowMerageInAtlas && this._enableMerageInAtlas) ? this.createWebGlTexture() : this.memorySize = 0; this.completeCreate() }; e.createWebGlTexture = function () { var t = Bt.mainContext; if (!this.canvas) { throw "create GLTextur err:no data:" + this.canvas } var e = this._source = t.createTexture(); var i = Nt.curBindTexTarget; var r = Nt.curBindTexValue; Nt.bindTexture(t, 3553, e); if (R.isConchWebGL) { t.texImage2DEx(true, 3553, 0, 6408, 6408, 5121, this.canvas) } else { t.pixelStorei(37441, true); t.texImage2D(3553, 0, 6408, 6408, 5121, this.canvas); t.pixelStorei(37441, false) } var s = this.minFifter; var n = this.magFifter; var a = this.repeat ? 10497 : 33071; var o = c.isPOT(this.width, this.height); if (o) { if (this.mipmap) s !== -1 || (s = 9987); else s !== -1 || (s = 9729); n !== -1 || (n = 9729); t.texParameteri(3553, 10240, n); t.texParameteri(3553, 10241, s); t.texParameteri(3553, 10242, a); t.texParameteri(3553, 10243, a); this.mipmap && t.generateMipmap(3553) } else { s !== -1 || (s = 9729); n !== -1 || (n = 9729); t.texParameteri(3553, 10241, s); t.texParameteri(3553, 10240, n); t.texParameteri(3553, 10242, 33071); t.texParameteri(3553, 10243, 33071) } i && r && Nt.bindTexture(t, i, r); this.canvas = null; if (o && this.mipmap) this.memorySize = this._w * this._h * 4 * (1 + 1 / 3); else this.memorySize = this._w * this._h * 4 }; e.disposeResource = function () { if (!(Q.enabled && this._allowMerageInAtlas) && this._source) { Bt.mainContext.deleteTexture(this._source); this._source = null; this.memorySize = 0 } }; e.clearAtlasSource = function () { }; h(0, e, "allowMerageInAtlas", function () { return this._allowMerageInAtlas }); h(0, e, "atlasSource", function () { return this.canvas }); h(0, e, "enableMerageInAtlas", function () { return this._allowMerageInAtlas }, function (t) { this._allowMerageInAtlas = t }); return o }(s); var ue = function (t) { function f(t, e, i, r) { this._curActTexIndex = 0; this.tag = {}; this._program = null; this._params = null; this._paramsMap = {}; this._offset = 0; f.__super.call(this); if (!t || !e) throw "Shader Error"; this._id = ++f._count; this._vs = t; this._ps = e; this._nameMap = r ? r : {}; i != null && (f.sharders[i] = this) } v(f, "laya.webgl.shader.Shader", t); var e = f.prototype; e.recreateResource = function () { this._compile(); this.completeCreate(); this.memorySize = 0 }; e.disposeResource = function () { Bt.mainContext.deleteShader(this._vshader); Bt.mainContext.deleteShader(this._pshader); Bt.mainContext.deleteProgram(this._program); this._vshader = this._pshader = this._program = null; this._params = null; this._paramsMap = {}; this.memorySize = 0; this._curActTexIndex = 0 }; e._compile = function () { if (!this._vs || !this._ps || this._params) return; this._reCompile = true; this._params = []; var t = [this._vs, this._ps]; var e; var i = Bt.mainContext; this._program = i.createProgram(); this._vshader = f._createShader(i, t[0], 35633); this._pshader = f._createShader(i, t[1], 35632); i.attachShader(this._program, this._vshader); i.attachShader(this._program, this._pshader); i.linkProgram(this._program); if (!R.isConchApp && !i.getProgramParameter(this._program, 35714)) { throw i.getProgramInfoLog(this._program) } var r, s = 0, n = 0, a = 0, o; var h = 0; if (R.isConchApp) { h = i.getProgramParameterEx(this._vs, this._ps, "", 35721) } else { h = i.getProgramParameter(this._program, 35721) } for (s = 0; s < h; s++) { var l = null; if (R.isConchApp) { l = i.getActiveAttribEx(this._vs, this._ps, "", s) } else { l = i.getActiveAttrib(this._program, s) } o = i.getAttribLocation(this._program, l.name); r = { vartype: "attribute", glfun: null, ivartype: 0, attrib: l, location: o, name: l.name, type: l.type, isArray: false, isSame: false, preValue: null, indexOfParams: 0 }; this._params.push(r) } var u = 0; if (R.isConchApp) { u = i.getProgramParameterEx(this._vs, this._ps, "", 35718) } else { u = i.getProgramParameter(this._program, 35718) } for (s = 0; s < u; s++) { var c = null; if (R.isConchApp) { c = i.getActiveUniformEx(this._vs, this._ps, "", s) } else { c = i.getActiveUniform(this._program, s) } o = i.getUniformLocation(this._program, c.name); r = { vartype: "uniform", glfun: null, ivartype: 1, attrib: l, location: o, name: c.name, type: c.type, isArray: false, isSame: false, preValue: null, indexOfParams: 0 }; if (r.name.indexOf("[0]") > 0) { r.name = r.name.substr(0, r.name.length - 3); r.isArray = true; r.location = i.getUniformLocation(this._program, r.name) } this._params.push(r) } for (s = 0, a = this._params.length; s < a; s++) { r = this._params[s]; r.indexOfParams = s; r.index = 1; r.value = [r.location, null]; r.codename = r.name; r.name = this._nameMap[r.codename] ? this._nameMap[r.codename] : r.codename; this._paramsMap[r.name] = r; r._this = this; r.uploadedValue = []; if (r.vartype === "attribute") { r.fun = this._attribute; continue } switch (r.type) { case 5124: r.fun = r.isArray ? this._uniform1iv : this._uniform1i; break; case 5126: r.fun = r.isArray ? this._uniform1fv : this._uniform1f; break; case 35664: r.fun = r.isArray ? this._uniform_vec2v : this._uniform_vec2; break; case 35665: r.fun = r.isArray ? this._uniform_vec3v : this._uniform_vec3; break; case 35666: r.fun = r.isArray ? this._uniform_vec4v : this._uniform_vec4; break; case 35678: r.fun = this._uniform_sampler2D; break; case 35680: r.fun = this._uniform_samplerCube; break; case 35676: r.glfun = i.uniformMatrix4fv; r.fun = this._uniformMatrix4fv; break; case 35670: r.fun = this._uniform1i; break; case 35674: case 35675: throw new Error("compile shader err!"); break; default: throw new Error("compile shader err!"); break } } }; e.getUniform = function (t) { return this._paramsMap[t] }; e._attribute = function (t, e) { var i = Bt.mainContext; var r = Jt._enableAtributes; var s = t.location; r[s] || i.enableVertexAttribArray(s); i.vertexAttribPointer(s, e[0], e[1], e[2], e[3], e[4] + this._offset); r[s] = Jt._bindVertexBuffer; return 1 }; e._uniform1f = function (t, e) { var i = t.uploadedValue; if (i[0] !== e) { Bt.mainContext.uniform1f(t.location, i[0] = e); return 1 } return 0 }; e._uniform1fv = function (t, e) { if (e.length < 4) { var i = t.uploadedValue; if (i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3]) { Bt.mainContext.uniform1fv(t.location, e); i[0] = e[0]; i[1] = e[1]; i[2] = e[2]; i[3] = e[3]; return 1 } return 0 } else { Bt.mainContext.uniform1fv(t.location, e); return 1 } }; e._uniform_vec2 = function (t, e) { var i = t.uploadedValue; if (i[0] !== e[0] || i[1] !== e[1]) { Bt.mainContext.uniform2f(t.location, i[0] = e[0], i[1] = e[1]); return 1 } return 0 }; e._uniform_vec2v = function (t, e) { if (e.length < 2) { var i = t.uploadedValue; if (i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3]) { Bt.mainContext.uniform2fv(t.location, e); i[0] = e[0]; i[1] = e[1]; i[2] = e[2]; i[3] = e[3]; return 1 } return 0 } else { Bt.mainContext.uniform2fv(t.location, e); return 1 } }; e._uniform_vec3 = function (t, e) { var i = t.uploadedValue; if (i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2]) { Bt.mainContext.uniform3f(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2]); return 1 } return 0 }; e._uniform_vec3v = function (t, e) { Bt.mainContext.uniform3fv(t.location, e); return 1 }; e._uniform_vec4 = function (t, e) { var i = t.uploadedValue; if (i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3]) { Bt.mainContext.uniform4f(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2], i[3] = e[3]); return 1 } return 0 }; e._uniform_vec4v = function (t, e) { Bt.mainContext.uniform4fv(t.location, e); return 1 }; e._uniformMatrix2fv = function (t, e) { Bt.mainContext.uniformMatrix2fv(t.location, false, e); return 1 }; e._uniformMatrix3fv = function (t, e) { Bt.mainContext.uniformMatrix3fv(t.location, false, e); return 1 }; e._uniformMatrix4fv = function (t, e) { Bt.mainContext.uniformMatrix4fv(t.location, false, e); return 1 }; e._uniform1i = function (t, e) { var i = t.uploadedValue; if (i[0] !== e) { Bt.mainContext.uniform1i(t.location, i[0] = e); return 1 } return 0 }; e._uniform1iv = function (t, e) { Bt.mainContext.uniform1iv(t.location, e); return 1 }; e._uniform_ivec2 = function (t, e) { var i = t.uploadedValue; if (i[0] !== e[0] || i[1] !== e[1]) { Bt.mainContext.uniform2i(t.location, i[0] = e[0], i[1] = e[1]); return 1 } return 0 }; e._uniform_ivec2v = function (t, e) { Bt.mainContext.uniform2iv(t.location, e); return 1 }; e._uniform_vec3i = function (t, e) { var i = t.uploadedValue; if (i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2]) { Bt.mainContext.uniform3i(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2]); return 1 } return 0 }; e._uniform_vec3vi = function (t, e) { Bt.mainContext.uniform3iv(t.location, e); return 1 }; e._uniform_vec4i = function (t, e) { var i = t.uploadedValue; if (i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3]) { Bt.mainContext.uniform4i(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2], i[3] = e[3]); return 1 } return 0 }; e._uniform_vec4vi = function (t, e) { Bt.mainContext.uniform4iv(t.location, e); return 1 }; e._uniform_sampler2D = function (t, e) { var i = Bt.mainContext; var r = t.uploadedValue; if (r[0] == null) { r[0] = this._curActTexIndex; i.uniform1i(t.location, this._curActTexIndex); i.activeTexture(f._TEXTURES[this._curActTexIndex]); Nt.bindTexture(i, 3553, e); this._curActTexIndex++; return 1 } else { i.activeTexture(f._TEXTURES[r[0]]); Nt.bindTexture(i, 3553, e); return 0 } }; e._uniform_samplerCube = function (t, e) { var i = Bt.mainContext; var r = t.uploadedValue; if (r[0] == null) { r[0] = this._curActTexIndex; i.uniform1i(t.location, this._curActTexIndex); i.activeTexture(f._TEXTURES[this._curActTexIndex]); Nt.bindTexture(i, 34067, e); this._curActTexIndex++; return 1 } else { i.activeTexture(f._TEXTURES[r[0]]); Nt.bindTexture(i, 34067, e); return 0 } }; e._noSetValue = function (t) { console.log("no....:" + t.name) }; e.uploadOne = function (t, e) { this.activeResource(); Nt.UseProgram(this._program); var i = this._paramsMap[t]; i.fun.call(this, i, e) }; e.uploadTexture2D = function (t) { O.shaderCall++; var e = Bt.mainContext; e.activeTexture(33984); Nt.bindTexture(e, 3553, t) }; e.upload = function (t, e) { Zt.activeShader = Zt.bindShader = this; this._lastUseFrameCount === O.loopCount || this.activeResource(); Nt.UseProgram(this._program); if (this._reCompile) { e = this._params; this._reCompile = false } else { e = e || this._params } var i = Bt.mainContext; var r, s, n = e.length, a = 0; for (var o = 0; o < n; o++) { r = e[o]; if ((s = t[r.name]) !== null) a += r.fun.call(this, r, s) } O.shaderCall += a }; e.uploadArray = function (t, e, i) { Zt.activeShader = this; Zt.bindShader = this; this.activeResource(); Nt.UseProgram(this._program); var r = this._params, s; var n, a = 0; for (var o = e - 2; o >= 0; o -= 2) { n = this._paramsMap[t[o]]; if (!n) continue; s = t[o + 1]; if (s != null) { i && i[n.name] && i[n.name].bind(); a += n.fun.call(this, n, s) } } O.shaderCall += a }; e.getParams = function () { return this._params }; f.getShader = function (t) { return f.sharders[t] }; f.create = function (t, e, i, r) { return new f(t, e, i, r) }; f.withCompile = function (t, e, i, r) { if (i && f.sharders[i]) return f.sharders[i]; var s = f._preCompileShader[2e-4 * t]; if (!s) throw new Error("withCompile shader err!" + t); return s.createShader(e, i, r) }; f.withCompile2D = function (t, e, i, r, s) { if (r && f.sharders[r]) return f.sharders[r]; var n = f._preCompileShader[2e-4 * t + e]; if (!n) throw new Error("withCompile shader err!" + t + " " + e); return n.createShader(i, r, s) }; f.addInclude = function (t, e) { Dt.addInclude(t, e) }; f.preCompile = function (t, e, i, r) { var s = 2e-4 * t; f._preCompileShader[s] = new Dt(s, e, i, r) }; f.preCompile2D = function (t, e, i, r, s) { var n = 2e-4 * t + e; f._preCompileShader[n] = new Dt(n, i, r, s) }; f._createShader = function (t, e, i) { var r = t.createShader(i); t.shaderSource(r, e); t.compileShader(r); return r }; f._TEXTURES = [33984, 33985, 33986, 33987, 33988, 33989, 33990, , 33991, 33992]; f._count = 0; f._preCompileShader = {}; f.SHADERNAME2ID = 2e-4; f.sharders = (f.sharders = [], f.sharders.length = 32, f.sharders); a(f, ["nameKey", function () { return this.nameKey = new z }]); return f }(Zt); var ce = function (t) { function e() { this._maxsize = 0; this._upload = true; this._uploadSize = 0; e.__super.call(this); this.lock = true } v(e, "laya.webgl.utils.Buffer2D", t); var i = e.prototype; i.needSize = function (t) { var e = this._byteLength; if (t) { var i = this._byteLength + t; i <= this._buffer.byteLength || this._resizeBuffer(i << 1, true); this._byteLength = i } return e }; i._bufferData = function () { this._maxsize = Math.max(this._maxsize, this._byteLength); if (O.loopCount % 30 == 0) { if (this._buffer.byteLength > this._maxsize + 64) { this.memorySize = this._buffer.byteLength; this._buffer = this._buffer.slice(0, this._maxsize + 64); this._checkArrayUse() } this._maxsize = this._byteLength } if (this._uploadSize < this._buffer.byteLength) { this._uploadSize = this._buffer.byteLength; Jt._gl.bufferData(this._bufferType, this._uploadSize, this._bufferUsage); this.memorySize = this._uploadSize } Jt._gl.bufferSubData(this._bufferType, 0, this._buffer) }; i._bufferSubData = function (t, e, i) { t === void 0 && (t = 0); e === void 0 && (e = 0); i === void 0 && (i = 0); this._maxsize = Math.max(this._maxsize, this._byteLength); if (O.loopCount % 30 == 0) { if (this._buffer.byteLength > this._maxsize + 64) { this.memorySize = this._buffer.byteLength; this._buffer = this._buffer.slice(0, this._maxsize + 64); this._checkArrayUse() } this._maxsize = this._byteLength } if (this._uploadSize < this._buffer.byteLength) { this._uploadSize = this._buffer.byteLength; Jt._gl.bufferData(this._bufferType, this._uploadSize, this._bufferUsage); this.memorySize = this._uploadSize } if (e || i) { var r = this._buffer.slice(e, i); Jt._gl.bufferSubData(this._bufferType, t, r) } else { Jt._gl.bufferSubData(this._bufferType, t, this._buffer) } }; i._checkArrayUse = function () { }; i._bind_upload = function () { if (!this._upload) return false; this._upload = false; this._bind(); this._bufferData(); return true }; i._bind_subUpload = function (t, e, i) { t === void 0 && (t = 0); e === void 0 && (e = 0); i === void 0 && (i = 0); if (!this._upload) return false; this._upload = false; this._bind(); this._bufferSubData(t, e, i); return true }; i._resizeBuffer = function (t, e) { if (t < this._buffer.byteLength) return this; this.memorySize = t; if (e && this._buffer && this._buffer.byteLength > 0) { var i = new ArrayBuffer(t); var r = new Uint8Array(i); r.set(new Uint8Array(this._buffer), 0); this._buffer = i } else this._buffer = new ArrayBuffer(t); this._checkArrayUse(); this._upload = true; return this }; i.append = function (t) { this._upload = true; var e = 0, i; e = t.byteLength; if (t instanceof Uint8Array) { this._resizeBuffer(this._byteLength + e, true); i = new Uint8Array(this._buffer, this._byteLength) } else if (t instanceof Uint16Array) { this._resizeBuffer(this._byteLength + e, true); i = new Uint16Array(this._buffer, this._byteLength) } else if (t instanceof Float32Array) { this._resizeBuffer(this._byteLength + e, true); i = new Float32Array(this._buffer, this._byteLength) } i.set(t, 0); this._byteLength += e; this._checkArrayUse() }; i.appendU16Array = function (t, e) { this._resizeBuffer(this._byteLength + e * 2, true); var i = new Uint16Array(this._buffer, this._byteLength, e); for (var r = 0; r < e; r++) { i[r] = t[r] } this._byteLength += e * 2; this._checkArrayUse() }; i.appendEx = function (t, e) { this._upload = true; var i = 0, r; i = t.byteLength; this._resizeBuffer(this._byteLength + i, true); r = new e(this._buffer, this._byteLength); r.set(t, 0); this._byteLength += i; this._checkArrayUse() }; i.appendEx2 = function (t, e, i, r) { r === void 0 && (r = 1); this._upload = true; var s = 0, n; s = i * r; this._resizeBuffer(this._byteLength + s, true); n = new e(this._buffer, this._byteLength); var a = 0; for (a = 0; a < i; a++) { n[a] = t[a] } this._byteLength += s; this._checkArrayUse() }; i.getBuffer = function () { return this._buffer }; i.setNeedUpload = function () { this._upload = true }; i.getNeedUpload = function () { return this._upload }; i.upload = function () { var t = this._bind_upload(); Jt._gl.bindBuffer(this._bufferType, null); Jt._bindActive[this._bufferType] = null; Zt.activeShader = null; return t }; i.subUpload = function (t, e, i) { t === void 0 && (t = 0); e === void 0 && (e = 0); i === void 0 && (i = 0); var r = this._bind_subUpload(); Jt._gl.bindBuffer(this._bufferType, null); Jt._bindActive[this._bufferType] = null; Zt.activeShader = null; return r }; i.disposeResource = function () { t.prototype.disposeResource.call(this); this._upload = true; this._uploadSize = 0 }; i.clear = function () { this._byteLength = 0; this._upload = true }; h(0, i, "bufferLength", function () { return this._buffer.byteLength }); h(0, i, "byteLength", null, function (t) { if (this._byteLength === t) return; t <= this._buffer.byteLength || this._resizeBuffer(t * 2 + 256, true); this._byteLength = t }); e.__int__ = function (t) { pe.QuadrangleIB = pe.create(35044); Rt.fillIBQuadrangle(pe.QuadrangleIB, 16) }; e.FLOAT32 = 4; e.SHORT = 2; return e }(Jt); var fe = function (e) { function i(t) { this.u_blurX = false; this.u_color = null; this.u_offset = null; this.u_strength = NaN; this.u_texW = 0; this.u_texH = 0; i.__super.call(this, 8 | 1) } v(i, "laya.webgl.shader.d2.value.GlowSV", e); var t = i.prototype; t.setValue = function (t) { e.prototype.setValue.call(this, t) }; t.clear = function () { e.prototype.clear.call(this) }; return i }(re); var _e = function (t) { function e(t) { e.__super.call(this, 64); this.defines.add(64) } v(e, "laya.webgl.shader.d2.value.TextSV", t); var i = e.prototype; i.release = function () { e.pool[e._length++] = this; this.clear() }; i.clear = function () { t.prototype.clear.call(this) }; e.create = function () { if (e._length) return e.pool[--e._length]; else return new e(null) }; e.pool = []; e._length = 0; return e }(re); var de = function (t) { function s(t, e, i, r) { this._params2dQuick1 = null; this._params2dQuick2 = null; this._shaderValueWidth = NaN; this._shaderValueHeight = NaN; s.__super.call(this, t, e, i, r) } v(s, "laya.webgl.shader.d2.Shader2X", t); var e = s.prototype; e.upload2dQuick1 = function (t) { this.upload(t, this._params2dQuick1 || this._make2dQuick1()) }; e._make2dQuick1 = function () { if (!this._params2dQuick1) { this.activeResource(); this._params2dQuick1 = []; var t = this._params, e; for (var i = 0, r = t.length; i < r; i++) { e = t[i]; if (!R.isFlash && (e.name === "size" || e.name === "position" || e.name === "texcoord")) continue; this._params2dQuick1.push(e) } } return this._params2dQuick1 }; e.disposeResource = function () { t.prototype.disposeResource.call(this); this._params2dQuick1 = null; this._params2dQuick2 = null }; e.upload2dQuick2 = function (t) { this.upload(t, this._params2dQuick2 || this._make2dQuick2()) }; e._make2dQuick2 = function () { if (!this._params2dQuick2) { this.activeResource(); this._params2dQuick2 = []; var t = this._params, e; for (var i = 0, r = t.length; i < r; i++) { e = t[i]; if (!R.isFlash && e.name === "size") continue; this._params2dQuick2.push(e) } } return this._params2dQuick2 }; s.create = function (t, e, i, r) { return new s(t, e, i, r) }; return s }(ue); var pe = function (t) { function e(t) { this._uint8Array = null; this._uint16Array = null; t === void 0 && (t = 35044); e.__super.call(this); this._bufferUsage = t; this._bufferType = 34963; R.isFlash || (this._buffer = new ArrayBuffer(8)) } v(e, "laya.webgl.utils.IndexBuffer2D", t); var i = e.prototype; i._checkArrayUse = function () { this._uint8Array && (this._uint8Array = new Uint8Array(this._buffer)); this._uint16Array && (this._uint16Array = new Uint16Array(this._buffer)) }; i.getUint8Array = function () { return this._uint8Array || (this._uint8Array = new Uint8Array(this._buffer)) }; i.getUint16Array = function () { return this._uint16Array || (this._uint16Array = new Uint16Array(this._buffer)) }; i.destory = function () { this._uint16Array = null; this._uint8Array = null; this._buffer = null }; e.QuadrangleIB = null; e.create = function (t) { t === void 0 && (t = 35044); return new e(t) }; return e }(ce); var ve = function (i) { function r(t, e) { this._floatArray32 = null; this._vertexStride = 0; r.__super.call(this); this._vertexStride = t; this._bufferUsage = e; this._bufferType = 34962; R.isFlash || (this._buffer = new ArrayBuffer(8)); this.getFloat32Array() } v(r, "laya.webgl.utils.VertexBuffer2D", i); var t = r.prototype; t.getFloat32Array = function () { return this._floatArray32 || (this._floatArray32 = new Float32Array(this._buffer)) }; t.bind = function (t) { t && t._bind(); this._bind() }; t.insertData = function (t, e) { var i = this.getFloat32Array(); i.set(t, e); this._upload = true }; t.bind_upload = function (t) { t._bind_upload() || t._bind(); this._bind_upload() || this._bind() }; t._checkArrayUse = function () { this._floatArray32 && (this._floatArray32 = new Float32Array(this._buffer)) }; t.disposeResource = function () { i.prototype.disposeResource.call(this); return; var t = Jt._enableAtributes; if (!R.isConchWebGL) { for (var e = 0; e < 10; e++) { Bt.mainContext.disableVertexAttribArray(e); t[e] = null } } }; t.destory = function () { this._byteLength = 0; this._upload = true; this._buffer = null; this._floatArray32 = null }; h(0, t, "vertexStride", function () { return this._vertexStride }); r.create = function (t, e) { e === void 0 && (e = 35048); return new r(t, e) }; return r }(ce); var me = function (t) { function u(t, e, i, r) { this._format = 0; this._mipmap = false; this._allowMerageInAtlas = false; this._enableMerageInAtlas = false; this.repeat = false; this._image = null; this.minFifter = 0; this.magFifter = 0; i === void 0 && (i = 6408); r === void 0 && (r = true); u.__super.call(this, t, e); this._format = i; this._mipmap = r; this.repeat = false; this.minFifter = -1; this.magFifter = -1; if (typeof t == "string") { this._url = t; this._src = t; this._image = new _.window.Image; if (e) { e.onload && (this.onload = e.onload); e.onerror && (this.onerror = e.onerror); e.onCreate && e.onCreate(this) } this._image.crossOrigin = t && t.indexOf("data:") == 0 ? null : ""; t && (this._image.src = t) } else if (t instanceof ArrayBuffer) { this._src = e; this._url = this._src; var s = new d(t); var n = s.readUTFBytes(4); var a = s.readUTFBytes(2); var o = s.getInt16(); s.endian = "bigEndian"; this._w = s.getInt16(); this._h = s.getInt16(); var h = s.getInt16(); var l = s.getInt16(); this._image = new Uint8Array(t, s.pos); this._format = Bt.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL; Q.enabled && (this._w < Q.atlasLimitWidth && this._h < Q.atlasLimitHeight) ? this._allowMerageInAtlas = true : this._allowMerageInAtlas = false } else { this._src = e; this._url = this._src; this._image = t["source"] || t; this.onresize() } this._$5__enableMerageInAtlas = true } v(u, "laya.webgl.resource.WebGLImage", t); var e = u.prototype; w.imps(e, { "laya.webgl.resource.IMergeAtlasBitmap": true }); e._init_ = function (t, e) { }; e._createWebGlTexture = function () { if (!this._image) { throw "create GLTextur err:no data:" + this._image } var t = Bt.mainContext; var e = this._source = t.createTexture(); var i = Nt.curBindTexTarget; var r = Nt.curBindTexValue; Nt.bindTexture(t, 3553, e); if (R.isConchWebGL) { switch (this._format) { case 6408: t.texImage2DEx(true, 3553, 0, this._format, 6408, 5121, this._image); break; case Bt.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL: t.compressedTexImage2D(3553, 0, this._format, this._w, this._h, 0, this._image); break } } else { t.pixelStorei(37441, true); switch (this._format) { case 6408: t.texImage2D(3553, 0, this._format, 6408, 5121, this._image); break; case Bt.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL: t.compressedTexImage2D(3553, 0, this._format, this._w, this._h, 0, this._image); break }t.pixelStorei(37441, false) } var s = this.minFifter; var n = this.magFifter; var a = this.repeat ? 10497 : 33071; var o = c.isPOT(this._w, this._h); if (o) { if (this.mipmap) s !== -1 || (s = 9987); else s !== -1 || (s = 9729); n !== -1 || (n = 9729); t.texParameteri(3553, 10241, s); t.texParameteri(3553, 10240, n); t.texParameteri(3553, 10242, a); t.texParameteri(3553, 10243, a); this.mipmap && t.generateMipmap(3553) } else { s !== -1 || (s = 9729); n !== -1 || (n = 9729); t.texParameteri(3553, 10241, s); t.texParameteri(3553, 10240, n); t.texParameteri(3553, 10242, 33071); t.texParameteri(3553, 10243, 33071) } i && r && Nt.bindTexture(t, i, r); this._image.onload = null; this._image = null; if (o && this.mipmap) this.memorySize = this._w * this._h * 4 * (1 + 1 / 3); else this.memorySize = this._w * this._h * 4; this._recreateLock = false }; e.recreateResource = function () { var t = this; if (this._src == null || this._src === "") return; this._needReleaseAgain = false; if (!this._image) { this._recreateLock = true; var e = this; this._image = new _.window.Image; this._image.crossOrigin = this._src.indexOf("data:") == 0 ? null : ""; this._image.onload = function () { if (e._needReleaseAgain) { e._needReleaseAgain = false; e._image.onload = null; e._image = null; return } !(e._allowMerageInAtlas && e._enableMerageInAtlas) ? e._createWebGlTexture() : (t.memorySize = 0, t._recreateLock = false); e.completeCreate() }; this._image.src = this._src } else { if (this._recreateLock) { return } !(this._allowMerageInAtlas && this._$5__enableMerageInAtlas) ? this._createWebGlTexture() : (this.memorySize = 0, this._recreateLock = false); this.completeCreate() } }; e.disposeResource = function () { if (this._recreateLock) { this._needReleaseAgain = true } if (this._source) { Bt.mainContext.deleteTexture(this._source); this._source = null; this._image = null; this.memorySize = 0 } }; e.onresize = function () { this._w = this._image.width; this._h = this._image.height; Q.enabled && (this._w < Q.atlasLimitWidth && this._h < Q.atlasLimitHeight) ? this._allowMerageInAtlas = true : this._allowMerageInAtlas = false }; e.clearAtlasSource = function () { this._image = null }; h(0, e, "format", function () { return this._format }); h(0, e, "enableMerageInAtlas", function () { return this._$5__enableMerageInAtlas }, function (t) { this._$5__enableMerageInAtlas = t }); h(0, e, "mipmap", function () { return this._mipmap }); h(0, e, "allowMerageInAtlas", function () { return this._allowMerageInAtlas }); h(0, e, "atlasSource", function () { return this._image }); h(0, e, "onload", null, function (t) { var e = this; this._onload = t; this._image && (this._image.onload = this._onload != null ? function () { e.onresize(); e._onload() } : null) }); h(0, e, "onerror", null, function (t) { var e = this; this._onerror = t; this._image && (this._image.onerror = this._onerror != null ? function () { e._onerror() } : null) }); return u }(x); w.__init([Mt, Z, Ot, Dt]) })(window, document, Laya); if (typeof define === "function" && define.amd) { define("laya.core", ["require", "exports"], function (t, e) { "use strict"; Object.defineProperty(e, "__esModule", { value: true }); for (var i in Laya) { var r = Laya[i]; r && r.__isclass && (e[i] = r) } }) } (function (t, e, st) { var i = st.un, r = st.uns, s = st.static, a = st.class, o = st.getset, m = st.__newvec; var h = laya.maths.Bezier, f = laya.utils.Browser, Dt = laya.utils.Byte, n = laya.events.Event; var l = laya.events.EventDispatcher, u = laya.display.Graphics, c = laya.resource.HTMLCanvas; var v = laya.utils.Handler, _ = laya.net.Loader, d = laya.maths.MathUtil, Bt = laya.maths.Matrix; var p = laya.display.Node, g = laya.maths.Point, y = laya.maths.Rectangle, b = laya.renders.Render; var x = laya.renders.RenderContext, w = laya.resource.Resource, T = laya.utils.RunDriver; var C = laya.media.SoundChannel, S = laya.media.SoundManager, nt = laya.display.Sprite; var A = laya.utils.Stat, Nt = laya.resource.Texture, M = laya.net.URL, I = laya.utils.Utils; var R = function () { function t() { this.nodes = null; this.name = null; this.playTime = NaN; this.bone3DMap = null; this.totalKeyframeDatasLength = 0 } a(t, "laya.ani.AnimationContent"); return t }(); var P = function () { function t() { this.name = null; this.parentIndex = 0; this.parent = null; this.keyframeWidth = 0; this.lerpType = 0; this.interpolationMethod = null; this.childs = null; this.keyFrame = null; this.playTime = NaN; this.extenData = null; this.dataOffset = 0 } a(t, "laya.ani.AnimationNodeContent"); return t }(); var E = function () { function t() { } a(t, "laya.ani.AnimationParser01"); t.parse = function (t, e) { var i = e.__getBuffer(); var r = 0, s = 0, n = 0, a = 0, o = 0, h = 0, l = 0; var u = e.readUTFString(); t._aniClassName = u; var c = e.readUTFString().split("\n"); var f = e.getUint8(); var _ = e.getUint32(); var d = e.getUint32(); var p; if (_ > 0) p = i.slice(_, d); var v = new Dt(p); if (d > 0) t._publicExtData = i.slice(d, i.byteLength); t._useParent = !!e.getUint8(); t._anis.length = f; for (r = 0; r < f; r++) { var m = t._anis[r] = new R; { } m.nodes = new Array; var g = m.name = c[e.getUint16()]; t._aniMap[g] = r; m.bone3DMap = {}; m.playTime = e.getFloat32(); var y = m.nodes.length = e.getUint8(); m.totalKeyframeDatasLength = 0; for (s = 0; s < y; s++) { var x = m.nodes[s] = new P; { } x.childs = []; var b = e.getInt16(); if (b >= 0) { x.name = c[b]; m.bone3DMap[x.name] = s } x.keyFrame = new Array; x.parentIndex = e.getInt16(); x.parentIndex == -1 ? x.parent = null : x.parent = m.nodes[x.parentIndex]; x.lerpType = e.getUint8(); var w = e.getUint32(); v.pos = w; var T = x.keyframeWidth = v.getUint16(); m.totalKeyframeDatasLength += T; if (x.lerpType === 0 || x.lerpType === 1) { x.interpolationMethod = []; x.interpolationMethod.length = T; for (n = 0; n < T; n++)x.interpolationMethod[n] = X.interpolation[v.getUint8()] } if (x.parent != null) x.parent.childs.push(x); var C = e.getUint16(); if (C > 0) { x.extenData = i.slice(e.pos, e.pos + C); e.pos += C } var S = e.getUint16(); x.keyFrame.length = S; var A = 0; var M; for (n = 0, a = S; n < a; n++) { M = x.keyFrame[n] = new W; { } M.duration = e.getFloat32(); M.startTime = A; if (x.lerpType === 2) { M.interpolationData = []; var I = e.getUint8(); var E = 0; E = e.getFloat32(); switch (E) { case 254: M.interpolationData.length = T; for (l = 0; l < T; l++)M.interpolationData[l] = 0; break; case 255: M.interpolationData.length = T; for (l = 0; l < T; l++)M.interpolationData[l] = 5; break; default: M.interpolationData.push(E); for (h = 1; h < I; h++) { M.interpolationData.push(e.getFloat32()) } } } M.data = new Float32Array(T); for (o = 0; o < T; o++) { M.data[o] = e.getFloat32(); if (M.data[o] > -1e-8 && M.data[o] < 1e-8) M.data[o] = 0 } A += M.duration } M.startTime = m.playTime; x.playTime = m.playTime; t._calculateKeyFrame(x, S, T) } } }; return t }(); var L = function () { function w() { } a(w, "laya.ani.AnimationParser02"); w.READ_DATA = function () { w._DATA.offset = w._reader.getUint32(); w._DATA.size = w._reader.getUint32() }; w.READ_BLOCK = function () { var t = w._BLOCK.count = w._reader.getUint16(); var e = w._BLOCK.blockStarts = []; var i = w._BLOCK.blockLengths = []; for (var r = 0; r < t; r++) { e.push(w._reader.getUint32()); i.push(w._reader.getUint32()) } }; w.READ_STRINGS = function () { var t = w._reader.getUint32(); var e = w._reader.getUint16(); var i = w._reader.pos; w._reader.pos = t + w._DATA.offset; for (var r = 0; r < e; r++)w._strings[r] = w._reader.readUTFString(); w._reader.pos = i }; w.parse = function (t, e) { w._templet = t; w._reader = e; var i = e.__getBuffer(); w.READ_DATA(); w.READ_BLOCK(); w.READ_STRINGS(); for (var r = 0, s = w._BLOCK.count; r < s; r++) { var n = e.getUint16(); var a = w._strings[n]; var o = w["READ_" + a]; if (o == null) throw new Error("model file err,no this function:" + n + " " + a); else o.call() } }; w.READ_ANIMATIONS = function () { var t = w._reader; var e = t.__getBuffer(); var i = 0, r = 0, s = 0, n = 0, a = 0; var o = t.getUint16(); var h = []; h.length = o; for (i = 0; i < o; i++)h[i] = X.interpolation[t.getByte()]; var l = t.getUint8(); w._templet._anis.length = l; for (i = 0; i < l; i++) { var u = w._templet._anis[i] = {}; u.nodes = new Array; var c = u.name = w._strings[t.getUint16()]; w._templet._aniMap[c] = i; u.bone3DMap = {}; u.playTime = t.getFloat32(); var f = u.nodes.length = t.getInt16(); u.totalKeyframeDatasLength = 0; for (r = 0; r < f; r++) { var _ = u.nodes[r] = {}; _.keyframeWidth = o; _.childs = []; var d = t.getUint16(); if (d >= 0) { _.name = w._strings[d]; u.bone3DMap[_.name] = r } _.keyFrame = new Array; _.parentIndex = t.getInt16(); _.parentIndex == -1 ? _.parent = null : _.parent = u.nodes[_.parentIndex]; u.totalKeyframeDatasLength += o; _.interpolationMethod = h; if (_.parent != null) _.parent.childs.push(_); var p = t.getUint16(); _.keyFrame.length = p; var v = null, m = null; for (s = 0, n = p; s < n; s++) { v = _.keyFrame[s] = {}; v.startTime = t.getFloat32(); m && (m.duration = v.startTime - m.startTime); var g = w._DATA.offset; var y = t.getUint32(); var x = o * 4; var b = e.slice(g + y, g + y + x); v.data = new Float32Array(b); m = v } v.duration = 0; _.playTime = u.playTime; w._templet._calculateKeyFrame(_, p, o) } } }; w._templet = null; w._reader = null; w._strings = []; s(w, ["_BLOCK", function () { return this._BLOCK = { count: 0 } }, "_DATA", function () { return this._DATA = { offset: 0, size: 0 } }]); return w }(); var k = function () { function t() { } a(t, "laya.ani.AnimationState"); t.stopped = 0; t.paused = 1; t.playing = 2; return t }(); var Ft = function () { function n() { this.name = null; this.root = null; this.parentBone = null; this.length = 10; this.transform = null; this.inheritScale = true; this.inheritRotation = true; this.rotation = NaN; this.resultRotation = NaN; this.d = -1; this._tempMatrix = null; this._sprite = null; this.resultTransform = new qt; this.resultMatrix = new Bt; this._children = [] } a(n, "laya.ani.bone.Bone"); var t = n.prototype; t.setTempMatrix = function (t) { this._tempMatrix = t; var e = 0, i = 0; var r; for (e = 0, i = this._children.length; e < i; e++) { r = this._children[e]; r.setTempMatrix(this._tempMatrix) } }; t.update = function (t) { this.rotation = this.transform.skX; var e; if (t) { e = this.resultTransform.getMatrix(); Bt.mul(e, t, this.resultMatrix); this.resultRotation = this.rotation } else { this.resultRotation = this.rotation + this.parentBone.resultRotation; if (this.parentBone) { if (this.inheritRotation && this.inheritScale) { e = this.resultTransform.getMatrix(); Bt.mul(e, this.parentBone.resultMatrix, this.resultMatrix) } else { var i = 0; var r = this.parentBone; var s = NaN; var n = NaN; var a = NaN; var o = this.parentBone.resultMatrix; e = this.resultTransform.getMatrix(); var h = o.a * e.tx + o.c * e.ty + o.tx; var l = o.b * e.tx + o.d * e.ty + o.ty; var u = new Bt; if (this.inheritRotation) { s = Math.atan2(r.resultMatrix.b, r.resultMatrix.a); n = Math.cos(s), a = Math.sin(s); u.setTo(n, a, -a, n, 0, 0); Bt.mul(this._tempMatrix, u, Bt.TEMP); Bt.TEMP.copyTo(u); e = this.resultTransform.getMatrix(); Bt.mul(e, u, this.resultMatrix); if (this.resultTransform.scX * this.resultTransform.scY < 0) { this.resultMatrix.rotate(Math.PI * .5) } this.resultMatrix.tx = h; this.resultMatrix.ty = l } else if (this.inheritScale) { e = this.resultTransform.getMatrix(); Bt.TEMP.identity(); Bt.TEMP.d = this.d; Bt.mul(e, Bt.TEMP, this.resultMatrix); this.resultMatrix.tx = h; this.resultMatrix.ty = l } else { e = this.resultTransform.getMatrix(); Bt.TEMP.identity(); Bt.TEMP.d = this.d; Bt.mul(e, Bt.TEMP, this.resultMatrix); this.resultMatrix.tx = h; this.resultMatrix.ty = l } } } else { e = this.resultTransform.getMatrix(); e.copyTo(this.resultMatrix) } } var c = 0, f = 0; var _; for (c = 0, f = this._children.length; c < f; c++) { _ = this._children[c]; _.update() } }; t.updateChild = function () { var t = 0, e = 0; var i; for (t = 0, e = this._children.length; t < e; t++) { i = this._children[t]; i.update() } }; t.setRotation = function (t) { if (this._sprite) { this._sprite.rotation = t * 180 / Math.PI } }; t.updateDraw = function (t, e) { if (!n.ShowBones || n.ShowBones[this.name]) { if (this._sprite) { this._sprite.x = t + this.resultMatrix.tx; this._sprite.y = e + this.resultMatrix.ty } else { this._sprite = new nt; this._sprite.graphics.drawCircle(0, 0, 5, "#ff0000"); this._sprite.graphics.drawLine(0, 0, this.length, 0, "#00ff00"); this._sprite.graphics.fillText(this.name, 0, 0, "20px Arial", "#00ff00", "center"); st.stage.addChild(this._sprite); this._sprite.x = t + this.resultMatrix.tx; this._sprite.y = e + this.resultMatrix.ty } } var i = 0, r = 0; var s; for (i = 0, r = this._children.length; i < r; i++) { s = this._children[i]; s.updateDraw(t, e) } }; t.addChild = function (t) { this._children.push(t); t.parentBone = this }; t.findBone = function (t) { if (this.name == t) { return this } else { var e = 0, i = 0; var r; var s; for (e = 0, i = this._children.length; e < i; e++) { r = this._children[e]; s = r.findBone(t); if (s) { return s } } } return null }; t.localToWorld = function (t) { var e = t[0]; var i = t[1]; t[0] = e * this.resultMatrix.a + i * this.resultMatrix.c + this.resultMatrix.tx; t[1] = e * this.resultMatrix.b + i * this.resultMatrix.d + this.resultMatrix.ty }; n.ShowBones = {}; return n }(); var Ot = function () { function x() { this.name = null; this.parent = null; this.attachmentName = null; this.srcDisplayIndex = -1; this.type = "src"; this.templet = null; this.currSlotData = null; this.currTexture = null; this.currDisplayData = null; this.displayIndex = -1; this.originalIndex = -1; this._diyTexture = null; this._parentMatrix = null; this._resultMatrix = null; this._replaceDic = {}; this._curDiyUV = null; this._curDiyVS = null; this._skinSprite = null; this.deformData = null; this._mVerticleArr = null } a(x, "laya.ani.bone.BoneSlot"); var t = x.prototype; t.showSlotData = function (t, e) { e === void 0 && (e = true); this.currSlotData = t; if (e) this.displayIndex = this.srcDisplayIndex; this.currDisplayData = null; this.currTexture = null }; t.showDisplayByName = function (t) { if (this.currSlotData) { this.showDisplayByIndex(this.currSlotData.getDisplayByName(t)) } }; t.replaceDisplayByName = function (t, e) { if (!this.currSlotData) return; var i = 0; i = this.currSlotData.getDisplayByName(t); var r = 0; r = this.currSlotData.getDisplayByName(e); this.replaceDisplayByIndex(i, r) }; t.replaceDisplayByIndex = function (t, e) { if (!this.currSlotData) return; this._replaceDic[t] = e; if (this.originalIndex == t) { this.showDisplayByIndex(t) } }; t.showDisplayByIndex = function (t) { this.originalIndex = t; if (this._replaceDic[t] != null) t = this._replaceDic[t]; if (this.currSlotData && t > -1 && t < this.currSlotData.displayArr.length) { this.displayIndex = t; this.currDisplayData = this.currSlotData.displayArr[t]; if (this.currDisplayData) { var e = this.currDisplayData.name; this.currTexture = this.templet.getTexture(e); if (this.currTexture && this.currDisplayData.type == 0 && this.currDisplayData.uvs && (!b.isConchApp || b.isConchApp && nt.RUNTIMEVERION > "0.9.15")) { this.currTexture = this.currDisplayData.createTexture(this.currTexture) } } } else { this.displayIndex = -1; this.currDisplayData = null; this.currTexture = null } }; t.replaceSkin = function (t) { this._diyTexture = t; if (this._curDiyUV) this._curDiyUV.length = 0; if (this.currDisplayData && this._diyTexture == this.currDisplayData.texture) { this._diyTexture = null } }; t.setParentMatrix = function (t) { this._parentMatrix = t }; t.draw = function (t, e, i, r) { i === void 0 && (i = false); r === void 0 && (r = 1); if (this._diyTexture == null && this.currTexture == null || this.currDisplayData == null) { if (!(this.currDisplayData && this.currDisplayData.type == 3)) { return } } var s = this.currTexture; if (this._diyTexture) s = this._diyTexture; var n; switch (this.currDisplayData.type) { case 0: if (t) { var a = this.getDisplayMatrix(); if (this._parentMatrix) { var o = false; if (a) { Bt.mul(a, this._parentMatrix, Bt.TEMP); var h; if (i) { if (this._resultMatrix == null) this._resultMatrix = new Bt; h = this._resultMatrix } else { h = new Bt } if (!b.isWebGL && this.currDisplayData.uvs || b.isWebGL && this._diyTexture && this.currDisplayData.uvs) { var l = x._tempMatrix; l.identity(); if (this.currDisplayData.uvs[1] > this.currDisplayData.uvs[5]) { l.d = -1 } if (this.currDisplayData.uvs[0] > this.currDisplayData.uvs[4] && this.currDisplayData.uvs[1] > this.currDisplayData.uvs[5]) { o = true; l.rotate(-Math.PI / 2) } Bt.mul(l, Bt.TEMP, h) } else { Bt.TEMP.copyTo(h) } if (o) { t.drawTexture(s, -this.currDisplayData.height / 2, -this.currDisplayData.width / 2, this.currDisplayData.height, this.currDisplayData.width, h) } else { t.drawTexture(s, -this.currDisplayData.width / 2, -this.currDisplayData.height / 2, this.currDisplayData.width, this.currDisplayData.height, h) } } } } break; case 1: if (i) { if (this._skinSprite == null) { this._skinSprite = x.createSkinMesh() } n = this._skinSprite } else { n = x.createSkinMesh() } if (n == null) { return }; var u; var c = 1; var f = 1; var _ = 1; var d = 1; if (this.currDisplayData.bones == null) { var p = this.currDisplayData.weights; if (this.deformData) { p = this.deformData } var v; if (this._diyTexture) { if (!this._curDiyUV) { this._curDiyUV = [] } if (this._curDiyUV.length == 0) { this._curDiyUV = U.getRelativeUV(this.currTexture.uv, this.currDisplayData.uvs, this._curDiyUV); this._curDiyUV = U.getAbsoluteUV(this._diyTexture.uv, this._curDiyUV, this._curDiyUV) } v = this._curDiyUV } else { v = this.currDisplayData.uvs } this._mVerticleArr = p; var m = this.currDisplayData.triangles.length / 3; u = this.currDisplayData.triangles; n.init2(s, null, u, this._mVerticleArr, v); var g = this.getDisplayMatrix(); if (this._parentMatrix) { if (g) { Bt.mul(g, this._parentMatrix, Bt.TEMP); var y; if (i) { if (this._resultMatrix == null) this._resultMatrix = new Bt; y = this._resultMatrix } else { y = new Bt } Bt.TEMP.copyTo(y); n.transform = y } } } else { this.skinMesh(e, n, r) } t.drawSkin(n); break; case 2: if (i) { if (this._skinSprite == null) { this._skinSprite = x.createSkinMesh() } n = this._skinSprite } else { n = x.createSkinMesh() } if (n == null) { return } this.skinMesh(e, n, r); t.drawSkin(n); break; case 3: break } }; t.skinMesh = function (t, e, i) { var r = this.currTexture; var s = this.currDisplayData.bones; var n; if (this._diyTexture) { r = this._diyTexture; if (!this._curDiyUV) { this._curDiyUV = [] } if (this._curDiyUV.length == 0) { this._curDiyUV = U.getRelativeUV(this.currTexture.uv, this.currDisplayData.uvs, this._curDiyUV); this._curDiyUV = U.getAbsoluteUV(this._diyTexture.uv, this._curDiyUV, this._curDiyUV) } n = this._curDiyUV } else { n = this.currDisplayData.uvs } var a = this.currDisplayData.weights; var o = this.currDisplayData.triangles; var h; var l = 0; var u = 0; var c = 0; var f; var _ = NaN; var d = NaN; var p = 0; var v = 0; var m = []; var g = 0, y = 0, x = 0; var b = 1; var w = 1; var T = 1; var C = i; if (this.deformData && this.deformData.length > 0) { var S = 0; for (g = 0, x = s.length; g < x;) { c = s[g++] + g; l = 0, u = 0; for (; g < c; g++) { f = t[s[g]]; _ = a[p] + this.deformData[S++]; d = a[p + 1] + this.deformData[S++]; v = a[p + 2]; l += (_ * f.a + d * f.c + f.tx) * v; u += (_ * f.b + d * f.d + f.ty) * v; p += 3 } m.push(l, u) } } else { for (g = 0, x = s.length; g < x;) { c = s[g++] + g; l = 0, u = 0; for (; g < c; g++) { f = t[s[g]]; _ = a[p]; d = a[p + 1]; v = a[p + 2]; l += (_ * f.a + d * f.c + f.tx) * v; u += (_ * f.b + d * f.d + f.ty) * v; p += 3 } m.push(l, u) } } this._mVerticleArr = m; h = o; e.init2(r, null, h, this._mVerticleArr, n) }; t.drawBonePoint = function (t) { if (t && this._parentMatrix) { t.drawCircle(this._parentMatrix.tx, this._parentMatrix.ty, 5, "#ff0000") } }; t.getDisplayMatrix = function () { if (this.currDisplayData) { return this.currDisplayData.transform.getMatrix() } return null }; t.getMatrix = function () { return this._resultMatrix }; t.copy = function () { var t = new x; t.type = "copy"; t.name = this.name; t.attachmentName = this.attachmentName; t.srcDisplayIndex = this.srcDisplayIndex; t.parent = this.parent; t.displayIndex = this.displayIndex; t.templet = this.templet; t.currSlotData = this.currSlotData; t.currTexture = this.currTexture; t.currDisplayData = this.currDisplayData; return t }; x.createSkinMesh = function () { if (b.isWebGL || b.isConchApp) { return T.skinAniSprite() } else { if (!b.isWebGL) { if ($.useSimpleMeshInCanvas) { return new K } else { return new Y } } } return null }; s(x, ["_tempMatrix", function () { return this._tempMatrix = new Bt }]); return x }(); var D = function () { function t() { this.mesh = null; this.transform = null; this.context = null; this.mode = 0 } a(t, "laya.ani.bone.canvasmesh.CanvasMeshRender"); var e = t.prototype; e.renderToContext = function (t) { this.context = t.ctx || t; if (this.mesh) { if (this.mode == 0) { this._renderWithIndexes(this.mesh) } else { this._renderNoIndexes(this.mesh) } } }; e._renderNoIndexes = function (t) { var e = 0, i = t.vertices.length / 2; var r = 0; for (e = 0; e < i - 2; e++) { r = e * 2; this._renderDrawTriangle(t, r, r + 2, r + 4) } }; e._renderWithIndexes = function (t) { var e = t.indexes; var i = 0, r = e.length; for (i = 0; i < r; i += 3) { var s = e[i] * 2; var n = e[i + 1] * 2; var a = e[i + 2] * 2; this._renderDrawTriangle(t, s, n, a) } }; e._renderDrawTriangle = function (t, e, i, r) { var s = this.context; var n = t.uvs; var a = t.vertices; var o = t.texture; var h = o.bitmap; var l = h.source; var u = o.width; var c = o.height; var f = h.width; var _ = h.height; var d = NaN; var p = NaN; var v = NaN; var m = NaN; var g = NaN; var y = NaN; if (t.useUvTransform) { var x = t.uvTransform; d = (n[e] * x.a + n[e + 1] * x.c + x.tx) * f; p = (n[i] * x.a + n[i + 1] * x.c + x.tx) * f; v = (n[r] * x.a + n[r + 1] * x.c + x.tx) * f; m = (n[e] * x.b + n[e + 1] * x.d + x.ty) * _; g = (n[i] * x.b + n[i + 1] * x.d + x.ty) * _; y = (n[r] * x.b + n[r + 1] * x.d + x.ty) * _ } else { d = n[e] * f; p = n[i] * f; v = n[r] * f; m = n[e + 1] * _; g = n[i + 1] * _; y = n[r + 1] * _ } var b = a[e]; var w = a[i]; var T = a[r]; var C = a[e + 1]; var S = a[i + 1]; var A = a[r + 1]; if (t.canvasPadding > 0) { var M = t.canvasPadding; var I = t.canvasPadding; var E = (b + w + T) / 3; var R = (C + S + A) / 3; var P = b - E; var L = C - R; var k = Math.sqrt(P * P + L * L); b = E + P / k * (k + M); C = R + L / k * (k + I); P = w - E; L = S - R; k = Math.sqrt(P * P + L * L); w = E + P / k * (k + M); S = R + L / k * (k + I); P = T - E; L = A - R; k = Math.sqrt(P * P + L * L); T = E + P / k * (k + M); A = R + L / k * (k + I) } s.save(); if (this.transform) { var D = this.transform; s.transform(D.a, D.b, D.c, D.d, D.tx, D.ty) } s.beginPath(); s.moveTo(b, C); s.lineTo(w, S); s.lineTo(T, A); s.closePath(); s.clip(); var B = d * g + m * v + p * y - g * v - m * p - d * y; var N = 1 / B; var F = b * g + m * T + w * y - g * T - m * w - b * y; var O = d * w + b * v + p * T - w * v - b * p - d * T; var z = d * g * T + m * w * v + b * p * y - b * g * v - m * p * T - d * w * y; var U = C * g + m * A + S * y - g * A - m * S - C * y; var W = d * S + C * v + p * A - S * v - C * p - d * A; var V = d * g * A + m * S * v + C * p * y - C * g * v - m * p * A - d * S * y; s.transform(F * N, U * N, O * N, W * N, z * N, V * N); s.drawImage(l, o.uv[0] * f, o.uv[1] * _, u, c, o.uv[0] * f, o.uv[1] * _, u, c); s.restore() }; return t }(); var B = function () { function t() { this.texture = null; this.uvs = [0, 0, 1, 0, 1, 1, 0, 1]; this.vertices = [0, 0, 100, 0, 100, 100, 0, 100]; this.indexes = [0, 1, 3, 3, 1, 2]; this.uvTransform = null; this.useUvTransform = false; this.canvasPadding = 1 } a(t, "laya.ani.bone.canvasmesh.MeshData"); var e = t.prototype; e.getBounds = function () { return y._getWrapRec(this.vertices) }; return t }(); var zt = function () { function t() { this.skinName = null; this.deformSlotDataList = [] } a(t, "laya.ani.bone.DeformAniData"); return t }(); var Ut = function () { function t() { this.deformSlotDisplayList = [] } a(t, "laya.ani.bone.DeformSlotData"); return t }(); var Wt = function () { function t() { this.boneSlot = null; this.slotIndex = -1; this.attachment = null; this.deformData = null; this.frameIndex = 0; this.timeList = []; this.vectices = []; this.tweenKeyList = [] } a(t, "laya.ani.bone.DeformSlotDisplayData"); var e = t.prototype; e.binarySearch1 = function (t, e) { var i = 0; var r = t.length - 2; if (r == 0) return 1; var s = r >>> 1; while (true) { if (t[Math.floor(s + 1)] <= e) i = s + 1; else r = s; if (i == r) return i + 1; s = i + r >>> 1 } return 0 }; e.apply = function (t, e, i) { i === void 0 && (i = 1); t += .05; if (this.timeList.length <= 0) { return } var r = 0; var s = 0; var n = this.timeList[0]; if (t < n) { return } var a = this.vectices[0].length; var o = []; var h = this.binarySearch1(this.timeList, t); this.frameIndex = h; if (t >= this.timeList[this.timeList.length - 1]) { var l = this.vectices[this.vectices.length - 1]; if (i < 1) { for (r = 0; r < a; r++) { o[r] += (l[r] - o[r]) * i } } else { for (r = 0; r < a; r++) { o[r] = l[r] } } this.deformData = o; return } var u = this.tweenKeyList[this.frameIndex]; var c = this.vectices[this.frameIndex - 1]; var f = this.vectices[this.frameIndex]; var _ = this.timeList[this.frameIndex - 1]; var d = this.timeList[this.frameIndex]; if (this.tweenKeyList[h - 1]) { i = (t - _) / (d - _) } else { i = 0 } var p = NaN; for (r = 0; r < a; r++) { p = c[r]; o[r] = p + (f[r] - p) * i } this.deformData = o }; return t }(); var Vt = function () { function t() { this.time = NaN; this.drawOrder = [] } a(t, "laya.ani.bone.DrawOrderData"); return t }(); var Ht = function () { function t() { this.name = null; this.intValue = 0; this.floatValue = NaN; this.stringValue = null; this.audioValue = null; this.time = NaN } a(t, "laya.ani.bone.EventData"); return t }(); var N = function () { function rt(t, e) { this._targetBone = null; this._bones = null; this._data = null; this.name = null; this.mix = NaN; this.bendDirection = NaN; this.isSpine = true; this._sp = null; this.isDebug = false; this._data = t; this._targetBone = e[t.targetBoneIndex]; this.isSpine = t.isSpine; if (this._bones == null) this._bones = []; this._bones.length = 0; for (var i = 0, r = t.boneIndexs.length; i < r; i++) { this._bones.push(e[t.boneIndexs[i]]) } this.name = t.name; this.mix = t.mix; this.bendDirection = t.bendDirection } a(rt, "laya.ani.bone.IkConstraint"); var t = rt.prototype; t.apply = function () { switch (this._bones.length) { case 1: this._applyIk1(this._bones[0], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.mix); break; case 2: if (this.isSpine) { this._applyIk2(this._bones[0], this._bones[1], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.bendDirection, this.mix) } else { this._applyIk3(this._bones[0], this._bones[1], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.bendDirection, this.mix) } break } }; t._applyIk1 = function (t, e, i, r) { var s = t.parentBone; var n = 1 / (s.resultMatrix.a * s.resultMatrix.d - s.resultMatrix.b * s.resultMatrix.c); var a = e - s.resultMatrix.tx; var o = i - s.resultMatrix.ty; var h = (a * s.resultMatrix.d - o * s.resultMatrix.c) * n - t.transform.x; var l = (o * s.resultMatrix.a - a * s.resultMatrix.b) * n - t.transform.y; var u = Math.atan2(l, h) * rt.radDeg - 0 - t.transform.skX; if (t.transform.scX < 0) u += 180; if (u > 180) u -= 360; else if (u < -180) u += 360; t.transform.skX = t.transform.skY = t.transform.skX + u * r; t.update() }; t.updatePos = function (t, e) { if (this._sp) { this._sp.pos(t, e) } }; t._applyIk2 = function (t, e, i, r, s, n) { if (n == 0) { return } var a = t.resultTransform.x, o = t.resultTransform.y; var h = t.transform.scX, l = t.transform.scY; var u = e.transform.scX; var c = 0, f = 0, _ = 0; if (h < 0) { h = -h; c = 180; _ = -1 } else { c = 0; _ = 1 } if (l < 0) { l = -l; _ = -_ } if (u < 0) { u = -u; f = 180 } else { f = 0 } var d = e.resultTransform.x, p = NaN, v = NaN, m = NaN; var g = t.resultMatrix.a, y = t.resultMatrix.c; var x = t.resultMatrix.b, b = t.resultMatrix.d; var w = Math.abs(h - l) <= 1e-4; if (!w) { p = 0; v = g * d + t.resultMatrix.tx; m = x * d + t.resultMatrix.ty } else { p = e.resultTransform.y; v = g * d + y * p + t.resultMatrix.tx; m = x * d + b * p + t.resultMatrix.ty } if (this.isDebug) { if (!this._sp) { this._sp = new nt; st.stage.addChild(this._sp) } this._sp.graphics.clear(); this._sp.graphics.drawCircle(i, r, 15, "#ffff00"); this._sp.graphics.drawCircle(v, m, 15, "#ff00ff") } t.setRotation(Math.atan2(m - t.resultMatrix.ty, v - t.resultMatrix.tx)); var T = t.parentBone; g = T.resultMatrix.a; y = T.resultMatrix.c; x = T.resultMatrix.b; b = T.resultMatrix.d; var C = 1 / (g * b - y * x); var S = i - T.resultMatrix.tx, A = r - T.resultMatrix.ty; var M = (S * b - A * y) * C - a; var I = (A * g - S * x) * C - o; S = v - T.resultMatrix.tx; A = m - T.resultMatrix.ty; var E = (S * b - A * y) * C - a; var R = (A * g - S * x) * C - o; var P = Math.sqrt(E * E + R * R); var L = e.length * u; var k = NaN, D = NaN; if (w) { L *= h; var B = (M * M + I * I - P * P - L * L) / (2 * P * L); if (B < -1) B = -1; else if (B > 1) B = 1; D = Math.acos(B) * s; g = P + L * B; y = L * Math.sin(D); k = Math.atan2(I * g - M * y, M * g + I * y) } else { g = h * L; y = l * L; var N = g * g, F = y * y, O = M * M + I * I, z = Math.atan2(I, M); x = F * P * P + N * O - N * F; var U = -2 * F * P, W = F - N; b = U * U - 4 * W * x; if (b > 0) { var V = Math.sqrt(b); if (U < 0) V = -V; V = -(U + V) / 2; var H = V / W, G = x / V; var Y = Math.abs(H) < Math.abs(G) ? H : G; if (Y * Y <= O) { A = Math.sqrt(O - Y * Y) * s; k = z - Math.atan2(A, Y); D = Math.atan2(A / l, (Y - P) / h) } } var X = 0, j = Number.MAX_VALUE, K = 0, $ = 0; var q = 0, Z = 0, Q = 0, J = 0; S = P + g; b = S * S; if (b > Z) { q = 0; Z = b; Q = S } S = P - g; b = S * S; if (b < j) { X = Math.PI; j = b; K = S } var tt = Math.acos(-g * P / (N - F)); S = g * Math.cos(tt) + P; A = y * Math.sin(tt); b = S * S + A * A; if (b < j) { X = tt; j = b; K = S; $ = A } if (b > Z) { q = tt; Z = b; Q = S; J = A } if (O <= (j + Z) / 2) { k = z - Math.atan2($ * s, K); D = X * s } else { k = z - Math.atan2(J * s, Q); D = q * s } } var et = Math.atan2(p, d) * _; var it = t.resultTransform.skX; k = (k - et) * rt.radDeg + c - it; if (k > 180) k -= 360; else if (k < -180) k += 360; t.resultTransform.x = a; t.resultTransform.y = o; t.resultTransform.skX = t.resultTransform.skY = it + k * n; it = e.resultTransform.skX; it = it % 360; D = ((D + et) * rt.radDeg - 0) * _ + f - it; if (D > 180) D -= 360; else if (D < -180) D += 360; e.resultTransform.x = d; e.resultTransform.y = p; e.resultTransform.skX = e.resultTransform.skY = e.resultTransform.skY + D * n; t.update() }; t._applyIk3 = function (t, e, i, r, s, n) { if (n == 0) { return } var a = NaN, o = NaN; var h = e.resultMatrix.a * e.length; var l = e.resultMatrix.b * e.length; var u = h * h + l * l; var c = Math.sqrt(u); var f = t.resultMatrix.tx; var _ = t.resultMatrix.ty; var d = e.resultMatrix.tx; var p = e.resultMatrix.ty; var v = d - f; var m = p - _; var g = v * v + m * m; var y = Math.sqrt(g); v = i - t.resultMatrix.tx; m = r - t.resultMatrix.ty; var x = v * v + m * m; var b = Math.sqrt(x); var w = 0; if (c + y <= b || b + c <= y || b + y <= c) { var T = NaN; if (c + y <= b) { T = 1 } else { T = -1 } d = f + T * (i - f) * y / b; p = _ + T * (r - _) * y / b } else { var C = (g - u + x) / (2 * x); var S = Math.sqrt(g - C * C * x) / b; var A = f + v * C; var M = _ + m * C; var I = -m * S; var E = v * S; if (s > 0) { d = A - I; p = M - E } else { d = A + I; p = M + E } } a = d; o = p; if (this.isDebug) { if (!this._sp) { this._sp = new nt; st.stage.addChild(this._sp) } this._sp.graphics.clear(); this._sp.graphics.drawCircle(f, _, 15, "#ff00ff"); this._sp.graphics.drawCircle(i, r, 15, "#ffff00"); this._sp.graphics.drawCircle(a, o, 15, "#ff00ff") } var R = NaN; R = Math.atan2(o - t.resultMatrix.ty, a - t.resultMatrix.tx); t.setRotation(R); var P; P = rt._tempMatrix; P.identity(); P.rotate(R); P.scale(t.resultMatrix.getScaleX(), t.resultMatrix.getScaleY()); P.translate(t.resultMatrix.tx, t.resultMatrix.ty); P.copyTo(t.resultMatrix); t.updateChild(); var L = NaN; L = Math.atan2(r - o, i - a); e.setRotation(L); var k; k = rt._tempMatrix; k.identity(); k.rotate(L); k.scale(e.resultMatrix.getScaleX(), e.resultMatrix.getScaleY()); k.translate(a, o); P.copyTo(e.resultMatrix); e.updateChild() }; s(rt, ["radDeg", function () { return this.radDeg = 180 / Math.PI }, "degRad", function () { return this.degRad = Math.PI / 180 }, "_tempMatrix", function () { return this._tempMatrix = new Bt }]); return rt }(); var Gt = function () { function t() { this.name = null; this.targetBoneName = null; this.bendDirection = 1; this.mix = 1; this.isSpine = true; this.targetBoneIndex = -1; this.boneNames = []; this.boneIndexs = [] } a(t, "laya.ani.bone.IkConstraintData"); return t }(); var F = function () { function d() { } a(d, "laya.ani.bone.MeshTools"); d.findEdge = function (t, e, i) { e === void 0 && (e = 0); i === void 0 && (i = true); var r = 0, s = 0; var n = 0; s = t.length; n = -1; for (r = 0; r < s; r += 2) { if (n < 0 || i == t[n + e] < t[r + e]) { n = r } } return n }; d.findBestTriangle = function (t) { var e = 0; e = d.findEdge(t, 1, true); var i = 0; i = d.findEdge(t, 1, false); var r = 0; r = d.findEdge(t, 0, true); var s = 0; s = d.findEdge(t, 0, false); var n; n = d._bestTriangle; n.length = 0; n.push(r, s); if (n.indexOf(e) < 0) n.push(e); if (n.indexOf(i) < 0) n.push(i); return n }; d.solveMesh = function (t, e) { e = e || []; e.length = 0; var i; i = t.uvs; var r; r = t.vertices; var s; var n; n = d.findBestTriangle(i); var a = 0; var o = 0; var h = 0; a = n[0]; o = n[1]; h = n[2]; d._absArr.length = 0; var l; if (d.isNormalUV(t.texture.uv)) { d.adptTexture(t) } s = d.solvePoints(t.texture.uv, i[a], i[a + 1], i[o] - i[a], i[o + 1] - i[a + 1], i[h] - i[a], i[h + 1] - i[a + 1], d._absArr); l = d.transPoints(s, r[a], r[a + 1], r[o] - r[a], r[o + 1] - r[a + 1], r[h] - r[a], r[h + 1] - r[a + 1], e); return l }; d.findWrapRect = function (t) { var e = 0; e = d.findEdge(t, 1, true); var i = 0; i = d.findEdge(t, 1, false); var r = 0; r = d.findEdge(t, 0, true); var s = 0; s = d.findEdge(t, 0, false); var n = NaN; n = t[r]; var a = NaN; a = t[s]; var o = NaN; o = t[e + 1]; var h = NaN; h = t[i + 1]; var l; return [a, h, n - a, o - h] }; d.adptTexture = function (t) { var e; e = d.findWrapRect(t.uvs); var i; var r; i = t.texture; var s = i.width; var n = i.height; r = Nt.create(i, e[0] * s, e[1] * n, e[2] * s, e[3] * n); t.texture = r }; d.isNormalUV = function (t) { return t[0] == 0 && t[1] == 0 && t[4] == 1 && t[5] == 1 }; d.solvePoints = function (t, e, i, r, s, n, a, o) { o = o || []; var h = 0, l = 0; l = t.length; var u; for (h = 0; h < l; h += 2) { u = d.solve2(t[h], t[h + 1], e, i, r, s, n, a); o.push(u[0], u[1]) } return o }; d.transPoints = function (t, e, i, r, s, n, a, o) { o = o || []; var h = 0, l = 0; l = t.length; var u; for (h = 0; h < l; h += 2) { u = d.transPoint(t[h], t[h + 1], e, i, r, s, n, a, o) } return o }; d.transPoint = function (t, e, i, r, s, n, a, o, h) { h = h || []; var l = NaN; var u = NaN; l = i + s * t + a * e; u = r + n * t + o * e; h.push(l, u); return h }; d.solve2 = function (t, e, i, r, s, n, a, o, h, l) { h === void 0 && (h = false); l = l || []; var u = NaN, c = NaN; if (s == 0) { return d.solve2(t, e, i, r, a, o, s, n, true, l) } var f = NaN; var _ = NaN; f = t - i; _ = e - r; c = (_ - f * n / s) / (o - a * n / s); u = (f - c * a) / s; if (h) { l.push(c, u) } else { l.push(u, c) } return l }; d.solve = function (t, e, i, r) { return d.solve2(t.x, t.y, e.x, e.y, i.x, i.y, r.x, r.y) }; d._bestTriangle = []; d._absArr = []; return d }(); var O = function () { function ot(t, e) { this.target = null; this.data = null; this.bones = null; this.position = NaN; this.spacing = NaN; this.rotateMix = NaN; this.translateMix = NaN; this._debugKey = false; this._spaces = null; this._segments = []; this._curves = []; this.data = t; this.position = t.position; this.spacing = t.spacing; this.rotateMix = t.rotateMix; this.translateMix = t.translateMix; this.bones = []; var i = this.data.bones; for (var r = 0, s = i.length; r < s; r++) { this.bones.push(e[i[r]]) } } a(ot, "laya.ani.bone.PathConstraint"); var t = ot.prototype; t.apply = function (t, e) { if (!this.target) return; var i = this.translateMix; var r = this.translateMix; var s = i > 0; var n = r > 0; var a = this.data.spacingMode; var o = a == "length"; var h = this.data.rotateMode; var l = h == "tangent"; var u = h == "chainScale"; var c = []; var f = this.bones.length; var _ = l ? f : f + 1; var d = []; this._spaces = d; d[0] = this.position; var p = this.spacing; if (u || o) { for (var v = 0, m = _ - 1; v < m;) { var g = this.bones[v]; var y = g.length; var x = y * g.resultMatrix.a; var b = y * g.resultMatrix.b; y = Math.sqrt(x * x + b * b); if (u) c[v] = y; d[++v] = o ? Math.max(0, y + p) : p } } else { for (v = 1; v < _; v++) { d[v] = p } } var w = this.computeWorldPositions(this.target, t, e, _, l, this.data.positionMode == "percent", a == "percent"); if (this._debugKey) { for (v = 0; v < w.length; v++) { e.drawCircle(w[v++], w[v++], 5, "#00ff00") } var T = []; for (v = 0; v < w.length; v++) { T.push(w[v++], w[v++]) } e.drawLines(0, 0, T, "#ff0000") } var C = NaN; var S = NaN; var A = w[0]; var M = w[1]; var I = this.data.offsetRotation; var E = h == "chain" && I == 0; var R = NaN; for (v = 0, R = 3; v < f; v++ , R += 3) { g = this.bones[v]; g.resultMatrix.tx += (A - g.resultMatrix.tx) * i; g.resultMatrix.ty += (M - g.resultMatrix.ty) * i; x = w[R]; b = w[R + 1]; var P = x - A, L = b - M; if (u) { y = c[v]; if (y != 0) { var k = (Math.sqrt(P * P + L * L) / y - 1) * r + 1; g.resultMatrix.a *= k; g.resultMatrix.c *= k } } A = x; M = b; if (n) { var D = g.resultMatrix.a; var B = g.resultMatrix.c; var N = g.resultMatrix.b; var F = g.resultMatrix.d; var O = NaN; var z = NaN; var U = NaN; if (l) { O = w[R - 1] } else if (d[v + 1] == 0) { O = w[R + 2] } else { O = Math.atan2(L, P) } O -= Math.atan2(N, D) - I / 180 * Math.PI; if (E) { z = Math.cos(O); U = Math.sin(O); y = g.length; A += (y * (z * D - U * N) - P) * r; M += (y * (U * D + z * N) - L) * r } if (O > Math.PI) { O -= Math.PI * 2 } else if (O < -Math.PI) { O += Math.PI * 2 } O *= r; z = Math.cos(O); U = Math.sin(O); g.resultMatrix.a = z * D - U * N; g.resultMatrix.c = z * B - U * F; g.resultMatrix.b = U * D + z * N; g.resultMatrix.d = U * B + z * F } } }; t.computeWorldVertices2 = function (t, e, i, r, s, n) { var a = t.currDisplayData.bones; var o = t.currDisplayData.weights; var h = t.currDisplayData.triangles; var l; var u = 0; var c = 0; var f = 0; var _ = 0; var d = 0; var p = 0; var v = 0; var m = 0; var g = 0; var y = 0; var x; var b = 0; if (a == null) { if (!h) h = o; if (t.deformData) h = t.deformData; var w; w = t.parent; if (e) { b = e.length; for (u = 0; u < b; u++) { if (e[u].name == w) { x = e[u]; break } } } var T; if (x) { T = x.resultMatrix } if (!T) T = ot._tempMt; var C = T.tx; var S = T.ty; var A = T.a, M = T.b, I = T.c, E = T.d; if (x) E *= x.d; for (c = i, d = n; d < r; c += 2, d += 2) { g = h[c], y = h[c + 1]; s[d] = g * A + y * M + C; s[d + 1] = -(g * I + y * E + S) } return } for (u = 0; u < i; u += 2) { _ = a[c]; c += _ + 1; f += _ } var R = e; for (d = n, p = f * 3; d < r; d += 2) { v = 0, m = 0; _ = a[c++]; _ += c; for (; c < _; c++ , p += 3) { l = R[a[c]].resultMatrix; g = o[p]; y = o[p + 1]; var P = o[p + 2]; v += (g * l.a + y * l.c + l.tx) * P; m += (g * l.b + y * l.d + l.ty) * P } s[d] = v; s[d + 1] = m } }; t.computeWorldPositions = function (t, e, i, r, s, n, a) { var o = t.currDisplayData.bones; var h = t.currDisplayData.weights; var l = t.currDisplayData.triangles; var u = 0; var c = 0; var f = 0; var _; var d = NaN; var p = NaN; var v = 0; var m = 0; var g = []; var y = 0, x = 0, b = 0; var w = t.currDisplayData.verLen; var T = t; var C = this.position; var S = this._spaces; var A = []; var M = []; var I = false; var E = w / 6; var R = -1; var P = NaN; var L = 0, k = 0; var D = NaN; var B = NaN; var N = NaN; var F = NaN; if (!true) { var O = t.currDisplayData.lengths; E -= I ? 1 : 2; P = O[E]; if (n) C *= P; if (a) { for (y = 0; y < r; y++)S[y] *= P } A.length = 8; for (y = 0, L = 0, k = 0; y < r; y++ , L += 3) { B = S[y]; C += B; D = C; if (I) { D %= P; if (D < 0) D += P; k = 0 } else if (D < 0) { if (R != ot.BEFORE) { R = ot.BEFORE; this.computeWorldVertices2(T, e, 2, 4, A, 0) } this.addBeforePosition(D, A, 0, M, L); continue } else if (D > P) { if (R != ot.AFTER) { R = ot.AFTER; this.computeWorldVertices2(T, e, w - 6, 4, A, 0) } this.addAfterPosition(D - P, A, 0, M, L); continue } for (; ; k++) { F = O[k]; if (D > F) continue; if (k == 0) D /= F; else { N = O[k - 1]; D = (D - N) / (F - N) } break } if (k != R) { R = k; if (I && k == E) { this.computeWorldVertices2(T, e, w - 4, 4, A, 0); this.computeWorldVertices2(T, e, 0, 4, A, 4) } else this.computeWorldVertices2(T, e, k * 6 + 2, 8, A, 0) } this.addCurvePosition(D, A[0], A[1], A[2], A[3], A[4], A[5], A[6], A[7], M, L, s || y > 0 && B == 0) } return M } if (I) { w += 2; A[w - 2] = A[0]; A[w - 1] = A[1] } else { E--; w -= 4; this.computeWorldVertices2(t, e, 2, w, g, 0); if (this._debugKey) { for (y = 0; y < g.length;) { i.drawCircle(g[y++], g[y++], 10, "#ff0000") } } A = g } this._curves.length = E; var z = this._curves; P = 0; var U = A[0], W = A[1], V = 0, H = 0, G = 0, Y = 0, X = 0, j = 0; var K = NaN, $ = NaN, q = NaN, Z = NaN, Q = NaN, J = NaN, tt = NaN, et = NaN; var it = 0; for (y = 0, it = 2; y < E; y++ , it += 6) { V = A[it]; H = A[it + 1]; G = A[it + 2]; Y = A[it + 3]; X = A[it + 4]; j = A[it + 5]; K = (U - V * 2 + G) * .1875; $ = (W - H * 2 + Y) * .1875; q = ((V - G) * 3 - U + X) * .09375; Z = ((H - Y) * 3 - W + j) * .09375; Q = K * 2 + q; J = $ * 2 + Z; tt = (V - U) * .75 + K + q * .16666667; et = (H - W) * .75 + $ + Z * .16666667; P += Math.sqrt(tt * tt + et * et); tt += Q; et += J; Q += q; J += Z; P += Math.sqrt(tt * tt + et * et); tt += Q; et += J; P += Math.sqrt(tt * tt + et * et); tt += Q + q; et += J + Z; P += Math.sqrt(tt * tt + et * et); z[y] = P; U = X; W = j } if (n) C *= P; if (a) { for (y = 0; y < r; y++)S[y] *= P } var rt = this._segments; var st = 0; var nt = 0; for (y = 0, L = 0, k = 0, nt = 0; y < r; y++ , L += 3) { B = S[y]; C += B; D = C; if (I) { D %= P; if (D < 0) D += P; k = 0 } else if (D < 0) { this.addBeforePosition(D, A, 0, M, L); continue } else if (D > P) { this.addAfterPosition(D - P, A, w - 4, M, L); continue } for (; ; k++) { F = z[k]; if (D > F) continue; if (k == 0) D /= F; else { N = z[k - 1]; D = (D - N) / (F - N) } break } if (k != R) { R = k; var at = k * 6; U = A[at]; W = A[at + 1]; V = A[at + 2]; H = A[at + 3]; G = A[at + 4]; Y = A[at + 5]; X = A[at + 6]; j = A[at + 7]; K = (U - V * 2 + G) * .03; $ = (W - H * 2 + Y) * .03; q = ((V - G) * 3 - U + X) * .006; Z = ((H - Y) * 3 - W + j) * .006; Q = K * 2 + q; J = $ * 2 + Z; tt = (V - U) * .3 + K + q * .16666667; et = (H - W) * .3 + $ + Z * .16666667; st = Math.sqrt(tt * tt + et * et); rt[0] = st; for (at = 1; at < 8; at++) { tt += Q; et += J; Q += q; J += Z; st += Math.sqrt(tt * tt + et * et); rt[at] = st } tt += Q; et += J; st += Math.sqrt(tt * tt + et * et); rt[8] = st; tt += Q + q; et += J + Z; st += Math.sqrt(tt * tt + et * et); rt[9] = st; nt = 0 } D *= st; for (; ; nt++) { F = rt[nt]; if (D > F) continue; if (nt == 0) D /= F; else { N = rt[nt - 1]; D = nt + (D - N) / (F - N) } break } this.addCurvePosition(D * .1, U, W, V, H, G, Y, X, j, M, L, s || y > 0 && B == 0) } return M }; t.addBeforePosition = function (t, e, i, r, s) { var n = e[i], a = e[i + 1], o = e[i + 2] - n, h = e[i + 3] - a, l = Math.atan2(h, o); r[s] = n + t * Math.cos(l); r[s + 1] = a + t * Math.sin(l); r[s + 2] = l }; t.addAfterPosition = function (t, e, i, r, s) { var n = e[i + 2], a = e[i + 3], o = n - e[i], h = a - e[i + 1], l = Math.atan2(h, o); r[s] = n + t * Math.cos(l); r[s + 1] = a + t * Math.sin(l); r[s + 2] = l }; t.addCurvePosition = function (t, e, i, r, s, n, a, o, h, l, u, c) { if (t == 0) t = 1e-4; var f = t * t, _ = f * t, d = 1 - t, p = d * d, v = p * d; var m = d * t, g = m * 3, y = d * g, x = g * t; var b = e * v + r * y + n * x + o * _, w = i * v + s * y + a * x + h * _; l[u] = b; l[u + 1] = w; if (c) { l[u + 2] = Math.atan2(w - (i * p + s * m * 2 + a * f), b - (e * p + r * m * 2 + n * f)) } else { l[u + 2] = 0 } }; ot.NONE = -1; ot.BEFORE = -2; ot.AFTER = -3; s(ot, ["_tempMt", function () { return this._tempMt = new Bt }]); return ot }(); var Yt = function () { function t() { this.name = null; this.target = null; this.positionMode = null; this.spacingMode = null; this.rotateMode = null; this.offsetRotation = NaN; this.position = NaN; this.spacing = NaN; this.rotateMix = NaN; this.translateMix = NaN; this.bones = [] } a(t, "laya.ani.bone.PathConstraintData"); return t }(); var Xt = function () { function t() { this.name = null; this.slotArr = [] } a(t, "laya.ani.bone.SkinData"); return t }(); var jt = function () { function t() { this.name = null; this.attachmentName = null; this.type = 0; this.transform = null; this.width = NaN; this.height = NaN; this.texture = null; this.bones = null; this.uvs = null; this.weights = null; this.triangles = null; this.vertices = null; this.lengths = null; this.verLen = 0 } a(t, "laya.ani.bone.SkinSlotDisplayData"); var e = t.prototype; e.createTexture = function (t) { if (this.texture) return this.texture; this.texture = new Nt(t.bitmap, this.uvs); if (this.uvs[0] > this.uvs[4] && this.uvs[1] > this.uvs[5]) { this.texture.width = t.height; this.texture.height = t.width; this.texture.offsetX = -t.offsetX; this.texture.offsetY = -t.offsetY; this.texture.sourceWidth = t.sourceHeight; this.texture.sourceHeight = t.sourceWidth } else { this.texture.width = t.width; this.texture.height = t.height; this.texture.offsetX = -t.offsetX; this.texture.offsetY = -t.offsetY; this.texture.sourceWidth = t.sourceWidth; this.texture.sourceHeight = t.sourceHeight } if (!b.isWebGL) { if (this.uvs[1] > this.uvs[5]) { this.texture.offsetY = this.texture.sourceHeight - this.texture.height - this.texture.offsetY } } return this.texture }; e.destory = function () { if (this.texture) this.texture.destroy() }; return t }(); var Kt = function () { function t() { this.name = null; this.displayArr = [] } a(t, "laya.ani.bone.SlotData"); var e = t.prototype; e.getDisplayByName = function (t) { var e; for (var i = 0, r = this.displayArr.length; i < r; i++) { e = this.displayArr[i]; if (e.attachmentName == t) { return i } } return -1 }; return t }(); var z = function () { function t(t, e) { this._data = null; this._bones = null; this.target = null; this.rotateMix = NaN; this.translateMix = NaN; this.scaleMix = NaN; this.shearMix = NaN; this._temp = m(2, 0); this._data = t; if (this._bones == null) { this._bones = [] } this.target = e[t.targetIndex]; var i = 0, r = 0; for (i = 0, r = t.boneIndexs.length; i < r; i++) { this._bones.push(e[t.boneIndexs[i]]) } this.rotateMix = t.rotateMix; this.translateMix = t.translateMix; this.scaleMix = t.scaleMix; this.shearMix = t.shearMix } a(t, "laya.ani.bone.TfConstraint"); var e = t.prototype; e.apply = function () { var t; var e = this.target.resultMatrix.a, i = this.target.resultMatrix.b, r = this.target.resultMatrix.c, s = this.target.resultMatrix.d; for (var n = 0, a = this._bones.length; n < a; n++) { t = this._bones[n]; if (this.rotateMix > 0) { var o = t.resultMatrix.a, h = t.resultMatrix.b, l = t.resultMatrix.c, u = t.resultMatrix.d; var c = Math.atan2(r, e) - Math.atan2(l, o) + this._data.offsetRotation * Math.PI / 180; if (c > Math.PI) c -= Math.PI * 2; else if (c < -Math.PI) c += Math.PI * 2; c *= this.rotateMix; var f = Math.cos(c), _ = Math.sin(c); t.resultMatrix.a = f * o - _ * l; t.resultMatrix.b = f * h - _ * u; t.resultMatrix.c = _ * o + f * l; t.resultMatrix.d = _ * h + f * u } if (this.translateMix) { this._temp[0] = this._data.offsetX; this._temp[1] = this._data.offsetY; this.target.localToWorld(this._temp); t.resultMatrix.tx += (this._temp[0] - t.resultMatrix.tx) * this.translateMix; t.resultMatrix.ty += (this._temp[1] - t.resultMatrix.ty) * this.translateMix; t.updateChild() } if (this.scaleMix > 0) { var d = Math.sqrt(t.resultMatrix.a * t.resultMatrix.a + t.resultMatrix.c * t.resultMatrix.c); var p = Math.sqrt(e * e + r * r); var v = d > 1e-5 ? (d + (p - d + this._data.offsetScaleX) * this.scaleMix) / d : 0; t.resultMatrix.a *= v; t.resultMatrix.c *= v; d = Math.sqrt(t.resultMatrix.b * t.resultMatrix.b + t.resultMatrix.d * t.resultMatrix.d); p = Math.sqrt(i * i + s * s); v = d > 1e-5 ? (d + (p - d + this._data.offsetScaleY) * this.scaleMix) / d : 0; t.resultMatrix.b *= v; t.resultMatrix.d *= v } if (this.shearMix > 0) { h = t.resultMatrix.b, u = t.resultMatrix.d; var m = Math.atan2(u, h); c = Math.atan2(s, i) - Math.atan2(r, e) - (m - Math.atan2(t.resultMatrix.c, t.resultMatrix.a)); if (c > Math.PI) c -= Math.PI * 2; else if (c < -Math.PI) c += Math.PI * 2; c = m + (c + this._data.offsetShearY * Math.PI / 180) * this.shearMix; v = Math.sqrt(h * h + u * u); t.resultMatrix.b = Math.cos(c) * v; t.resultMatrix.d = Math.sin(c) * v } } }; return t }(); var $t = function () { function t() { this.name = null; this.targetIndex = 0; this.rotateMix = NaN; this.translateMix = NaN; this.scaleMix = NaN; this.shearMix = NaN; this.offsetRotation = NaN; this.offsetX = NaN; this.offsetY = NaN; this.offsetScaleX = NaN; this.offsetScaleY = NaN; this.offsetShearY = NaN; this.boneIndexs = [] } a(t, "laya.ani.bone.TfConstraintData"); return t }(); var qt = function () { function t() { this.skX = 0; this.skY = 0; this.scX = 1; this.scY = 1; this.x = 0; this.y = 0; this.skewX = 0; this.skewY = 0; this.mMatrix = null } a(t, "laya.ani.bone.Transform"); var e = t.prototype; e.initData = function (t) { if (t.x != undefined) { this.x = t.x } if (t.y != undefined) { this.y = t.y } if (t.skX != undefined) { this.skX = t.skX } if (t.skY != undefined) { this.skY = t.skY } if (t.scX != undefined) { this.scX = t.scX } if (t.scY != undefined) { this.scY = t.scY } }; e.getMatrix = function () { var t; if (this.mMatrix) { t = this.mMatrix } else { t = this.mMatrix = new Bt } t.identity(); t.scale(this.scX, this.scY); if (this.skewX || this.skewY) { this.skew(t, this.skewX * Math.PI / 180, this.skewY * Math.PI / 180) } t.rotate(this.skX * Math.PI / 180); t.translate(this.x, this.y); return t }; e.skew = function (t, e, i) { var r = Math.sin(i); var s = Math.cos(i); var n = Math.sin(e); var a = Math.cos(e); t.setTo(t.a * a - t.b * r, t.a * n + t.b * s, t.c * a - t.d * r, t.c * n + t.d * s, t.tx * a - t.ty * r, t.tx * n + t.ty * s); return t }; return t }(); var U = function () { function t() { } a(t, "laya.ani.bone.UVTools"); t.getRelativeUV = function (t, e, i) { var r = t[0]; var s = t[2] - t[0]; var n = t[1]; var a = t[5] - t[1]; if (!i) i = []; i.length = e.length; var o = 0, h = 0; h = i.length; var l = 1 / s; var u = 1 / a; for (o = 0; o < h; o += 2) { i[o] = (e[o] - r) * l; i[o + 1] = (e[o + 1] - n) * u } return i }; t.getAbsoluteUV = function (t, e, i) { if (t[0] == 0 && t[1] == 0 && t[4] == 1 && t[5] == 1) { if (i) { I.copyArray(i, e); return i } else { return e } } var r = t[0]; var s = t[2] - t[0]; var n = t[1]; var a = t[5] - t[1]; if (!i) i = []; i.length = e.length; var o = 0, h = 0; h = i.length; for (o = 0; o < h; o += 2) { i[o] = e[o] * s + r; i[o + 1] = e[o + 1] * a + n } return i }; return t }(); var W = function () { function t() { this.startTime = NaN; this.duration = NaN; this.interpolationData = null; this.data = null; this.nextData = null } a(t, "laya.ani.KeyFramesContent"); return t }(); var V = function () { function u() { } a(u, "laya.ani.math.BezierLerp"); u.getBezierRate = function (t, e, i, r, s) { var n = u._getBezierParamKey(e, i, r, s); var a = n * 100 + t; if (u._bezierResultCache[a]) return u._bezierResultCache[a]; var o = u._getBezierPoints(e, i, r, s, n); var h = 0, l = 0; l = o.length; for (h = 0; h < l; h += 2) { if (t <= o[h]) { u._bezierResultCache[a] = o[h + 1]; return o[h + 1] } } u._bezierResultCache[a] = 1; return 1 }; u._getBezierParamKey = function (t, e, i, r) { return (((t * 100 + e) * 100 + i) * 100 + r) * 100 }; u._getBezierPoints = function (t, e, i, r, s) { if (u._bezierPointsCache[s]) return u._bezierPointsCache[s]; var n; n = [0, 0, t, e, i, r, 1, 1]; var a; a = new h; var o; o = a.getBezierPoints(n, 100, 3); u._bezierPointsCache[s] = o; return o }; u._bezierResultCache = {}; u._bezierPointsCache = {}; return u }(); var H = function (t) { function e() { this._destroyed = false; this._templet = null; this._currentTime = NaN; this._currentFrameTime = NaN; this._playStart = NaN; this._playEnd = NaN; this._playDuration = NaN; this._overallDuration = NaN; this._stopWhenCircleFinish = false; this._elapsedPlaybackTime = NaN; this._startUpdateLoopCount = NaN; this._currentAnimationClipIndex = 0; this._currentKeyframeIndex = 0; this._paused = false; this._cacheFrameRate = 0; this._cacheFrameRateInterval = NaN; this._cachePlayRate = NaN; this._fullFrames = null; this.isCache = true; this.playbackRate = 1; this.returnToZeroStopped = false; e.__super.call(this); this._destroyed = false; this._currentAnimationClipIndex = -1; this._currentKeyframeIndex = -1; this._currentTime = 0; this._overallDuration = Number.MAX_VALUE; this._stopWhenCircleFinish = false; this._elapsedPlaybackTime = 0; this._startUpdateLoopCount = -1; this._cachePlayRate = 1; this.cacheFrameRate = 60; this.returnToZeroStopped = false } a(e, "laya.ani.AnimationPlayer", t); var i = e.prototype; st.imps(i, { "laya.resource.IDestroy": true }); i._onTempletLoadedComputeFullKeyframeIndices = function (t, e, i) { if (this._templet === i && this._cachePlayRate === t && this._cacheFrameRate === e) this._computeFullKeyframeIndices() }; i._computeFullKeyframeIndices = function () { var t = this._fullFrames = []; var e = this._templet; var i = this._cacheFrameRateInterval * this._cachePlayRate; for (var r = 0, s = e.getAnimationCount(); r < s; r++) { var n = []; for (var a = 0, o = e.getAnimation(r).nodes.length; a < o; a++) { var h = e.getAnimation(r).nodes[a]; var l = Math.floor(h.playTime / i + .01); var u = new Uint16Array(l + 1); var c = -1; for (var f = 0, _ = h.keyFrame.length; f < _; f++) { var d = h.keyFrame[f]; var p = d.startTime; var v = p + d.duration + i; do { var m = Math.floor(p / i + .5); for (var g = c + 1; g < m; g++)u[g] = f; c = m; u[m] = f; p += i } while (p <= v) } n.push(u) } t.push(n) } }; i._onAnimationTempletLoaded = function () { this.destroyed || this._calculatePlayDuration() }; i._calculatePlayDuration = function () { if (this.state !== 0) { var t = this._templet.getAniDuration(this._currentAnimationClipIndex); this._playEnd === 0 && (this._playEnd = t); if (this._playEnd > t) this._playEnd = t; this._playDuration = this._playEnd - this._playStart } }; i._setPlayParams = function (t, e) { this._currentTime = t; this._currentKeyframeIndex = Math.max(Math.floor(this.currentPlayTime / e + .01), 0); this._currentFrameTime = this._currentKeyframeIndex * e }; i._setPlayParamsWhenStop = function (t, e) { this._currentTime = t; this._currentKeyframeIndex = Math.max(Math.floor(t / e + .01), 0); this._currentFrameTime = this._currentKeyframeIndex * e; this._currentAnimationClipIndex = -1 }; i._update = function (t) { if (this._currentAnimationClipIndex === -1 || this._paused || !this._templet || !this._templet.loaded) return; var e = this._cacheFrameRateInterval * this._cachePlayRate; var i = 0; this._startUpdateLoopCount !== A.loopCount && (i = t * this.playbackRate, this._elapsedPlaybackTime += i); var r = this.playDuration; if (this._overallDuration !== 0 && this._elapsedPlaybackTime >= this._overallDuration || this._overallDuration === 0 && this._elapsedPlaybackTime >= r) { this._setPlayParamsWhenStop(r, e); this.event("stopped"); return } i += this._currentTime; if (r > 0) { if (i >= r) { do { i -= r; if (this._stopWhenCircleFinish) { this._setPlayParamsWhenStop(r, e); this._stopWhenCircleFinish = false; this.event("stopped"); return } if (i < r) { this._setPlayParams(i, e); this.event("complete") } } while (i >= r) } else { this._setPlayParams(i, e) } } else { if (this._stopWhenCircleFinish) { this._setPlayParamsWhenStop(r, e); this._stopWhenCircleFinish = false; this.event("stopped"); return } this._currentTime = this._currentFrameTime = this._currentKeyframeIndex = 0; this.event("complete") } }; i._destroy = function () { this.offAll(); this._templet = null; this._fullFrames = null; this._destroyed = true }; i.play = function (t, e, i, r, s) { t === void 0 && (t = 0); e === void 0 && (e = 1); i === void 0 && (i = 2147483647); r === void 0 && (r = 0); s === void 0 && (s = 0); if (!this._templet) throw new Error("AnimationPlayer:templet must not be null,maybe you need to set url."); if (i < 0 || r < 0 || s < 0) throw new Error("AnimationPlayer:overallDuration,playStart and playEnd must large than zero."); if (s !== 0 && r > s) throw new Error("AnimationPlayer:start must less than end."); this._currentTime = 0; this._currentFrameTime = 0; this._elapsedPlaybackTime = 0; this.playbackRate = e; this._overallDuration = i; this._playStart = r; this._playEnd = s; this._paused = false; this._currentAnimationClipIndex = t; this._currentKeyframeIndex = 0; this._startUpdateLoopCount = A.loopCount; this.event("played"); if (this._templet.loaded) this._calculatePlayDuration(); else this._templet.once("loaded", this, this._onAnimationTempletLoaded); this._update(0) }; i.playByFrame = function (t, e, i, r, s, n) { t === void 0 && (t = 0); e === void 0 && (e = 1); i === void 0 && (i = 2147483647); r === void 0 && (r = 0); s === void 0 && (s = 0); n === void 0 && (n = 30); var a = 1e3 / n; this.play(t, e, i, r * a, s * a) }; i.stop = function (t) { t === void 0 && (t = true); if (t) { this._currentTime = this._currentFrameTime = this._currentKeyframeIndex = 0; this._currentAnimationClipIndex = -1; this.event("stopped") } else { this._stopWhenCircleFinish = true } }; o(0, i, "playEnd", function () { return this._playEnd }); o(0, i, "templet", function () { return this._templet }, function (t) { if (!this.state === 0) this.stop(true); if (this._templet !== t) { this._templet = t; if (t.loaded) this._computeFullKeyframeIndices(); else t.once("loaded", this, this._onTempletLoadedComputeFullKeyframeIndices, [this._cachePlayRate, this._cacheFrameRate]) } }); o(0, i, "playStart", function () { return this._playStart }); o(0, i, "playDuration", function () { return this._playDuration }); o(0, i, "state", function () { if (this._currentAnimationClipIndex === -1) return 0; if (this._paused) return 1; return 2 }); o(0, i, "currentKeyframeIndex", function () { return this._currentKeyframeIndex }); o(0, i, "overallDuration", function () { return this._overallDuration }); o(0, i, "currentFrameTime", function () { return this._currentFrameTime }); o(0, i, "currentAnimationClipIndex", function () { return this._currentAnimationClipIndex }); o(0, i, "currentPlayTime", function () { return this._currentTime + this._playStart }); o(0, i, "cachePlayRate", function () { return this._cachePlayRate }, function (t) { if (this._cachePlayRate !== t) { this._cachePlayRate = t; if (this._templet) if (this._templet.loaded) this._computeFullKeyframeIndices(); else this._templet.once("loaded", this, this._onTempletLoadedComputeFullKeyframeIndices, [t, this._cacheFrameRate]) } }); o(0, i, "cacheFrameRate", function () { return this._cacheFrameRate }, function (t) { if (this._cacheFrameRate !== t) { this._cacheFrameRate = t; this._cacheFrameRateInterval = 1e3 / this._cacheFrameRate; if (this._templet) if (this._templet.loaded) this._computeFullKeyframeIndices(); else this._templet.once("loaded", this, this._onTempletLoadedComputeFullKeyframeIndices, [this._cachePlayRate, t]) } }); o(0, i, "currentTime", null, function (t) { if (this._currentAnimationClipIndex === -1 || !this._templet || !this._templet.loaded) return; if (t < this._playStart || t > this._playEnd) throw new Error("AnimationPlayer:value must large than playStartTime,small than playEndTime."); this._startUpdateLoopCount = A.loopCount; var e = this._cacheFrameRateInterval * this._cachePlayRate; this._currentTime = t; this._currentKeyframeIndex = Math.max(Math.floor(this.currentPlayTime / e), 0); this._currentFrameTime = this._currentKeyframeIndex * e }); o(0, i, "paused", function () { return this._paused }, function (t) { this._paused = t; t && this.event("paused") }); o(0, i, "cacheFrameRateInterval", function () { return this._cacheFrameRateInterval }); o(0, i, "destroyed", function () { return this._destroyed }); return e }(l); var G = function (t) { function e() { e.__super.call(this); if (b.isConchNode) { this["drawSkin"] = function (t) { t.transform || (t.transform = Bt.EMPTY); this._addCmd([t]); this.setSkinMesh && this.setSkinMesh(t._ps, t.mVBData, t.mEleNum, 0, t.mTexture, t.transform) } } } a(e, "laya.ani.GraphicsAni", t); var i = e.prototype; i.drawSkin = function (t) { var e = [t]; this._saveToCmd(b._context._drawSkin, e) }; e.create = function () { var t = e._caches.pop(); return t || new e }; e.recycle = function (t) { t.clear(); e._caches.push(t) }; e._caches = []; return e }(u); var Y = function (t) { function r() { r.__super.call(this); this.mesh = new B } a(r, "laya.ani.bone.canvasmesh.SkinMeshCanvas", t); var e = r.prototype; e.init2 = function (t, e, i, r, s) { if (this.transform) { this.transform = null } var n; if (i) { n = i } else { n = []; n.push(0, 1, 3, 3, 1, 2) } this.mesh.texture = t; this.mesh.indexes = n; this.mesh.vertices = r; this.mesh.uvs = s }; e.render = function (t, e, i) { if (!this.mesh.texture) return; if (!this.transform) { this.transform = r._tempMatrix; this.transform.identity(); this.transform.translate(e, i); this.renderToContext(t); this.transform.translate(-e, -i); this.transform = null } else { this.transform.translate(e, i); this.renderToContext(t); this.transform.translate(-e, -i) } }; s(r, ["_tempMatrix", function () { return this._tempMatrix = new Bt }]); return r }(D); var X = function (t) { function y() { this._aniMap = {}; this.unfixedLastAniIndex = -1; y.__super.call(this); this._anis = new Array } a(y, "laya.ani.AnimationTemplet", t); var e = y.prototype; e.parse = function (t) { var e = new Dt(t); this._aniVersion = e.readUTFString(); E.parse(this, e) }; e._calculateKeyFrame = function (t, e, i) { var r = t.keyFrame; r[e] = r[0]; for (var s = 0; s < e; s++) { var n = r[s]; n.nextData = n.duration === 0 ? n.data : r[s + 1].data } r.length-- }; e.onAsynLoaded = function (t, e, i) { var r = new Dt(e); this._aniVersion = r.readUTFString(); switch (this._aniVersion) { case "LAYAANIMATION:02": L.parse(this, r); break; default: E.parse(this, r) }this._endLoaded() }; e.disposeResource = function () { this._aniVersion = null; this._anis = null; this._aniMap = null; this._publicExtData = null; this.unfixedCurrentFrameIndexes = null; this.unfixedCurrentTimes = null; this.unfixedKeyframes = null; this._aniClassName = null; this._animationDatasCache = null }; e.getAnimationCount = function () { return this._anis.length }; e.getAnimation = function (t) { return this._anis[t] }; e.getAniDuration = function (t) { return this._anis[t].playTime }; e.getNodes = function (t) { return this._anis[t].nodes }; e.getNodeIndexWithName = function (t, e) { return this._anis[t].bone3DMap[e] }; e.getNodeCount = function (t) { return this._anis[t].nodes.length }; e.getTotalkeyframesLength = function (t) { return this._anis[t].totalKeyframeDatasLength }; e.getPublicExtData = function () { return this._publicExtData }; e.getAnimationDataWithCache = function (t, e, i, r) { var s = e[i]; if (!s) { return null } else { var n = s[t]; if (!n) return null; else { return n[r] } } }; e.setAnimationDataWithCache = function (t, e, i, r, s) { var n = e[i] || (e[i] = {}); var a = n[t] || (n[t] = []); a[r] = s }; e.getOriginalData = function (t, e, i, r, s) { var n = this._anis[t]; var a = n.nodes; var o = 0; for (var h = 0, l = a.length, u = 0; h < l; h++) { var c = a[h]; var f; f = c.keyFrame[i[h][r]]; c.dataOffset = u; var _ = s - f.startTime; var d = c.lerpType; if (d) { switch (d) { case 0: case 1: for (o = 0; o < c.keyframeWidth;)o += c.interpolationMethod[o](c, o, e, u + o, f.data, _, null, f.duration, f.nextData); break; case 2: ; var p = f.interpolationData; var v = p.length; var m = 0; for (o = 0; o < v;) { var g = p[o]; switch (g) { case 6: o += y.interpolation[g](c, m, e, u + m, f.data, _, null, f.duration, f.nextData, p, o + 1); break; case 7: o += y.interpolation[g](c, m, e, u + m, f.data, _, null, f.duration, f.nextData, p, o + 1); break; default: o += y.interpolation[g](c, m, e, u + m, f.data, _, null, f.duration, f.nextData) }m++ } break } } else { for (o = 0; o < c.keyframeWidth;)o += c.interpolationMethod[o](c, o, e, u + o, f.data, _, null, f.duration, f.nextData) } u += c.keyframeWidth } }; e.getNodesCurrentFrameIndex = function (t, e) { var i = this._anis[t]; var r = i.nodes; if (t !== this.unfixedLastAniIndex) { this.unfixedCurrentFrameIndexes = new Uint32Array(r.length); this.unfixedCurrentTimes = new Float32Array(r.length); this.unfixedLastAniIndex = t } for (var s = 0, n = r.length, a = 0; s < n; s++) { var o = r[s]; if (e < this.unfixedCurrentTimes[s]) this.unfixedCurrentFrameIndexes[s] = 0; this.unfixedCurrentTimes[s] = e; while (this.unfixedCurrentFrameIndexes[s] < o.keyFrame.length) { if (o.keyFrame[this.unfixedCurrentFrameIndexes[s]].startTime > this.unfixedCurrentTimes[s]) break; this.unfixedCurrentFrameIndexes[s]++ } this.unfixedCurrentFrameIndexes[s]-- } return this.unfixedCurrentFrameIndexes }; e.getOriginalDataUnfixedRate = function (t, e, i) { var r = this._anis[t]; var s = r.nodes; if (t !== this.unfixedLastAniIndex) { this.unfixedCurrentFrameIndexes = new Uint32Array(s.length); this.unfixedCurrentTimes = new Float32Array(s.length); this.unfixedKeyframes = m(s.length); this.unfixedLastAniIndex = t } var n = 0; for (var a = 0, o = s.length, h = 0; a < o; a++) { var l = s[a]; if (i < this.unfixedCurrentTimes[a]) this.unfixedCurrentFrameIndexes[a] = 0; this.unfixedCurrentTimes[a] = i; while (this.unfixedCurrentFrameIndexes[a] < l.keyFrame.length) { if (l.keyFrame[this.unfixedCurrentFrameIndexes[a]].startTime > this.unfixedCurrentTimes[a]) break; this.unfixedKeyframes[a] = l.keyFrame[this.unfixedCurrentFrameIndexes[a]]; this.unfixedCurrentFrameIndexes[a]++ } var u = this.unfixedKeyframes[a]; l.dataOffset = h; var c = i - u.startTime; var f = l.lerpType; if (f) { switch (l.lerpType) { case 0: case 1: for (n = 0; n < l.keyframeWidth;)n += l.interpolationMethod[n](l, n, e, h + n, u.data, c, null, u.duration, u.nextData); break; case 2: ; var _ = u.interpolationData; var d = _.length; var p = 0; for (n = 0; n < d;) { var v = _[n]; switch (v) { case 6: n += y.interpolation[v](l, p, e, h + p, u.data, c, null, u.duration, u.nextData, _, n + 1); break; case 7: n += y.interpolation[v](l, p, e, h + p, u.data, c, null, u.duration, u.nextData, _, n + 1); break; default: n += y.interpolation[v](l, p, e, h + p, u.data, c, null, u.duration, u.nextData) }p++ } break } } else { for (n = 0; n < l.keyframeWidth;)n += l.interpolationMethod[n](l, n, e, h + n, u.data, c, null, u.duration, u.nextData) } h += l.keyframeWidth } }; y._LinearInterpolation_0 = function (t, e, i, r, s, n, a, o, h, l) { var u = o === 0 ? 0 : n / o; i[r] = (1 - u) * s[e] + u * h[e]; return 1 }; y._QuaternionInterpolation_1 = function (t, e, i, r, s, n, a, o, h, l) { var u = o === 0 ? 0 : n / o; d.slerpQuaternionArray(s, e, h, e, u, i, r); return 4 }; y._AngleInterpolation_2 = function (t, e, i, r, s, n, a, o, h, l) { return 0 }; y._RadiansInterpolation_3 = function (t, e, i, r, s, n, a, o, h, l) { return 0 }; y._Matrix4x4Interpolation_4 = function (t, e, i, r, s, n, a, o, h, l) { for (var u = 0; u < 16; u++ , e++)i[r + u] = s[e] + n * a[e]; return 16 }; y._NoInterpolation_5 = function (t, e, i, r, s, n, a, o, h, l) { i[r] = s[e]; return 1 }; y._BezierInterpolation_6 = function (t, e, i, r, s, n, a, o, h, l, u) { u === void 0 && (u = 0); i[r] = s[e] + (h[e] - s[e]) * V.getBezierRate(n / o, l[u], l[u + 1], l[u + 2], l[u + 3]); return 5 }; y._BezierInterpolation_7 = function (t, e, i, r, s, n, a, o, h, l, u) { u === void 0 && (u = 0); i[r] = l[u + 4] + l[u + 5] * V.getBezierRate((n * .001 + l[u + 6]) / l[u + 7], l[u], l[u + 1], l[u + 2], l[u + 3]); return 9 }; y.load = function (t) { return st.loader.create(t, null, null, y) }; y.interpolation = [y._LinearInterpolation_0, y._QuaternionInterpolation_1, y._AngleInterpolation_2, y._RadiansInterpolation_3, y._Matrix4x4Interpolation_4, y._NoInterpolation_5, y._BezierInterpolation_6, y._BezierInterpolation_7]; return y }(w); var j = function (t) { function r() { this.isCached = false; this.canvas = null; this.tex = null; this.rec = null; r.__super.call(this) } a(r, "laya.ani.bone.canvasmesh.CacheAbleSkinMesh", t); var e = r.prototype; e.getCanvasPic = function () { var t = new c("2D"); var e = t.getContext("2d"); this.rec = this.mesh.getBounds(); debugger; t.size(this.rec.width, this.rec.height); var i; i = this.transform; this.transform = r.tempMt; this.transform.identity(); this.transform.translate(-this.rec.x, -this.rec.y); this.renderToContext(e); this.transform.translate(+this.rec.x, +this.rec.y); this.transform = i; return new Nt(t) }; e.render = function (t, e, i) { if (!this.mesh.texture) return; if (!this.isCached) { this.isCached = true; this.tex = this.getCanvasPic() } if (!this.transform) { this.transform = Y._tempMatrix; this.transform.identity(); this.transform.translate(e, i); this._renderTextureToContext(t); this.transform.translate(-e, -i); this.transform = null } else { this.transform.translate(e, i); this._renderTextureToContext(t); this.transform.translate(-e, -i) } }; e._renderTextureToContext = function (t) { this.context = t.ctx || t; t.save(); var e; e = this.tex; if (this.transform) { var i = this.transform; t.transform(i.a, i.b, i.c, i.d, i.tx, i.ty) } this.rec = this.mesh.getBounds(); t.translate(this.rec.x, this.rec.y); t.drawTexture(e, 0, 0, e.width, e.height, 0, 0); t.restore() }; s(r, ["tempMt", function () { return this.tempMt = new Bt }]); return r }(Y); var K = function (n) { function t() { this.cacheOK = false; this.cacheCmdOK = false; this.transformCmds = []; this.drawCmds = []; t.__super.call(this); this.tempMesh = new B } a(t, "laya.ani.bone.canvasmesh.SimpleSkinMeshCanvas", n); var e = t.prototype; e.init2 = function (t, e, i, r, s) { n.prototype.init2.call(this, t, e, i, r, s); this.cacheOK = false; this.cacheCmdOK = false; this.transformCmds.length = 6; this.drawCmds.length = 9 }; e.renderToContext = function (t) { this.context = t.ctx || t; if (this.mesh) { if (this.mesh.uvs.length <= 8) { if (this.mode == 0) { this._renderWithIndexes(this.mesh) } else { this._renderNoIndexes(this.mesh) } return } if (!this.cacheOK) { this.tempMesh.texture = this.mesh.texture; this.tempMesh.uvs = this.mesh.texture.uv; this.tempMesh.vertices = F.solveMesh(this.mesh, this.tempMesh.vertices); this.cacheOK = true } if (this.mode == 0) { this._renderWithIndexes(this.tempMesh) } else { this._renderNoIndexes(this.tempMesh) } } }; e._renderWithIndexes = function (t) { if (this.cacheCmdOK) { this.renderByCache(t); return } var e = t.indexes; var i = 0, r = e.length; if (r > 1) r = 1; for (i = 0; i < r; i += 3) { var s = e[i] * 2; var n = e[i + 1] * 2; var a = e[i + 2] * 2; this._renderDrawTriangle(t, s, n, a) } this.cacheCmdOK = true }; e._renderDrawTriangle = function (t, e, i, r) { var s = this.context; var n = t.uvs; var a = t.vertices; var o = t.texture; var h = o.bitmap; var l = h.source; var u = o.width; var c = o.height; var f = h.width; var _ = h.height; var d = NaN; var p = NaN; var v = NaN; var m = NaN; var g = NaN; var y = NaN; if (t.useUvTransform) { var x = t.uvTransform; d = (n[e] * x.a + n[e + 1] * x.c + x.tx) * f; p = (n[i] * x.a + n[i + 1] * x.c + x.tx) * f; v = (n[r] * x.a + n[r + 1] * x.c + x.tx) * f; m = (n[e] * x.b + n[e + 1] * x.d + x.ty) * _; g = (n[i] * x.b + n[i + 1] * x.d + x.ty) * _; y = (n[r] * x.b + n[r + 1] * x.d + x.ty) * _ } else { d = n[e] * f; p = n[i] * f; v = n[r] * f; m = n[e + 1] * _; g = n[i + 1] * _; y = n[r + 1] * _ } var b = a[e]; var w = a[i]; var T = a[r]; var C = a[e + 1]; var S = a[i + 1]; var A = a[r + 1]; var M = d * g + m * v + p * y - g * v - m * p - d * y; var I = 1 / M; var E = b * g + m * T + w * y - g * T - m * w - b * y; var R = d * w + b * v + p * T - w * v - b * p - d * T; var P = d * g * T + m * w * v + b * p * y - b * g * v - m * p * T - d * w * y; var L = C * g + m * A + S * y - g * A - m * S - C * y; var k = d * S + C * v + p * A - S * v - C * p - d * A; var D = d * g * A + m * S * v + C * p * y - C * g * v - m * p * A - d * S * y; this.transformCmds[0] = E * I; this.transformCmds[1] = L * I; this.transformCmds[2] = R * I; this.transformCmds[3] = k * I; this.transformCmds[4] = P * I; this.transformCmds[5] = D * I; this.drawCmds[0] = l; this.drawCmds[1] = o.uv[0] * f; this.drawCmds[2] = o.uv[1] * _; this.drawCmds[3] = u; this.drawCmds[4] = c; this.drawCmds[5] = o.uv[0] * f; this.drawCmds[6] = o.uv[1] * _; this.drawCmds[7] = u; this.drawCmds[8] = c; s.save(); if (this.transform) { var B = this.transform; s.transform(B.a, B.b, B.c, B.d, B.tx, B.ty) } s.transform.apply(s, this.transformCmds); s.drawImage.apply(s, this.drawCmds); s.restore() }; e.renderByCache = function (t) { var e = this.context; e.save(); if (this.transform) { var i = this.transform; e.transform(i.a, i.b, i.c, i.d, i.tx, i.ty) } e.transform.apply(e, this.transformCmds); e.drawImage.apply(e, this.drawCmds); e.restore() }; return t }(Y); var $ = function (e) { function i(t, e) { this._templet = null; this._player = null; this._curOriginalData = null; this._boneMatrixArray = []; this._lastTime = 0; this._currAniName = null; this._currAniIndex = -1; this._pause = true; this._aniClipIndex = -1; this._clipIndex = -1; this._skinIndex = 0; this._skinName = "default"; this._aniMode = 0; this._graphicsCache = null; this._boneSlotDic = null; this._bindBoneBoneSlotDic = null; this._boneSlotArray = null; this._index = -1; this._total = -1; this._indexControl = false; this._aniPath = null; this._texturePath = null; this._complete = null; this._loadAniMode = 0; this._yReverseMatrix = null; this._ikArr = null; this._tfArr = null; this._pathDic = null; this._rootBone = null; this._boneList = null; this._aniSectionDic = null; this._eventIndex = 0; this._drawOrderIndex = 0; this._drawOrder = null; this._lastAniClipIndex = -1; this._lastUpdateAniClipIndex = -1; this._playAudio = true; this._soundChannelArr = []; i.__super.call(this); e === void 0 && (e = 0); if (t) this.init(t, e) } a(i, "laya.ani.bone.Skeleton", e); var t = i.prototype; t.init = function (t, e) { e === void 0 && (e = 0); var i = 0, r = 0; if (e == 1) { this._graphicsCache = []; for (i = 0, r = t.getAnimationCount(); i < r; i++) { this._graphicsCache.push([]) } } this._yReverseMatrix = t.yReverseMatrix; this._aniMode = e; this._templet = t; this._player = new H; this._player.cacheFrameRate = t.rate; this._player.templet = t; this._player.play(); this._parseSrcBoneMatrix(); this._boneList = t.mBoneArr; this._rootBone = t.mRootBone; this._aniSectionDic = t.aniSectionDic; if (t.ikArr.length > 0) { this._ikArr = []; for (i = 0, r = t.ikArr.length; i < r; i++) { this._ikArr.push(new N(t.ikArr[i], this._boneList)) } } if (t.pathArr.length > 0) { var s; var n; if (this._pathDic == null) this._pathDic = {}; var a; for (i = 0, r = t.pathArr.length; i < r; i++) { s = t.pathArr[i]; n = new O(s, this._boneList); a = this._boneSlotDic[s.name]; if (a) { n = new O(s, this._boneList); n.target = a } this._pathDic[s.name] = n } } if (t.tfArr.length > 0) { this._tfArr = []; for (i = 0, r = t.tfArr.length; i < r; i++) { this._tfArr.push(new z(t.tfArr[i], this._boneList)) } } if (t.skinDataArray.length > 0) { var o = this._templet.skinDataArray[this._skinIndex]; this._skinName = o.name } this._player.on("played", this, this._onPlay); this._player.on("stopped", this, this._onStop); this._player.on("paused", this, this._onPause) }; t.load = function (t, e, i) { i === void 0 && (i = 0); this._aniPath = t; this._complete = e; this._loadAniMode = i; st.loader.load([{ url: t, type: "arraybuffer" }], v.create(this, this._onLoaded)) }; t._onLoaded = function () { var t = _.getRes(this._aniPath); if (t == null) return; if (Z.TEMPLET_DICTIONARY == null) { Z.TEMPLET_DICTIONARY = {} } var e; e = Z.TEMPLET_DICTIONARY[this._aniPath]; if (e) { if (e.isParseFail) { this._parseFail() } else { if (e.isParserComplete) { this._parseComplete() } else { e.on("complete", this, this._parseComplete); e.on("error", this, this._parseFail) } } } else { e = new Z; e._setUrl(this._aniPath); Z.TEMPLET_DICTIONARY[this._aniPath] = e; e.on("complete", this, this._parseComplete); e.on("error", this, this._parseFail); e.isParserComplete = false; e.parseData(null, t) } }; t._parseComplete = function () { var t = Z.TEMPLET_DICTIONARY[this._aniPath]; if (t) { this.init(t, this._loadAniMode); this.play(0, true) } this._complete && this._complete.runWith(this) }; t._parseFail = function () { console.log("[Error]:" + this._aniPath + "解析失败") }; t._onPlay = function () { this.event("played") }; t._onStop = function () { var t; var e = this._templet.eventAniArr; var i = e[this._aniClipIndex]; if (i && this._eventIndex < i.length) { for (; this._eventIndex < i.length; this._eventIndex++) { t = i[this._eventIndex]; if (t.time >= this._player.playStart && t.time <= this._player.playEnd) { this.event("label", t) } } } this._drawOrder = null; this.event("stopped") }; t._onPause = function () { this.event("paused") }; t._parseSrcBoneMatrix = function () { var t = 0, e = 0; e = this._templet.srcBoneMatrixArr.length; for (t = 0; t < e; t++) { this._boneMatrixArray.push(new Bt) } if (this._aniMode == 0) { this._boneSlotDic = this._templet.boneSlotDic; this._bindBoneBoneSlotDic = this._templet.bindBoneBoneSlotDic; this._boneSlotArray = this._templet.boneSlotArray } else { if (this._boneSlotDic == null) this._boneSlotDic = {}; if (this._bindBoneBoneSlotDic == null) this._bindBoneBoneSlotDic = {}; if (this._boneSlotArray == null) this._boneSlotArray = []; var i = this._templet.boneSlotArray; var r; var s; for (t = 0, e = i.length; t < e; t++) { r = i[t]; s = this._bindBoneBoneSlotDic[r.parent]; if (s == null) { this._bindBoneBoneSlotDic[r.parent] = s = [] } this._boneSlotDic[r.name] = r = r.copy(); s.push(r); this._boneSlotArray.push(r) } } }; t._emitMissedEvents = function (t, e, i) { i === void 0 && (i = 0); var r = this._templet.eventAniArr; var s = r[this._player.currentAnimationClipIndex]; if (s) { var n = 0, a = 0; var o; a = s.length; for (n = i; n < a; n++) { o = s[n]; if (o.time >= this._player.playStart && o.time <= this._player.playEnd) { this.event("label", o) } } } }; t._update = function (t) { t === void 0 && (t = true); if (this._pause) return; if (t && this._indexControl) { return } var e = this.timer.currTimer; var i = this._player.currentKeyframeIndex; var r = e - this._lastTime; if (t) { this._player._update(r) } else { i = -1 } this._lastTime = e; if (!this._player) return; this._index = this._clipIndex = this._player.currentKeyframeIndex; if (this._index < 0) return; if (r > 0 && this._clipIndex == i && this._lastUpdateAniClipIndex == this._aniClipIndex) { return } this._lastUpdateAniClipIndex = this._aniClipIndex; if (i > this._clipIndex && this._eventIndex != 0) { this._emitMissedEvents(this._player.playStart, this._player.playEnd, this._eventIndex); this._eventIndex = 0 } var s; var n = this._templet.eventAniArr; var a = n[this._aniClipIndex]; var o; if (a && this._eventIndex < a.length) { s = a[this._eventIndex]; if (s.time >= this._player.playStart && s.time <= this._player.playEnd) { if (this._player.currentPlayTime >= s.time) { this.event("label", s); this._eventIndex++; if (this._playAudio && s.audioValue && s.audioValue !== "null") { o = S.playSound(this._player.templet._path + s.audioValue, 1, v.create(this, this._onAniSoundStoped)); S.playbackRate = this._player.playbackRate; o && this._soundChannelArr.push(o) } } } else if (s.time < this._player.playStart && this._playAudio && s.audioValue && s.audioValue !== "null" && this._player.playEnd - this._player.currentPlayTime > .1) { this._eventIndex++; o = S.playSound(this._player.templet._path + s.audioValue, 1, v.create(this, this._onAniSoundStoped), null, (this._player.currentPlayTime - s.time) / 1e3); S.playbackRate = this._player.playbackRate; o && this._soundChannelArr.push(o) } else { this._eventIndex++ } } var h; if (this._aniMode == 0) { h = this._templet.getGrahicsDataWithCache(this._aniClipIndex, this._clipIndex); if (h) { if (this.graphics != h) { this.graphics = h } return } else { var l = 0, u = 0; u = this._clipIndex; while (!this._templet.getGrahicsDataWithCache(this._aniClipIndex, u - 1) && u > 0) { u-- } if (u < this._clipIndex) { for (l = u; l < this._clipIndex; l++) { this._createGraphics(l) } } } } else if (this._aniMode == 1) { h = this._getGrahicsDataWithCache(this._aniClipIndex, this._clipIndex); if (h) { if (this.graphics != h) { this.graphics = h } return } else { u = this._clipIndex; while (!this._getGrahicsDataWithCache(this._aniClipIndex, u - 1) && u > 0) { u-- } if (u < this._clipIndex) { for (l = u; l < this._clipIndex; l++) { this._createGraphics(l) } } } } this._createGraphics() }; t._onAniSoundStoped = function (t) { var e; for (var i = this._soundChannelArr.length, r = 0; r < i; r++) { e = this._soundChannelArr[r]; if (e.isStopped || t) { !e.isStopped && e.stop(); this._soundChannelArr.splice(r, 1); i--; r-- } } }; t._createGraphics = function (t) { t === void 0 && (t = -1); if (t == -1) t = this._clipIndex; var e = t * this._player.cacheFrameRateInterval; var i; var r = this._templet.drawOrderAniArr; var s = r[this._aniClipIndex]; if (s && s.length > 0) { this._drawOrderIndex = 0; i = s[this._drawOrderIndex]; while (e >= i.time) { this._drawOrder = i.drawOrder; this._drawOrderIndex++; if (this._drawOrderIndex >= s.length) { break } i = s[this._drawOrderIndex] } } var n; if (this._aniMode == 0 || this._aniMode == 1) { this.graphics = G.create() } else { if (this.graphics instanceof laya.ani.GraphicsAni) { this.graphics.clear() } else { this.graphics = G.create() } } n = this.graphics; var a = this._templet.getNodes(this._aniClipIndex); this._templet.getOriginalData(this._aniClipIndex, this._curOriginalData, this._player._fullFrames[this._aniClipIndex], t, e); var o = this._aniSectionDic[this._aniClipIndex]; var h; var l = 0; var u = 0, c = 0, f = 0, _ = 0; var d; var p; var v; var m; var g = this._templet.srcBoneMatrixArr.length; for (u = 0, _ = o[0]; u < g; u++) { m = this._boneList[u]; v = this._templet.srcBoneMatrixArr[u]; m.resultTransform.scX = v.scX * this._curOriginalData[l++]; m.resultTransform.skX = v.skX + this._curOriginalData[l++]; m.resultTransform.skY = v.skY + this._curOriginalData[l++]; m.resultTransform.scY = v.scY * this._curOriginalData[l++]; m.resultTransform.x = v.x + this._curOriginalData[l++]; m.resultTransform.y = v.y + this._curOriginalData[l++]; if (this._templet.tMatrixDataLen === 8) { m.resultTransform.skewX = v.skewX + this._curOriginalData[l++]; m.resultTransform.skewY = v.skewY + this._curOriginalData[l++] } } var y = {}; var x = {}; var b; for (_ += o[1]; u < _; u++) { b = a[u]; y[b.name] = this._curOriginalData[l++]; x[b.name] = this._curOriginalData[l++]; this._curOriginalData[l++]; this._curOriginalData[l++]; this._curOriginalData[l++]; this._curOriginalData[l++] } var w = {}; var T = {}; for (_ += o[2]; u < _; u++) { b = a[u]; w[b.name] = this._curOriginalData[l++]; T[b.name] = this._curOriginalData[l++]; this._curOriginalData[l++]; this._curOriginalData[l++]; this._curOriginalData[l++]; this._curOriginalData[l++] } if (this._pathDic) { var C; for (_ += o[3]; u < _; u++) { b = a[u]; C = this._pathDic[b.name]; if (C) { var S = new Dt(b.extenData); switch (S.getByte()) { case 1: C.position = this._curOriginalData[l++]; break; case 2: C.spacing = this._curOriginalData[l++]; break; case 3: C.rotateMix = this._curOriginalData[l++]; C.translateMix = this._curOriginalData[l++]; break } } } } if (this._yReverseMatrix) { this._rootBone.update(this._yReverseMatrix) } else { this._rootBone.update(Bt.TEMP.identity()) } if (this._ikArr) { var A; for (u = 0, _ = this._ikArr.length; u < _; u++) { A = this._ikArr[u]; if (w.hasOwnProperty(A.name)) { A.bendDirection = w[A.name] } if (T.hasOwnProperty(A.name)) { A.mix = T[A.name] } A.apply() } } if (this._pathDic) { for (var M in this._pathDic) { C = this._pathDic[M]; C.apply(this._boneList, n) } } if (this._tfArr) { var I; for (u = 0, f = this._tfArr.length; u < f; u++) { I = this._tfArr[u]; I.apply() } } for (u = 0, f = this._boneList.length; u < f; u++) { m = this._boneList[u]; p = this._bindBoneBoneSlotDic[m.name]; m.resultMatrix.copyTo(this._boneMatrixArray[u]); if (p) { for (c = 0, _ = p.length; c < _; c++) { d = p[c]; if (d) { d.setParentMatrix(m.resultMatrix) } } } } var E = {}; var R = this._templet.deformAniArr; var P; var L; var k; if (R && R.length > 0) { if (this._lastAniClipIndex != this._aniClipIndex) { this._lastAniClipIndex = this._aniClipIndex; for (u = 0, _ = this._boneSlotArray.length; u < _; u++) { d = this._boneSlotArray[u]; d.deformData = null } } var D = R[this._aniClipIndex]; P = D["default"]; this._setDeform(P, E, this._boneSlotArray, e); var B; for (B in D) { if (B != "default" && B != this._skinName) { P = D[B]; this._setDeform(P, E, this._boneSlotArray, e) } } P = D[this._skinName]; this._setDeform(P, E, this._boneSlotArray, e) } var N; var F; var O; if (this._drawOrder) { for (u = 0, _ = this._drawOrder.length; u < _; u++) { d = this._boneSlotArray[this._drawOrder[u]]; N = y[d.name]; F = x[d.name]; if (!isNaN(F)) { n.save(); n.alpha(F) } if (!isNaN(N) && N != -2) { if (this._templet.attachmentNames) { d.showDisplayByName(this._templet.attachmentNames[N]) } else { d.showDisplayByIndex(N) } } if (E[this._drawOrder[u]]) { O = E[this._drawOrder[u]]; if (d.currDisplayData && O[d.currDisplayData.attachmentName]) { d.deformData = O[d.currDisplayData.attachmentName] } else { d.deformData = null } } else { d.deformData = null } if (!isNaN(F)) { d.draw(n, this._boneMatrixArray, this._aniMode == 2, F) } else { d.draw(n, this._boneMatrixArray, this._aniMode == 2) } if (!isNaN(F)) { n.restore() } } } else { for (u = 0, _ = this._boneSlotArray.length; u < _; u++) { d = this._boneSlotArray[u]; N = y[d.name]; F = x[d.name]; if (!isNaN(F)) { n.save(); n.alpha(F) } if (!isNaN(N) && N != -2) { if (this._templet.attachmentNames) { d.showDisplayByName(this._templet.attachmentNames[N]) } else { d.showDisplayByIndex(N) } } if (E[u]) { O = E[u]; if (d.currDisplayData && O[d.currDisplayData.attachmentName]) { d.deformData = O[d.currDisplayData.attachmentName] } else { d.deformData = null } } else { d.deformData = null } if (!isNaN(F)) { d.draw(n, this._boneMatrixArray, this._aniMode == 2, F) } else { d.draw(n, this._boneMatrixArray, this._aniMode == 2) } if (!isNaN(F)) { n.restore() } } } if (this._aniMode == 0) { this._templet.setGrahicsDataWithCache(this._aniClipIndex, t, n) } else if (this._aniMode == 1) { this._setGrahicsDataWithCache(this._aniClipIndex, t, n) } }; t._setDeform = function (t, e, i, r) { if (!t) return; var s; var n; var a; var o = 0, h = 0, l = 0; if (t) { for (o = 0, h = t.deformSlotDataList.length; o < h; o++) { s = t.deformSlotDataList[o]; for (l = 0; l < s.deformSlotDisplayList.length; l++) { n = s.deformSlotDisplayList[l]; a = i[n.slotIndex]; n.apply(r, a); if (!e[n.slotIndex]) { e[n.slotIndex] = {} } e[n.slotIndex][n.attachment] = n.deformData } } } }; t.getAnimNum = function () { return this._templet.getAnimationCount() }; t.getAniNameByIndex = function (t) { return this._templet.getAniNameByIndex(t) }; t.getSlotByName = function (t) { return this._boneSlotDic[t] }; t.showSkinByName = function (t, e) { e === void 0 && (e = true); this.showSkinByIndex(this._templet.getSkinIndexByName(t), e) }; t.showSkinByIndex = function (t, e) { e === void 0 && (e = true); for (var i = 0; i < this._boneSlotArray.length; i++) { this._boneSlotArray[i].showSlotData(null, e) } if (this._templet.showSkinByIndex(this._boneSlotDic, t, e)) { var r = this._templet.skinDataArray[t]; this._skinIndex = t; this._skinName = r.name } this._clearCache() }; t.showSlotSkinByIndex = function (t, e) { if (this._aniMode == 0) return; var i = this.getSlotByName(t); if (i) { i.showDisplayByIndex(e) } this._clearCache() }; t.showSlotSkinByName = function (t, e) { if (this._aniMode == 0) return; var i = this.getSlotByName(t); if (i) { i.showDisplayByName(e) } this._clearCache() }; t.replaceSlotSkinName = function (t, e, i) { if (this._aniMode == 0) return; var r = this.getSlotByName(t); if (r) { r.replaceDisplayByName(e, i) } this._clearCache() }; t.replaceSlotSkinByIndex = function (t, e, i) { if (this._aniMode == 0) return; var r = this.getSlotByName(t); if (r) { r.replaceDisplayByIndex(e, i) } this._clearCache() }; t.setSlotSkin = function (t, e) { if (this._aniMode == 0) return; var i = this.getSlotByName(t); if (i) { i.replaceSkin(e) } this._clearCache() }; t._clearCache = function () { if (this._aniMode == 1) { for (var t = 0, e = this._graphicsCache.length; t < e; t++) { for (var i = 0, r = this._graphicsCache[t].length; i < r; i++) { var s = this._graphicsCache[t][i]; if (s != this.graphics) { G.recycle(s) } } this._graphicsCache[t].length = 0 } } }; t.play = function (t, e, i, r, s, n, a) { i === void 0 && (i = true); r === void 0 && (r = 0); s === void 0 && (s = 0); n === void 0 && (n = true); a === void 0 && (a = true); this._playAudio = a; this._indexControl = false; var o = -1; var h = NaN; if (e) { h = 2147483647 } else { h = 0 } if (typeof t == "string") { for (var l = 0, u = this._templet.getAnimationCount(); l < u; l++) { var c = this._templet.getAnimation(l); if (c && t == c.name) { o = l; break } } } else { o = t } if (o > -1 && o < this.getAnimNum()) { this._aniClipIndex = o; if (i || this._pause || this._currAniIndex != o) { this._currAniIndex = o; this._curOriginalData = new Float32Array(this._templet.getTotalkeyframesLength(o)); this._drawOrder = null; this._eventIndex = 0; this._player.play(o, this._player.playbackRate, h, r, s); if (n) this._templet.showSkinByIndex(this._boneSlotDic, this._skinIndex); if (this._pause) { this._pause = false; this._lastTime = f.now(); this.timer.frameLoop(1, this, this._update, null, true) } this._update() } } }; t.stop = function () { if (!this._pause) { this._pause = true; if (this._player) { this._player.stop(true) } if (this._soundChannelArr.length > 0) { this._onAniSoundStoped(true) } this.timer.clear(this, this._update) } }; t.playbackRate = function (t) { if (this._player) { this._player.playbackRate = t } }; t.paused = function () { if (!this._pause) { this._pause = true; if (this._player) { this._player.paused = true } if (this._soundChannelArr.length > 0) { var t; for (var e = this._soundChannelArr.length, i = 0; i < e; i++) { t = this._soundChannelArr[i]; if (!t.isStopped) { t.pause() } } } this.timer.clear(this, this._update) } }; t.resume = function () { this._indexControl = false; if (this._pause) { this._pause = false; if (this._player) { this._player.paused = false } if (this._soundChannelArr.length > 0) { var t; for (var e = this._soundChannelArr.length, i = 0; i < e; i++) { t = this._soundChannelArr[i]; if (t.audioBuffer) { t.resume() } } } this._lastTime = f.now(); this.timer.frameLoop(1, this, this._update, null, true) } }; t._getGrahicsDataWithCache = function (t, e) { return this._graphicsCache[t][e] }; t._setGrahicsDataWithCache = function (t, e, i) { this._graphicsCache[t][e] = i }; t.destroy = function (t) { t === void 0 && (t = true); e.prototype.destroy.call(this, t); this._templet = null; if (this._player) this._player.offAll(); this._player = null; this._curOriginalData = null; this._boneMatrixArray.length = 0; this._lastTime = 0; this.timer.clear(this, this._update); if (this._soundChannelArr.length > 0) { this._onAniSoundStoped(true) } }; o(0, t, "url", function () { return this._aniPath }, function (t) { this.load(t) }); o(0, t, "index", function () { return this._index }, function (t) { if (this.player) { this._index = t; this._player.currentTime = this._index * 1e3 / this._player.cacheFrameRate; this._indexControl = true; this._update(false) } }); o(0, t, "total", function () { if (this._templet && this._player) { this._total = Math.floor(this._templet.getAniDuration(this._player.currentAnimationClipIndex) / 1e3 * this._player.cacheFrameRate) } else { this._total = -1 } return this._total }); o(0, t, "templet", function () { return this._templet }); o(0, t, "player", function () { return this._player }); i.useSimpleMeshInCanvas = false; return i }(nt); var q = function (e) { function m(t) { this._start = 0; this._Pos = 0; this._data = null; this._curIndex = 0; this._preIndex = 0; this._playIndex = 0; this._playing = false; this._ended = true; this._count = 0; this._ids = null; this._loadedImage = {}; this._idOfSprite = null; this._parentMovieClip = null; this._movieClipList = null; this._labels = null; this.basePath = null; this._atlasPath = null; this._url = null; this._isRoot = false; this._completeHandler = null; this._endFrame = -1; this.interval = 30; this.loop = false; m.__super.call(this); this._ids = {}; this._idOfSprite = []; this._reset(); this._playing = false; this._parentMovieClip = t; if (!t) { this._movieClipList = [this]; this._isRoot = true; this._setUpNoticeType(1) } else { this._isRoot = false; this._movieClipList = t._movieClipList; this._movieClipList.push(this) } } a(m, "laya.ani.swf.MovieClip", e); var t = m.prototype; t.destroy = function (t) { t === void 0 && (t = true); this._clear(); e.prototype.destroy.call(this, t) }; t._setDisplay = function (t) { e.prototype._setDisplay.call(this, t); if (this._isRoot) { this._$3__onDisplay(t) } }; t._$3__onDisplay = function (t) { if (t) this.timer.loop(this.interval, this, this.updates, null, true); else this.timer.clear(this, this.updates) }; t.updates = function () { if (this._parentMovieClip) return; var t = 0, e = 0; e = this._movieClipList.length; for (t = 0; t < e; t++) { this._movieClipList[t] && this._movieClipList[t]._update() } }; t.addLabel = function (t, e) { if (!this._labels) this._labels = {}; this._labels[e] = t }; t.removeLabel = function (t) { if (!t) this._labels = null; else if (!this._labels) { for (var e in this._labels) { if (this._labels[e] === t) { delete this._labels[e]; break } } } }; t._update = function () { if (!this._data) return; if (!this._playing) return; this._playIndex++; if (this._playIndex >= this._count) { if (!this.loop) { this._playIndex--; this.stop(); return } this._playIndex = 0 } this._parse(this._playIndex); if (this._labels && this._labels[this._playIndex]) this.event("label", this._labels[this._playIndex]); if (this._endFrame != -1 && this._endFrame == this._playIndex) { this._endFrame = -1; if (this._completeHandler != null) { var t = this._completeHandler; this._completeHandler = null; t.run() } this.stop() } }; t.stop = function () { this._playing = false }; t.gotoAndStop = function (t) { this.index = t; this.stop() }; t._clear = function () { this.stop(); this._idOfSprite.length = 0; if (!this._parentMovieClip) { this.timer.clear(this, this.updates); var t = 0, e = 0; e = this._movieClipList.length; for (t = 0; t < e; t++) { if (this._movieClipList[t] != this) this._movieClipList[t]._clear() } this._movieClipList.length = 0 } if (this._atlasPath) { _.clearRes(this._atlasPath) } var i; for (i in this._loadedImage) { if (this._loadedImage[i]) { _.clearRes(i); this._loadedImage[i] = false } } this.removeChildren(); this.graphics = null; this._parentMovieClip = null }; t.play = function (t, e) { t === void 0 && (t = 0); e === void 0 && (e = true); this.loop = e; this._playing = true; if (this._data) this._displayFrame(t) }; t._displayFrame = function (t) { t === void 0 && (t = -1); if (t != -1) { if (this._curIndex > t) this._reset(); this._parse(t) } }; t._reset = function (t) { t === void 0 && (t = true); if (t && this._curIndex != 1) this.removeChildren(); this._preIndex = this._curIndex = -1; this._Pos = this._start }; t._parse = function (t) { var e = this; var i, r, s = 0, n = 0, a = 0, o = 0, h = false; var l = this._idOfSprite, u = this._data, c; if (this._ended) this._reset(); u.pos = this._Pos; this._ended = false; this._playIndex = t; if (this._curIndex > t && t < this._preIndex) { this._reset(true); u.pos = this._Pos } while (this._curIndex <= t && !this._ended) { n = u.getUint16(); switch (n) { case 12: s = u.getUint16(); a = this._ids[u.getUint16()]; this._Pos = u.pos; u.pos = a; if ((o = u.getUint8()) == 0) { var f = u.getUint16(); r = l[s]; if (!r) { r = l[s] = new nt; var _ = new nt; _.loadImage(this.basePath + f + ".png"); this._loadedImage[this.basePath + f + ".png"] = true; r.addChild(_); _.size(u.getFloat32(), u.getFloat32()); var d = u._getMatrix(); _.transform = d } r.alpha = 1 } else if (o == 1) { i = l[s]; if (!i) { l[s] = i = new m(this); i.interval = this.interval; i._ids = this._ids; i.basePath = this.basePath; i._setData(u, a); i._initState(); i.play(0) } i.alpha = 1 } u.pos = this._Pos; break; case 3: ; var p = l[u.getUint16()]; if (p) { this.addChild(p); p.zOrder = u.getUint16(); h = true } break; case 4: p = l[u.getUint16()]; p && p.removeSelf(); break; case 5: l[u.getUint16()][m._ValueList[u.getUint16()]] = u.getFloat32(); break; case 6: l[u.getUint16()].visible = u.getUint8() > 0; break; case 7: r = l[u.getUint16()]; var v = r.transform || Bt.create(); v.setTo(u.getFloat32(), u.getFloat32(), u.getFloat32(), u.getFloat32(), u.getFloat32(), u.getFloat32()); r.transform = v; break; case 8: l[u.getUint16()].setPos(u.getFloat32(), u.getFloat32()); break; case 9: l[u.getUint16()].setSize(u.getFloat32(), u.getFloat32()); break; case 10: l[u.getUint16()].alpha = u.getFloat32(); break; case 11: l[u.getUint16()].setScale(u.getFloat32(), u.getFloat32()); break; case 98: c = u.getString(); this.event(c); if (c == "stop") this.stop(); break; case 99: this._curIndex = u.getUint16(); h && this.updateZOrder(); break; case 100: this._count = this._curIndex + 1; this._ended = true; if (this._playing) { this.event("enterframe"); this.event("end"); this.event("complete") } this._reset(false); break } } if (this._playing && !this._ended) this.event("enterframe"); this._Pos = u.pos }; t._setData = function (t, e) { this._data = t; this._start = e + 3 }; t.load = function (t, e, i) { e === void 0 && (e = false); this._url = t; if (e) this._atlasPath = i ? i : t.split(".swf")[0] + ".json"; this.stop(); this._clear(); this._movieClipList = [this]; var r; r = [{ url: t, type: "arraybuffer" }]; if (this._atlasPath) { r.push({ url: this._atlasPath, type: "atlas" }) } st.loader.load(r, v.create(this, this._onLoaded)) }; t._onLoaded = function () { var t; t = _.getRes(this._url); if (!t) { this.event("error", "file not find"); return } if (this._atlasPath && !_.getAtlas(this._atlasPath)) { this.event("error", "Atlas not find"); return } this.basePath = this._atlasPath ? _.getAtlas(this._atlasPath).dir : this._url.split(".swf")[0] + "/image/"; this._initData(t) }; t._initState = function () { this._reset(); this._ended = false; var t = this._playing; this._playing = false; this._curIndex = 0; while (!this._ended) this._parse(++this._curIndex); this._playing = t }; t._initData = function (t) { this._data = new Dt(t); var e = 0, i = this._data.getUint16(); for (e = 0; e < i; e++)this._ids[this._data.getInt16()] = this._data.getInt32(); this.interval = 1e3 / this._data.getUint16(); this._setData(this._data, this._ids[32767]); this._initState(); this.play(0); this.event("loaded"); if (!this._parentMovieClip) this.timer.loop(this.interval, this, this.updates, null, true) }; t.playTo = function (t, e, i) { this._completeHandler = i; this._endFrame = e; this.play(t, false) }; o(0, t, "index", function () { return this._playIndex }, function (t) { this._playIndex = t; if (this._data) this._displayFrame(this._playIndex); if (this._labels && this._labels[t]) this.event("label", this._labels[t]) }); o(0, t, "count", function () { return this._count }); o(0, t, "playing", function () { return this._playing }); o(0, t, "url", null, function (t) { this.load(t) }); m._ValueList = ["x", "y", "width", "height", "scaleX", "scaleY", "rotation", "alpha"]; return m }(nt); var Z = function (e) { function n() { this._mainTexture = null; this._textureJson = null; this._graphicsCache = []; this.srcBoneMatrixArr = []; this.ikArr = []; this.tfArr = []; this.pathArr = []; this.boneSlotDic = {}; this.bindBoneBoneSlotDic = {}; this.boneSlotArray = []; this.skinDataArray = []; this.skinDic = {}; this.subTextureDic = {}; this.isParseFail = false; this.yReverseMatrix = null; this.drawOrderAniArr = []; this.eventAniArr = []; this.attachmentNames = null; this.deformAniArr = []; this._isParseAudio = false; this._isDestroyed = false; this._rate = 30; this.isParserComplete = false; this.aniSectionDic = {}; this._skBufferUrl = null; this._textureDic = {}; this._loadList = null; this._path = null; this.tMatrixDataLen = 0; this.mRootBone = null; n.__super.call(this); this.skinSlotDisplayDataArr = []; this.mBoneArr = [] } a(n, "laya.ani.bone.Templet", e); var t = n.prototype; t.loadAni = function (t) { this._skBufferUrl = t; st.loader.load(t, v.create(this, this.onComplete), null, "arraybuffer") }; t.onComplete = function (t) { if (this._isDestroyed) { this.destroy(); return } var e = _.getRes(this._skBufferUrl); if (!e) { this.event("error", "load failed:" + this._skBufferUrl); return } this._path = this._skBufferUrl.slice(0, this._skBufferUrl.lastIndexOf("/")) + "/"; this.parseData(null, e) }; t.parseData = function (t, e, i) { i === void 0 && (i = 30); if (!this._path && this.url) this._path = this.url.slice(0, this.url.lastIndexOf("/")) + "/"; this._mainTexture = t; if (this._mainTexture) { if (b.isWebGL && t.bitmap) { t.bitmap.enableMerageInAtlas = false } } this._rate = i; this.parse(e) }; t.buildArmature = function (t) { t === void 0 && (t = 0); return new $(this, t) }; t.parse = function (t) { e.prototype.parse.call(this, t); this._endLoaded(); if (this._aniVersion === n.LAYA_ANIMATION_VISION) { this._isParseAudio = true } else if (this._aniVersion != n.LAYA_ANIMATION_160_VISION) { console.log("[Error] 版本不一致，请使用IDE版本配套的重新导出" + this._aniVersion + "->" + n.LAYA_ANIMATION_VISION); this._loaded = false } if (this.loaded) { if (this._mainTexture) { this._parsePublicExtData() } else { this._parseTexturePath() } } else { this.event("error", this); this.isParseFail = true } }; t._parseTexturePath = function () { if (this._isDestroyed) { this.destroy(); return } var t = 0; this._loadList = []; var e = new Dt(this.getPublicExtData()); var i = 0, r = 0, s = 0, n = 0; var a = 0, o = 0, h = 0, l = 0; var u = 0; var c = e.getInt32(); var f = e.readUTFString(); var _ = f.split("\n"); var d; var p; for (t = 0; t < c; t++) { p = this._path + _[t * 2]; f = _[t * 2 + 1]; i = e.getFloat32(); r = e.getFloat32(); s = e.getFloat32(); n = e.getFloat32(); u = e.getFloat32(); a = isNaN(u) ? 0 : u; u = e.getFloat32(); o = isNaN(u) ? 0 : u; u = e.getFloat32(); h = isNaN(u) ? s : u; u = e.getFloat32(); l = isNaN(u) ? n : u; if (this._loadList.indexOf(p) == -1) { this._loadList.push(p) } } st.loader.load(this._loadList, v.create(this, this._textureComplete)) }; t._textureComplete = function () { var t; var e; for (var i = 0, r = this._loadList.length; i < r; i++) { e = this._loadList[i]; t = this._textureDic[e] = _.getRes(e); if (b.isWebGL && t && t.bitmap) { t.bitmap.enableMerageInAtlas = false } } this._parsePublicExtData() }; t._parsePublicExtData = function () { var t = 0, e = 0, i = 0, r = 0, s = 0; for (t = 0, s = this.getAnimationCount(); t < s; t++) { this._graphicsCache.push([]) } var n = false; n = this._aniClassName != "Dragon"; var a = new Dt(this.getPublicExtData()); var o = 0, h = 0, l = 0, u = 0; var c = 0, f = 0, _ = 0, d = 0; var p = 0; var v = a.getInt32(); var m = a.readUTFString(); var g = m.split("\n"); var y; var x; for (t = 0; t < v; t++) { y = this._mainTexture; x = this._path + g[t * 2]; m = g[t * 2 + 1]; if (this._mainTexture == null) { y = this._textureDic[x] } if (!y) { this.event("error", this); this.isParseFail = true; return } o = a.getFloat32(); h = a.getFloat32(); l = a.getFloat32(); u = a.getFloat32(); p = a.getFloat32(); c = isNaN(p) ? 0 : p; p = a.getFloat32(); f = isNaN(p) ? 0 : p; p = a.getFloat32(); _ = isNaN(p) ? l : p; p = a.getFloat32(); d = isNaN(p) ? u : p; this.subTextureDic[m] = Nt.create(y, o, h, l, u, -c, -f, _, d) } this._mainTexture = y; var b = a.getUint16(); var w; for (t = 0; t < b; t++) { w = []; w.push(a.getUint16()); w.push(a.getUint16()); w.push(a.getUint16()); w.push(a.getUint16()); this.aniSectionDic[t] = w } var T; var C; var S; var A; var M = a.getInt16(); var I = {}; var E; for (t = 0; t < M; t++) { T = new Ft; if (t == 0) { E = T } else { T.root = E } T.d = n ? -1 : 1; S = a.readUTFString(); A = a.readUTFString(); T.length = a.getFloat32(); if (a.getByte() == 1) { T.inheritRotation = false } if (a.getByte() == 1) { T.inheritScale = false } T.name = S; if (A) { C = I[A]; if (C) { C.addChild(T) } else { this.mRootBone = T } } I[S] = T; this.mBoneArr.push(T) } this.tMatrixDataLen = a.getUint16(); var R = a.getUint16(); var P = 0; var L = Math.floor(R / this.tMatrixDataLen); var k; var D = this.srcBoneMatrixArr; for (t = 0; t < L; t++) { k = new qt; k.scX = a.getFloat32(); k.skX = a.getFloat32(); k.skY = a.getFloat32(); k.scY = a.getFloat32(); k.x = a.getFloat32(); k.y = a.getFloat32(); if (this.tMatrixDataLen === 8) { k.skewX = a.getFloat32(); k.skewY = a.getFloat32() } D.push(k); T = this.mBoneArr[t]; T.transform = k } var B; var N = a.getUint16(); var F = 0; for (t = 0; t < N; t++) { B = new Gt; F = a.getUint16(); for (e = 0; e < F; e++) { B.boneNames.push(a.readUTFString()); B.boneIndexs.push(a.getInt16()) } B.name = a.readUTFString(); B.targetBoneName = a.readUTFString(); B.targetBoneIndex = a.getInt16(); B.bendDirection = a.getFloat32(); B.mix = a.getFloat32(); B.isSpine = n; this.ikArr.push(B) } var O; var z = a.getUint16(); var U = 0; for (t = 0; t < z; t++) { O = new $t; U = a.getUint16(); for (e = 0; e < U; e++) { O.boneIndexs.push(a.getInt16()) } O.name = a.getUTFString(); O.targetIndex = a.getInt16(); O.rotateMix = a.getFloat32(); O.translateMix = a.getFloat32(); O.scaleMix = a.getFloat32(); O.shearMix = a.getFloat32(); O.offsetRotation = a.getFloat32(); O.offsetX = a.getFloat32(); O.offsetY = a.getFloat32(); O.offsetScaleX = a.getFloat32(); O.offsetScaleY = a.getFloat32(); O.offsetShearY = a.getFloat32(); this.tfArr.push(O) } var W; var V = a.getUint16(); var H = 0; for (t = 0; t < V; t++) { W = new Yt; W.name = a.readUTFString(); H = a.getUint16(); for (e = 0; e < H; e++) { W.bones.push(a.getInt16()) } W.target = a.readUTFString(); W.positionMode = a.readUTFString(); W.spacingMode = a.readUTFString(); W.rotateMode = a.readUTFString(); W.offsetRotation = a.getFloat32(); W.position = a.getFloat32(); W.spacing = a.getFloat32(); W.rotateMix = a.getFloat32(); W.translateMix = a.getFloat32(); this.pathArr.push(W) } var G = 0; var Y = 0; var X = 0; var j; var K = 0; var $ = NaN; var q = 0; var Z; var Q; var J; var tt; var et = a.getInt16(); for (t = 0; t < et; t++) { var it = a.getUint8(); var rt = {}; this.deformAniArr.push(rt); for (var st = 0; st < it; st++) { Z = new zt; Z.skinName = a.getUTFString(); rt[Z.skinName] = Z; G = a.getInt16(); for (e = 0; e < G; e++) { Q = new Ut; Z.deformSlotDataList.push(Q); Y = a.getInt16(); for (i = 0; i < Y; i++) { J = new Wt; Q.deformSlotDisplayList.push(J); J.slotIndex = X = a.getInt16(); J.attachment = j = a.getUTFString(); K = a.getInt16(); for (r = 0; r < K; r++) { if (a.getByte() == 1) { J.tweenKeyList.push(true) } else { J.tweenKeyList.push(false) } $ = a.getFloat32(); J.timeList.push($); tt = []; J.vectices.push(tt); q = a.getInt16(); for (s = 0; s < q; s++) { tt.push(a.getFloat32()) } } } } } } var nt; var at = a.getInt16(); var ot = 0; var ht; var lt = 0; for (t = 0; t < at; t++) { ot = a.getInt16(); nt = []; for (e = 0; e < ot; e++) { ht = new Vt; ht.time = a.getFloat32(); lt = a.getInt16(); for (i = 0; i < lt; i++) { ht.drawOrder.push(a.getInt16()) } nt.push(ht) } this.drawOrderAniArr.push(nt) } var ut; var ct = a.getInt16(); var ft = 0; var _t; for (t = 0; t < ct; t++) { ft = a.getInt16(); ut = []; for (e = 0; e < ft; e++) { _t = new Ht; _t.name = a.getUTFString(); if (this._isParseAudio) _t.audioValue = a.getUTFString(); _t.intValue = a.getInt32(); _t.floatValue = a.getFloat32(); _t.stringValue = a.getUTFString(); _t.time = a.getFloat32(); ut.push(_t) } this.eventAniArr.push(ut) } var dt = a.getInt16(); if (dt > 0) { this.attachmentNames = []; for (t = 0; t < dt; t++) { this.attachmentNames.push(a.getUTFString()) } } var pt = a.getInt16(); var vt; var mt; for (t = 0; t < pt; t++) { vt = new Ot; vt.name = a.readUTFString(); vt.parent = a.readUTFString(); vt.attachmentName = a.readUTFString(); vt.srcDisplayIndex = vt.displayIndex = a.getInt16(); vt.templet = this; this.boneSlotDic[vt.name] = vt; mt = this.bindBoneBoneSlotDic[vt.parent]; if (mt == null) { this.bindBoneBoneSlotDic[vt.parent] = mt = [] } mt.push(vt); this.boneSlotArray.push(vt) } var gt = a.readUTFString(); var yt = gt.split("\n"); var xt = 0; var bt = a.getUint8(); var wt, Tt, Ct; var St = 0, At = 0; var Mt = 0, It = 0, Et = 0, Rt = 0, Pt = 0; for (t = 0; t < bt; t++) { wt = new Xt; wt.name = yt[xt++]; St = a.getUint8(); for (e = 0; e < St; e++) { Tt = new Kt; Tt.name = yt[xt++]; vt = this.boneSlotDic[Tt.name]; At = a.getUint8(); for (i = 0; i < At; i++) { Ct = new jt; this.skinSlotDisplayDataArr.push(Ct); Ct.name = yt[xt++]; Ct.attachmentName = yt[xt++]; Ct.transform = new qt; Ct.transform.scX = a.getFloat32(); Ct.transform.skX = a.getFloat32(); Ct.transform.skY = a.getFloat32(); Ct.transform.scY = a.getFloat32(); Ct.transform.x = a.getFloat32(); Ct.transform.y = a.getFloat32(); Tt.displayArr.push(Ct); Ct.width = a.getFloat32(); Ct.height = a.getFloat32(); Ct.type = a.getUint8(); Ct.verLen = a.getUint16(); M = a.getUint16(); if (M > 0) { Ct.bones = []; for (r = 0; r < M; r++) { var Lt = a.getUint16(); Ct.bones.push(Lt) } } Mt = a.getUint16(); if (Mt > 0) { Ct.uvs = []; for (r = 0; r < Mt; r++) { Ct.uvs.push(a.getFloat32()) } } It = a.getUint16(); if (It > 0) { Ct.weights = []; for (r = 0; r < It; r++) { Ct.weights.push(a.getFloat32()) } } Et = a.getUint16(); if (Et > 0) { Ct.triangles = []; for (r = 0; r < Et; r++) { Ct.triangles.push(a.getUint16()) } } Rt = a.getUint16(); if (Rt > 0) { Ct.vertices = []; for (r = 0; r < Rt; r++) { Ct.vertices.push(a.getFloat32()) } } Pt = a.getUint16(); if (Pt > 0) { Ct.lengths = []; for (r = 0; r < Pt; r++) { Ct.lengths.push(a.getFloat32()) } } } wt.slotArr.push(Tt) } this.skinDic[wt.name] = wt; this.skinDataArray.push(wt) } var kt = a.getUint8(); if (kt == 1) { this.yReverseMatrix = new Bt(1, 0, 0, -1, 0, 0); if (E) { E.setTempMatrix(this.yReverseMatrix) } } else { if (E) { E.setTempMatrix(new Bt) } } this.showSkinByIndex(this.boneSlotDic, 0); this.isParserComplete = true; this.event("complete", this) }; t.getTexture = function (t) { var e = this.subTextureDic[t]; if (!e) { e = this.subTextureDic[t.substr(0, t.length - 1)] } if (e == null) { return this._mainTexture } return e }; t.showSkinByIndex = function (t, e, i) { i === void 0 && (i = true); if (e < 0 && e >= this.skinDataArray.length) return false; var r = 0, s = 0; var n; var a; var o = this.skinDataArray[e]; if (o) { for (r = 0, s = o.slotArr.length; r < s; r++) { a = o.slotArr[r]; if (a) { n = t[a.name]; if (n) { n.showSlotData(a, i); if (i && n.attachmentName != "undefined" && n.attachmentName != "null") { n.showDisplayByName(n.attachmentName) } else { n.showDisplayByIndex(n.displayIndex) } } } } return true } return false }; t.getSkinIndexByName = function (t) { var e; for (var i = 0, r = this.skinDataArray.length; i < r; i++) { e = this.skinDataArray[i]; if (e.name == t) { return i } } return -1 }; t.getGrahicsDataWithCache = function (t, e) { if (this._graphicsCache[t] && this._graphicsCache[t][e]) { return this._graphicsCache[t][e] } return null }; t.setGrahicsDataWithCache = function (t, e, i) { this._graphicsCache[t][e] = i }; t.destroy = function () { this._isDestroyed = true; var t; for (var e in this.subTextureDic) { t = this.subTextureDic[e]; if (t) t.destroy() } var e; for (e in this._textureDic) { t = this._textureDic[e]; if (t) t.destroy() } var i; for (var r = 0, s = this.skinSlotDisplayDataArr.length; r < s; r++) { i = this.skinSlotDisplayDataArr[r]; i.destory() } this.skinSlotDisplayDataArr.length = 0; if (this.url) { delete n.TEMPLET_DICTIONARY[this.url] } laya.resource.Resource.prototype.destroy.call(this) }; t.getAniNameByIndex = function (t) { var e = this.getAnimation(t); if (e) return e.name; return null }; o(0, t, "rate", function () { return this._rate }, function (t) { this._rate = t }); n.LAYA_ANIMATION_160_VISION = "LAYAANIMATION:1.6.0"; n.LAYA_ANIMATION_VISION = "LAYAANIMATION:1.7.0"; n.TEMPLET_DICTIONARY = null; return n }(X) })(window, document, Laya); if (typeof define === "function" && define.amd) { define("laya.core", ["require", "exports"], function (t, e) { "use strict"; Object.defineProperty(e, "__esModule", { value: true }); for (var i in Laya) { var r = Laya[i]; r && r.__isclass && (e[i] = r) } }) } (function (t, e, r) { var i = r.un, s = r.uns, n = r.static, a = r.class, o = r.getset, h = r.__newvec; var l = laya.utils.Browser, u = laya.utils.Color, c = laya.filters.ColorFilterAction; var f = laya.filters.webgl.ColorFilterActionGL, _ = laya.filters.Filter, d = laya.filters.webgl.FilterActionGL; var p = laya.maths.Matrix, v = laya.maths.Rectangle, m = laya.renders.Render, g = laya.renders.RenderContext; var y = laya.webgl.resource.RenderTarget2D, x = laya.utils.RunDriver, b = laya.webgl.shader.d2.ShaderDefines2D; var w = laya.display.Sprite, T = laya.resource.Texture, C = laya.webgl.shader.d2.value.Value2D; var S = function () { function t() { this.data = null } a(t, "laya.filters.FilterAction"); var e = t.prototype; r.imps(e, { "laya.filters.IFilterAction": true }); e.apply = function (t) { return null }; return t }(); var A = function () { function t() { } a(t, "laya.filters.WebGLFilter"); t.enable = function () { if (t.isInit) return; t.isInit = true; if (!m.isWebGL) return; x.createFilterAction = function (t) { var e; switch (t) { case 32: e = new f; break; case 16: e = new E; break; case 8: e = new R; break }return e } }; t.isInit = false; t.__init$ = function () { E; f; R; m; x; { x.createFilterAction = function (t) { var e; switch (t) { case 16: e = new S; break; case 8: e = new S; break; case 32: e = new c; break }return e } } }; return t }(); var M = function (t) { function e(t) { this.strength = NaN; this.strength_sig2_2sig2_gauss1 = []; e.__super.call(this); t === void 0 && (t = 4); if (m.isWebGL) A.enable(); this.strength = t; this._action = x.createFilterAction(16); this._action.data = this } a(e, "laya.filters.BlurFilter", t); var i = e.prototype; i.callNative = function (t) { t.conchModel && t.conchModel.blurFilter && t.conchModel.blurFilter(this.strength) }; o(0, i, "action", function () { return this._action }); o(0, i, "type", function () { return 16 }); return e }(_); var I = function (t) { function s(t, e, i, r) { this._color = null; s.__super.call(this); this._elements = new Float32Array(9); e === void 0 && (e = 4); i === void 0 && (i = 6); r === void 0 && (r = 6); if (m.isWebGL) { A.enable() } this._color = new u(t); this.blur = Math.min(e, 20); this.offX = i; this.offY = r; this._action = x.createFilterAction(8); this._action.data = this } a(s, "laya.filters.GlowFilter", t); var e = s.prototype; e.getColor = function () { return this._color._color }; e.callNative = function (t) { t.conchModel && t.conchModel.glowFilter && t.conchModel.glowFilter(this._color.strColor, this._elements[4], this._elements[5], this._elements[6]) }; o(0, e, "type", function () { return 8 }); o(0, e, "action", function () { return this._action }); o(0, e, "offY", function () { return this._elements[6] }, function (t) { this._elements[6] = t }); o(0, e, "offX", function () { return this._elements[5] }, function (t) { this._elements[5] = t }); o(0, e, "blur", function () { return this._elements[4] }, function (t) { this._elements[4] = t }); return s }(_); var E = function (t) { function e() { this.data = null; e.__super.call(this) } a(e, "laya.filters.webgl.BlurFilterActionGL", t); var i = e.prototype; i.setValueMix = function (t) { t.defines.add(this.data.type); var e = t }; i.apply3d = function (t, e, i, r, s) { var n = t.getValue("bounds"); var a = C.create(1, 0); a.setFilters([this.data]); var o = p.EMPTY; o.identity(); i.ctx.drawTarget(t, 0, 0, n.width, n.height, p.EMPTY, "src", a); a.setFilters(null) }; i.setValue = function (t) { t.strength = this.data.strength; var e = this.data.strength / 3; var i = e * e; this.data.strength_sig2_2sig2_gauss1[0] = this.data.strength; this.data.strength_sig2_2sig2_gauss1[1] = i; this.data.strength_sig2_2sig2_gauss1[2] = 2 * i; this.data.strength_sig2_2sig2_gauss1[3] = 1 / (2 * Math.PI * i); t.strength_sig2_2sig2_gauss1 = this.data.strength_sig2_2sig2_gauss1 }; o(0, i, "typeMix", function () { return 16 }); return e }(d); var R = function (t) { function e() { this.data = null; this._initKey = false; this._textureWidth = 0; this._textureHeight = 0; e.__super.call(this) } a(e, "laya.filters.webgl.GlowFilterActionGL", t); var i = e.prototype; r.imps(i, { "laya.filters.IFilterActionGL": true }); i.setValueMix = function (t) { }; i.apply3d = function (t, e, i, r, s) { var n = t.getValue("bounds"); t.addValue("color", this.data.getColor()); var a = n.width, o = n.height; this._textureWidth = a; this._textureHeight = o; var h; var l = p.TEMP; l.identity(); h = C.create(1, 0); h.setFilters([this.data]); i.ctx.drawTarget(t, 0, 0, this._textureWidth, this._textureHeight, l, "src", h, null); h = C.create(1, 0); i.ctx.drawTarget(t, 0, 0, this._textureWidth, this._textureHeight, l, "src", h); return null }; i.setSpriteWH = function (t) { this._textureWidth = t.width; this._textureHeight = t.height }; i.setValue = function (t) { t.u_offsetX = this.data.offX; t.u_offsetY = -this.data.offY; t.u_strength = 1; t.u_blurX = this.data.blur; t.u_blurY = this.data.blur; t.u_textW = this._textureWidth; t.u_textH = this._textureHeight; t.u_color = this.data.getColor() }; o(0, i, "typeMix", function () { return 8 }); e.tmpTarget = function (t, e, i, r, s) { var n = t.getValue("bounds"); var a = t.getValue("out"); a.end(); var o = y.create(n.width, n.height); o.start(); var h = t.getValue("color"); if (h) { o.clear(h[0], h[1], h[2], 0) } t.addValue("tmpTarget", o) }; e.startOut = function (t, e, i, r, s) { var n = t.getValue("tmpTarget"); n.end(); var a = t.getValue("out"); a.start(); var o = t.getValue("color"); if (o) { a.clear(o[0], o[1], o[2], 0) } }; e.recycleTarget = function (t, e, i, r, s) { var n = t.getValue("src"); var a = t.getValue("tmpTarget"); a.recycle() }; return e }(d); r.__init([A]) })(window, document, Laya); if (typeof define === "function" && define.amd) { define("laya.core", ["require", "exports"], function (t, e) { "use strict"; Object.defineProperty(e, "__esModule", { value: true }); for (var i in Laya) { var r = Laya[i]; r && r.__isclass && (e[i] = r) } }) } (function (t, e, r) { var i = r.un, s = r.uns, n = r.static, a = r.class, o = r.getset, h = r.__newvec; var l = laya.utils.Browser, u = laya.display.css.CSSStyle, d = laya.utils.ClassUtils; var c = laya.events.Event, f = laya.utils.HTMLChar, _ = laya.net.Loader, p = laya.display.Node, v = laya.maths.Rectangle; var m = laya.renders.Render, g = laya.renders.RenderContext, y = laya.renders.RenderSprite; var x = laya.display.Sprite, b = laya.utils.Stat, O = laya.display.Text, w = laya.resource.Texture; var T = laya.net.URL, C = laya.utils.Utils; var S = function () { function _() { } a(_, "laya.html.utils.HTMLParse"); _.parse = function (t, e, i) { e = e.replace(/<br>/g, "<br/>"); e = "<root>" + e + "</root>"; e = e.replace(_.spacePattern, _.char255); var r = C.parseXMLFromString(e); _._parseXML(t, r.childNodes[0].childNodes, i) }; _._parseXML = function (t, e, i, r) { var s = 0, n = 0; if (e.join || e.item) { for (s = 0, n = e.length; s < n; ++s) { _._parseXML(t, e[s], i, r) } } else { var a; var o; if (e.nodeType == 3) { var h; if (t instanceof laya.html.dom.HTMLDivElement) { if (e.nodeName == null) { e.nodeName = "#text" } o = e.nodeName.toLowerCase(); h = e.textContent.replace(/^\s+|\s+$/g, ""); if (h.length > 0) { a = d.getInstance(o); if (a) { t.addChild(a); a.innerTEXT = h.replace(_.char255AndOneSpacePattern, " ") } } } else { h = e.textContent.replace(/^\s+|\s+$/g, ""); if (h.length > 0) { t.innerTEXT = h.replace(_.char255AndOneSpacePattern, " ") } } return } else { o = e.nodeName.toLowerCase(); if (o == "#comment") return; a = d.getInstance(o); if (a) { a = t.addChild(a); a.URI = i; a.href = r; var l = e.attributes; if (l && l.length > 0) { for (s = 0, n = l.length; s < n; ++s) { var u = l[s]; var c = u.nodeName; var f = u.value; a._setAttributes(c, f) } } _._parseXML(a, e.childNodes, i, a.href) } else { _._parseXML(t, e.childNodes, i, r) } } } }; _.char255 = String.fromCharCode(255); _.spacePattern = /&nbsp;|&#160;/g; _.char255AndOneSpacePattern = new RegExp(String.fromCharCode(255) + "|(\\s+)", "g"); return _ }(); var A = function () { function F() { } a(F, "laya.html.utils.Layout"); F.later = function (t) { if (F._will == null) { F._will = []; r.stage.frameLoop(1, null, function () { if (F._will.length < 1) return; for (var t = 0; t < F._will.length; t++) { laya.html.utils.Layout.layout(F._will[t]) } F._will.length = 0 }) } F._will.push(t) }; F.layout = function (t) { if (!t || !t._style) return null; if ((t._style._type & 512) === 0) return null; t.getStyle()._type &= ~512; var e = F._multiLineLayout(t); if (m.isConchApp && t["layaoutCallNative"]) { t.layaoutCallNative() } return e }; F._multiLineLayout = function (t) { if (O.RightToLeft) return F._multiLineLayout2(t); var e = new Array; t._addChildsToLayout(e); var i = 0, r = e.length, s = 0; var n = t._getCSSStyle(); var a = n.letterSpacing; var o = n.leading; var h = n.lineHeight; var l = n._widthAuto() || !n.wordWrap; var u = l ? 999999 : t.width; var c = t.height; var f = 0; var _ = n.italic ? n.fontSize / 3 : 0; var d = n._getAlign(); var p = n._getValign(); var v = p !== 0 || d !== 0 || h != 0; var m; var g = 0; var y = 0; var x = 0; var b = 0; var w = 0; var T = new Array; var C; var S; var A = T[0] = new z; var M = false, I = false; var E; var R; A.h = 0; if (n.italic) u -= n.fontSize / 3; var P = 0; var L = true; function k() { A.y = y; y += A.h + o; if (A.h == 0) y += h; A.mWidth = P; P = 0; A = new z; T.push(A); A.h = 0; g = 0; L = true; M = false } for (i = 0; i < r; i++) { m = e[i]; if (m == null) { if (!L) { g += F.DIV_ELEMENT_PADDING } A.wordStartIndex = A.elements.length; continue } L = false; if (m instanceof laya.html.dom.HTMLBrElement) { k(); A.y = y; continue } else if (m._isChar()) { E = m; if (!E.isWord) { if (T.length > 0 && g + x > u && A.wordStartIndex > 0) { var D = 0; D = A.elements.length - A.wordStartIndex + 1; A.elements.length = A.wordStartIndex; i -= D; k(); continue } M = false; P += E.width } else { M = I || E.char === "\n"; A.wordStartIndex = A.elements.length } x = E.width + a; b = E.height; I = false; M = M || g + x > u; M && k(); A.minTextHeight = Math.min(A.minTextHeight, m.height) } else { C = m._getCSSStyle(); R = m; S = C.padding; C._getCssFloat() === 0 || (v = true); M = I || C.lineElement; x = R.width * R._style._tf.scaleX + S[1] + S[3] + a; b = R.height * R._style._tf.scaleY + S[0] + S[2]; I = C.lineElement; M = M || g + x > u && C.wordWrap; M && k() } A.elements.push(m); A.h = Math.max(A.h, b); m.x = g; m.y = y; g += x; A.w = g - a; A.y = y; f = Math.max(g + _, f) } y = A.y + A.h; if (v) { var B = 0; var N = u; if (l && t.width > 0) { N = t.width } for (i = 0, r = T.length; i < r; i++) { T[i].updatePos(0, N, i, B, d, p, h); B += Math.max(h, T[i].h + o) } y = B } l && (t.width = f); y > t.height && (t.height = y); return [f, y] }; F._multiLineLayout2 = function (t) { var e = new Array; t._addChildsToLayout(e); var i = 0, r = e.length, s = 0; var n = t._getCSSStyle(); var a = n.letterSpacing; var o = n.leading; var h = n.lineHeight; var l = n._widthAuto() || !n.wordWrap; var u = l ? 999999 : t.width; var c = t.height; var f = 0; var _ = n.italic ? n.fontSize / 3 : 0; var d = 2 - n._getAlign(); var p = n._getValign(); var v = p !== 0 || d !== 0 || h != 0; var m; var g = 0; var y = 0; var x = 0; var b = 0; var w = 0; var T = new Array; var C; var S; var A = T[0] = new z; var M = false, I = false; var E; var R; A.h = 0; if (n.italic) u -= n.fontSize / 3; var P = 0; var L = true; function k() { A.y = y; y += A.h + o; if (A.h == 0) y += h; A.mWidth = P; P = 0; A = new z; T.push(A); A.h = 0; g = 0; L = true; M = false } for (i = 0; i < r; i++) { m = e[i]; if (m == null) { if (!L) { g += F.DIV_ELEMENT_PADDING } A.wordStartIndex = A.elements.length; continue } L = false; if (m instanceof laya.html.dom.HTMLBrElement) { k(); A.y = y; continue } else if (m._isChar()) { E = m; if (!E.isWord) { if (T.length > 0 && g + x > u && A.wordStartIndex > 0) { var D = 0; D = A.elements.length - A.wordStartIndex + 1; A.elements.length = A.wordStartIndex; i -= D; k(); continue } M = false; P += E.width } else { M = I || E.char === "\n"; A.wordStartIndex = A.elements.length } x = E.width + a; b = E.height; I = false; M = M || g + x > u; M && k(); A.minTextHeight = Math.min(A.minTextHeight, m.height) } else { C = m._getCSSStyle(); R = m; S = C.padding; C._getCssFloat() === 0 || (v = true); M = I || C.lineElement; x = R.width * R._style._tf.scaleX + S[1] + S[3] + a; b = R.height * R._style._tf.scaleY + S[0] + S[2]; I = C.lineElement; M = M || g + x > u && C.wordWrap; M && k() } A.elements.push(m); A.h = Math.max(A.h, b); m.x = g; m.y = y; g += x; A.w = g - a; A.y = y; f = Math.max(g + _, f) } y = A.y + A.h; if (v) { var B = 0; var N = u; for (i = 0, r = T.length; i < r; i++) { T[i].updatePos(0, N, i, B, d, p, h); B += Math.max(h, T[i].h + o) } y = B } l && (t.width = f); y > t.height && (t.height = y); for (i = 0, r = T.length; i < r; i++) { T[i].revertOrder(u) } return [f, y] }; F._will = null; F.DIV_ELEMENT_PADDING = 0; return F }(); var z = function () { function t() { this.x = 0; this.y = 0; this.w = 0; this.h = 0; this.wordStartIndex = 0; this.minTextHeight = 99999; this.mWidth = 0; this.elements = new Array } a(t, "laya.html.utils.LayoutLine"); var e = t.prototype; e.updatePos = function (t, e, i, r, s, n, a) { var o = 0; var h; if (this.elements.length > 0) { h = this.elements[this.elements.length - 1]; o = h.x + h.width - this.elements[0].x } var l = 0, u = NaN; s === 1 && (l = (e - o) / 2); s === 2 && (l = e - o); a === 0 || n != 0 || (n = 1); for (var c = 0, f = this.elements.length; c < f; c++) { h = this.elements[c]; var _ = h._getCSSStyle(); l !== 0 && (h.x += l); switch (_._getValign()) { case 0: h.y = r; break; case 1: ; var d = 0; if (this.minTextHeight != 99999) { d = this.minTextHeight }; var p = (d + a) / 2; p = Math.max(p, this.h); if (h instanceof laya.html.dom.HTMLImageElement) { u = r + p - h.height } else { u = r + p - h.height } h.y = u; break; case 2: h.y = r + (a - h.height); break } } }; e.revertOrder = function (t) { var e; if (this.elements.length > 0) { var i = 0, r = 0; r = this.elements.length; for (i = 0; i < r; i++) { e = this.elements[i]; e.x = t - e.x - e.width } } }; return t }(); var M = function (i) { function e() { this.URI = null; this._href = null; e.__super.call(this); this._text = e._EMPTYTEXT; this.setStyle(new u(this)); this._getCSSStyle().valign = "middle"; this.mouseEnabled = true } a(e, "laya.html.dom.HTMLElement", i); var t = e.prototype; t.layaoutCallNative = function () { var t = 0; if (this._childs && (t = this._childs.length) > 0) { for (var e = 0; e < t; e++) { this._childs[e].layaoutCallNative && this._childs[e].layaoutCallNative() } } var i = this._getWords(); i ? laya.html.dom.HTMLElement.fillWords(this, i, 0, 0, this.style.font, this.style.color, this.style.underLine) : this.graphics.clear() }; t.appendChild = function (t) { return this.addChild(t) }; t._getWords2 = function () { var t = this._text.text; if (!t || t.length === 0) return null; var e = 0, i = 0; var r; var s; if (!this._text.drawWords) { r = t.split(" "); i = r.length - 1; s = []; for (e = 0; e < i; e++) { s.push(r[e], " ") } if (i >= 0) s.push(r[i]); this._text.drawWords = s } else { s = this._text.drawWords } var n = this._text.words; if (n && n.length === s.length) return n; n === null && (this._text.words = n = []); n.length = s.length; var a; var o = this.style; var h = o.font; for (e = 0, i = s.length; e < i; e++) { a = C.measureText(s[e], h); var l = n[e] = new f(s[e], a.width, a.height || o.fontSize, o); if (l.char.length > 1) { l.charNum = l.char } if (this.href) { var u = new x; this.addChild(u); l.setSprite(u) } } return n }; t._getWords = function () { if (!O.CharacterCache) return this._getWords2(); var t = this._text.text; if (!t || t.length === 0) return null; var e = this._text.words; if (e && e.length === t.length) return e; e === null && (this._text.words = e = []); e.length = t.length; var i; var r = this.style; var s = r.font; var n = 0; for (var a = 0, o = t.length; a < o; a++) { i = C.measureText(t.charAt(a), s); var h = e[a] = new f(t.charAt(a), i.width, i.height || r.fontSize, r); if (this.href) { var l = new x; this.addChild(l); h.setSprite(l) } } return e }; t.showLinkSprite = function () { var t = this._text.words; if (t) { var e = []; var i; var r; for (var s = 0; s < t.length; s++) { r = t[s]; i = new x; i.graphics.drawRect(0, 0, r.width, r.height, "#ff0000"); i.width = r.width; i.height = r.height; this.addChild(i); e.push(i) } } }; t._layoutLater = function () { var t = this.style; if (t._type & 512) return; if (t.widthed(this) && (this._childs.length > 0 || this._getWords() != null) && t.block) { A.later(this); t._type |= 512 } else { this.parent && this.parent._layoutLater() } }; t._setAttributes = function (t, e) { switch (t) { case "style": this.style.cssText(e); return; case "class": this.className = e; return }i.prototype._setAttributes.call(this, t, e) }; t.updateHref = function () { if (this._href != null) { var t = this._getWords(); if (t) { var e; var i; for (var r = 0; r < t.length; r++) { e = t[r]; i = e.getSprite(); if (i) { i.size(e.width, e.height); i.on("click", this, this.onLinkHandler) } } } } }; t.onLinkHandler = function (t) { switch (t.type) { case "click": ; var e = this; while (e) { e.event("link", [this.href]); e = e.parent } break } }; t.formatURL = function (t) { if (!this.URI) return t; return T.formatURL(t, this.URI ? this.URI.path : null) }; o(0, t, "href", function () { return this._href }, function (t) { this._href = t; if (t != null) { this._getCSSStyle().underLine = 1; this.updateHref() } }); o(0, t, "color", null, function (t) { this.style.color = t }); o(0, t, "onClick", null, function (t) { var e; r._runScript("fn=function(event){" + t + ";}"); this.on("click", this, e) }); o(0, t, "id", null, function (t) { R.document.setElementById(t, this) }); o(0, t, "innerTEXT", function () { return this._text.text }, function (t) { this.text = t }); o(0, t, "style", function () { return this._style }); o(0, t, "text", function () { return this._text.text }, function (t) { if (this._text == e._EMPTYTEXT) { this._text = { text: t, words: null } } else { this._text.text = t; this._text.words && (this._text.words.length = 0) } m.isConchApp && this.layaoutCallNative(); this._renderType |= 2048; this.repaint(); this.updateHref() }); o(0, t, "parent", i.prototype._$get_parent, function (t) { if (t instanceof laya.html.dom.HTMLElement) { var e = t; this.URI || (this.URI = e.URI); this.style.inherit(e.style) } r.superSet(x, this, "parent", t) }); o(0, t, "className", null, function (t) { this.style.attrs(R.document.styleSheets["." + t]) }); e.fillWords = function (t, e, i, r, s, n, a) { t.graphics.clear(); for (var o = 0, h = e.length; o < h; o++) { var l = e[o]; t.graphics.fillText(l.char, l.x + i, l.y + r, s, n, "left", a) } }; e._EMPTYTEXT = { text: null, words: null }; return e }(x); var I = function (t) { function e() { e.__super.call(this); this.style.lineElement = true; this.style.block = true } a(e, "laya.html.dom.HTMLBrElement", t); return e }(M); var E = function (t) { function e() { this.contextHeight = NaN; this.contextWidth = NaN; e.__super.call(this); this.style.block = true; this.style.lineElement = true; this.style.width = 200; this.style.height = 200; k } a(e, "laya.html.dom.HTMLDivElement", t); var i = e.prototype; i.appendHTML = function (t) { S.parse(this, t, this.URI); this.layout() }; i._addChildsToLayout = function (e) { var t = this._getWords(); if (t == null && this._childs.length == 0) return false; t && t.forEach(function (t) { e.push(t) }); var i = true; for (var r = 0, s = this._childs.length; r < s; r++) { var n = this._childs[r]; if (i) { i = false } else { e.push(null) } n._addToLayout(e) } return true }; i._addToLayout = function (t) { this.layout() }; i.layout = function () { if (!this.style) return; this.style._type |= 512; var t = A.layout(this); if (t) { if (!this._$P.mHtmlBounds) this._set$P("mHtmlBounds", new v); var e = this._$P.mHtmlBounds; e.x = e.y = 0; e.width = this.contextWidth = t[0]; e.height = this.contextHeight = t[1]; this.setBounds(e) } }; o(0, i, "height", function () { if (this._height) return this._height; return this.contextHeight }, t.prototype._$set_height); o(0, i, "innerHTML", null, function (t) { this.destroyChildren(); this.appendHTML(t) }); o(0, i, "width", function () { if (this._width) return this._width; return this.contextWidth }, function (t) { var e = false; if (t === 0) { e = t != this._width } else { e = t != this.width } r.superSet(M, this, "width", t); if (e) this.layout() }); return e }(M); var R = function (t) { function e() { this.all = new Array; this.styleSheets = u.styleSheets; e.__super.call(this) } a(e, "laya.html.dom.HTMLDocument", t); var i = e.prototype; i.getElementById = function (t) { return this.all[t] }; i.setElementById = function (t, e) { this.all[t] = e }; n(e, ["document", function () { return this.document = new e }]); return e }(M); var P = function (t) { function e() { this._tex = null; this._url = null; this._renderArgs = []; e.__super.call(this); this.style.block = true } a(e, "laya.html.dom.HTMLImageElement", t); var i = e.prototype; i._addToLayout = function (t) { !this._style.absolute && t.push(this) }; i.render = function (t, e, i) { if (!this._tex || !this._tex.loaded || !this._tex.loaded || this._width < 1 || this._height < 1) return; b.spriteCount++; this._renderArgs[0] = this._tex; this._renderArgs[1] = this.x; this._renderArgs[2] = this.y; this._renderArgs[3] = this.width || this._tex.width; this._renderArgs[4] = this.height || this._tex.height; t.ctx.drawTexture2(e, i, this.style.translateX, this.style.translateY, this.transform, this.style.alpha, this.style.blendMode, this._renderArgs) }; i.layaoutCallNative = function () { var t = 0; if (this._childs && (t = this._childs.length) > 0) { for (var e = 0; e < t; e++) { this._childs[e].layaoutCallNative && this._childs[e].layaoutCallNative() } } }; o(0, i, "src", null, function (t) { var r = this; t = this.formatURL(t); if (this._url == t) return; this._url = t; var e = this._tex = _.getRes(t); if (!e) { this._tex = e = new w; e.load(t); _.cacheRes(t, e) } function i() { if (!r._style) return; var t = r._style; var e = t.widthed(r) ? -1 : r._tex.width; var i = t.heighted(r) ? -1 : r._tex.height; if (!t.widthed(r) && r._width != r._tex.width) { r.width = r._tex.width; r.parent && r.parent._layoutLater() } if (!t.heighted(r) && r._height != r._tex.height) { r.height = r._tex.height; r.parent && r.parent._layoutLater() } if (m.isConchApp) { r._renderArgs[0] = r._tex; r._renderArgs[1] = r.x; r._renderArgs[2] = r.y; r._renderArgs[3] = r.width || r._tex.width; r._renderArgs[4] = r.height || r._tex.height; r.graphics.drawTexture(r._tex, 0, 0, r._renderArgs[3], r._renderArgs[4]) } r.repaint(); r.parentRepaint() } e.loaded ? i() : e.on("loaded", null, i) }); return e }(M); var L = function (t) { function e() { this.type = null; e.__super.call(this); this.visible = false } a(e, "laya.html.dom.HTMLLinkElement", t); var i = e.prototype; i._onload = function (t) { switch (this.type) { case "text/css": u.parseCSS(t, this.URI); break } }; o(0, i, "href", t.prototype._$get_href, function (t) { var e = this; t = this.formatURL(t); this.URI = new T(t); var i = new _; i.once("complete", null, function (t) { e._onload(t) }); i.load(t, "text") }); e._cuttingStyle = new RegExp("((@keyframes[\\s\\t]+|)(.+))[\\t\\n\\r\\s]*{", "g"); return e }(M); var k = function (t) { function e() { e.__super.call(this); this.visible = false } a(e, "laya.html.dom.HTMLStyleElement", t); var i = e.prototype; o(0, i, "text", t.prototype._$get_text, function (t) { u.parseCSS(t, null) }); return e }(M); var D = function (t) { function e() { e.__super.call(this); this._getCSSStyle().valign = "middle" } a(e, "laya.html.dom.HTMLIframeElement", t); var i = e.prototype; o(0, i, "href", t.prototype._$get_href, function (i) { var r = this; i = this.formatURL(i); var t = new _; t.once("complete", null, function (t) { var e = r.URI; r.URI = new T(i); r.innerHTML = t; !e || (r.URI = e) }); t.load(i, "text") }); return e }(E) })(window, document, Laya); if (typeof define === "function" && define.amd) { define("laya.core", ["require", "exports"], function (t, e) { "use strict"; Object.defineProperty(e, "__esModule", { value: true }); for (var i in Laya) { var r = Laya[i]; r && r.__isclass && (e[i] = r) } }) } (function (s, t, n) { var e = n.un, i = n.uns, r = n.static, a = n.class, o = n.getset, h = n.__newvec; var l = laya.webgl.canvas.BlendMode, u = laya.events.Event, c = laya.resource.HTMLCanvas; var f = laya.utils.Handler, _ = laya.webgl.utils.IndexBuffer2D, d = laya.net.Loader, p = laya.maths.MathUtil; var v = laya.maths.Matrix, m = laya.renders.Render, g = laya.renders.RenderContext, y = laya.renders.RenderSprite; var x = laya.webgl.shader.Shader, b = laya.display.Sprite, w = laya.utils.Stat, T = laya.resource.Texture; var C = laya.utils.Utils, S = laya.webgl.shader.d2.value.Value2D, A = laya.webgl.utils.VertexBuffer2D; var M = laya.webgl.WebGL, I = laya.webgl.WebGLContext; var E = function () { function t() { this._frameTime = 0; this._emissionRate = 60; this._emissionTime = 0; this.minEmissionTime = 1 / 60; this._particleTemplate = null } a(t, "laya.particle.emitter.EmitterBase"); var e = t.prototype; e.start = function (t) { t === void 0 && (t = 2147483647); if (this._emissionRate != 0) this._emissionTime = t }; e.stop = function () { this._emissionTime = 0 }; e.clear = function () { this._emissionTime = 0 }; e.emit = function () { }; e.advanceTime = function (t) { t === void 0 && (t = 1); this._emissionTime -= t; if (this._emissionTime < 0) return; this._frameTime += t; if (this._frameTime < this.minEmissionTime) return; while (this._frameTime > this.minEmissionTime) { this._frameTime -= this.minEmissionTime; this.emit() } }; o(0, e, "particleTemplate", null, function (t) { this._particleTemplate = t }); o(0, e, "emissionRate", function () { return this._emissionRate }, function (t) { if (t <= 0) return; this._emissionRate = t; t > 0 && (this.minEmissionTime = 1 / t) }); return t }(); var R = function () { function c() { this.position = null; this.velocity = null; this.startColor = null; this.endColor = null; this.sizeRotation = null; this.radius = null; this.radian = null; this.durationAddScale = NaN; this.time = NaN } a(c, "laya.particle.ParticleData"); c.Create = function (t, e, i, r) { var s = new c; s.position = e; p.scaleVector3(i, t.emitterVelocitySensitivity, c._tempVelocity); var n = p.lerp(t.minHorizontalVelocity, t.maxHorizontalVelocity, Math.random()); var a = Math.random() * Math.PI * 2; c._tempVelocity[0] += n * Math.cos(a); c._tempVelocity[2] += n * Math.sin(a); c._tempVelocity[1] += p.lerp(t.minVerticalVelocity, t.maxVerticalVelocity, Math.random()); s.velocity = c._tempVelocity; s.startColor = c._tempStartColor; s.endColor = c._tempEndColor; var o = 0; if (t.disableColor) { for (o = 0; o < 4; o++) { s.startColor[o] = 1; s.endColor[o] = 1 } } else { if (t.colorComponentInter) { for (o = 0; o < 4; o++) { s.startColor[o] = p.lerp(t.minStartColor[o], t.maxStartColor[o], Math.random()); s.endColor[o] = p.lerp(t.minEndColor[o], t.maxEndColor[o], Math.random()) } } else { p.lerpVector4(t.minStartColor, t.maxStartColor, Math.random(), s.startColor); p.lerpVector4(t.minEndColor, t.maxEndColor, Math.random(), s.endColor) } } s.sizeRotation = c._tempSizeRotation; var h = Math.random(); s.sizeRotation[0] = p.lerp(t.minStartSize, t.maxStartSize, h); s.sizeRotation[1] = p.lerp(t.minEndSize, t.maxEndSize, h); s.sizeRotation[2] = p.lerp(t.minRotateSpeed, t.maxRotateSpeed, Math.random()); s.radius = c._tempRadius; var l = Math.random(); s.radius[0] = p.lerp(t.minStartRadius, t.maxStartRadius, l); s.radius[1] = p.lerp(t.minEndRadius, t.maxEndRadius, l); s.radian = c._tempRadian; s.radian[0] = p.lerp(t.minHorizontalStartRadian, t.maxHorizontalStartRadian, Math.random()); s.radian[1] = p.lerp(t.minVerticalStartRadian, t.maxVerticalStartRadian, Math.random()); var u = t.useEndRadian; s.radian[2] = u ? p.lerp(t.minHorizontalEndRadian, t.maxHorizontalEndRadian, Math.random()) : s.radian[0]; s.radian[3] = u ? p.lerp(t.minVerticalEndRadian, t.maxVerticalEndRadian, Math.random()) : s.radian[1]; s.durationAddScale = t.ageAddScale * Math.random(); s.time = r; return s }; r(c, ["_tempVelocity", function () { return this._tempVelocity = new Float32Array(3) }, "_tempStartColor", function () { return this._tempStartColor = new Float32Array(4) }, "_tempEndColor", function () { return this._tempEndColor = new Float32Array(4) }, "_tempSizeRotation", function () { return this._tempSizeRotation = new Float32Array(3) }, "_tempRadius", function () { return this._tempRadius = new Float32Array(2) }, "_tempRadian", function () { return this._tempRadian = new Float32Array(4) }]); return c }(); var P = function () { function t(t, e, i) { this._templet = null; this._timeBetweenParticles = NaN; this._previousPosition = null; this._timeLeftOver = 0; this._tempVelocity = new Float32Array([0, 0, 0]); this._tempPosition = new Float32Array([0, 0, 0]); this._templet = t; this._timeBetweenParticles = 1 / e; this._previousPosition = i } a(t, "laya.particle.ParticleEmitter"); var e = t.prototype; e.update = function (t, e) { t = t / 1e3; if (t > 0) { p.subtractVector3(e, this._previousPosition, this._tempVelocity); p.scaleVector3(this._tempVelocity, 1 / t, this._tempVelocity); var i = this._timeLeftOver + t; var r = -this._timeLeftOver; while (i > this._timeBetweenParticles) { r += this._timeBetweenParticles; i -= this._timeBetweenParticles; p.lerpVector3(this._previousPosition, e, r / t, this._tempPosition); this._templet.addParticleArray(this._tempPosition, this._tempVelocity) } this._timeLeftOver = i } this._previousPosition[0] = e[0]; this._previousPosition[1] = e[1]; this._previousPosition[2] = e[2] }; return t }(); var L = function () { function i() { this.textureName = null; this.textureCount = 1; this.maxPartices = 100; this.duration = 1; this.ageAddScale = 0; this.emitterVelocitySensitivity = 1; this.minStartSize = 100; this.maxStartSize = 100; this.minEndSize = 100; this.maxEndSize = 100; this.minHorizontalVelocity = 0; this.maxHorizontalVelocity = 0; this.minVerticalVelocity = 0; this.maxVerticalVelocity = 0; this.endVelocity = 1; this.minRotateSpeed = 0; this.maxRotateSpeed = 0; this.minStartRadius = 0; this.maxStartRadius = 0; this.minEndRadius = 0; this.maxEndRadius = 0; this.minHorizontalStartRadian = 0; this.maxHorizontalStartRadian = 0; this.minVerticalStartRadian = 0; this.maxVerticalStartRadian = 0; this.useEndRadian = true; this.minHorizontalEndRadian = 0; this.maxHorizontalEndRadian = 0; this.minVerticalEndRadian = 0; this.maxVerticalEndRadian = 0; this.colorComponentInter = false; this.disableColor = false; this.blendState = 0; this.emitterType = "null"; this.emissionRate = 0; this.sphereEmitterRadius = 1; this.sphereEmitterVelocity = 0; this.sphereEmitterVelocityAddVariance = 0; this.ringEmitterRadius = 30; this.ringEmitterVelocity = 0; this.ringEmitterVelocityAddVariance = 0; this.ringEmitterUp = 2; this.gravity = new Float32Array([0, 0, 0]); this.minStartColor = new Float32Array([1, 1, 1, 1]); this.maxStartColor = new Float32Array([1, 1, 1, 1]); this.minEndColor = new Float32Array([1, 1, 1, 1]); this.maxEndColor = new Float32Array([1, 1, 1, 1]); this.pointEmitterPosition = new Float32Array([0, 0, 0]); this.pointEmitterPositionVariance = new Float32Array([0, 0, 0]); this.pointEmitterVelocity = new Float32Array([0, 0, 0]); this.pointEmitterVelocityAddVariance = new Float32Array([0, 0, 0]); this.boxEmitterCenterPosition = new Float32Array([0, 0, 0]); this.boxEmitterSize = new Float32Array([0, 0, 0]); this.boxEmitterVelocity = new Float32Array([0, 0, 0]); this.boxEmitterVelocityAddVariance = new Float32Array([0, 0, 0]); this.sphereEmitterCenterPosition = new Float32Array([0, 0, 0]); this.ringEmitterCenterPosition = new Float32Array([0, 0, 0]); this.positionVariance = new Float32Array([0, 0, 0]) } a(i, "laya.particle.ParticleSetting"); i.checkSetting = function (t) { var e; for (e in i._defaultSetting) { if (!t.hasOwnProperty(e)) { t[e] = i._defaultSetting[e] } } t.endVelocity = +t.endVelocity; t.gravity[0] = +t.gravity[0]; t.gravity[1] = +t.gravity[1]; t.gravity[2] = +t.gravity[2] }; r(i, ["_defaultSetting", function () { return this._defaultSetting = new i }]); return i }(); var k = function () { function t() { this.settings = null; this.texture = null } a(t, "laya.particle.ParticleTemplateBase"); var e = t.prototype; e.addParticleArray = function (t, e) { }; return t }(); var D = function () { function t() { this.u_Duration = NaN; this.u_EndVelocity = NaN; this.u_Gravity = null; this.a_Position = null; this.a_Velocity = null; this.a_StartColor = null; this.a_EndColor = null; this.a_SizeRotation = null; this.a_Radius = null; this.a_Radian = null; this.a_AgeAddScale = NaN; this.gl_Position = null; this.v_Color = null; this.oSize = NaN; this._color = new Float32Array(4); this._position = new Float32Array(3) } a(t, "laya.particle.particleUtils.CanvasShader"); var e = t.prototype; e.getLen = function (t) { return Math.sqrt(t[0] * t[0] + t[1] * t[1] + t[2] * t[2]) }; e.ComputeParticlePosition = function (t, e, i, r) { this._position[0] = t[0]; this._position[1] = t[1]; this._position[2] = t[2]; var s = this.getLen(e); var n = s * this.u_EndVelocity; var a = s * r + (n - s) * r * r / 2; var o = NaN; o = this.getLen(e); var h = 0, l = 0; l = 3; for (h = 0; h < l; h++) { this._position[h] = this._position[h] + e[h] / o * a * this.u_Duration; this._position[h] += this.u_Gravity[h] * i * r } var u = p.lerp(this.a_Radius[0], this.a_Radius[1], r); var c = p.lerp(this.a_Radian[0], this.a_Radian[2], r); var f = p.lerp(this.a_Radian[1], this.a_Radian[3], r); var _ = Math.cos(f) * u; this._position[1] += Math.sin(f) * u; this._position[0] += Math.cos(c) * _; this._position[2] += Math.sin(c) * _; return new Float32Array([this._position[0], this._position[1], 0, 1]) }; e.ComputeParticleSize = function (t, e, i) { var r = p.lerp(t, e, i); return r }; e.ComputeParticleRotation = function (t, e) { return t * e }; e.ComputeParticleColor = function (t, e, i) { var r = this._color; p.lerpVector4(t, e, i, r); r[3] = r[3] * i * (1 - i) * (1 - i) * 6.7; return r }; e.clamp = function (t, e, i) { if (t < e) return e; if (t > i) return i; return t }; e.getData = function (t) { t *= 1 + this.a_AgeAddScale; var e = this.clamp(t / this.u_Duration, 0, 1); this.gl_Position = this.ComputeParticlePosition(this.a_Position, this.a_Velocity, t, e); var i = this.ComputeParticleSize(this.a_SizeRotation[0], this.a_SizeRotation[1], e); var r = this.ComputeParticleRotation(this.a_SizeRotation[2], t); this.v_Color = this.ComputeParticleColor(this.a_StartColor, this.a_EndColor, e); var s = new v; var n = NaN; n = i / this.oSize * 2; s.scale(n, n); s.rotate(r); s.setTranslate(this.gl_Position[0], -this.gl_Position[1]); var a = NaN; a = this.v_Color[3]; return [this.v_Color, a, s, this.v_Color[0] * a, this.v_Color[1] * a, this.v_Color[2] * a] }; return t }(); var B = function () { function t() { this.maxIndex = 0; this.cmds = null; this.id = 0 } a(t, "laya.particle.particleUtils.CMDParticle"); var e = t.prototype; e.setCmds = function (t) { this.cmds = t; this.maxIndex = t.length - 1 }; return t }(); var N = function () { function i() { } a(i, "laya.particle.particleUtils.PicTool"); i.getCanvasPic = function (t, e) { t = t.bitmap; var i = new c("2D"); var r = i.getContext("2d"); i.size(t.width, t.height); var s = e >> 16 & 255; var n = e >> 8 & 255; var a = e & 255; if (m.isConchApp) { r.setFilter(s / 255, n / 255, a / 255, 0) } r.drawImage(t.source, 0, 0); if (!m.isConchApp) { var o = r.getImageData(0, 0, i.width, i.height); var h = o.data; for (var l = 0, u = h.length; l < u; l += 4) { if (h[l + 3] == 0) continue; h[l] *= s / 255; h[l + 1] *= n / 255; h[l + 2] *= a / 255 } r.putImageData(o, 0, 0) } return i }; i.getRGBPic = function (t) { var e; e = [new T(i.getCanvasPic(t, 16711680)), new T(i.getCanvasPic(t, 65280)), new T(i.getCanvasPic(t, 255))]; return e }; return i }(); var F = function (t) { function e(t) { this.setting = null; this._posRange = null; this._canvasTemplate = null; this._emitFun = null; e.__super.call(this); this.template = t } a(e, "laya.particle.emitter.Emitter2D", t); var i = e.prototype; i.emit = function () { t.prototype.emit.call(this); if (this._emitFun != null) this._emitFun() }; i.getRandom = function (t) { return (Math.random() * 2 - 1) * t }; i.webGLEmit = function () { var t = new Float32Array(3); t[0] = this.getRandom(this._posRange[0]); t[1] = this.getRandom(this._posRange[1]); t[2] = this.getRandom(this._posRange[2]); var e = new Float32Array(3); e[0] = 0; e[1] = 0; e[2] = 0; this._particleTemplate.addParticleArray(t, e) }; i.canvasEmit = function () { var t = new Float32Array(3); t[0] = this.getRandom(this._posRange[0]); t[1] = this.getRandom(this._posRange[1]); t[2] = this.getRandom(this._posRange[2]); var e = new Float32Array(3); e[0] = 0; e[1] = 0; e[2] = 0; this._particleTemplate.addParticleArray(t, e) }; o(0, i, "template", function () { return this._particleTemplate }, function (t) { this._particleTemplate = t; if (!t) { this._emitFun = null; this.setting = null; this._posRange = null } this.setting = t.settings; this._posRange = this.setting.positionVariance; if (this._particleTemplate instanceof laya.particle.ParticleTemplate2D) { this._emitFun = this.webGLEmit } else if (this._particleTemplate instanceof laya.particle.ParticleTemplateCanvas) { this._canvasTemplate = t; this._emitFun = this.canvasEmit } }); return e }(E); var O = function (t) { function e(t) { this._vertices = null; this._vertexBuffer = null; this._indexBuffer = null; this._floatCountPerVertex = 29; this._firstActiveElement = 0; this._firstNewElement = 0; this._firstFreeElement = 0; this._firstRetiredElement = 0; this._currentTime = 0; this._drawCounter = 0; e.__super.call(this); this.settings = t } a(e, "laya.particle.ParticleTemplateWebGL", t); var i = e.prototype; i.initialize = function () { this._vertices = new Float32Array(this.settings.maxPartices * this._floatCountPerVertex * 4); var t = 0; for (var e = 0; e < this.settings.maxPartices; e++) { var i = Math.random(); var r = this.settings.textureCount ? 1 / this.settings.textureCount : 1; var s = NaN; for (s = 0; s < this.settings.textureCount; s += r) { if (i < s + r) break } t = e * this._floatCountPerVertex * 4; this._vertices[t + this._floatCountPerVertex * 0 + 0] = -1; this._vertices[t + this._floatCountPerVertex * 0 + 1] = -1; this._vertices[t + this._floatCountPerVertex * 0 + 2] = 0; this._vertices[t + this._floatCountPerVertex * 0 + 3] = s; this._vertices[t + this._floatCountPerVertex * 1 + 0] = 1; this._vertices[t + this._floatCountPerVertex * 1 + 1] = -1; this._vertices[t + this._floatCountPerVertex * 1 + 2] = 1; this._vertices[t + this._floatCountPerVertex * 1 + 3] = s; this._vertices[t + this._floatCountPerVertex * 2 + 0] = 1; this._vertices[t + this._floatCountPerVertex * 2 + 1] = 1; this._vertices[t + this._floatCountPerVertex * 2 + 2] = 1; this._vertices[t + this._floatCountPerVertex * 2 + 3] = s + r; this._vertices[t + this._floatCountPerVertex * 3 + 0] = -1; this._vertices[t + this._floatCountPerVertex * 3 + 1] = 1; this._vertices[t + this._floatCountPerVertex * 3 + 2] = 0; this._vertices[t + this._floatCountPerVertex * 3 + 3] = s + r } }; i.loadContent = function () { }; i.update = function (t) { this._currentTime += t / 1e3; this.retireActiveParticles(); this.freeRetiredParticles(); if (this._firstActiveElement == this._firstFreeElement) this._currentTime = 0; if (this._firstRetiredElement == this._firstActiveElement) this._drawCounter = 0 }; i.retireActiveParticles = function () { var t = 1e-4; var e = this.settings.duration; while (this._firstActiveElement != this._firstNewElement) { var i = this._firstActiveElement * this._floatCountPerVertex * 4; var r = i + 28; var s = this._currentTime - this._vertices[r]; s *= 1 + this._vertices[i + 27]; if (s + t < e) break; this._vertices[r] = this._drawCounter; this._firstActiveElement++; if (this._firstActiveElement >= this.settings.maxPartices) this._firstActiveElement = 0 } }; i.freeRetiredParticles = function () { while (this._firstRetiredElement != this._firstActiveElement) { var t = this._drawCounter - this._vertices[this._firstRetiredElement * this._floatCountPerVertex * 4 + 28]; if (t < 3) break; this._firstRetiredElement++; if (this._firstRetiredElement >= this.settings.maxPartices) this._firstRetiredElement = 0 } }; i.addNewParticlesToVertexBuffer = function () { }; i.addParticleArray = function (t, e) { var i = this._firstFreeElement + 1; if (i >= this.settings.maxPartices) i = 0; if (i === this._firstRetiredElement) return; var r = R.Create(this.settings, t, e, this._currentTime); var s = this._firstFreeElement * this._floatCountPerVertex * 4; for (var n = 0; n < 4; n++) { var a = 0, o = 0; for (a = 0, o = 4; a < 3; a++)this._vertices[s + n * this._floatCountPerVertex + o + a] = r.position[a]; for (a = 0, o = 7; a < 3; a++)this._vertices[s + n * this._floatCountPerVertex + o + a] = r.velocity[a]; for (a = 0, o = 10; a < 4; a++)this._vertices[s + n * this._floatCountPerVertex + o + a] = r.startColor[a]; for (a = 0, o = 14; a < 4; a++)this._vertices[s + n * this._floatCountPerVertex + o + a] = r.endColor[a]; for (a = 0, o = 18; a < 3; a++)this._vertices[s + n * this._floatCountPerVertex + o + a] = r.sizeRotation[a]; for (a = 0, o = 21; a < 2; a++)this._vertices[s + n * this._floatCountPerVertex + o + a] = r.radius[a]; for (a = 0, o = 23; a < 4; a++)this._vertices[s + n * this._floatCountPerVertex + o + a] = r.radian[a]; this._vertices[s + n * this._floatCountPerVertex + 27] = r.durationAddScale; this._vertices[s + n * this._floatCountPerVertex + 28] = r.time } this._firstFreeElement = i }; return e }(k); var z = function (t) { function e(t) { this._ready = false; this.textureList = []; this.particleList = []; this.pX = 0; this.pY = 0; this.activeParticles = []; this.deadParticles = []; this.iList = []; this._maxNumParticles = 0; this.textureWidth = NaN; this.dTextureWidth = NaN; this.colorChange = true; this.step = 1 / 60; this.canvasShader = new D; e.__super.call(this); this.settings = t; this._maxNumParticles = t.maxPartices; this.texture = new T; this.texture.on("loaded", this, this._textureLoaded); this.texture.load(t.textureName) } a(e, "laya.particle.ParticleTemplateCanvas", t); var i = e.prototype; i._textureLoaded = function (t) { this.setTexture(this.texture); this._ready = true }; i.clear = function (t) { t === void 0 && (t = true); this.deadParticles.length = 0; this.activeParticles.length = 0; this.textureList.length = 0 }; i.setTexture = function (t) { this.texture = t; this.textureWidth = t.width; this.dTextureWidth = 1 / this.textureWidth; this.pX = -t.width * .5; this.pY = -t.height * .5; this.textureList = e.changeTexture(t, this.textureList); this.particleList.length = 0; this.deadParticles.length = 0; this.activeParticles.length = 0 }; i._createAParticleData = function (t, e) { this.canvasShader.u_EndVelocity = this.settings.endVelocity; this.canvasShader.u_Gravity = this.settings.gravity; this.canvasShader.u_Duration = this.settings.duration; var i; i = R.Create(this.settings, t, e, 0); this.canvasShader.a_Position = i.position; this.canvasShader.a_Velocity = i.velocity; this.canvasShader.a_StartColor = i.startColor; this.canvasShader.a_EndColor = i.endColor; this.canvasShader.a_SizeRotation = i.sizeRotation; this.canvasShader.a_Radius = i.radius; this.canvasShader.a_Radian = i.radian; this.canvasShader.a_AgeAddScale = i.durationAddScale; this.canvasShader.oSize = this.textureWidth; var r = new B; var s = 0, n = this.settings.duration / (1 + i.durationAddScale); var a = []; var o = NaN; for (s = 0; s < n; s += this.step) { a.push(this.canvasShader.getData(s)) } r.id = this.particleList.length; this.particleList.push(r); r.setCmds(a); return r }; i.addParticleArray = function (t, e) { if (!this._ready) return; var i; if (this.particleList.length < this._maxNumParticles) { i = this._createAParticleData(t, e); this.iList[i.id] = 0; this.activeParticles.push(i) } else { if (this.deadParticles.length > 0) { i = this.deadParticles.pop(); this.iList[i.id] = 0; this.activeParticles.push(i) } } }; i.advanceTime = function (t) { t === void 0 && (t = 1); if (!this._ready) return; var e = this.activeParticles; var i = this.deadParticles; var r = 0, s = e.length; var n; var a = 0; var o = this.iList; for (r = s - 1; r > -1; r--) { n = e[r]; a = o[n.id]; if (a >= n.maxIndex) { a = 0; e.splice(r, 1); i.push(n) } else { a += 1 } o[n.id] = a } }; i.render = function (t, e, i) { if (!this._ready) return; if (this.activeParticles.length < 1) return; if (this.textureList.length < 2) return; if (this.settings.disableColor) { this.noColorRender(t, e, i) } else { this.canvasRender(t, e, i) } }; i.noColorRender = function (t, e, i) { var r = this.activeParticles; var s = 0, n = r.length; var a; var o; var h = NaN; var l = this.pX, u = this.pY; var c = -l * 2, f = -u * 2; var _ = 0; var d = this.textureList; var p = this.iList; var v = NaN; t.translate(e, i); v = t.ctx.globalAlpha; for (s = 0; s < n; s++) { a = r[s]; _ = p[a.id]; o = a.cmds[_]; if (!o) continue; if ((h = o[1]) <= .01) continue; t.setAlpha(v * h); t.drawTextureWithTransform(this.texture, l, u, c, f, o[2], 1) } t.setAlpha(v); t.translate(-e, -i) }; i.canvasRender = function (t, e, i) { var r = this.activeParticles; var s = 0, n = r.length; var a; var o; var h = NaN; var l = this.pX, u = this.pY; var c = -l * 2, f = -u * 2; var _ = 0; var d = this.textureList; var p = this.iList; var v = NaN; var m; t.translate(e, i); v = t.ctx.globalAlpha; m = t.ctx.globalCompositeOperation; t.blendMode("lighter"); for (s = 0; s < n; s++) { a = r[s]; _ = p[a.id]; o = a.cmds[_]; if (!o) continue; if ((h = o[1]) <= .01) continue; t.save(); t.transformByMatrix(o[2]); if (o[3] > .01) { t.setAlpha(v * o[3]); t.drawTexture(d[0], l, u, c, f) } if (o[4] > .01) { t.setAlpha(v * o[4]); t.drawTexture(d[1], l, u, c, f) } if (o[5] > .01) { t.setAlpha(v * o[5]); t.drawTexture(d[2], l, u, c, f) } t.restore() } t.setAlpha(v); t.translate(-e, -i); t.blendMode(m) }; e.changeTexture = function (t, e, i) { if (!e) e = []; e.length = 0; if (i && i.disableColor) { e.push(t, t, t) } else { C.copyArray(e, N.getRGBPic(t)) } return e }; return e }(k); var U = function (i) { function r(t) { this._vertexBuffer2D = null; this._indexBuffer2D = null; this.x = 0; this.y = 0; this._blendFn = null; this._startTime = 0; this.sv = new W; r.__super.call(this, t); var e = this; n.loader.load(this.settings.textureName, f.create(null, function (t) { t.bitmap.enableMerageInAtlas = false; e.texture = t })); this.sv.u_Duration = this.settings.duration; this.sv.u_Gravity = this.settings.gravity; this.sv.u_EndVelocity = this.settings.endVelocity; this._blendFn = l.fns[t.blendState]; this.initialize(); this._vertexBuffer = this._vertexBuffer2D = A.create(-1, 35048); this._indexBuffer = this._indexBuffer2D = _.create(35044); this.loadContent() } a(r, "laya.particle.ParticleTemplate2D", i); var t = r.prototype; n.imps(t, { "laya.webgl.submit.ISubmit": true }); t.getRenderType = function () { return -111 }; t.releaseRender = function () { }; t.addParticleArray = function (t, e) { t[0] += this.x; t[1] += this.y; i.prototype.addParticleArray.call(this, t, e) }; t.loadContent = function () { var t = new Uint16Array(this.settings.maxPartices * 6); for (var e = 0; e < this.settings.maxPartices; e++) { t[e * 6 + 0] = e * 4 + 0; t[e * 6 + 1] = e * 4 + 1; t[e * 6 + 2] = e * 4 + 2; t[e * 6 + 3] = e * 4 + 0; t[e * 6 + 4] = e * 4 + 2; t[e * 6 + 5] = e * 4 + 3 } this._indexBuffer2D.clear(); this._indexBuffer2D.append(t); this._indexBuffer2D.upload() }; t.addNewParticlesToVertexBuffer = function () { this._vertexBuffer2D.clear(); this._vertexBuffer2D.append(this._vertices); var t = 0; if (this._firstNewElement < this._firstFreeElement) { t = this._firstNewElement * 4 * this._floatCountPerVertex * 4; this._vertexBuffer2D.subUpload(t, t, t + (this._firstFreeElement - this._firstNewElement) * 4 * this._floatCountPerVertex * 4) } else { t = this._firstNewElement * 4 * this._floatCountPerVertex * 4; this._vertexBuffer2D.subUpload(t, t, t + (this.settings.maxPartices - this._firstNewElement) * 4 * this._floatCountPerVertex * 4); if (this._firstFreeElement > 0) { this._vertexBuffer2D.setNeedUpload(); this._vertexBuffer2D.subUpload(0, 0, this._firstFreeElement * 4 * this._floatCountPerVertex * 4) } } this._firstNewElement = this._firstFreeElement }; t.renderSubmit = function () { if (this.texture && this.texture.loaded) { this.update(n.timer.delta); this.sv.u_CurrentTime = this._currentTime; if (this._firstNewElement != this._firstFreeElement) { this.addNewParticlesToVertexBuffer() } this.blend(); if (this._firstActiveElement != this._firstFreeElement) { var t = M.mainContext; this._vertexBuffer2D.bind(this._indexBuffer2D); this.sv.u_texture = this.texture.source; this.sv.upload(); if (this._firstActiveElement < this._firstFreeElement) { M.mainContext.drawElements(4, (this._firstFreeElement - this._firstActiveElement) * 6, 5123, this._firstActiveElement * 6 * 2) } else { M.mainContext.drawElements(4, (this.settings.maxPartices - this._firstActiveElement) * 6, 5123, this._firstActiveElement * 6 * 2); if (this._firstFreeElement > 0) M.mainContext.drawElements(4, this._firstFreeElement * 6, 5123, 0) } w.drawCall++ } this._drawCounter++ } return 1 }; t.blend = function () { if (l.activeBlendFunction !== this._blendFn) { var t = M.mainContext; t.enable(3042); this._blendFn(t); l.activeBlendFunction = this._blendFn } }; t.dispose = function () { this._vertexBuffer2D.dispose(); this._indexBuffer2D.dispose() }; r.activeBlendType = -1; return r }(O); var W = function (t) { function e() { this.a_CornerTextureCoordinate = [4, 5126, false, 116, 0]; this.a_Position = [3, 5126, false, 116, 16]; this.a_Velocity = [3, 5126, false, 116, 28]; this.a_StartColor = [4, 5126, false, 116, 40]; this.a_EndColor = [4, 5126, false, 116, 56]; this.a_SizeRotation = [3, 5126, false, 116, 72]; this.a_Radius = [2, 5126, false, 116, 84]; this.a_Radian = [4, 5126, false, 116, 92]; this.a_AgeAddScale = [1, 5126, false, 116, 108]; this.a_Time = [1, 5126, false, 116, 112]; this.u_CurrentTime = NaN; this.u_Duration = NaN; this.u_Gravity = null; this.u_EndVelocity = NaN; this.u_texture = null; e.__super.call(this, 0, 0) } a(e, "laya.particle.shader.value.ParticleShaderValue", t); var i = e.prototype; i.upload = function () { this.refresh(); e.pShader.upload(this) }; r(e, ["pShader", function () { return this.pShader = new H }]); return e }(S); var V = function (e) { function i(t) { this._matrix4 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]; this._particleTemplate = null; this._canvasTemplate = null; this._emitter = null; this.autoPlay = true; i.__super.call(this); if (t) this.setParticleSetting(t) } a(i, "laya.particle.Particle2D", e); var t = i.prototype; t.load = function (t) { n.loader.load(t, f.create(this, this.setParticleSetting), null, "json") }; t.setParticleSetting = function (e) { var i = this; if (!e) return this.stop(); L.checkSetting(e); if (!s.ConchParticleTemplate2D || m.isWebGL) this.customRenderEnable = true; if (m.isWebGL) { this._particleTemplate = new U(e); this.graphics._saveToCmd(m.context._drawParticle, [this._particleTemplate]) } else if (m.isConchApp && s.ConchParticleTemplate2D) { this._particleTemplate = new ConchParticleTemplate2D; var r = this; n.loader.load(e.textureName, f.create(null, function (t) { r._particleTemplate.texture = t; r._particleTemplate.settings = e; if (m.isConchNode) { r.graphics.drawParticle(r._particleTemplate) } else { r.graphics._saveToCmd(m.context._drawParticle, [i._particleTemplate]) } })); this._emitter = { start: function () { } }; this.play = this._particleTemplate.play.bind(this._particleTemplate); this.stop = this._particleTemplate.stop.bind(this._particleTemplate); if (this.autoPlay) this.play(); return } else { this._particleTemplate = this._canvasTemplate = new z(e) } if (!this._emitter) { this._emitter = new F(this._particleTemplate) } else { this._emitter.template = this._particleTemplate } if (this.autoPlay) { this.emitter.start(); this.play() } }; t.play = function () { this.timer.frameLoop(1, this, this._loop) }; t.stop = function () { this.timer.clear(this, this._loop) }; t._loop = function () { this.advanceTime(1 / 60) }; t.advanceTime = function (t) { t === void 0 && (t = 1); if (this._canvasTemplate) { this._canvasTemplate.advanceTime(t) } if (this._emitter) { this._emitter.advanceTime(t) } }; t.customRender = function (t, e, i) { if (m.isWebGL) { this._matrix4[0] = t.ctx._curMat.a; this._matrix4[1] = t.ctx._curMat.b; this._matrix4[4] = t.ctx._curMat.c; this._matrix4[5] = t.ctx._curMat.d; this._matrix4[12] = t.ctx._curMat.tx; this._matrix4[13] = t.ctx._curMat.ty; var r = this._particleTemplate.sv; r.u_mmat = this._matrix4 } if (this._canvasTemplate) { this._canvasTemplate.render(t, e, i) } }; t.destroy = function (t) { t === void 0 && (t = true); if (this._particleTemplate instanceof laya.particle.ParticleTemplate2D) this._particleTemplate.dispose(); e.prototype.destroy.call(this, t) }; o(0, t, "url", null, function (t) { this.load(t) }); o(0, t, "emitter", function () { return this._emitter }); return i }(b); var H = function (t) { function e() { e.__super.call(this, e.vs, e.ps, "ParticleShader") } a(e, "laya.particle.shader.ParticleShader", t); r(e, ["vs", function () { return this.vs = "attribute vec4 a_CornerTextureCoordinate;\nattribute vec3 a_Position;\nattribute vec3 a_Velocity;\nattribute vec4 a_StartColor;\nattribute vec4 a_EndColor;\nattribute vec3 a_SizeRotation;\nattribute vec2 a_Radius;\nattribute vec4 a_Radian;\nattribute float a_AgeAddScale;\nattribute float a_Time;\n\nvarying vec4 v_Color;\nvarying vec2 v_TextureCoordinate;\n\nuniform float u_CurrentTime;\nuniform float u_Duration;\nuniform float u_EndVelocity;\nuniform vec3 u_Gravity;\n\n#ifdef PARTICLE3D\n uniform mat4 u_WorldMat;\n uniform mat4 u_View;\n uniform mat4 u_Projection;\n uniform vec2 u_ViewportScale;\n#else\n uniform vec2 size;\n uniform mat4 mmat;\n uniform mat4 u_mmat;\n#endif\n\nvec4 ComputeParticlePosition(in vec3 position, in vec3 velocity,in float age,in float normalizedAge)\n{\n\n   float startVelocity = length(velocity);//起始标量速度\n   float endVelocity = startVelocity * u_EndVelocity;//结束标量速度\n\n   float velocityIntegral = startVelocity * normalizedAge +(endVelocity - startVelocity) * normalizedAge *normalizedAge/2.0;//计算当前速度的标量（单位空间），vt=v0*t+(1/2)*a*(t^2)\n   \n   vec3 addPosition = normalize(velocity) * velocityIntegral * u_Duration;//计算受自身速度影响的位置，转换标量到矢量    \n   addPosition += u_Gravity * age * normalizedAge;//计算受重力影响的位置\n   \n   float radius=mix(a_Radius.x, a_Radius.y, normalizedAge); //计算粒子受半径和角度影响（无需计算角度和半径时，可用宏定义优化屏蔽此计算）\n   float radianHorizontal =mix(a_Radian.x,a_Radian.z,normalizedAge);\n   float radianVertical =mix(a_Radian.y,a_Radian.w,normalizedAge);\n   \n   float r =cos(radianVertical)* radius;\n   addPosition.y += sin(radianVertical) * radius;\n\t\n   addPosition.x += cos(radianHorizontal) *r;\n   addPosition.z += sin(radianHorizontal) *r;\n  \n   #ifdef PARTICLE3D\n   position+=addPosition;\n    return  u_Projection*u_View*u_WorldMat*(vec4(position, 1.0));\n   #else\n   addPosition.y=-addPosition.y;//2D粒子位置更新需要取负，2D粒子坐标系Y轴正向朝上\n   position+=addPosition;\n    return  vec4(position,1.0);\n   #endif\n}\n\nfloat ComputeParticleSize(in float startSize,in float endSize, in float normalizedAge)\n{    \n    float size = mix(startSize, endSize, normalizedAge);\n    \n\t#ifdef PARTICLE3D\n    //Project the size into screen coordinates.\n     return size * u_Projection[1][1];\n\t#else\n\t return size;\n\t#endif\n}\n\nmat2 ComputeParticleRotation(in float rot,in float age)\n{    \n    float rotation =rot * age;\n    //计算2x2旋转矩阵.\n    float c = cos(rotation);\n    float s = sin(rotation);\n    return mat2(c, -s, s, c);\n}\n\nvec4 ComputeParticleColor(in vec4 startColor,in vec4 endColor,in float normalizedAge)\n{\n\tvec4 color=mix(startColor,endColor,normalizedAge);\n    //硬编码设置，使粒子淡入很快，淡出很慢,6.7的缩放因子把置归一在0到1之间，可以谷歌x*(1-x)*(1-x)*6.7的制图表\n    color.a *= normalizedAge * (1.0-normalizedAge) * (1.0-normalizedAge) * 6.7;\n   \n    return color;\n}\n\nvoid main()\n{\n   float age = u_CurrentTime - a_Time;\n   age *= 1.0 + a_AgeAddScale;\n   float normalizedAge = clamp(age / u_Duration,0.0,1.0);\n   gl_Position = ComputeParticlePosition(a_Position, a_Velocity, age, normalizedAge);//计算粒子位置\n   float pSize = ComputeParticleSize(a_SizeRotation.x,a_SizeRotation.y, normalizedAge);\n   mat2 rotation = ComputeParticleRotation(a_SizeRotation.z, age);\n\t\n   #ifdef PARTICLE3D\n\tgl_Position.xy += (rotation*a_CornerTextureCoordinate.xy) * pSize * u_ViewportScale;\n   #else\n    mat4 mat=u_mmat*mmat;\n    gl_Position=vec4((mat*gl_Position).xy,0.0,1.0);\n\tgl_Position.xy += (rotation*a_CornerTextureCoordinate.xy) * pSize*vec2(mat[0][0],mat[1][1]);\n    gl_Position=vec4((gl_Position.x/size.x-0.5)*2.0,(0.5-gl_Position.y/size.y)*2.0,0.0,1.0);\n   #endif\n   \n   v_Color = ComputeParticleColor(a_StartColor,a_EndColor, normalizedAge);\n   v_TextureCoordinate =a_CornerTextureCoordinate.zw;\n}\n\n" }, "ps", function () { return this.ps = "#ifdef FSHIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\nvarying vec4 v_Color;\nvarying vec2 v_TextureCoordinate;\nuniform sampler2D u_texture;\n\nvoid main()\n{\t\n\tgl_FragColor=texture2D(u_texture,v_TextureCoordinate)*v_Color;\n\tgl_FragColor.xyz *= v_Color.w;\n}" }]); return e }(x) })(window, document, Laya); if (typeof define === "function" && define.amd) { define("laya.core", ["require", "exports"], function (t, e) { "use strict"; Object.defineProperty(e, "__esModule", { value: true }); for (var i in Laya) { var r = Laya[i]; r && r.__isclass && (e[i] = r) } }) } (function (t, e, g) { var i = g.un, r = g.uns, s = g.static, a = g.class, o = g.getset, n = g.__newvec; var h = laya.utils.Browser, l = laya.resource.HTMLCanvas, u = laya.utils.Handler, p = laya.net.Loader; var _ = laya.maths.Point, c = laya.maths.Rectangle, v = laya.renders.Render, f = laya.renders.RenderContext; var m = laya.display.Sprite, y = laya.resource.Texture; var d = function () { var t, _, d; function n() { this._jsonData = null; this._tileTexSetArr = []; this._texArray = []; this._x = 0; this._y = 0; this._width = 0; this._height = 0; this._mapW = 0; this._mapH = 0; this._mapTileW = 0; this._mapTileH = 0; this._mapSprite = null; this._layerArray = []; this._renderLayerArray = []; this._gridArray = []; this._showGridKey = false; this._totalGridNum = 0; this._gridW = 0; this._gridH = 0; this._gridWidth = 450; this._gridHeight = 450; this._jsonLoader = null; this._loader = null; this._tileSetArray = []; this._currTileSet = null; this._completeHandler = null; this._index = 0; this._animationDic = {}; this._properties = null; this._tileProperties = {}; this._tileProperties2 = {}; this._orientation = "orthogonal"; this._renderOrder = "right-down"; this._colorArray = ["FF", "00", "33", "66"]; this._scale = 1; this._pivotScaleX = .5; this._pivotScaleY = .5; this._centerX = 0; this._centerY = 0; this._viewPortX = 0; this._viewPortY = 0; this._viewPortWidth = 0; this._viewPortHeight = 0; this._enableLinear = true; this._resPath = null; this._pathArray = null; this._limitRange = false; this._fastDirty = true; this.autoCache = true; this.autoCacheType = "normal"; this.enableMergeLayer = false; this.removeCoveredTile = false; this.showGridTextureCount = false; this.antiCrack = true; this.cacheAllAfterInit = false; this._texutreStartDic = {}; this._rect = new c; this._paddingRect = new c; this._mapRect = new t; this._mapLogicRect = new t; this._mapLastRect = new t; this._mapSprite = new m } a(n, "laya.map.TiledMap"); var e = n.prototype; e.createMap = function (t, e, i, r, s, n, a) { n === void 0 && (n = true); a === void 0 && (a = false); this._enableLinear = n; this._limitRange = a; this._rect.x = e.x; this._rect.y = e.y; this._rect.width = e.width; this._rect.height = e.height; this._viewPortWidth = e.width / this._scale; this._viewPortHeight = e.height / this._scale; this._completeHandler = i; if (r) { this._paddingRect.copyFrom(r) } else { this._paddingRect.setTo(0, 0, 0, 0) } if (s) { this._gridWidth = s.x; this._gridHeight = s.y } var o = t.lastIndexOf("/"); if (o > -1) { this._resPath = t.substr(0, o); this._pathArray = this._resPath.split("/") } else { this._resPath = ""; this._pathArray = [] } this._jsonLoader = new p; this._jsonLoader.once("complete", this, this.onJsonComplete); this._jsonLoader.load(t, "json", false) }; e.onJsonComplete = function (t) { var e = this._jsonData = t; this._properties = e.properties; this._orientation = e.orientation; this._renderOrder = e.renderorder; this._mapW = e.width; this._mapH = e.height; this._mapTileW = e.tilewidth; this._mapTileH = e.tileheight; this._width = this._mapTileW * this._mapW; this._height = this._mapTileH * this._mapH; if (this._orientation == "staggered") { this._height = (.5 + this._mapH * .5) * this._mapTileH } this._mapLastRect.top = this._mapLastRect.bottom = this._mapLastRect.left = this._mapLastRect.right = -1; var i = e.tilesets; var r; var s; var n = 0; for (n = 0; n < i.length; n++) { r = i[n]; s = new d; s.init(r); if (s.properties && s.properties.ignore) continue; this._tileProperties[n] = s.tileproperties; this.addTileProperties(s.tileproperties); this._tileSetArray.push(s); var a = r.tiles; if (a) { for (var o in a) { var h = a[o].animation; if (h) { var l = new _; this._animationDic[o] = l; l.image = r.image; for (var u = 0; u < h.length; u++) { var c = h[u]; l.mAniIdArray.push(c.tileid); l.mDurationTimeArray.push(c.duration) } } } } } this._tileTexSetArr.push(null); if (this._tileSetArray.length > 0) { s = this._currTileSet = this._tileSetArray.shift(); this._loader = new p; this._loader.once("complete", this, this.onTextureComplete); var f = this.mergePath(this._resPath, s.image); this._loader.load(f, "image", false) } }; e.mergePath = function (t, e) { var i = ""; var r = e.split("/"); var s = 0; var n = 0; for (n = r.length - 1; n >= 0; n--) { if (r[n] == "..") { s++ } } if (s == 0) { if (this._pathArray.length > 0) { i = t + "/" + e } else { i = e } return i } var a = this._pathArray.length - s; if (a < 0) { console.log("[error]path does not exist", this._pathArray, r, t, e) } for (n = 0; n < a; n++) { if (n == 0) { i += this._pathArray[n] } else { i = i + "/" + this._pathArray[n] } } for (n = s; n < r.length; n++) { i = i + "/" + r[n] } return i }; e.onTextureComplete = function (t) { var e = this._jsonData; var i = t; if (v.isWebGL && !this._enableLinear) { i.bitmap.minFifter = 9728; i.bitmap.magFifter = 9728; i.bitmap.enableMerageInAtlas = false } this._texArray.push(i); var r = null; var s = this._currTileSet; var n = s.tilewidth; var a = s.tileheight; var o = s.imagewidth; var h = s.imageheight; var l = s.firstgid; var u = Math.floor((o - s.margin - n) / (n + s.spacing)) + 1; var c = Math.floor((h - s.margin - a) / (a + s.spacing)) + 1; var f = null; this._texutreStartDic[s.image] = this._tileTexSetArr.length; for (var _ = 0; _ < c; _++) { for (var d = 0; d < u; d++) { f = new x; f.offX = s.titleoffsetX; f.offY = s.titleoffsetY - (a - this._mapTileH); f.texture = y.createFromTexture(i, s.margin + (n + s.spacing) * d, s.margin + (a + s.spacing) * _, n, a); if (this.antiCrack) this.adptTexture(f.texture); this._tileTexSetArr.push(f); f.gid = this._tileTexSetArr.length } } if (this._tileSetArray.length > 0) { s = this._currTileSet = this._tileSetArray.shift(); this._loader.once("complete", this, this.onTextureComplete); var p = this.mergePath(this._resPath, s.image); this._loader.load(p, "image", false) } else { this._currTileSet = null; this.initMap() } }; e.adptTexture = function (t) { if (!t) return; var e = t.uv[0]; var i = t.uv[2]; var r = t.uv[1]; var s = t.uv[7]; var n = 1 / t.bitmap.width; var a = 1 / t.bitmap.height; t.uv[0] = t.uv[6] = e + n; t.uv[2] = t.uv[4] = i - n; t.uv[1] = t.uv[3] = r + a; t.uv[5] = t.uv[7] = s - a }; e.initMap = function () { var t = 0, e = 0; for (var i in this._animationDic) { var r = this._animationDic[i]; var s = 0; s = this._texutreStartDic[r.image]; var n = this.getTexture(parseInt(i) + s); if (r.mAniIdArray.length > 0) { n.textureArray = []; n.durationTimeArray = r.mDurationTimeArray; n.isAnimation = true; n.animationTotalTime = 0; for (t = 0, e = n.durationTimeArray.length; t < e; t++) { n.animationTotalTime += n.durationTimeArray[t] } for (t = 0, e = r.mAniIdArray.length; t < e; t++) { var a = this.getTexture(r.mAniIdArray[t] + s); n.textureArray.push(a) } } } this._gridWidth = Math.floor(this._gridWidth / this._mapTileW) * this._mapTileW; this._gridHeight = Math.floor(this._gridHeight / this._mapTileH) * this._mapTileH; if (this._gridWidth < this._mapTileW) { this._gridWidth = this._mapTileW } if (this._gridHeight < this._mapTileH) { this._gridHeight = this._mapTileH } this._gridW = Math.ceil(this._width / this._gridWidth); this._gridH = Math.ceil(this._height / this._gridHeight); this._totalGridNum = this._gridW * this._gridH; for (t = 0; t < this._gridH; t++) { var o = []; this._gridArray.push(o); for (var h = 0; h < this._gridW; h++) { o.push(null) } } var l = this._jsonData.layers; var u = true; var c = 1; var f; var _; var d; for (var p = 0; p < l.length; p++) { var v = l[p]; if (v.visible == true) { var m = new w; m.init(v, this); if (!this.enableMergeLayer) { this._mapSprite.addChild(m); this._renderLayerArray.push(m) } else { f = m.getLayerProperties("layer"); u = u || !d || f != _; if (u) { u = false; m.tarLayer = m; d = m; this._mapSprite.addChild(m); this._renderLayerArray.push(m) } else { m.tarLayer = d } _ = f } this._layerArray.push(m) } } if (this.removeCoveredTile) { this.adptTiledMapData() } if (this.cacheAllAfterInit) { this.cacheAllGrid() } this.moveViewPort(this._rect.x, this._rect.y); g.stage.addChild(this.mapSprite()); if (this._completeHandler != null) { this._completeHandler.run() } }; e.addTileProperties = function (t) { var e; for (e in t) { this._tileProperties2[e] = t[e] } }; e.getTileUserData = function (t, e, i) { if (!this._tileProperties2 || !this._tileProperties2[t] || !(e in this._tileProperties2[t])) return i; return this._tileProperties2[t][e] }; e.adptTiledMapData = function () { var t = 0, e = 0; e = this._layerArray.length; var i; var r = {}; var s; for (t = e - 1; t >= 0; t--) { i = this._layerArray[t]; s = i._mapData; if (!s) continue; this.removeCoverd(s, r); this.collectCovers(s, r, t) } }; e.removeCoverd = function (t, e) { var i = 0, r = 0; r = t.length; for (i = 0; i < r; i++) { if (e[i]) { t[i] = 0 } } }; e.collectCovers = function (t, e, i) { var r = 0, s = 0; s = t.length; var n = 0; var a = 0; for (r = 0; r < s; r++) { n = t[r]; if (n > 0) { a = this.getTileUserData(n - 1, "type", 0); if (a > 0) { e[r] = n } } } }; e.getTexture = function (t) { if (t < this._tileTexSetArr.length) { return this._tileTexSetArr[t] } return null }; e.getMapProperties = function (t) { if (this._properties) { return this._properties[t] } return null }; e.getTileProperties = function (t, e, i) { if (this._tileProperties[t] && this._tileProperties[t][e]) { return this._tileProperties[t][e][i] } return null }; e.getSprite = function (t, e, i) { if (0 < this._tileTexSetArr.length) { var r = new b; r.initData(this, true); r.size(e, i); var s = this._tileTexSetArr[t]; if (s != null && s.texture != null) { if (s.isAnimation) { var n = new T; this._index++; n.setTileTextureSet(this._index.toString(), s); r.addAniSprite(n); r.addChild(n) } else { r.graphics.drawTexture(s.texture, 0, 0, e, i) } r.drawImageNum++ } return r } return null }; e.setViewPortPivotByScale = function (t, e) { this._pivotScaleX = t; this._pivotScaleY = e; this._fastDirty = true }; e.moveViewPort = function (t, e) { this._x = -t; this._y = -e; if (this._fastDirty) { this._rect.x = t; this._rect.y = e; this.updateViewPort() } else { var i = NaN, r = NaN; i = t - this._rect.x; r = e - this._rect.y; this._rect.x = t; this._rect.y = e; this.updateViewPortFast(i, r) } }; e.changeViewPort = function (t, e, i, r) { if (t == this._rect.x && e == this._rect.y && i == this._rect.width && r == this._rect.height) return; if (i == this._rect.width && r == this._rect.height) { this.moveViewPort(t, e); return } this._fastDirty = true; this._x = -t; this._y = -e; this._rect.x = t; this._rect.y = e; this._rect.width = i; this._rect.height = r; this._viewPortWidth = i / this._scale; this._viewPortHeight = r / this._scale; this.updateViewPort() }; e.changeViewPortBySize = function (t, e, i) { if (i == null) { i = new c } this._centerX = this._rect.x + this._rect.width * this._pivotScaleX; this._centerY = this._rect.y + this._rect.height * this._pivotScaleY; i.x = this._centerX - t * this._pivotScaleX; i.y = this._centerY - e * this._pivotScaleY; i.width = t; i.height = e; this.changeViewPort(i.x, i.y, i.width, i.height); return i }; e.updateViewPortFast = function (t, e) { this._centerX += t; this._centerY += e; this._viewPortX += t; this._viewPortY += e; var i = false; var r = e / this._gridHeight; var s = t / this._gridWidth; this._mapLogicRect.top += r; this._mapLogicRect.bottom += r; this._mapLogicRect.left += s; this._mapLogicRect.right += s; this._mapRect.top = 0 | this._mapLogicRect.top; this._mapRect.bottom = 0 | this._mapLogicRect.bottom; this._mapRect.left = 0 | this._mapLogicRect.left; this._mapRect.right = 0 | this._mapLogicRect.right; if (this._mapRect.top != this._mapLastRect.top || this._mapRect.bottom != this._mapLastRect.bottom || this._mapRect.left != this._mapLastRect.left || this._mapRect.right != this._mapLastRect.right) { this.clipViewPort(); this._mapLastRect.top = this._mapRect.top; this._mapLastRect.bottom = this._mapRect.bottom; this._mapLastRect.left = this._mapRect.left; this._mapLastRect.right = this._mapRect.right; i = true } i = i || (t != 0 || e != 0); if (!i) return; this.updateMapLayersPos() }; e.updateMapLayersPos = function () { var t; var e = this._renderLayerArray.length; for (var i = 0; i < e; i++) { t = this._renderLayerArray[i]; if (t._gridSpriteArray.length > 0) { t.updateAloneObject(); t.pos(-this._viewPortX, -this._viewPortY) } } }; e.updateViewPort = function () { this._fastDirty = false; var t = this._rect.width * this._pivotScaleX; var e = this._rect.height * this._pivotScaleY; this._centerX = this._rect.x + t; this._centerY = this._rect.y + e; var i = false; var r = this._viewPortX; this._viewPortX = this._centerX - t / this._scale; if (r != this._viewPortX) { i = true } else { r = this._viewPortY } this._viewPortY = this._centerY - e / this._scale; if (!i && r != this._viewPortY) { i = true } if (this._limitRange) { var s = this._viewPortX + this._viewPortWidth; if (s > this._width) { this._viewPortX = this._width - this._viewPortWidth } var n = this._viewPortY + this._viewPortHeight; if (n > this._height) { this._viewPortY = this._height - this._viewPortHeight } if (this._viewPortX < 0) { this._viewPortX = 0 } if (this._viewPortY < 0) { this._viewPortY = 0 } } var a = this._paddingRect; this._mapLogicRect.top = (this._viewPortY - a.y) / this._gridHeight; this._mapLogicRect.bottom = (this._viewPortY + this._viewPortHeight + a.height + a.y) / this._gridHeight; this._mapLogicRect.left = (this._viewPortX - a.x) / this._gridWidth; this._mapLogicRect.right = (this._viewPortX + this._viewPortWidth + a.width + a.x) / this._gridWidth; this._mapRect.top = 0 | this._mapLogicRect.top; this._mapRect.bottom = 0 | this._mapLogicRect.bottom; this._mapRect.left = 0 | this._mapLogicRect.left; this._mapRect.right = 0 | this._mapLogicRect.right; if (this._mapRect.top != this._mapLastRect.top || this._mapRect.bottom != this._mapLastRect.bottom || this._mapRect.left != this._mapLastRect.left || this._mapRect.right != this._mapLastRect.right) { this.clipViewPort(); this._mapLastRect.top = this._mapRect.top; this._mapLastRect.bottom = this._mapRect.bottom; this._mapLastRect.left = this._mapRect.left; this._mapLastRect.right = this._mapRect.right; i = true } if (!i) return; this.updateMapLayersPos() }; e.clipViewPort = function () { var t = 0; var e; var i = 0; var r = 0; var s = 0; var n = 0, a = 0; if (this._mapRect.left > this._mapLastRect.left) { r = this._mapRect.left - this._mapLastRect.left; if (r > 0) { for (a = this._mapLastRect.left; a < this._mapLastRect.left + r; a++) { for (n = this._mapLastRect.top; n <= this._mapLastRect.bottom; n++) { this.hideGrid(a, n) } } } } else { s = Math.min(this._mapLastRect.left, this._mapRect.right + 1) - this._mapRect.left; if (s > 0) { for (a = this._mapRect.left; a < this._mapRect.left + s; a++) { for (n = this._mapRect.top; n <= this._mapRect.bottom; n++) { this.showGrid(a, n) } } } } if (this._mapRect.right > this._mapLastRect.right) { s = this._mapRect.right - this._mapLastRect.right; if (s > 0) { for (a = Math.max(this._mapLastRect.right + 1, this._mapRect.left); a <= this._mapLastRect.right + s; a++) { for (n = this._mapRect.top; n <= this._mapRect.bottom; n++) { this.showGrid(a, n) } } } } else { r = this._mapLastRect.right - this._mapRect.right; if (r > 0) { for (a = this._mapRect.right + 1; a <= this._mapRect.right + r; a++) { for (n = this._mapLastRect.top; n <= this._mapLastRect.bottom; n++) { this.hideGrid(a, n) } } } } if (this._mapRect.top > this._mapLastRect.top) { r = this._mapRect.top - this._mapLastRect.top; if (r > 0) { for (n = this._mapLastRect.top; n < this._mapLastRect.top + r; n++) { for (a = this._mapLastRect.left; a <= this._mapLastRect.right; a++) { this.hideGrid(a, n) } } } } else { s = Math.min(this._mapLastRect.top, this._mapRect.bottom + 1) - this._mapRect.top; if (s > 0) { for (n = this._mapRect.top; n < this._mapRect.top + s; n++) { for (a = this._mapRect.left; a <= this._mapRect.right; a++) { this.showGrid(a, n) } } } } if (this._mapRect.bottom > this._mapLastRect.bottom) { s = this._mapRect.bottom - this._mapLastRect.bottom; if (s > 0) { for (n = Math.max(this._mapLastRect.bottom + 1, this._mapRect.top); n <= this._mapLastRect.bottom + s; n++) { for (a = this._mapRect.left; a <= this._mapRect.right; a++) { this.showGrid(a, n) } } } } else { r = this._mapLastRect.bottom - this._mapRect.bottom; if (r > 0) { for (n = this._mapRect.bottom + 1; n <= this._mapRect.bottom + r; n++) { for (a = this._mapLastRect.left; a <= this._mapLastRect.right; a++) { this.hideGrid(a, n) } } } } }; e.showGrid = function (t, e) { if (t < 0 || t >= this._gridW || e < 0 || e >= this._gridH) { return } var i = 0, r = 0; var s; var n = this._gridArray[e][t]; if (n == null) { n = this.getGridArray(t, e) } else { for (i = 0; i < n.length && i < this._layerArray.length; i++) { var a = this._layerArray[i]; if (a && n[i]) { s = n[i]; if (s.visible == false && s.drawImageNum > 0) { s.show() } } } } }; e.cacheAllGrid = function () { var t = 0, e = 0; var i; for (t = 0; t < this._gridW; t++) { for (e = 0; e < this._gridH; e++) { i = this.getGridArray(t, e); this.cacheGridsArray(i) } } }; e.cacheGridsArray = function (t) { var e; if (!n._tempContext) { n._tempContext = new f(1, 1, l.create("AUTO")) } e = n._tempContext.canvas; e.context.asBitmap = false; var i = 0, r = 0; r = t.length; var s; for (i = 0; i < r; i++) { s = t[i]; e.clear(); e.size(1, 1); s.render(n._tempContext, 0, 0); s.hide() } e.clear(); e.size(1, 1) }; e.getGridArray = function (t, e) { var i = 0, r = 0; var s; var n = this._gridArray[e][t]; if (n == null) { n = this._gridArray[e][t] = []; var a = 0; var o = 0; var h = 0; var l = 0; var u = this._gridWidth; var c = this._gridHeight; switch (this.orientation) { case "isometric": a = Math.floor(t * u); o = Math.floor(t * u + u); h = Math.floor(e * c); l = Math.floor(e * c + c); var f = 0, _ = 0, d = 0, p = 0; break; case "staggered": a = Math.floor(t * u / this._mapTileW); o = Math.floor((t * u + u) / this._mapTileW); h = Math.floor(e * c / (this._mapTileH / 2)); l = Math.floor((e * c + c) / (this._mapTileH / 2)); break; case "orthogonal": a = Math.floor(t * u / this._mapTileW); o = Math.floor((t * u + u) / this._mapTileW); h = Math.floor(e * c / this._mapTileH); l = Math.floor((e * c + c) / this._mapTileH); break; case "hexagonal": ; var v = this._mapTileH * 2 / 3; a = Math.floor(t * u / this._mapTileW); o = Math.ceil((t * u + u) / this._mapTileW); h = Math.floor(e * c / v); l = Math.ceil((e * c + c) / v); break }var m = null; var g; var y; for (var x = 0; x < this._layerArray.length; x++) { m = this._layerArray[x]; if (this.enableMergeLayer) { if (m.tarLayer != y) { g = null; y = m.tarLayer } if (!g) { g = y.getDrawSprite(t, e); n.push(g) } s = g } else { s = m.getDrawSprite(t, e); n.push(s) } var b; if (this._showGridKey) { b = "#"; b += this._colorArray[Math.floor(Math.random() * this._colorArray.length)]; b += this._colorArray[Math.floor(Math.random() * this._colorArray.length)]; b += this._colorArray[Math.floor(Math.random() * this._colorArray.length)] } switch (this.orientation) { case "isometric": ; var w = this.tileHeight / 2; var T = this.tileWidth / 2; var C = this._width / 2; d = Math.floor(h / w); p = Math.floor(l / w); f = this._mapW + Math.floor((a - C) / T); _ = this._mapW + Math.floor((o - C) / T); var S = this._mapW * 2; var A = this._mapH * 2; if (d < 0) { d = 0 } if (d >= A) { d = A - 1 } if (p < 0) { l = 0 } if (p >= A) { p = A - 1 } s.zOrder = this._totalGridNum * x + e * this._gridW + t; for (i = d; i < p; i++) { for (r = 0; r <= i; r++) { var M = i - r; var I = r; var E = M - I + this._mapW; if (E > f && E <= _) { if (m.drawTileTexture(s, M, I)) { s.drawImageNum++ } } } } break; case "staggered": s.zOrder = x * this._totalGridNum + e * this._gridW + t; for (i = h; i < l; i++) { for (r = a; r < o; r++) { if (m.drawTileTexture(s, r, i)) { s.drawImageNum++ } } } break; case "orthogonal": case "hexagonal": switch (this._renderOrder) { case "right-down": s.zOrder = x * this._totalGridNum + e * this._gridW + t; for (i = h; i < l; i++) { for (r = a; r < o; r++) { if (m.drawTileTexture(s, r, i)) { s.drawImageNum++ } } } break; case "right-up": s.zOrder = x * this._totalGridNum + (this._gridH - 1 - e) * this._gridW + t; for (i = l - 1; i >= h; i--) { for (r = a; r < o; r++) { if (m.drawTileTexture(s, r, i)) { s.drawImageNum++ } } } break; case "left-down": s.zOrder = x * this._totalGridNum + e * this._gridW + (this._gridW - 1 - t); for (i = h; i < l; i++) { for (r = o - 1; r >= a; r--) { if (m.drawTileTexture(s, r, i)) { s.drawImageNum++ } } } break; case "left-up": s.zOrder = x * this._totalGridNum + (this._gridH - 1 - e) * this._gridW + (this._gridW - 1 - t); for (i = l - 1; i >= h; i--) { for (r = o - 1; r >= a; r--) { if (m.drawTileTexture(s, r, i)) { s.drawImageNum++ } } } break }break }if (!s.isHaveAnimation) { s.autoSize = true; if (this.autoCache) s.cacheAs = this.autoCacheType; s.autoSize = false } if (!this.enableMergeLayer) { if (s.drawImageNum > 0) { m.addChild(s); s.visible = false; s.show() } if (this._showGridKey) { s.graphics.drawRect(0, 0, u, c, null, b) } } else { if (g && g.drawImageNum > 0 && y) { y.addChild(g); g.visible = false; g.show() } } } if (this.enableMergeLayer && this.showGridTextureCount) { if (g) { g.graphics.fillText(g.drawImageNum + "", 20, 20, null, "#ff0000", "left") } } } return n }; e.hideGrid = function (t, e) { if (t < 0 || t >= this._gridW || e < 0 || e >= this._gridH) { return } var i = this._gridArray[e][t]; if (i) { var r; for (var s = 0; s < i.length; s++) { r = i[s]; if (r.drawImageNum > 0) { if (r != null) { r.hide() } } } } }; e.getLayerObject = function (t, e) { var i = null; for (var r = 0; r < this._layerArray.length; r++) { i = this._layerArray[r]; if (i.layerName == t) { break } } if (i) { return i.getObjectByName(e) } return null }; e.destroy = function () { this._orientation = "orthogonal"; this._jsonData = null; var t = 0; var e = 0; var i = 0; this._gridArray = []; var r; for (t = 0; t < this._tileTexSetArr.length; t++) { r = this._tileTexSetArr[t]; if (r) { r.clearAll() } } this._tileTexSetArr = []; var s; for (t = 0; t < this._texArray.length; t++) { s = this._texArray[t]; s.destroy() } this._texArray = []; this._width = 0; this._height = 0; this._mapW = 0; this._mapH = 0; this._mapTileW = 0; this._mapTileH = 0; this._rect.setTo(0, 0, 0, 0); var n; for (t = 0; t < this._layerArray.length; t++) { n = this._layerArray[t]; n.clearAll() } this._layerArray = []; this._renderLayerArray = []; if (this._mapSprite) { this._mapSprite.destroy(); this._mapSprite = null } this._jsonLoader = null; this._loader = null; var a = this._animationDic; for (var o in a) { delete a[o] } this._properties = null; a = this._tileProperties; for (o in a) { delete a[o] } this._currTileSet = null; this._completeHandler = null; this._mapRect.clearAll(); this._mapLastRect.clearAll(); this._tileSetArray = []; this._gridWidth = 450; this._gridHeight = 450; this._gridW = 0; this._gridH = 0; this._x = 0; this._y = 0; this._index = 0; this._enableLinear = true; this._resPath = null; this._pathArray = null }; e.mapSprite = function () { return this._mapSprite }; e.getLayerByName = function (t) { var e; for (var i = 0; i < this._layerArray.length; i++) { e = this._layerArray[i]; if (t == e.layerName) { return e } } return null }; e.getLayerByIndex = function (t) { if (t < this._layerArray.length) { return this._layerArray[t] } return null }; o(0, e, "orientation", function () { return this._orientation }); o(0, e, "viewPortX", function () { return -this._viewPortX }); o(0, e, "scale", function () { return this._scale }, function (t) { if (t <= 0) return; this._scale = t; this._viewPortWidth = this._rect.width / t; this._viewPortHeight = this._rect.height / t; this._mapSprite.scale(this._scale, this._scale); this.updateViewPort() }); o(0, e, "tileWidth", function () { return this._mapTileW }); o(0, e, "viewPortY", function () { return -this._viewPortY }); o(0, e, "tileHeight", function () { return this._mapTileH }); o(0, e, "width", function () { return this._width }); o(0, e, "numRowsTile", function () { return this._mapH }); o(0, e, "numColumnsTile", function () { return this._mapW }); o(0, e, "height", function () { return this._height }); o(0, e, "viewPortWidth", function () { return this._viewPortWidth }); o(0, e, "viewPortHeight", function () { return this._viewPortHeight }); o(0, e, "x", function () { return this._x }); o(0, e, "y", function () { return this._y }); o(0, e, "gridWidth", function () { return this._gridWidth }); o(0, e, "gridHeight", function () { return this._gridHeight }); o(0, e, "numColumnsGrid", function () { return this._gridW }); o(0, e, "numRowsGrid", function () { return this._gridH }); o(0, e, "renderOrder", function () { return this._renderOrder }); n.ORIENTATION_ORTHOGONAL = "orthogonal"; n.ORIENTATION_ISOMETRIC = "isometric"; n.ORIENTATION_STAGGERED = "staggered"; n.ORIENTATION_HEXAGONAL = "hexagonal"; n.RENDERORDER_RIGHTDOWN = "right-down"; n.RENDERORDER_RIGHTUP = "right-up"; n.RENDERORDER_LEFTDOWN = "left-down"; n.RENDERORDER_LEFTUP = "left-up"; n._tempContext = null; n.__init$ = function () { t = function () { function t() { this.left = 0; this.top = 0; this.right = 0; this.bottom = 0 } a(t, ""); var e = t.prototype; e.clearAll = function () { this.left = this.top = this.right = this.bottom = 0 }; return t }(); _ = function () { function t() { this.mAniIdArray = []; this.mDurationTimeArray = []; this.mTileTexSetArr = []; this.image = null } a(t, ""); return t }(); d = function () { function t() { this.firstgid = 0; this.image = ""; this.imageheight = 0; this.imagewidth = 0; this.margin = 0; this.name = 0; this.properties = null; this.spacing = 0; this.tileheight = 0; this.tilewidth = 0; this.titleoffsetX = 0; this.titleoffsetY = 0; this.tileproperties = null } a(t, ""); var e = t.prototype; e.init = function (t) { this.firstgid = t.firstgid; this.image = t.image; this.imageheight = t.imageheight; this.imagewidth = t.imagewidth; this.margin = t.margin; this.name = t.name; this.properties = t.properties; this.spacing = t.spacing; this.tileheight = t.tileheight; this.tilewidth = t.tilewidth; this.tileproperties = t.tileproperties; var e = t.tileoffset; if (e) { this.titleoffsetX = e.x; this.titleoffsetY = e.y } }; return t }() }; return n }(); var x = function () { function t() { this.gid = -1; this.texture = null; this.offX = 0; this.offY = 0; this.textureArray = null; this.durationTimeArray = null; this.animationTotalTime = 0; this.isAnimation = false; this._spriteNum = 0; this._aniDic = null; this._frameIndex = 0; this._time = 0; this._interval = 0; this._preFrameTime = 0 } a(t, "laya.map.TileTexSet"); var e = t.prototype; e.addAniSprite = function (t, e) { if (this.animationTotalTime == 0) { return } if (this._aniDic == null) { this._aniDic = {} } if (this._spriteNum == 0) { g.timer.frameLoop(3, this, this.animate); this._preFrameTime = h.now(); this._frameIndex = 0; this._time = 0; this._interval = 0 } this._spriteNum++; this._aniDic[t] = e; if (this.textureArray && this._frameIndex < this.textureArray.length) { var i = this.textureArray[this._frameIndex]; this.drawTexture(e, i) } }; e.animate = function () { if (this.textureArray && this.textureArray.length > 0 && this.durationTimeArray && this.durationTimeArray.length > 0) { var t = h.now(); this._interval = t - this._preFrameTime; this._preFrameTime = t; if (this._interval > this.animationTotalTime) { this._interval = this._interval % this.animationTotalTime } this._time += this._interval; var e = this.durationTimeArray[this._frameIndex]; while (this._time > e) { this._time -= e; this._frameIndex++; if (this._frameIndex >= this.durationTimeArray.length || this._frameIndex >= this.textureArray.length) { this._frameIndex = 0 } var i = this.textureArray[this._frameIndex]; var r; for (var s in this._aniDic) { r = this._aniDic[s]; this.drawTexture(r, i) } e = this.durationTimeArray[this._frameIndex] } } }; e.drawTexture = function (t, e) { t.graphics.clear(); t.graphics.drawTexture(e.texture, e.offX, e.offY) }; e.removeAniSprite = function (t) { if (this._aniDic && this._aniDic[t]) { delete this._aniDic[t]; this._spriteNum--; if (this._spriteNum == 0) { g.timer.clear(this, this.animate) } } }; e.showDebugInfo = function () { var t = null; if (this._spriteNum > 0) { t = "TileTextureSet::gid:" + this.gid.toString() + " 动画数:" + this._spriteNum.toString() } return t }; e.clearAll = function () { this.gid = -1; if (this.texture) { this.texture.destroy(); this.texture = null } this.offX = 0; this.offY = 0; this.textureArray = null; this.durationTimeArray = null; this.isAnimation = false; this._spriteNum = 0; this._aniDic = null; this._frameIndex = 0; this._preFrameTime = 0; this._time = 0; this._interval = 0 }; return t }(); var b = function (r) { function t() { this.relativeX = 0; this.relativeY = 0; this.isAloneObject = false; this.isHaveAnimation = false; this.aniSpriteArray = null; this.drawImageNum = 0; this._map = null; t.__super.call(this) } a(t, "laya.map.GridSprite", r); var e = t.prototype; e.initData = function (t, e) { e === void 0 && (e = false); this._map = t; this.isAloneObject = e }; e._setDisplay = function (t) { if (!t) { var e = this._$P.cacheCanvas; if (e && e.ctx) { e.ctx.canvas.destroy(); e.ctx = null } var i = this._$P._filterCache; if (i) { i.destroy(); i.recycle(); this._set$P("_filterCache", null) } this._$P._isHaveGlowFilter && this._set$P("_isHaveGlowFilter", false) } r.prototype._setDisplay.call(this, t) }; e.addAniSprite = function (t) { if (this.aniSpriteArray == null) { this.aniSpriteArray = [] } this.aniSpriteArray.push(t) }; e.show = function () { if (!this.visible) { this.visible = true; if (!this.isAloneObject) { var t; t = this.parent; if (t) { t.showGridSprite(this) } } if (!v.isWebGL && this._map.autoCache) { this.cacheAs = this._map.autoCacheType } if (this.aniSpriteArray == null) { return } var e; for (var i = 0; i < this.aniSpriteArray.length; i++) { e = this.aniSpriteArray[i]; e.show() } } }; e.hide = function () { if (this.visible) { this.visible = false; if (!this.isAloneObject) { var t; t = this.parent; if (t) { t.hideGridSprite(this) } } if (!v.isWebGL && this._map.autoCache) { this.cacheAs = "none" } if (this.aniSpriteArray == null) { return } var e; for (var i = 0; i < this.aniSpriteArray.length; i++) { e = this.aniSpriteArray[i]; e.hide() } } }; e.updatePos = function () { if (this.isAloneObject) { if (this._map) { this.x = this.relativeX; this.y = this.relativeY } if (this.x < 0 || this.x > this._map.viewPortWidth || this.y < 0 || this.y > this._map.viewPortHeight) { this.hide() } else { this.show() } } else { if (this._map) { this.x = this.relativeX; this.y = this.relativeY } } }; e.clearAll = function () { if (this._map) { this._map = null } this.visible = false; var t; if (this.aniSpriteArray != null) { for (var e = 0; e < this.aniSpriteArray.length; e++) { t = this.aniSpriteArray[e]; t.clearAll() } } this.destroy(); this.relativeX = 0; this.relativeY = 0; this.isHaveAnimation = false; this.aniSpriteArray = null; this.drawImageNum = 0 }; return t }(m); var w = function (s) { function t() { this._map = null; this._mapData = null; this._tileWidthHalf = 0; this._tileHeightHalf = 0; this._mapWidthHalf = 0; this._mapHeightHalf = 0; this._gridSpriteArray = []; this._objDic = null; this._dataDic = null; this._properties = null; this.tarLayer = null; this.layerName = null; this._showGridList = []; this._aloneObjs = []; t.__super.call(this); this._tempMapPos = new _ } a(t, "laya.map.MapLayer", s); var e = t.prototype; e.init = function (t, e) { this._map = e; this._mapData = t.data; var i = t.height; var r = t.width; var s = e.tileWidth; var n = e.tileHeight; this.layerName = t.name; this._properties = t.properties; this.alpha = t.opacity; this._tileWidthHalf = s / 2; this._tileHeightHalf = n / 2; this._mapWidthHalf = this._map.width / 2 - this._tileWidthHalf; this._mapHeightHalf = this._map.height / 2; switch (t.type) { case "tilelayer": break; case "objectgroup": ; var a = 0; var o = t.objects; if (o.length > 0) { this._objDic = {}; this._dataDic = {} }; var h; var l = NaN; var u = NaN; for (var c = 0; c < o.length; c++) { h = o[c]; this._dataDic[h.name] = h; if (h.visible == true) { l = h.width; u = h.height; var f = e.getSprite(h.gid, l, u); if (f != null) { switch (this._map.orientation) { case "isometric": this.getScreenPositionByTilePos(h.x / n, h.y / n, _.TEMP); f.pivot(l / 2, u / 2); f.rotation = h.rotation; f.x = f.relativeX = _.TEMP.x + this._map.viewPortX; f.y = f.relativeY = _.TEMP.y + this._map.viewPortY - u / 2; break; case "staggered": f.pivot(l / 2, u / 2); f.rotation = h.rotation; f.x = f.relativeX = h.x + l / 2; f.y = f.relativeY = h.y - u / 2; break; case "orthogonal": f.pivot(l / 2, u / 2); f.rotation = h.rotation; f.x = f.relativeX = h.x + l / 2; f.y = f.relativeY = h.y - u / 2; break; case "hexagonal": f.x = f.relativeX = h.x; f.y = f.relativeY = h.y; break }this.addChild(f); this._gridSpriteArray.push(f); if (f.isAloneObject) { this._showGridList.push(f); this._aloneObjs.push(f) } this._objDic[h.name] = f } } } break } }; e.getObjectByName = function (t) { if (this._objDic) { return this._objDic[t] } return null }; e.getObjectDataByName = function (t) { if (this._dataDic) { return this._dataDic[t] } return null }; e.getLayerProperties = function (t) { if (this._properties) { return this._properties[t] } return null }; e.getTileData = function (t, e) { if (e >= 0 && e < this._map.numRowsTile && t >= 0 && t < this._map.numColumnsTile) { var i = e * this._map.numColumnsTile + t; var r = this._mapData; if (r != null && i < r.length) { return r[i] } } return 0 }; e.getScreenPositionByTilePos = function (t, e, i) { if (i) { switch (this._map.orientation) { case "isometric": i.x = this._map.width / 2 - (e - t) * this._tileWidthHalf; i.y = (e + t) * this._tileHeightHalf; break; case "staggered": t = Math.floor(t); e = Math.floor(e); i.x = t * this._map.tileWidth + (e & 1) * this._tileWidthHalf; i.y = e * this._tileHeightHalf; break; case "orthogonal": i.x = t * this._map.tileWidth; i.y = e * this._map.tileHeight; break; case "hexagonal": t = Math.floor(t); e = Math.floor(e); var r = this._map.tileHeight * 2 / 3; i.x = (t * this._map.tileWidth + e % 2 * this._tileWidthHalf) % this._map.gridWidth; i.y = e * r % this._map.gridHeight; break }i.x = (i.x + this._map.viewPortX) * this._map.scale; i.y = (i.y + this._map.viewPortY) * this._map.scale } }; e.getTileDataByScreenPos = function (t, e) { var i = 0; if (this.getTilePositionByScreenPos(t, e, this._tempMapPos)) { i = this.getTileData(Math.floor(this._tempMapPos.x), Math.floor(this._tempMapPos.y)) } return i }; e.getTilePositionByScreenPos = function (t, e, i) { t = t / this._map.scale - this._map.viewPortX; e = e / this._map.scale - this._map.viewPortY; var r = this._map.tileWidth; var s = this._map.tileHeight; var n = 0; var a = 0; switch (this._map.orientation) { case "isometric": ; var o = t - this._map.width / 2; var h = e; n = -(o / r - h / s); a = o / r + h / s; if (i) { i.x = a; i.y = n } return true; break; case "staggered": if (i) { var l = 0, u = 0, c = 0, f = 0; l = Math.floor(t / r) * r + r / 2; u = Math.floor(e / s) * s + s / 2; c = (t - l) * s / 2; f = (e - u) * r / 2; if (Math.abs(c) + Math.abs(f) <= r * s / 4) { a = Math.floor(t / r); n = Math.floor(e / s) * 2 } else { t = t - r / 2; a = Math.floor(t / r) + 1; e = e - s / 2; n = Math.floor(e / s) * 2 + 1 } i.x = a - (n & 1); i.y = n } return true; break; case "orthogonal": a = t / r; n = e / s; if (i) { i.x = a; i.y = n } return true; break; case "hexagonal": ; var _ = s * 2 / 3; n = e / _; a = (t - n % 2 * this._tileWidthHalf) / r; if (i) { i.x = a; i.y = n } break }return false }; e.getDrawSprite = function (t, e) { var i = new b; i.relativeX = t * this._map.gridWidth; i.relativeY = e * this._map.gridHeight; i.initData(this._map); i.updatePos(); this._gridSpriteArray.push(i); return i }; e.showGridSprite = function (t) { var e = this._showGridList; var i = 0, r = 0; r = e.length; var s = -1; var n; for (i = 0; i < r; i++) { n = e[i]; if (n == t) return; if (!n.isAloneObject && !n.visible) { s = i } } if (s >= 0) { e[s] = t } else { e.push(t) } }; e.hideGridSprite = function (t) { t.visible = false }; e.updateGridPos = function () { var t; var e; e = this._showGridList; var i = 0; i = e.length; for (var r = 0; r < i; r++) { t = e[r]; if ((t._style.visible || t.isAloneObject) && t.drawImageNum > 0) { t.updatePos() } } }; e.updateAloneObject = function () { var t; var e; e = this._aloneObjs; var i = 0; i = e.length; for (var r = 0; r < i; r++) { t = e[r]; if (t.drawImageNum > 0) { t.updatePos() } } }; e.render = function (t, e, i) { var r = this._childs; this._childs = this._showGridList; s.prototype.render.call(this, t, e, i); this._childs = r }; e.drawTileTexture = function (t, e, i) { if (i >= 0 && i < this._map.numRowsTile && e >= 0 && e < this._map.numColumnsTile) { var r = i * this._map.numColumnsTile + e; var s = this._mapData; if (s != null && r < s.length) { if (s[r] != 0) { var n = this._map.getTexture(s[r]); if (n) { var a = 0; var o = 0; var h = n.texture; switch (this._map.orientation) { case "staggered": a = e * this._map.tileWidth % this._map.gridWidth + (i & 1) * this._tileWidthHalf; o = i * this._tileHeightHalf % this._map.gridHeight; break; case "orthogonal": a = e * this._map.tileWidth % this._map.gridWidth; o = i * this._map.tileHeight % this._map.gridHeight; break; case "isometric": a = (this._mapWidthHalf + (e - i) * this._tileWidthHalf) % this._map.gridWidth; o = (e + i) * this._tileHeightHalf % this._map.gridHeight; break; case "hexagonal": ; var l = this._map.tileHeight * 2 / 3; a = (e * this._map.tileWidth + i % 2 * this._tileWidthHalf) % this._map.gridWidth; o = i * l % this._map.gridHeight; break }if (n.isAnimation) { var u = new T; u.x = a; u.y = o; u.setTileTextureSet(r.toString(), n); t.addAniSprite(u); t.addChild(u); t.isHaveAnimation = true } else { t.graphics.drawTexture(n.texture, a + n.offX, o + n.offY) } return true } } } } return false }; e.clearAll = function () { this._map = null; this._mapData = null; this._tileWidthHalf = 0; this._tileHeightHalf = 0; this._mapWidthHalf = 0; this._mapHeightHalf = 0; this.layerName = null; var t = 0; if (this._objDic) { for (var e in this._objDic) { delete this._objDic[e] } this._objDic = null } if (this._dataDic) { for (e in this._dataDic) { delete this._dataDic[e] } this._dataDic = null } var i; for (t = 0; t < this._gridSpriteArray.length; t++) { i = this._gridSpriteArray[t]; i.clearAll() } this._properties = null; this._tempMapPos = null; this.tarLayer = null }; return t }(m); var T = function (t) { function e() { this._tileTextureSet = null; this._aniName = null; e.__super.call(this) } a(e, "laya.map.TileAniSprite", t); var i = e.prototype; i.setTileTextureSet = function (t, e) { this._aniName = t; this._tileTextureSet = e; e.addAniSprite(this._aniName, this) }; i.show = function () { this._tileTextureSet.addAniSprite(this._aniName, this) }; i.hide = function () { this._tileTextureSet.removeAniSprite(this._aniName) }; i.clearAll = function () { this._tileTextureSet.removeAniSprite(this._aniName); this.destroy(); this._tileTextureSet = null; this._aniName = null }; return e }(m); g.__init([d]) })(window, document, Laya); if (typeof define === "function" && define.amd) { define("laya.core", ["require", "exports"], function (t, e) { "use strict"; Object.defineProperty(e, "__esModule", { value: true }); for (var i in Laya) { var r = Laya[i]; r && r.__isclass && (e[i] = r) } }) } (function (t, a, p) { var e = p.un, i = p.uns, r = p.static, n = p.class, s = p.getset, o = p.__newvec; var h = laya.display.Animation, f = laya.utils.Browser, v = laya.utils.ClassUtils, l = laya.filters.ColorFilter; var u = laya.utils.Ease, c = laya.events.Event, _ = laya.events.EventDispatcher, d = laya.display.css.Font; var m = laya.display.FrameAnimation, g = laya.display.Graphics, y = laya.utils.Handler; var x = laya.net.HttpRequest, b = laya.display.Input, w = laya.net.Loader, T = laya.net.LocalStorage; var C = laya.display.Node, S = laya.maths.Point, A = laya.maths.Rectangle, M = laya.renders.Render; var I = laya.display.Sprite, E = laya.display.Stage, R = laya.display.Text, P = laya.resource.Texture; var L = laya.utils.TimeLine, k = laya.utils.Tween, D = laya.utils.Utils, B = laya.utils.WeakObject; p.interface("laya.ui.IItem"); p.interface("laya.ui.ISelect"); p.interface("laya.ui.IRender"); p.interface("laya.ui.IComponent"); p.interface("laya.ui.IBox", "IComponent"); var N = function () { function t() { this.enable = false; this.top = NaN; this.bottom = NaN; this.left = NaN; this.right = NaN; this.centerX = NaN; this.centerY = NaN; this.anchorX = NaN; this.anchorY = NaN } n(t, "laya.ui.LayoutStyle"); r(t, ["EMPTY", function () { return this.EMPTY = new t }]); return t }(); var F = function () { function t() { } n(t, "laya.ui.Styles"); t.labelColor = "#000000"; t.buttonStateNum = 3; t.scrollBarMinNum = 15; t.scrollBarDelayTime = 500; r(t, ["defaultSizeGrid", function () { return this.defaultSizeGrid = [4, 4, 4, 4, 0] }, "labelPadding", function () { return this.labelPadding = [2, 2, 2, 2] }, "inputLabelPadding", function () { return this.inputLabelPadding = [1, 1, 1, 3] }, "buttonLabelColors", function () { return this.buttonLabelColors = ["#32556b", "#32cc6b", "#ff0000", "#C0C0C0"] }, "comboBoxItemColors", function () { return this.comboBoxItemColors = ["#5e95b6", "#ffffff", "#000000", "#8fa4b1", "#ffffff"] }]); return t }(); var O = function () { function s() { } n(s, "laya.ui.UIUtils"); s.fillArray = function (t, e, i) { var r = t.concat(); if (e) { var s = e.split(","); for (var n = 0, a = Math.min(r.length, s.length); n < a; n++) { var o = s[n]; r[n] = o == "true" ? true : o == "false" ? false : o; if (i != null) r[n] = i(o) } } return r }; s.toColor = function (t) { return D.toHexColor(t) }; s.gray = function (t, e) { e === void 0 && (e = true); if (e) { s.addFilter(t, s.grayFilter) } else { s.clearFilter(t, l) } }; s.addFilter = function (t, e) { var i = t.filters || []; i.push(e); t.filters = i }; s.clearFilter = function (t, e) { var i = t.filters; if (i != null && i.length > 0) { for (var r = i.length - 1; r > -1; r--) { var s = i[r]; if (p.__typeof(s, e)) i.splice(r, 1) } t.filters = i } }; s._getReplaceStr = function (t) { return s.escapeSequence[t] }; s.adptString = function (t) { return t.replace(/\\(\w)/g, s._getReplaceStr) }; s.getBindFun = function (t) { var e = s._funMap.get(t); if (e == null) { var i = '"' + t + '"'; i = i.replace(/^"\${|}"$/g, "").replace(/\${/g, '"+').replace(/}/g, '+"'); var r = "(function(data){if(data==null)return;with(data){try{\nreturn " + i + "\n}catch(e){}}})"; e = p._runScript(r); s._funMap.set(t, e) } return e }; r(s, ["grayFilter", function () { return this.grayFilter = new l([.3086, .6094, .082, 0, 0, .3086, .6094, .082, 0, 0, .3086, .6094, .082, 0, 0, 0, 0, 0, 1, 0]) }, "escapeSequence", function () { return this.escapeSequence = { "\\n": "\n", "\\t": "\t" } }, "_funMap", function () { return this._funMap = new B }]); return s }(); var z = function () { function t() { } n(t, "UIConfig"); t.touchScrollEnable = true; t.mouseWheelEnable = true; t.showButtons = true; t.popupBgColor = "#000000"; t.popupBgAlpha = .5; t.closeDialogOnSide = true; return t }(); var U = function (e) { function d() { this.autoCacheCmd = true; this._width = 0; this._height = 0; this._source = null; this._sizeGrid = null; this._isChanged = false; this._offset = null; d.__super.call(this) } n(d, "laya.ui.AutoBitmap", e); var t = d.prototype; t.destroy = function () { e.prototype.destroy.call(this); this._source = null; this._sizeGrid = null; this._offset = null }; t._setChanged = function () { if (!this._isChanged) { this._isChanged = true; p.timer.callLater(this, this.changeSource) } }; t.changeSource = function () { this._isChanged = false; var t = this._source; if (!t || !t.bitmap) return; var e = this.width; var i = this.height; var r = this._sizeGrid; var s = t.sourceWidth; var n = t.sourceHeight; if (!r || s === e && n === i) { this.clear(); this.drawTexture(t, this._offset ? this._offset[0] : 0, this._offset ? this._offset[1] : 0, e, i) } else { t.$_GID || (t.$_GID = D.getGID()); var a = t.$_GID + "." + e + "." + i + "." + r.join("."); if (D.isOKCmdList(B.I.get(a))) { this.cmds = B.I.get(a); return } this.clear(); var o = r[0]; var h = r[1]; var l = r[2]; var u = r[3]; var c = r[4]; var f = false; if (e == s) { u = h = 0 } if (i == n) { o = l = 0 } if (u + h > e) { var _ = e; f = true; e = u + h; this.save(); this.clipRect(0, 0, _, i) } u && o && this.drawTexture(d.getTexture(t, 0, 0, u, o), 0, 0, u, o); h && o && this.drawTexture(d.getTexture(t, s - h, 0, h, o), e - h, 0, h, o); u && l && this.drawTexture(d.getTexture(t, 0, n - l, u, l), 0, i - l, u, l); h && l && this.drawTexture(d.getTexture(t, s - h, n - l, h, l), e - h, i - l, h, l); o && this.drawBitmap(c, d.getTexture(t, u, 0, s - u - h, o), u, 0, e - u - h, o); l && this.drawBitmap(c, d.getTexture(t, u, n - l, s - u - h, l), u, i - l, e - u - h, l); u && this.drawBitmap(c, d.getTexture(t, 0, o, u, n - o - l), 0, o, u, i - o - l); h && this.drawBitmap(c, d.getTexture(t, s - h, o, h, n - o - l), e - h, o, h, i - o - l); this.drawBitmap(c, d.getTexture(t, u, o, s - u - h, n - o - l), u, o, e - u - h, i - o - l); if (f) this.restore(); if (this.autoCacheCmd && !M.isConchApp) B.I.set(a, this.cmds) } this._repaint() }; t.drawBitmap = function (t, e, i, r, s, n) { s === void 0 && (s = 0); n === void 0 && (n = 0); if (s < .1 || n < .1) return; if (t && (e.width != s || e.height != n)) this.fillTexture(e, i, r, s, n); else this.drawTexture(e, i, r, s, n) }; t.clear = function (t) { t === void 0 && (t = true); e.prototype.clear.call(this, false) }; s(0, t, "sizeGrid", function () { return this._sizeGrid }, function (t) { this._sizeGrid = t; this._setChanged() }); s(0, t, "width", function () { if (this._width) return this._width; if (this._source) return this._source.sourceWidth; return 0 }, function (t) { if (this._width != t) { this._width = t; this._setChanged() } }); s(0, t, "height", function () { if (this._height) return this._height; if (this._source) return this._source.sourceHeight; return 0 }, function (t) { if (this._height != t) { this._height = t; this._setChanged() } }); s(0, t, "source", function () { return this._source }, function (t) { if (t) { this._source = t; this._setChanged() } else { this._source = null; this.clear() } }); d.getTexture = function (t, e, i, r, s) { if (r <= 0) r = 1; if (s <= 0) s = 1; t.$_GID || (t.$_GID = D.getGID()); var n = t.$_GID + "." + e + "." + i + "." + r + "." + s; var a = B.I.get(n); if (!a || !a.source) { a = P.createFromTexture(t, e, i, r, s); B.I.set(n, a) } return a }; return d }(g); var W = function (t) { function e() { e.__super.call(this) } n(e, "laya.ui.UIEvent", t); e.SHOW_TIP = "showtip"; e.HIDE_TIP = "hidetip"; return e }(c); var V = function (e) { function t() { this._comXml = null; this._dataSource = null; this._toolTip = null; this._tag = null; this._disabled = false; this._gray = false; this.layoutEnabled = true; t.__super.call(this); this._layout = N.EMPTY; this.preinitialize(); this.createChildren(); this.initialize() } n(t, "laya.ui.Component", e); var i = t.prototype; p.imps(i, { "laya.ui.IComponent": true }); i.destroy = function (t) { t === void 0 && (t = true); e.prototype.destroy.call(this, t); this._dataSource = this._layout = null; this._tag = null; this._toolTip = null }; i.preinitialize = function () { }; i.createChildren = function () { }; i.initialize = function () { }; i.callLater = function (t, e) { p.timer.callLater(this, t, e) }; i.runCallLater = function (t) { p.timer.runCallLater(this, t) }; i.commitMeasure = function () { }; i.changeSize = function () { this.event("resize"); if (this._layout.enable) { this.resetLayoutX(); this.resetLayoutY() } }; i.getLayout = function () { this._layout === N.EMPTY && (this._layout = new N); return this._layout }; i._setLayoutEnabled = function (t) { if (this._layout && this._layout.enable != t) { this._layout.enable = t; this.on("added", this, this.onAdded); this.on("removed", this, this.onRemoved); if (this.parent) { this.onAdded() } } }; i.onRemoved = function () { this.parent.off("resize", this, this.onCompResize) }; i.onAdded = function () { this.parent.on("resize", this, this.onCompResize); this.resetLayoutX(); this.resetLayoutY() }; i.onCompResize = function () { if (this._layout && this._layout.enable) { this.resetLayoutX(); this.resetLayoutY() } }; i.resetLayoutX = function () { var t = this._layout; if (!isNaN(t.anchorX)) this.pivotX = t.anchorX * this.width; if (!this.layoutEnabled) return; var e = this.parent; if (e) { if (!isNaN(t.centerX)) { this.x = Math.round((e.width - this.displayWidth) * .5 + t.centerX + this.pivotX * this.scaleX) } else if (!isNaN(t.left)) { this.x = Math.round(t.left + this.pivotX * this.scaleX); if (!isNaN(t.right)) { this.width = (e._width - t.left - t.right) / (this.scaleX || .01) } } else if (!isNaN(t.right)) { this.x = Math.round(e.width - this.displayWidth - t.right + this.pivotX * this.scaleX) } } }; i.resetLayoutY = function () { var t = this._layout; if (!isNaN(t.anchorY)) this.pivotY = t.anchorY * this.height; if (!this.layoutEnabled) return; var e = this.parent; if (e) { if (!isNaN(t.centerY)) { this.y = Math.round((e.height - this.displayHeight) * .5 + t.centerY + this.pivotY * this.scaleY) } else if (!isNaN(t.top)) { this.y = Math.round(t.top + this.pivotY * this.scaleY); if (!isNaN(t.bottom)) { this.height = (e._height - t.top - t.bottom) / (this.scaleY || .01) } } else if (!isNaN(t.bottom)) { this.y = Math.round(e.height - this.displayHeight - t.bottom + this.pivotY * this.scaleY) } } }; i.onMouseOver = function (t) { p.stage.event("showtip", this._toolTip) }; i.onMouseOut = function (t) { p.stage.event("hidetip", this._toolTip) }; i._childChanged = function (t) { this.callLater(this.changeSize); e.prototype._childChanged.call(this, t) }; s(0, i, "displayWidth", function () { return this.width * this.scaleX }); s(0, i, "width", function () { if (this._width) return this._width; return this.measureWidth }, function (t) { if (this._width != t) { this._width = t; this.conchModel && this.conchModel.size(this._width, this._height); this.callLater(this.changeSize); if (this._layout.enable && (!isNaN(this._layout.centerX) || !isNaN(this._layout.right) || !isNaN(this._layout.anchorX))) this.resetLayoutX() } }); s(0, i, "measureWidth", function () { var t = 0; this.commitMeasure(); for (var e = this.numChildren - 1; e > -1; e--) { var i = this.getChildAt(e); if (i.visible) { t = Math.max(i.x + i.width * i.scaleX, t) } } return t }); s(0, i, "displayHeight", function () { return this.height * this.scaleY }); s(0, i, "height", function () { if (this._height) return this._height; return this.measureHeight }, function (t) { if (this._height != t) { this._height = t; this.conchModel && this.conchModel.size(this._width, this._height); this.callLater(this.changeSize); if (this._layout.enable && (!isNaN(this._layout.centerY) || !isNaN(this._layout.bottom) || !isNaN(this._layout.anchorY))) this.resetLayoutY() } }); s(0, i, "dataSource", function () { return this._dataSource }, function (t) { this._dataSource = t; for (var e in this._dataSource) { if (this.hasOwnProperty(e) && !(typeof this[e] == "function")) { this[e] = this._dataSource[e] } } }); s(0, i, "scaleY", e.prototype._$get_scaleY, function (t) { if (p.superGet(I, this, "scaleY") != t) { p.superSet(I, this, "scaleY", t); this.callLater(this.changeSize); this._layout.enable && this.resetLayoutY() } }); s(0, i, "measureHeight", function () { var t = 0; this.commitMeasure(); for (var e = this.numChildren - 1; e > -1; e--) { var i = this.getChildAt(e); if (i.visible) { t = Math.max(i.y + i.height * i.scaleY, t) } } return t }); s(0, i, "scaleX", e.prototype._$get_scaleX, function (t) { if (p.superGet(I, this, "scaleX") != t) { p.superSet(I, this, "scaleX", t); this.callLater(this.changeSize); this._layout.enable && this.resetLayoutX() } }); s(0, i, "top", function () { return this._layout.top }, function (t) { if (t != this._layout.top) { this.getLayout().top = t; this._setLayoutEnabled(true) } this.resetLayoutY() }); s(0, i, "bottom", function () { return this._layout.bottom }, function (t) { if (t != this._layout.bottom) { this.getLayout().bottom = t; this._setLayoutEnabled(true) } this.resetLayoutY() }); s(0, i, "left", function () { return this._layout.left }, function (t) { if (t != this._layout.left) { this.getLayout().left = t; this._setLayoutEnabled(true) } this.resetLayoutX() }); s(0, i, "right", function () { return this._layout.right }, function (t) { if (t != this._layout.right) { this.getLayout().right = t; this._setLayoutEnabled(true) } this.resetLayoutX() }); s(0, i, "centerX", function () { return this._layout.centerX }, function (t) { if (t != this._layout.centerX) { this.getLayout().centerX = t; this._setLayoutEnabled(true) } this.resetLayoutX() }); s(0, i, "centerY", function () { return this._layout.centerY }, function (t) { if (t != this._layout.centerY) { this.getLayout().centerY = t; this._setLayoutEnabled(true) } this.resetLayoutY() }); s(0, i, "anchorX", function () { return this._layout.anchorX }, function (t) { if (t != this._layout.anchorX) { this.getLayout().anchorX = t; this._setLayoutEnabled(true) } this.resetLayoutX() }); s(0, i, "anchorY", function () { return this._layout.anchorY }, function (t) { if (t != this._layout.anchorY) { this.getLayout().anchorY = t; this._setLayoutEnabled(true) } this.resetLayoutY() }); s(0, i, "tag", function () { return this._tag }, function (t) { this._tag = t }); s(0, i, "toolTip", function () { return this._toolTip }, function (t) { if (this._toolTip != t) { this._toolTip = t; if (t != null) { this.on("mouseover", this, this.onMouseOver); this.on("mouseout", this, this.onMouseOut) } else { this.off("mouseover", this, this.onMouseOver); this.off("mouseout", this, this.onMouseOut) } } }); s(0, i, "comXml", function () { return this._comXml }, function (t) { this._comXml = t }); s(0, i, "gray", function () { return this._gray }, function (t) { if (t !== this._gray) { this._gray = t; O.gray(this, t) } }); s(0, i, "disabled", function () { return this._disabled }, function (t) { if (t !== this._disabled) { this.gray = this._disabled = t; this.mouseEnabled = !t } }); return t }(I); var H = function (t) { function e() { this.lockLayer = null; this.popupEffect = function (t) { t.scale(1, 1); k.from(t, { x: p.stage.width / 2, y: p.stage.height / 2, scaleX: 0, scaleY: 0 }, 300, u.backOut, y.create(this, this.doOpen, [t])) }; this.closeEffect = function (t, e) { k.to(t, { x: p.stage.width / 2, y: p.stage.height / 2, scaleX: 0, scaleY: 0 }, 300, u.strongOut, y.create(this, this.doClose, [t, e])) }; e.__super.call(this); this.maskLayer = new I; this.popupEffectHandler = new y(this, this.popupEffect); this.closeEffectHandler = new y(this, this.closeEffect); this.mouseEnabled = this.maskLayer.mouseEnabled = true; this.zOrder = 1e3; p.stage.addChild(this); p.stage.on("resize", this, this._onResize); if (z.closeDialogOnSide) this.maskLayer.on("click", this, this._closeOnSide); this._onResize(null) } n(e, "laya.ui.DialogManager", t); var i = e.prototype; i._closeOnSide = function () { var t = this.getChildAt(this.numChildren - 1); if (t instanceof laya.ui.Dialog) t.close("side") }; i.setLockView = function (t) { if (!this.lockLayer) { this.lockLayer = new Y; this.lockLayer.mouseEnabled = true; this.lockLayer.size(p.stage.width, p.stage.height) } this.lockLayer.removeChildren(); if (t) { t.centerX = t.centerY = 0; this.lockLayer.addChild(t) } }; i._onResize = function (t) { var e = this.maskLayer.width = p.stage.width; var i = this.maskLayer.height = p.stage.height; if (this.lockLayer) this.lockLayer.size(e, i); this.maskLayer.graphics.clear(); this.maskLayer.graphics.drawRect(0, 0, e, i, z.popupBgColor); this.maskLayer.alpha = z.popupBgAlpha; for (var r = this.numChildren - 1; r > -1; r--) { var s = this.getChildAt(r); if (s.popupCenter) this._centerDialog(s) } }; i._centerDialog = function (t) { t.x = Math.round((p.stage.width - t.width >> 1) + t.pivotX); t.y = Math.round((p.stage.height - t.height >> 1) + t.pivotY) }; i.open = function (t, e, i) { e === void 0 && (e = false); i === void 0 && (i = false); if (e) this._closeAll(); if (t.popupCenter) this._centerDialog(t); this.addChild(t); if (t.isModal || this._$P["hasZorder"]) this.timer.callLater(this, this._checkMask); if (i && t.popupEffect != null) t.popupEffect.runWith(t); else this.doOpen(t); this.event("open") }; i.doOpen = function (t) { t.onOpened() }; i.lock = function (t) { if (this.lockLayer) { if (t) this.addChild(this.lockLayer); else this.lockLayer.removeSelf() } }; i.close = function (t, e, i) { i === void 0 && (i = false); if (i && t.closeEffect != null) t.closeEffect.runWith([t, e]); else this.doClose(t, e); this.event("close") }; i.doClose = function (t, e) { t.removeSelf(); t.isModal && this._checkMask(); t.closeHandler && t.closeHandler.runWith(e); t.onClosed(e) }; i.closeAll = function () { this._closeAll(); this.event("close") }; i._closeAll = function () { for (var t = this.numChildren - 1; t > -1; t--) { var e = this.getChildAt(t); if (e && e.close != null) { this.doClose(e) } } }; i.getDialogsByGroup = function (t) { var e = []; for (var i = this.numChildren - 1; i > -1; i--) { var r = this.getChildAt(i); if (r && r.group === t) { e.push(r) } } return e }; i.closeByGroup = function (t) { var e = []; for (var i = this.numChildren - 1; i > -1; i--) { var r = this.getChildAt(i); if (r && r.group === t) { r.close(); e.push(r) } } return e }; i._checkMask = function () { this.maskLayer.removeSelf(); for (var t = this.numChildren - 1; t > -1; t--) { var e = this.getChildAt(t); if (e && e.isModal) { this.addChildAt(this.maskLayer, t); return } } }; return e }(I); var G = function (e) { function i(t) { this._bitmap = null; this._skin = null; this._group = null; i.__super.call(this); this.skin = t } n(i, "laya.ui.Image", e); var t = i.prototype; t.destroy = function (t) { t === void 0 && (t = true); e.prototype.destroy.call(this, true); this._bitmap && this._bitmap.destroy(); this._bitmap = null }; t.dispose = function () { this.destroy(true); p.loader.clearRes(this._skin) }; t.createChildren = function () { this.graphics = this._bitmap = new U; this._bitmap.autoCacheCmd = false }; t.setSource = function (t, e) { if (t === this._skin && e) { this.source = e; this.onCompResize() } }; s(0, t, "source", function () { return this._bitmap.source }, function (t) { if (!this._bitmap) return; this._bitmap.source = t; this.event("loaded"); this.repaint() }); s(0, t, "dataSource", e.prototype._$get_dataSource, function (t) { this._dataSource = t; if (typeof t == "string") this.skin = t; else p.superSet(V, this, "dataSource", t) }); s(0, t, "measureHeight", function () { return this._bitmap.height }); s(0, t, "skin", function () { return this._skin }, function (t) { if (this._skin != t) { this._skin = t; if (t) { var e = w.getRes(t); if (e) { this.source = e; this.onCompResize() } else p.loader.load(this._skin, y.create(this, this.setSource, [this._skin]), null, "image", 1, true, this._group) } else { this.source = null } } }); s(0, t, "group", function () { return this._group }, function (t) { if (t && this._skin) w.setGroup(this._skin, t); this._group = t }); s(0, t, "sizeGrid", function () { if (this._bitmap.sizeGrid) return this._bitmap.sizeGrid.join(","); return null }, function (t) { this._bitmap.sizeGrid = O.fillArray(F.defaultSizeGrid, t, Number) }); s(0, t, "measureWidth", function () { return this._bitmap.width }); s(0, t, "width", e.prototype._$get_width, function (t) { p.superSet(V, this, "width", t); this._bitmap.width = t == 0 ? 1e-7 : t }); s(0, t, "height", e.prototype._$get_height, function (t) { p.superSet(V, this, "height", t); this._bitmap.height = t == 0 ? 1e-7 : t }); return i }(V); var Y = function (t) { function e() { e.__super.call(this) } n(e, "laya.ui.Box", t); var i = e.prototype; p.imps(i, { "laya.ui.IBox": true }); s(0, i, "dataSource", t.prototype._$get_dataSource, function (t) { this._dataSource = t; for (var e in t) { var i = this.getChildByName(e); if (i) i.dataSource = t[e]; else if (this.hasOwnProperty(e) && !(typeof this[e] == "function")) this[e] = t[e] } }); return e }(V); var X = function (e) { function i(t, e) { this.toggle = false; this._bitmap = null; this._text = null; this._strokeColors = null; this._state = 0; this._selected = false; this._skin = null; this._autoSize = true; this._sources = null; this._clickHandler = null; this._stateChanged = false; i.__super.call(this); this._labelColors = F.buttonLabelColors; this._stateNum = F.buttonStateNum; e === void 0 && (e = ""); this.skin = t; this.label = e } n(i, "laya.ui.Button", e); var t = i.prototype; p.imps(t, { "laya.ui.ISelect": true }); t.destroy = function (t) { t === void 0 && (t = true); e.prototype.destroy.call(this, t); this._bitmap && this._bitmap.destroy(); this._text && this._text.destroy(t); this._bitmap = null; this._text = null; this._clickHandler = null; this._labelColors = this._sources = this._strokeColors = null }; t.createChildren = function () { this.graphics = this._bitmap = new U }; t.createText = function () { if (!this._text) { this._text = new R; this._text.overflow = R.HIDDEN; this._text.align = "center"; this._text.valign = "middle"; this._text.width = this._width; this._text.height = this._height } }; t.initialize = function () { if (this._mouseEnableState !== 1) { this.mouseEnabled = true; this._setBit(2, true) } this._createListener("mouseover", this, this.onMouse, null, false, false); this._createListener("mouseout", this, this.onMouse, null, false, false); this._createListener("mousedown", this, this.onMouse, null, false, false); this._createListener("mouseup", this, this.onMouse, null, false, false); this._createListener("click", this, this.onMouse, null, false, false) }; t.onMouse = function (t) { if (this.toggle === false && this._selected) return; if (t.type === "click") { this.toggle && (this.selected = !this._selected); this._clickHandler && this._clickHandler.run(); return } !this._selected && (this.state = i.stateMap[t.type]) }; t.changeClips = function () { if (!this._skin) { return } var t = w.getRes(this._skin); if (!t) { console.log("lose skin", this._skin); return } var e = t.sourceWidth; var i = t.sourceHeight / this._stateNum; t.$_GID || (t.$_GID = D.getGID()); var r = t.$_GID + "-" + this._stateNum; var s = B.I.get(r); if (!D.isOkTextureList(s)) { s = null } if (s) this._sources = s; else { this._sources = []; if (this._stateNum === 1) { this._sources.push(t) } else { for (var n = 0; n < this._stateNum; n++) { this._sources.push(P.createFromTexture(t, 0, i * n, e, i)) } } B.I.set(r, this._sources) } if (this._autoSize) { this._bitmap.width = this._width || e; this._bitmap.height = this._height || i; if (this._text) { this._text.width = this._bitmap.width; this._text.height = this._bitmap.height } } else { this._text && (this._text.x = e) } }; t.changeState = function () { this._stateChanged = false; this.runCallLater(this.changeClips); var t = this._state < this._stateNum ? this._state : this._stateNum - 1; this._sources && (this._bitmap.source = this._sources[t]); if (this.label) { this._text.color = this._labelColors[t]; if (this._strokeColors) this._text.strokeColor = this._strokeColors[t] } }; t._setStateChanged = function () { if (!this._stateChanged) { this._stateChanged = true; this.callLater(this.changeState) } }; s(0, t, "labelStrokeColor", function () { this.createText(); return this._text.strokeColor }, function (t) { this.createText(); this._text.strokeColor = t }); s(0, t, "measureHeight", function () { this.runCallLater(this.changeClips); return this._text ? Math.max(this._bitmap.height, this._text.height) : this._bitmap.height }); s(0, t, "skin", function () { return this._skin }, function (t) { if (this._skin != t) { this._skin = t; this.callLater(this.changeClips); this._setStateChanged() } }); s(0, t, "state", function () { return this._state }, function (t) { if (this._state != t) { this._state = t; this._setStateChanged() } }); s(0, t, "text", function () { this.createText(); return this._text }); s(0, t, "stateNum", function () { return this._stateNum }, function (t) { if (typeof t == "string") { t = parseInt(t) } if (this._stateNum != t) { this._stateNum = t < 1 ? 1 : t > 3 ? 3 : t; this.callLater(this.changeClips) } }); s(0, t, "strokeColors", function () { return this._strokeColors ? this._strokeColors.join(",") : "" }, function (t) { this._strokeColors = O.fillArray(F.buttonLabelColors, t, String); this._setStateChanged() }); s(0, t, "labelColors", function () { return this._labelColors.join(",") }, function (t) { this._labelColors = O.fillArray(F.buttonLabelColors, t, String); this._setStateChanged() }); s(0, t, "measureWidth", function () { this.runCallLater(this.changeClips); if (this._autoSize) return this._bitmap.width; this.runCallLater(this.changeState); return this._bitmap.width + (this._text ? this._text.width : 0) }); s(0, t, "label", function () { return this._text ? this._text.text : null }, function (t) { if (!this._text && !t) return; this.createText(); if (this._text.text != t) { t && !this._text.parent && this.addChild(this._text); this._text.text = (t + "").replace(/\\n/g, "\n"); this._setStateChanged() } }); s(0, t, "selected", function () { return this._selected }, function (t) { if (this._selected != t) { this._selected = t; this.state = this._selected ? 2 : 0; this.event("change") } }); s(0, t, "labelPadding", function () { this.createText(); return this._text.padding.join(",") }, function (t) { this.createText(); this._text.padding = O.fillArray(F.labelPadding, t, Number) }); s(0, t, "labelSize", function () { this.createText(); return this._text.fontSize }, function (t) { this.createText(); this._text.fontSize = t }); s(0, t, "labelStroke", function () { this.createText(); return this._text.stroke }, function (t) { this.createText(); this._text.stroke = t }); s(0, t, "labelBold", function () { this.createText(); return this._text.bold }, function (t) { this.createText(); this._text.bold = t }); s(0, t, "labelFont", function () { this.createText(); return this._text.font }, function (t) { this.createText(); this._text.font = t }); s(0, t, "labelAlign", function () { this.createText(); return this._text.align }, function (t) { this.createText(); this._text.align = t }); s(0, t, "clickHandler", function () { return this._clickHandler }, function (t) { this._clickHandler = t }); s(0, t, "sizeGrid", function () { if (this._bitmap.sizeGrid) return this._bitmap.sizeGrid.join(","); return null }, function (t) { this._bitmap.sizeGrid = O.fillArray(F.defaultSizeGrid, t, Number) }); s(0, t, "width", e.prototype._$get_width, function (t) { p.superSet(V, this, "width", t); if (this._autoSize) { this._bitmap.width = t; this._text && (this._text.width = t) } }); s(0, t, "height", e.prototype._$get_height, function (t) { p.superSet(V, this, "height", t); if (this._autoSize) { this._bitmap.height = t; this._text && (this._text.height = t) } }); s(0, t, "dataSource", e.prototype._$get_dataSource, function (t) { this._dataSource = t; if (typeof t == "number" || typeof t == "string") this.label = t + ""; else p.superSet(V, this, "dataSource", t) }); s(0, t, "iconOffset", function () { return this._bitmap._offset ? this._bitmap._offset.join(",") : null }, function (t) { if (t) this._bitmap._offset = O.fillArray([1, 1], t, Number); else this._bitmap._offset = [] }); r(i, ["stateMap", function () { return this.stateMap = { mouseup: 0, mouseover: 1, mousedown: 2, mouseout: 0 } }]); return i }(V); var j = function (e) { function r(t, e, i) { this._sources = null; this._bitmap = null; this._skin = null; this._clipX = 1; this._clipY = 1; this._clipWidth = 0; this._clipHeight = 0; this._autoPlay = false; this._interval = 50; this._complete = null; this._isPlaying = false; this._index = 0; this._clipChanged = false; this._group = null; this._toIndex = -1; r.__super.call(this); e === void 0 && (e = 1); i === void 0 && (i = 1); this._clipX = e; this._clipY = i; this.skin = t } n(r, "laya.ui.Clip", e); var t = r.prototype; t.destroy = function (t) { t === void 0 && (t = true); e.prototype.destroy.call(this, true); this._bitmap && this._bitmap.destroy(); this._bitmap = null; this._sources = null }; t.dispose = function () { this.destroy(true); p.loader.clearRes(this._skin) }; t.createChildren = function () { this.graphics = this._bitmap = new U }; t._onDisplay = function (t) { if (this._isPlaying) { if (this._displayedInStage) this.play(); else this.stop() } else if (this._autoPlay) { this.play() } }; t.changeClip = function () { this._clipChanged = false; if (!this._skin) return; var t = w.getRes(this._skin); if (t) { this.loadComplete(this._skin, t) } else { p.loader.load(this._skin, y.create(this, this.loadComplete, [this._skin])) } }; t.loadComplete = function (t, e) { if (t === this._skin && e) { var i = this._clipWidth || Math.ceil(e.sourceWidth / this._clipX); var r = this._clipHeight || Math.ceil(e.sourceHeight / this._clipY); var s = this._skin + i + r; var n = B.I.get(s); if (!D.isOkTextureList(n)) { n = null } if (n) this._sources = n; else { this._sources = []; for (var a = 0; a < this._clipY; a++) { for (var o = 0; o < this._clipX; o++) { this._sources.push(P.createFromTexture(e, i * o, r * a, i, r)) } } B.I.set(s, this._sources) } this.index = this._index; this.event("loaded"); this.onCompResize() } }; t.play = function (t, e) { t === void 0 && (t = 0); e === void 0 && (e = -1); this._isPlaying = true; this.index = t; this._toIndex = e; this._index++; p.timer.loop(this.interval, this, this._loop); this.on("display", this, this._onDisplay); this.on("undisplay", this, this._onDisplay) }; t._loop = function () { if (this._style.visible && this._sources) { this._index++; if (this._toIndex > -1 && this._index >= this._toIndex) this.stop(); else if (this._index >= this._sources.length) this._index = 0; this.index = this._index } }; t.stop = function () { this._isPlaying = false; p.timer.clear(this, this._loop); this.event("complete") }; t._setClipChanged = function () { if (!this._clipChanged) { this._clipChanged = true; this.callLater(this.changeClip) } }; s(0, t, "interval", function () { return this._interval }, function (t) { if (this._interval != t) { this._interval = t; if (this._isPlaying) this.play() } }); s(0, t, "skin", function () { return this._skin }, function (t) { if (this._skin != t) { this._skin = t; if (t) { this._setClipChanged() } else { this._bitmap.source = null } } }); s(0, t, "sources", function () { return this._sources }, function (t) { this._sources = t; this.index = this._index; this.event("loaded") }); s(0, t, "clipX", function () { return this._clipX }, function (t) { this._clipX = t || 1; this._setClipChanged() }); s(0, t, "clipY", function () { return this._clipY }, function (t) { this._clipY = t || 1; this._setClipChanged() }); s(0, t, "total", function () { this.runCallLater(this.changeClip); return this._sources ? this._sources.length : 0 }); s(0, t, "clipWidth", function () { return this._clipWidth }, function (t) { this._clipWidth = t; this._setClipChanged() }); s(0, t, "sizeGrid", function () { if (this._bitmap.sizeGrid) return this._bitmap.sizeGrid.join(","); return null }, function (t) { this._bitmap.sizeGrid = O.fillArray(F.defaultSizeGrid, t, Number) }); s(0, t, "group", function () { return this._group }, function (t) { if (t && this._skin) w.setGroup(this._skin, t); this._group = t }); s(0, t, "clipHeight", function () { return this._clipHeight }, function (t) { this._clipHeight = t; this._setClipChanged() }); s(0, t, "width", e.prototype._$get_width, function (t) { p.superSet(V, this, "width", t); this._bitmap.width = t }); s(0, t, "height", e.prototype._$get_height, function (t) { p.superSet(V, this, "height", t); this._bitmap.height = t }); s(0, t, "measureWidth", function () { this.runCallLater(this.changeClip); return this._bitmap.width }); s(0, t, "measureHeight", function () { this.runCallLater(this.changeClip); return this._bitmap.height }); s(0, t, "index", function () { return this._index }, function (t) { this._index = t; this._bitmap && this._sources && (this._bitmap.source = this._sources[t]); this.event("change") }); s(0, t, "autoPlay", function () { return this._autoPlay }, function (t) { if (this._autoPlay != t) { this._autoPlay = t; t ? this.play() : this.stop() } }); s(0, t, "isPlaying", function () { return this._isPlaying }, function (t) { this._isPlaying = t }); s(0, t, "dataSource", e.prototype._$get_dataSource, function (t) { this._dataSource = t; if (typeof t == "number" && Math.floor(t) == t || typeof t == "string") this.index = parseInt(t); else p.superSet(V, this, "dataSource", t) }); s(0, t, "bitmap", function () { return this._bitmap }); return r }(V); var K = function (e) { function t() { this.changeHandler = null; this._gridSize = 11; this._bgColor = "#ffffff"; this._borderColor = "#000000"; this._inputColor = "#000000"; this._inputBgColor = "#efefef"; this._colorPanel = null; this._colorTiles = null; this._colorBlock = null; this._colorInput = null; this._colorButton = null; this._colors = []; this._selectedColor = "#000000"; this._panelChanged = false; t.__super.call(this) } n(t, "laya.ui.ColorPicker", e); var i = t.prototype; i.destroy = function (t) { t === void 0 && (t = true); e.prototype.destroy.call(this, t); this._colorPanel && this._colorPanel.destroy(t); this._colorButton && this._colorButton.destroy(t); this._colorPanel = null; this._colorTiles = null; this._colorBlock = null; this._colorInput = null; this._colorButton = null; this._colors = null; this.changeHandler = null }; i.createChildren = function () { this.addChild(this._colorButton = new X); this._colorPanel = new Y; this._colorPanel.size(230, 166); this._colorPanel.addChild(this._colorTiles = new I); this._colorPanel.addChild(this._colorBlock = new I); this._colorPanel.addChild(this._colorInput = new b) }; i.initialize = function () { this._colorButton.on("click", this, this.onColorButtonClick); this._colorBlock.pos(5, 5); this._colorInput.pos(60, 5); this._colorInput.size(60, 20); this._colorInput.on("change", this, this.onColorInputChange); this._colorInput.on("keydown", this, this.onColorFieldKeyDown); this._colorTiles.pos(5, 30); this._colorTiles.on("mousemove", this, this.onColorTilesMouseMove); this._colorTiles.on("click", this, this.onColorTilesClick); this._colorTiles.size(20 * this._gridSize, 12 * this._gridSize); this._colorPanel.on("mousedown", this, this.onPanelMouseDown); this.bgColor = this._bgColor }; i.onPanelMouseDown = function (t) { t.stopPropagation() }; i.changePanel = function () { this._panelChanged = false; var t = this._colorPanel.graphics; t.clear(); t.drawRect(0, 0, 230, 166, this._bgColor, this._borderColor); this.drawBlock(this._selectedColor); this._colorInput.borderColor = this._borderColor; this._colorInput.bgColor = this._inputBgColor; this._colorInput.color = this._inputColor; t = this._colorTiles.graphics; t.clear(); var e = [0, 3355443, 6710886, 10066329, 13421772, 16777215, 16711680, 65280, 255, 16776960, 65535, 16711935]; for (var i = 0; i < 12; i++) { for (var r = 0; r < 20; r++) { var s = 0; if (r === 0) s = e[i]; else if (r === 1) s = 0; else s = (((i * 3 + r / 6) % 3 << 0) + (i / 6 << 0) * 3) * 51 << 16 | r % 6 * 51 << 8 | (i << 0) % 6 * 51; var n = O.toColor(s); this._colors.push(n); var a = r * this._gridSize; var o = i * this._gridSize; t.drawRect(a, o, this._gridSize, this._gridSize, n, "#000000") } } }; i.onColorButtonClick = function (t) { if (this._colorPanel.parent) this.close(); else this.open() }; i.open = function () { var t = this.localToGlobal(new S); var e = t.x + this._colorPanel.width <= p.stage.width ? t.x : p.stage.width - this._colorPanel.width; var i = t.y + this._colorButton.height; i = i + this._colorPanel.height <= p.stage.height ? i : t.y - this._colorPanel.height; this._colorPanel.pos(e, i); this._colorPanel.zOrder = 1001; p._currentStage.addChild(this._colorPanel); p.stage.on("mousedown", this, this.removeColorBox) }; i.close = function () { p.stage.off("mousedown", this, this.removeColorBox); this._colorPanel.removeSelf() }; i.removeColorBox = function (t) { this.close() }; i.onColorFieldKeyDown = function (t) { if (t.keyCode == 13) { if (this._colorInput.text) this.selectedColor = this._colorInput.text; else this.selectedColor = null; this.close(); t.stopPropagation() } }; i.onColorInputChange = function (t) { if (this._colorInput.text) this.drawBlock(this._colorInput.text); else this.drawBlock("#FFFFFF") }; i.onColorTilesClick = function (t) { this.selectedColor = this.getColorByMouse(); this.close() }; i.onColorTilesMouseMove = function (t) { this._colorInput.focus = false; var e = this.getColorByMouse(); this._colorInput.text = e; this.drawBlock(e) }; i.getColorByMouse = function () { var t = this._colorTiles.getMousePoint(); var e = Math.floor(t.x / this._gridSize); var i = Math.floor(t.y / this._gridSize); return this._colors[i * 20 + e] }; i.drawBlock = function (t) { var e = this._colorBlock.graphics; e.clear(); var i = t ? t : "#ffffff"; e.drawRect(0, 0, 50, 20, i, this._borderColor); t || e.drawLine(0, 0, 50, 20, "#ff0000") }; i.changeColor = function () { var t = this.graphics; t.clear(); var e = this._selectedColor || "#000000"; t.drawRect(0, 0, this._colorButton.width, this._colorButton.height, e) }; i._setPanelChanged = function () { if (!this._panelChanged) { this._panelChanged = true; this.callLater(this.changePanel) } }; s(0, i, "inputBgColor", function () { return this._inputBgColor }, function (t) { this._inputBgColor = t; this._setPanelChanged() }); s(0, i, "selectedColor", function () { return this._selectedColor }, function (t) { if (this._selectedColor != t) { this._selectedColor = this._colorInput.text = t; this.drawBlock(t); this.changeColor(); this.changeHandler && this.changeHandler.runWith(this._selectedColor); this.event("change", c.EMPTY.setTo("change", this, this)) } }); s(0, i, "skin", function () { return this._colorButton.skin }, function (t) { this._colorButton.skin = t; this.changeColor() }); s(0, i, "bgColor", function () { return this._bgColor }, function (t) { this._bgColor = t; this._setPanelChanged() }); s(0, i, "borderColor", function () { return this._borderColor }, function (t) { this._borderColor = t; this._setPanelChanged() }); s(0, i, "inputColor", function () { return this._inputColor }, function (t) { this._inputColor = t; this._setPanelChanged() }); return t }(V); var $ = function (e) { function i(t, e) { this._visibleNum = 6; this._button = null; this._list = null; this._isOpen = false; this._itemSize = 12; this._labels = []; this._selectedIndex = -1; this._selectHandler = null; this._itemHeight = NaN; this._listHeight = NaN; this._listChanged = false; this._itemChanged = false; this._scrollBarSkin = null; this._isCustomList = false; this.itemRender = null; i.__super.call(this); this._itemColors = F.comboBoxItemColors; this.skin = t; this.labels = e } n(i, "laya.ui.ComboBox", e); var t = i.prototype; t.destroy = function (t) { t === void 0 && (t = true); e.prototype.destroy.call(this, t); this._button && this._button.destroy(t); this._list && this._list.destroy(t); this._button = null; this._list = null; this._itemColors = null; this._labels = null; this._selectHandler = null }; t.createChildren = function () { this.addChild(this._button = new X); this._button.text.align = "left"; this._button.labelPadding = "0,0,0,5"; this._button.on("mousedown", this, this.onButtonMouseDown) }; t._createList = function () { this._list = new at; if (this._scrollBarSkin) this._list.vScrollBarSkin = this._scrollBarSkin; this._setListEvent(this._list) }; t._setListEvent = function (t) { this._list.selectEnable = true; this._list.on("mousedown", this, this.onListDown); this._list.mouseHandler = y.create(this, this.onlistItemMouse, null, false); if (this._list.scrollBar) this._list.scrollBar.on("mousedown", this, this.onScrollBarDown) }; t.onListDown = function (t) { t.stopPropagation() }; t.onScrollBarDown = function (t) { t.stopPropagation() }; t.onButtonMouseDown = function (t) { this.callLater(this.switchTo, [!this._isOpen]) }; t.changeList = function () { this._listChanged = false; var t = this.width - 2; var e = this._itemColors[2]; this._itemHeight = this._itemSize + 6; this._list.itemRender = this.itemRender || { type: "Box", child: [{ type: "Label", props: { name: "label", x: 1, padding: "3,3,3,3", width: t, height: this._itemHeight, fontSize: this._itemSize, color: e } }] }; this._list.repeatY = this._visibleNum; this._list.refresh() }; t.onlistItemMouse = function (t, e) { var i = t.type; if (i === "mouseover" || i === "mouseout") { if (this._isCustomList) return; var r = this._list.getCell(e); if (!r) return; var s = r.getChildByName("label"); if (s) { if (i === "mouseover") { s.bgColor = this._itemColors[0]; s.color = this._itemColors[1] } else { s.bgColor = null; s.color = this._itemColors[2] } } } else if (i === "click") { this.selectedIndex = e; this.isOpen = false } }; t.switchTo = function (t) { this.isOpen = t }; t.changeOpen = function () { this.isOpen = !this._isOpen }; t.changeItem = function () { this._itemChanged = false; this._listHeight = this._labels.length > 0 ? Math.min(this._visibleNum, this._labels.length) * this._itemHeight : this._itemHeight; if (!this._isCustomList) { var t = this._list.graphics; t.clear(); t.drawRect(0, 0, this.width - 1, this._listHeight, this._itemColors[4], this._itemColors[3]) } var e = this._list.array || []; e.length = 0; for (var i = 0, r = this._labels.length; i < r; i++) { e.push({ label: this._labels[i] }) } this._list.height = this._listHeight; this._list.array = e }; t.changeSelected = function () { this._button.label = this.selectedLabel }; t._onStageMouseWheel = function (t) { if (!this._list || this._list.contains(t.target)) return; this.removeList(null) }; t.removeList = function (t) { p.stage.off("mousedown", this, this.removeList); p.stage.off("mousewheel", this, this._onStageMouseWheel); this.isOpen = false }; s(0, t, "selectedIndex", function () { return this._selectedIndex }, function (t) { if (this._selectedIndex != t) { this._selectedIndex = t; if (this._labels.length > 0) this.changeSelected(); else this.callLater(this.changeSelected); this.event("change", [c.EMPTY.setTo("change", this, this)]); this._selectHandler && this._selectHandler.runWith(this._selectedIndex) } }); s(0, t, "measureHeight", function () { return this._button.height }); s(0, t, "skin", function () { return this._button.skin }, function (t) { if (this._button.skin != t) { this._button.skin = t; this._listChanged = true } }); s(0, t, "measureWidth", function () { return this._button.width }); s(0, t, "width", e.prototype._$get_width, function (t) { p.superSet(V, this, "width", t); this._button.width = this._width; this._itemChanged = true; this._listChanged = true }); s(0, t, "selectedLabel", function () { return this._selectedIndex > -1 && this._selectedIndex < this._labels.length ? this._labels[this._selectedIndex] : null }, function (t) { this.selectedIndex = this._labels.indexOf(t) }); s(0, t, "labels", function () { return this._labels.join(",") }, function (t) { if (this._labels.length > 0) this.selectedIndex = -1; if (t) this._labels = t.split(","); else this._labels.length = 0; this._itemChanged = true }); s(0, t, "height", e.prototype._$get_height, function (t) { p.superSet(V, this, "height", t); this._button.height = this._height }); s(0, t, "selectHandler", function () { return this._selectHandler }, function (t) { this._selectHandler = t }); s(0, t, "visibleNum", function () { return this._visibleNum }, function (t) { this._visibleNum = t; this._listChanged = true }); s(0, t, "labelBold", function () { return this._button.text.bold }, function (t) { this._button.text.bold = t }); s(0, t, "itemColors", function () { return String(this._itemColors) }, function (t) { this._itemColors = O.fillArray(this._itemColors, t, String); this._listChanged = true }); s(0, t, "itemSize", function () { return this._itemSize }, function (t) { this._itemSize = t; this._listChanged = true }); s(0, t, "scrollBar", function () { return this.list.scrollBar }); s(0, t, "isOpen", function () { return this._isOpen }, function (t) { if (this._isOpen != t) { this._isOpen = t; this._button.selected = this._isOpen; if (this._isOpen) { this._list || this._createList(); this._listChanged && !this._isCustomList && this.changeList(); this._itemChanged && this.changeItem(); var e = this.localToGlobal(S.TEMP.setTo(0, 0)); var i = e.y + this._button.height; i = i + this._listHeight <= p.stage.height ? i : e.y - this._listHeight; this._list.pos(e.x, i); this._list.zOrder = 1001; p._currentStage.addChild(this._list); p.stage.once("mousedown", this, this.removeList); p.stage.on("mousewheel", this, this._onStageMouseWheel); this._list.selectedIndex = this._selectedIndex } else { this._list && this._list.removeSelf() } } }); s(0, t, "scrollBarSkin", function () { return this._scrollBarSkin }, function (t) { this._scrollBarSkin = t }); s(0, t, "sizeGrid", function () { return this._button.sizeGrid }, function (t) { this._button.sizeGrid = t }); s(0, t, "button", function () { return this._button }); s(0, t, "list", function () { this._list || this._createList(); return this._list }, function (t) { if (t) { t.removeSelf(); this._isCustomList = true; this._list = t; this._setListEvent(t); this._itemHeight = t.getCell(0).height + t.spaceY } }); s(0, t, "dataSource", e.prototype._$get_dataSource, function (t) { this._dataSource = t; if (typeof t == "number" && Math.floor(t) == t || typeof t == "string") this.selectedIndex = parseInt(t); else if (t instanceof Array) this.labels = t.join(","); else p.superSet(V, this, "dataSource", t) }); s(0, t, "labelColors", function () { return this._button.labelColors }, function (t) { if (this._button.labelColors != t) { this._button.labelColors = t } }); s(0, t, "labelPadding", function () { return this._button.text.padding.join(",") }, function (t) { this._button.text.padding = O.fillArray(F.labelPadding, t, Number) }); s(0, t, "labelSize", function () { return this._button.text.fontSize }, function (t) { this._button.text.fontSize = t }); s(0, t, "labelFont", function () { return this._button.text.font }, function (t) { this._button.text.font = t }); s(0, t, "stateNum", function () { return this._button.stateNum }, function (t) { this._button.stateNum = t }); return i }(V); var q = function (e) { function i(t) { this.rollRatio = .95; this.changeHandler = null; this.scaleBar = true; this.autoHide = false; this.elasticDistance = 0; this.elasticBackTime = 500; this.upButton = null; this.downButton = null; this.slider = null; this._scrollSize = 1; this._skin = null; this._thumbPercent = 1; this._target = null; this._lastPoint = null; this._lastOffset = 0; this._checkElastic = false; this._isElastic = false; this._value = NaN; this._hide = false; this._clickOnly = true; this._offsets = null; i.__super.call(this); this._showButtons = z.showButtons; this._touchScrollEnable = z.touchScrollEnable; this._mouseWheelEnable = z.mouseWheelEnable; this.skin = t; this.max = 1 } n(i, "laya.ui.ScrollBar", e); var t = i.prototype; t.destroy = function (t) { t === void 0 && (t = true); this.stopScroll(); this.target = null; e.prototype.destroy.call(this, t); this.upButton && this.upButton.destroy(t); this.downButton && this.downButton.destroy(t); this.slider && this.slider.destroy(t); this.upButton = this.downButton = null; this.slider = null; this.changeHandler = null; this._offsets = null }; t.createChildren = function () { this.addChild(this.slider = new Z); this.addChild(this.upButton = new X); this.addChild(this.downButton = new X) }; t.initialize = function () { this.slider.showLabel = false; this.slider.on("change", this, this.onSliderChange); this.slider.setSlider(0, 0, 0); this.upButton.on("mousedown", this, this.onButtonMouseDown); this.downButton.on("mousedown", this, this.onButtonMouseDown) }; t.onSliderChange = function () { if (this._value != this.slider.value) this.value = this.slider.value }; t.onButtonMouseDown = function (t) { var e = t.currentTarget === this.upButton; this.slide(e); p.timer.once(F.scrollBarDelayTime, this, this.startLoop, [e]); p.stage.once("mouseup", this, this.onStageMouseUp) }; t.startLoop = function (t) { p.timer.frameLoop(1, this, this.slide, [t]) }; t.slide = function (t) { if (t) this.value -= this._scrollSize; else this.value += this._scrollSize }; t.onStageMouseUp = function (t) { p.timer.clear(this, this.startLoop); p.timer.clear(this, this.slide) }; t.changeScrollBar = function () { this.upButton.visible = this._showButtons; this.downButton.visible = this._showButtons; if (this._showButtons) { this.upButton.skin = this._skin.replace(".png", "$up.png"); this.downButton.skin = this._skin.replace(".png", "$down.png") } if (this.slider.isVertical) this.slider.y = this._showButtons ? this.upButton.height : 0; else this.slider.x = this._showButtons ? this.upButton.width : 0; this.resetPositions(); this.repaint() }; t.changeSize = function () { e.prototype.changeSize.call(this); this.repaint(); this.resetPositions(); this.event("change"); this.changeHandler && this.changeHandler.runWith(this.value) }; t.resetPositions = function () { if (this.slider.isVertical) this.slider.height = this.height - (this._showButtons ? this.upButton.height + this.downButton.height : 0); else this.slider.width = this.width - (this._showButtons ? this.upButton.width + this.downButton.width : 0); this.resetButtonPosition() }; t.resetButtonPosition = function () { if (this.slider.isVertical) this.downButton.y = this.slider.y + this.slider.height; else this.downButton.x = this.slider.x + this.slider.width }; t.setScroll = function (t, e, i) { this.runCallLater(this.changeSize); this.slider.setSlider(t, e, i); this.slider.bar.visible = e > 0; if (!this._hide && this.autoHide) this.visible = false }; t.onTargetMouseWheel = function (t) { this.value -= t.delta * this._scrollSize; this.target = this._target }; t.onTargetMouseDown = function (t) { this._clickOnly = true; this._lastOffset = 0; this._checkElastic = false; this._lastPoint || (this._lastPoint = new S); this._lastPoint.setTo(p.stage.mouseX, p.stage.mouseY); p.timer.clear(this, this.tweenMove); k.clearTween(this); p.stage.once("mouseup", this, this.onStageMouseUp2); p.stage.once("mouseout", this, this.onStageMouseUp2); p.timer.frameLoop(1, this, this.loop) }; t.loop = function () { var t = p.stage.mouseY; var e = p.stage.mouseX; this._lastOffset = this.isVertical ? t - this._lastPoint.y : e - this._lastPoint.x; if (this._clickOnly) { if (Math.abs(this._lastOffset * (this.isVertical ? p.stage._canvasTransform.getScaleY() : p.stage._canvasTransform.getScaleX())) > 1) { this._clickOnly = false; this._offsets || (this._offsets = []); this._offsets.length = 0; this._target.mouseEnabled = false; if (!this.hide && this.autoHide) { this.alpha = 1; this.visible = true } this.event("start") } else return } this._offsets.push(this._lastOffset); this._lastPoint.x = e; this._lastPoint.y = t; if (this._lastOffset === 0) return; if (!this._checkElastic) { if (this.elasticDistance > 0) { if (!this._checkElastic && this._lastOffset != 0) { if (this._lastOffset > 0 && this._value <= this.min || this._lastOffset < 0 && this._value >= this.max) { this._isElastic = true; this._checkElastic = true } else { this._isElastic = false } } } else { this._checkElastic = true } } if (this._isElastic) { if (this._value <= this.min) { this.value -= this._lastOffset * Math.max(0, 1 - (this.min - this._value) / this.elasticDistance) } else if (this._value >= this.max) { this.value -= this._lastOffset * Math.max(0, 1 - (this._value - this.max) / this.elasticDistance) } } else { this.value -= this._lastOffset } }; t.onStageMouseUp2 = function (t) { p.stage.off("mouseup", this, this.onStageMouseUp2); p.stage.off("mouseout", this, this.onStageMouseUp2); p.timer.clear(this, this.loop); if (this._clickOnly) { if (this._value >= this.min && this._value <= this.max) return } this._target.mouseEnabled = true; if (this._isElastic) { if (this._value < this.min) { k.to(this, { value: this.min }, this.elasticBackTime, u.sineOut, y.create(this, this.elasticOver)) } else if (this._value > this.max) { k.to(this, { value: this.max }, this.elasticBackTime, u.sineOut, y.create(this, this.elasticOver)) } } else { if (!this._offsets) return; if (this._offsets.length < 1) { this._offsets[0] = this.isVertical ? p.stage.mouseY - this._lastPoint.y : p.stage.mouseX - this._lastPoint.x } var e = 0; var i = Math.min(this._offsets.length, 3); for (var r = 0; r < i; r++) { e += this._offsets[this._offsets.length - 1 - r] } this._lastOffset = e / i; e = Math.abs(this._lastOffset); if (e < 2) { this.event("end"); return } if (e > 60) this._lastOffset = this._lastOffset > 0 ? 60 : -60; var s = Math.round(Math.abs(this.elasticDistance * (this._lastOffset / 240))); p.timer.frameLoop(1, this, this.tweenMove, [s]) } }; t.elasticOver = function () { this._isElastic = false; if (!this.hide && this.autoHide) { k.to(this, { alpha: 0 }, 500) } this.event("end") }; t.tweenMove = function (t) { this._lastOffset *= this.rollRatio; var e = NaN; if (t > 0) { if (this._lastOffset > 0 && this.value <= this.min) { this._isElastic = true; e = -(this.min - t - this.value) * .5; if (this._lastOffset > e) this._lastOffset = e } else if (this._lastOffset < 0 && this.value >= this.max) { this._isElastic = true; e = -(this.max + t - this.value) * .5; if (this._lastOffset < e) this._lastOffset = e } } this.value -= this._lastOffset; if (Math.abs(this._lastOffset) < 1) { p.timer.clear(this, this.tweenMove); if (this._isElastic) { if (this._value < this.min) { k.to(this, { value: this.min }, this.elasticBackTime, u.sineOut, y.create(this, this.elasticOver)) } else if (this._value > this.max) { k.to(this, { value: this.max }, this.elasticBackTime, u.sineOut, y.create(this, this.elasticOver)) } else { this.elasticOver() } return } this.event("end"); if (!this.hide && this.autoHide) { k.to(this, { alpha: 0 }, 500) } } }; t.stopScroll = function () { this.onStageMouseUp2(null); p.timer.clear(this, this.tweenMove); k.clearTween(this) }; s(0, t, "measureHeight", function () { if (this.slider.isVertical) return 100; return this.slider.height }); s(0, t, "skin", function () { return this._skin }, function (t) { if (this._skin != t) { this._skin = t; this.slider.skin = this._skin; this.callLater(this.changeScrollBar) } }); s(0, t, "max", function () { return this.slider.max }, function (t) { this.slider.max = t }); s(0, t, "showButtons", function () { return this._showButtons }, function (t) { this._showButtons = t; this.callLater(this.changeScrollBar) }); s(0, t, "measureWidth", function () { if (this.slider.isVertical) return this.slider.width; return 100 }); s(0, t, "min", function () { return this.slider.min }, function (t) { this.slider.min = t }); s(0, t, "value", function () { return this._value }, function (t) { if (t !== this._value) { this._value = t; if (!this._isElastic) { if (this.slider._value != t) { this.slider._value = t; this.slider.changeValue() } this._value = this.slider._value } this.event("change"); this.changeHandler && this.changeHandler.runWith(this._value) } }); s(0, t, "isVertical", function () { return this.slider.isVertical }, function (t) { this.slider.isVertical = t }); s(0, t, "sizeGrid", function () { return this.slider.sizeGrid }, function (t) { this.slider.sizeGrid = t }); s(0, t, "scrollSize", function () { return this._scrollSize }, function (t) { this._scrollSize = t }); s(0, t, "dataSource", e.prototype._$get_dataSource, function (t) { this._dataSource = t; if (typeof t == "number" || typeof t == "string") this.value = Number(t); else p.superSet(V, this, "dataSource", t) }); s(0, t, "thumbPercent", function () { return this._thumbPercent }, function (t) { this.runCallLater(this.changeScrollBar); this.runCallLater(this.changeSize); t = t >= 1 ? .99 : t; this._thumbPercent = t; if (this.scaleBar) { if (this.slider.isVertical) this.slider.bar.height = Math.max(this.slider.height * t, F.scrollBarMinNum); else this.slider.bar.width = Math.max(this.slider.width * t, F.scrollBarMinNum) } }); s(0, t, "target", function () { return this._target }, function (t) { if (this._target) { this._target.off("mousewheel", this, this.onTargetMouseWheel); this._target.off("mousedown", this, this.onTargetMouseDown) } this._target = t; if (t) { this._mouseWheelEnable && this._target.on("mousewheel", this, this.onTargetMouseWheel); this._touchScrollEnable && this._target.on("mousedown", this, this.onTargetMouseDown) } }); s(0, t, "hide", function () { return this._hide }, function (t) { this._hide = t; this.visible = !t }); s(0, t, "touchScrollEnable", function () { return this._touchScrollEnable }, function (t) { this._touchScrollEnable = t; this.target = this._target }); s(0, t, "mouseWheelEnable", function () { return this._mouseWheelEnable }, function (t) { this._mouseWheelEnable = t; this.target = this._target }); s(0, t, "tick", function () { return this.slider.tick }, function (t) { this.slider.tick = t }); return i }(V); var Z = function (e) { function i(t) { this.changeHandler = null; this.isVertical = true; this.showLabel = true; this._allowClickBack = false; this._max = 100; this._min = 0; this._tick = 1; this._value = 0; this._skin = null; this._bg = null; this._progress = null; this._bar = null; this._tx = NaN; this._ty = NaN; this._maxMove = NaN; this._globalSacle = null; i.__super.call(this); this.skin = t } n(i, "laya.ui.Slider", e); var t = i.prototype; t.destroy = function (t) { t === void 0 && (t = true); e.prototype.destroy.call(this, t); this._bg && this._bg.destroy(t); this._bar && this._bar.destroy(t); this._progress && this._progress.destroy(t); this._bg = null; this._bar = null; this._progress = null; this.changeHandler = null }; t.createChildren = function () { this.addChild(this._bg = new G); this.addChild(this._bar = new X) }; t.initialize = function () { this._bar.on("mousedown", this, this.onBarMouseDown); this._bg.sizeGrid = this._bar.sizeGrid = "4,4,4,4,0"; if (this._progress) this._progress.sizeGrid = this._bar.sizeGrid; this.allowClickBack = true }; t.onBarMouseDown = function (t) { this._globalSacle || (this._globalSacle = new S); this._globalSacle.setTo(this.globalScaleX || .01, this.globalScaleY || .01); this._maxMove = this.isVertical ? this.height - this._bar.height : this.width - this._bar.width; this._tx = p.stage.mouseX; this._ty = p.stage.mouseY; p.stage.on("mousemove", this, this.mouseMove); p.stage.once("mouseup", this, this.mouseUp); p.stage.once("mouseout", this, this.mouseUp); this.showValueText() }; t.showValueText = function () { if (this.showLabel) { var t = laya.ui.Slider.label; this.addChild(t); t.textField.changeText(this._value + ""); if (this.isVertical) { t.x = this._bar.x + 20; t.y = (this._bar.height - t.height) * .5 + this._bar.y } else { t.y = this._bar.y - 20; t.x = (this._bar.width - t.width) * .5 + this._bar.x } } }; t.hideValueText = function () { laya.ui.Slider.label && laya.ui.Slider.label.removeSelf() }; t.mouseUp = function (t) { p.stage.off("mousemove", this, this.mouseMove); p.stage.off("mouseup", this, this.mouseUp); p.stage.off("mouseout", this, this.mouseUp); this.sendChangeEvent("changed"); this.hideValueText() }; t.mouseMove = function (t) { var e = this._value; if (this.isVertical) { this._bar.y += (p.stage.mouseY - this._ty) / this._globalSacle.y; if (this._bar.y > this._maxMove) this._bar.y = this._maxMove; else if (this._bar.y < 0) this._bar.y = 0; this._value = this._bar.y / this._maxMove * (this._max - this._min) + this._min; if (this._progress) this._progress.height = this._bar.y + .5 * this._bar.height } else { this._bar.x += (p.stage.mouseX - this._tx) / this._globalSacle.x; if (this._bar.x > this._maxMove) this._bar.x = this._maxMove; else if (this._bar.x < 0) this._bar.x = 0; this._value = this._bar.x / this._maxMove * (this._max - this._min) + this._min; if (this._progress) this._progress.width = this._bar.x + .5 * this._bar.width } this._tx = p.stage.mouseX; this._ty = p.stage.mouseY; var i = Math.pow(10, (this._tick + "").length - 1); this._value = Math.round(Math.round(this._value / this._tick) * this._tick * i) / i; if (this._value != e) { this.sendChangeEvent() } this.showValueText() }; t.sendChangeEvent = function (t) { t === void 0 && (t = "change"); this.event(t); this.changeHandler && this.changeHandler.runWith(this._value) }; t.setBarPoint = function () { if (this.isVertical) this._bar.x = Math.round((this._bg.width - this._bar.width) * .5); else this._bar.y = Math.round((this._bg.height - this._bar.height) * .5) }; t.changeSize = function () { e.prototype.changeSize.call(this); if (this.isVertical) this._bg.height = this.height; else this._bg.width = this.width; this.setBarPoint(); this.changeValue() }; t.setSlider = function (t, e, i) { this._value = -1; this._min = t; this._max = e > t ? e : t; this.value = i < t ? t : i > e ? e : i }; t.changeValue = function () { var t = Math.pow(10, (this._tick + "").length - 1); this._value = Math.round(Math.round(this._value / this._tick) * this._tick * t) / t; this._value = this._value > this._max ? this._max : this._value < this._min ? this._min : this._value; var e = this._max - this._min; if (e === 0) e = 1; if (this.isVertical) { this._bar.y = (this._value - this._min) / e * (this.height - this._bar.height); if (this._progress) this._progress.height = this._bar.y + .5 * this._bar.height } else { this._bar.x = (this._value - this._min) / e * (this.width - this._bar.width); if (this._progress) this._progress.width = this._bar.x + .5 * this._bar.width } }; t.onBgMouseDown = function (t) { var e = this._bg.getMousePoint(); if (this.isVertical) this.value = e.y / (this.height - this._bar.height) * (this._max - this._min) + this._min; else this.value = e.x / (this.width - this._bar.width) * (this._max - this._min) + this._min }; s(0, t, "measureHeight", function () { return Math.max(this._bg.height, this._bar.height) }); s(0, t, "skin", function () { return this._skin }, function (t) { if (this._skin != t) { this._skin = t; this._bg.skin = this._skin; this._bar.skin = this._skin.replace(".png", "$bar.png"); var e = this._skin.replace(".png", "$progress.png"); if (w.getRes(e)) { if (!this._progress) { this.addChild(this._progress = new G); this._progress.sizeGrid = this._bar.sizeGrid; this.setChildIndex(this._progress, 1) } this._progress.skin = e } this.setBarPoint(); this.callLater(this.changeValue) } }); s(0, t, "allowClickBack", function () { return this._allowClickBack }, function (t) { if (this._allowClickBack != t) { this._allowClickBack = t; if (t) this._bg.on("mousedown", this, this.onBgMouseDown); else this._bg.off("mousedown", this, this.onBgMouseDown) } }); s(0, t, "max", function () { return this._max }, function (t) { if (this._max != t) { this._max = t; this.callLater(this.changeValue) } }); s(0, t, "measureWidth", function () { return Math.max(this._bg.width, this._bar.width) }); s(0, t, "tick", function () { return this._tick }, function (t) { if (this._tick != t) { this._tick = t; this.callLater(this.changeValue) } }); s(0, t, "sizeGrid", function () { return this._bg.sizeGrid }, function (t) { this._bg.sizeGrid = t; this._bar.sizeGrid = t; if (this._progress) this._progress.sizeGrid = this._bar.sizeGrid }); s(0, t, "min", function () { return this._min }, function (t) { if (this._min != t) { this._min = t; this.callLater(this.changeValue) } }); s(0, t, "value", function () { return this._value }, function (t) { if (this._value != t) { var e = this._value; this._value = t; this.changeValue(); if (this._value != e) { this.sendChangeEvent() } } }); s(0, t, "dataSource", e.prototype._$get_dataSource, function (t) { this._dataSource = t; if (typeof t == "number" || typeof t == "string") this.value = Number(t); else p.superSet(V, this, "dataSource", t) }); s(0, t, "bar", function () { return this._bar }); r(i, ["label", function () { return this.label = new Q }]); return i }(V); var Q = function (e) { function i(t) { this._tf = null; i.__super.call(this); t === void 0 && (t = ""); d.defaultColor = F.labelColor; this.text = t } n(i, "laya.ui.Label", e); var t = i.prototype; t.destroy = function (t) { t === void 0 && (t = true); e.prototype.destroy.call(this, t); this._tf = null }; t.createChildren = function () { this.addChild(this._tf = new R) }; t.changeText = function (t) { this._tf.changeText(t) }; s(0, t, "padding", function () { return this._tf.padding.join(",") }, function (t) { this._tf.padding = O.fillArray(F.labelPadding, t, Number) }); s(0, t, "bold", function () { return this._tf.bold }, function (t) { this._tf.bold = t }); s(0, t, "align", function () { return this._tf.align }, function (t) { this._tf.align = t }); s(0, t, "text", function () { return this._tf.text }, function (t) { if (this._tf.text != t) { if (t) t = O.adptString(t + ""); this._tf.text = t; this.event("change"); if (!this._width || !this._height) this.onCompResize() } }); s(0, t, "italic", function () { return this._tf.italic }, function (t) { this._tf.italic = t }); s(0, t, "wordWrap", function () { return this._tf.wordWrap }, function (t) { this._tf.wordWrap = t }); s(0, t, "font", function () { return this._tf.font }, function (t) { this._tf.font = t }); s(0, t, "dataSource", e.prototype._$get_dataSource, function (t) { this._dataSource = t; if (typeof t == "number" || typeof t == "string") this.text = t + ""; else p.superSet(V, this, "dataSource", t) }); s(0, t, "color", function () { return this._tf.color }, function (t) { this._tf.color = t }); s(0, t, "valign", function () { return this._tf.valign }, function (t) { this._tf.valign = t }); s(0, t, "leading", function () { return this._tf.leading }, function (t) { this._tf.leading = t }); s(0, t, "fontSize", function () { return this._tf.fontSize }, function (t) { this._tf.fontSize = t }); s(0, t, "bgColor", function () { return this._tf.bgColor }, function (t) { this._tf.bgColor = t }); s(0, t, "borderColor", function () { return this._tf.borderColor }, function (t) { this._tf.borderColor = t }); s(0, t, "stroke", function () { return this._tf.stroke }, function (t) { this._tf.stroke = t }); s(0, t, "strokeColor", function () { return this._tf.strokeColor }, function (t) { this._tf.strokeColor = t }); s(0, t, "textField", function () { return this._tf }); s(0, t, "measureWidth", function () { return this._tf.width }); s(0, t, "measureHeight", function () { return this._tf.height }); s(0, t, "width", function () { if (this._width || this._tf.text) return p.superGet(V, this, "width"); return 0 }, function (t) { p.superSet(V, this, "width", t); this._tf.width = t }); s(0, t, "height", function () { if (this._height || this._tf.text) return p.superGet(V, this, "height"); return 0 }, function (t) { p.superSet(V, this, "height", t); this._tf.height = t }); s(0, t, "overflow", function () { return this._tf.overflow }, function (t) { this._tf.overflow = t }); s(0, t, "underline", function () { return this._tf.underline }, function (t) { this._tf.underline = t }); s(0, t, "underlineColor", function () { return this._tf.underlineColor }, function (t) { this._tf.underlineColor = t }); return i }(V); var J = function (e) { function i(t) { this.changeHandler = null; this._bg = null; this._bar = null; this._skin = null; this._value = .5; i.__super.call(this); this.skin = t } n(i, "laya.ui.ProgressBar", e); var t = i.prototype; t.destroy = function (t) { t === void 0 && (t = true); e.prototype.destroy.call(this, t); this._bg && this._bg.destroy(t); this._bar && this._bar.destroy(t); this._bg = this._bar = null; this.changeHandler = null }; t.createChildren = function () { this.addChild(this._bg = new G); this.addChild(this._bar = new G); this._bar._bitmap.autoCacheCmd = false }; t.changeValue = function () { if (this.sizeGrid) { var t = this.sizeGrid.split(","); var e = Number(t[3]); var i = Number(t[1]); var r = this.width - e - i; var s = r * this._value; this._bar.width = e + i + s; this._bar.visible = this._bar.width > e + i } else { this._bar.width = this.width * this._value } }; s(0, t, "measureHeight", function () { return this._bg.height }); s(0, t, "skin", function () { return this._skin }, function (t) { if (this._skin != t) { this._skin = t; this._bg.skin = this._skin; this._bar.skin = this._skin.replace(".png", "$bar.png"); this.callLater(this.changeValue) } }); s(0, t, "measureWidth", function () { return this._bg.width }); s(0, t, "height", e.prototype._$get_height, function (t) { p.superSet(V, this, "height", t); this._bg.height = this._height; this._bar.height = this._height }); s(0, t, "bar", function () { return this._bar }); s(0, t, "value", function () { return this._value }, function (t) { if (this._value != t) { t = t > 1 ? 1 : t < 0 ? 0 : t; this._value = t; this.callLater(this.changeValue); this.event("change"); this.changeHandler && this.changeHandler.runWith(t) } }); s(0, t, "bg", function () { return this._bg }); s(0, t, "sizeGrid", function () { return this._bg.sizeGrid }, function (t) { this._bg.sizeGrid = this._bar.sizeGrid = t }); s(0, t, "width", e.prototype._$get_width, function (t) { p.superSet(V, this, "width", t); this._bg.width = this._width; this.callLater(this.changeValue) }); s(0, t, "dataSource", e.prototype._$get_dataSource, function (t) { this._dataSource = t; if (typeof t == "number" || typeof t == "string") this.value = Number(t); else p.superSet(V, this, "dataSource", t) }); return i }(V); var tt = function (t) { function i() { this._tipBox = null; this._tipText = null; this._defaultTipHandler = null; i.__super.call(this); this._tipBox = new V; this._tipBox.addChild(this._tipText = new R); this._tipText.x = this._tipText.y = 5; this._tipText.color = i.tipTextColor; this._defaultTipHandler = this._showDefaultTip; p.stage.on("showtip", this, this._onStageShowTip); p.stage.on("hidetip", this, this._onStageHideTip); this.zOrder = 1100 } n(i, "laya.ui.TipManager", t); var e = i.prototype; e._onStageHideTip = function (t) { p.timer.clear(this, this._showTip); this.closeAll(); this.removeSelf() }; e._onStageShowTip = function (t) { p.timer.once(i.tipDelay, this, this._showTip, [t], true) }; e._showTip = function (t) { if (typeof t == "string") { var e = String(t); if (Boolean(e)) { this._defaultTipHandler(e) } } else if (t instanceof laya.utils.Handler) { t.run() } else if (typeof t == "function") { t.apply() } if (true) { p.stage.on("mousemove", this, this._onStageMouseMove); p.stage.on("mousedown", this, this._onStageMouseDown) } this._onStageMouseMove(null) }; e._onStageMouseDown = function (t) { this.closeAll() }; e._onStageMouseMove = function (t) { this._showToStage(this, i.offsetX, i.offsetY) }; e._showToStage = function (t, e, i) { e === void 0 && (e = 0); i === void 0 && (i = 0); var r = t.getBounds(); t.x = p.stage.mouseX + e; t.y = p.stage.mouseY + i; if (t.x + r.width > p.stage.width) { t.x -= r.width + e } if (t.y + r.height > p.stage.height) { t.y -= r.height + i } }; e.closeAll = function () { p.timer.clear(this, this._showTip); p.stage.off("mousemove", this, this._onStageMouseMove); p.stage.off("mousedown", this, this._onStageMouseDown); this.removeChildren() }; e.showDislayTip = function (t) { this.addChild(t); this._showToStage(this); p._currentStage.addChild(this) }; e._showDefaultTip = function (t) { this._tipText.text = t; var e = this._tipBox.graphics; e.clear(); e.drawRect(0, 0, this._tipText.width + 10, this._tipText.height + 10, i.tipBackColor); this.addChild(this._tipBox); this._showToStage(this); p._currentStage.addChild(this) }; s(0, e, "defaultTipHandler", function () { return this._defaultTipHandler }, function (t) { this._defaultTipHandler = t }); i.offsetX = 10; i.offsetY = 15; i.tipTextColor = "#ffffff"; i.tipBackColor = "#111111"; i.tipDelay = 200; return i }(V); var et = function (e) { function i(t) { this.advsListArr = []; this.resUrl = "https://unioncdn.layabox.com/config/iconlist.json"; this._data = []; this._resquestTime = 36e4; this._appid = null; this._appCodeImgStr = null; this._playIndex = 0; this._lunboTime = 5e3; i.__super.call(this); this._http = new f.window.XMLHttpRequest; this.skin = t; this.init(); this.size(120, 120) } n(i, "laya.ui.AdvImage", e); var t = i.prototype; t.init = function () { if (f.onMiniGame && this.isSupportJump) { p.timer.loop(this._resquestTime, this, this.onGetAdvsListData); this.onGetAdvsListData(); this.initEvent() } else { this.visible = false } }; t.initEvent = function () { this.on("click", this, this.onAdvsImgClick) }; t.onAdvsImgClick = function () { var t = this.getCurrentAppidObj(); if (t) this.jumptoGame() }; t.revertAdvsData = function () { if (this.advsListArr[this._playIndex]) { this.visible = true; this.skin = this.advsListArr[this._playIndex] } }; t.jumptoGame = function () { var e = this; if (!f.onMiniGame) return; if (this.isSupportJump) { wx.navigateToMiniProgram({ appId: this._appid, path: "", extraData: "", envVersion: "release", success: function t() { console.log("-------------跳转成功--------------") }, fail: function t() { console.log("-------------跳转失败--------------") }, complete: function t() { console.log("-------------跳转接口调用成功--------------"); e.updateAdvsInfo() }.bind(this) }) } }; t.updateAdvsInfo = function () { this.visible = false; this.onLunbo(); p.timer.loop(this._lunboTime, this, this.onLunbo) }; t.onLunbo = function () { if (this._playIndex >= this.advsListArr.length - 1) this._playIndex = 0; else this._playIndex += 1; this.visible = true; this.revertAdvsData() }; t.getCurrentAppidObj = function () { return this.advsListArr[this._playIndex] }; t.onGetAdvsListData = function () { var e = this; var t = this.randRange(1e4, 1e6); var i = this.resUrl + "?" + t; this._http.open("get", i, true); this._http.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"); this._http.responseType = "text"; this._http.onerror = function (t) { e._onError(t) }; this._http.onload = function (t) { e._onLoad(t) }; this._http.send(null) }; t.randRange = function (t, e) { return Math.floor(Math.random() * (e - t + 1)) + t }; t._onError = function (t) { this.error("Request failed Status:" + this._http.status + " text:" + this._http.statusText) }; t._onLoad = function (t) { var e = this._http; var i = e.status !== undefined ? e.status : 200; if (i === 200 || i === 204 || i === 0) { this.complete() } else { this.error("[" + e.status + "]" + e.statusText + ":" + e.responseURL) } }; t.error = function (t) { this.event("error", t) }; t.complete = function () { var e = true; try { this._data = this._http.response || this._http.responseText; this._data = JSON.parse(this._data); this.advsListArr = this._data.list; this._appid = this._data.appid; this._appCodeImgStr = this._data.qrcode; this.updateAdvsInfo(); this.revertAdvsData() } catch (t) { e = false; this.error(t.message) } }; t.clear = function () { var t = this._http; t.onerror = t.onabort = t.onprogress = t.onload = null }; t.destroy = function (t) { t === void 0 && (t = true); e.prototype.destroy.call(this, true); p.timer.clear(this, this.onLunbo); p.timer.clear(this, this.onGetAdvsListData); this.clear() }; s(0, t, "isSupportJump", function () { if (f.onMiniGame) { var t = typeof wx.navigateToMiniProgram == "function"; return t } return false }); return i }(G); var it = function (t) { var _; function d() { this._idMap = null; this._aniList = null; this._watchMap = {}; d.__super.call(this) } n(d, "laya.ui.View", t); var e = d.prototype; e.createView = function (t) { if (t.animations && !this._idMap) this._idMap = {}; d.createComp(t, this, this); if (t.animations) { var e = []; var i = t.animations; var r = 0, s = i.length; var n; var a; for (r = 0; r < s; r++) { n = new m; a = i[r]; n._setUp(this._idMap, a); this[a.name] = n; n._setControlNode(this); switch (a.action) { case 1: n.play(0, false); break; case 2: n.play(0, true); break }e.push(n) } this._aniList = e } if (this._width > 0 && t.props.hitTestPrior == null && !this.mouseThrough) this.hitTestPrior = true }; e.onEvent = function (t, e) { }; e.loadUI = function (t) { var e = d.uiMap[t]; e && this.createView(e) }; e.destroy = function (t) { t === void 0 && (t = true); if (this._aniList) this._aniList.length = 0; this._idMap = null; this._aniList = null; this._watchMap = null; laya.ui.Component.prototype.destroy.call(this, t) }; e.changeData = function (t) { var e = this._watchMap[t]; if (!e) return; console.log("change", t); for (var i = 0, r = e.length; i < r; i++) { var s = e[i]; s.exe(this) } }; d._regs = function () { for (var t in d.uiClassMap) { v.regClass(t, d.uiClassMap[t]) } }; d.createComp = function (t, e, i, r) { e = e || d.getCompInstance(t); if (!e) { console.warn("can not create:" + t.type); return null } var s = t.child; if (s) { var n = e instanceof laya.ui.List; for (var a = 0, o = s.length; a < o; a++) { var h = s[a]; if (e.hasOwnProperty("itemRender") && (h.props.name == "render" || h.props.renderType === "render")) { e.itemRender = h } else if (h.type == "Graphic") { v.addGraphicsToSprite(h, e) } else if (v.isDrawType(h.type)) { v.addGraphicToSprite(h, e, true) } else { if (n) { var l = []; var u = d.createComp(h, null, i, l); if (l.length) u["_$bindData"] = l } else { u = d.createComp(h, null, i, r) } if (h.type == "Script") { if ("owner" in u) { u["owner"] = e } else if ("target" in u) { u["target"] = e } } else if (h.props.renderType == "mask" || h.props.name == "mask") { e.mask = u } else { u instanceof laya.display.Sprite && e.addChild(u) } } } } var c = t.props; for (var f in c) { var _ = c[f]; if (d.eventDic[f]) { if (_ && i) { e.on(f, i, i.onEvent, [_]) } } else d.setCompValue(e, f, _, i, r) } if (p.__typeof(e, "laya.ui.IItem")) e.initItems(); if (t.compId && i && i._idMap) { i._idMap[t.compId] = e } return e }; d.setCompValue = function (t, e, i, r, s) { if (typeof i == "string" && i.indexOf("${") > -1) { d._sheet || (d._sheet = v.getClass("laya.data.Table")); if (!d._sheet) { console.warn("Can not find class Sheet"); return } if (s) { s.push(t, e, i) } else if (r) { if (i.indexOf("].") == -1) { i = i.replace(".", "[0].") } var n = new _(t, e, i); n.exe(r); var a, o; var h = i.replace(/\[.*?\]\./g, "."); while ((a = d._parseWatchData.exec(h)) != null) { var l = a[1]; while ((o = d._parseKeyWord.exec(l)) != null) { var u = o[0]; var c = r._watchMap[u] || (r._watchMap[u] = []); c.push(n); d._sheet.I.notifer.on(u, r, r.changeData, [u]) } c = r._watchMap[l] || (r._watchMap[l] = []); c.push(n); d._sheet.I.notifer.on(l, r, r.changeData, [l]) } } return } if (e === "var" && r) { r[i] = t } else if (e == "onClick") { var f = p._runScript("(function(){" + i + "})"); t.on("click", r, f) } else { t[e] = i === "true" ? true : i === "false" ? false : i } }; d.getCompInstance = function (t) { var e = t.props ? t.props.runtime : null; var i; i = e ? d.viewClassMap[e] || d.uiClassMap[e] || p["__classmap"][e] : d.uiClassMap[t.type]; if (t.props && t.props.hasOwnProperty("renderType") && t.props["renderType"] == "instance") return i["instance"]; return i ? new i : null }; d.regComponent = function (t, e) { d.uiClassMap[t] = e; v.regClass(t, e) }; d.regViewRuntime = function (t, e) { d.viewClassMap[t] = e }; d.uiMap = {}; d.viewClassMap = {}; d._sheet = null; r(d, ["uiClassMap", function () { return this.uiClassMap = { ViewStack: _t, LinkButton: X, TextArea: Tt, ColorPicker: K, Box: Y, Button: X, CheckBox: rt, Clip: j, ComboBox: $, Component: V, HScrollBar: ot, HSlider: lt, Image: G, Label: Q, List: at, Panel: ht, ProgressBar: J, Radio: ct, RadioGroup: bt, ScrollBar: q, Slider: Z, Tab: wt, TextInput: pt, View: d, VScrollBar: dt, VSlider: vt, Tree: ft, HBox: gt, VBox: xt, Sprite: I, Animation: h, Text: R, FontClip: nt } }, "eventDic", function () { return this.eventDic = { mousedown: true, mouseup: true, mousemove: true, mouseover: true, mouseout: true, click: true, doubleclick: true, rightmousedown: true, rightmouseup: true, rightclick: true } }, "_parseWatchData", function () { return this._parseWatchData = /\${(.*?)}/g }, "_parseKeyWord", function () { return this._parseKeyWord = /[a-zA-Z_][a-zA-Z0-9_]*(?:(?:\.[a-zA-Z_][a-zA-Z0-9_]*)+)/g }]); d.__init$ = function () { d._regs(); _ = function () { function t(t, e, i) { this.comp = null; this.prop = null; this.value = null; this.comp = t; this.prop = e; this.value = i } n(t, ""); var e = t.prototype; e.exe = function (t) { var e = O.getBindFun(this.value); this.comp[this.prop] = e.call(this, t) }; return t }() }; return d }(Y); var rt = function (t) { function i(t, e) { e === void 0 && (e = ""); i.__super.call(this, t, e) } n(i, "laya.ui.CheckBox", t); var e = i.prototype; e.preinitialize = function () { laya.ui.Component.prototype.preinitialize.call(this); this.toggle = true; this._autoSize = false }; e.initialize = function () { t.prototype.initialize.call(this); this.createText(); this._text.align = "left"; this._text.valign = "top"; this._text.width = 0 }; s(0, e, "dataSource", t.prototype._$get_dataSource, function (t) { this._dataSource = t; if (typeof t == "boolean") this.selected = t; else if (typeof t == "string") this.selected = t === "true"; else p.superSet(X, this, "dataSource", t) }); return i }(X); var st = function (t) { function e() { this._space = 0; this._align = "none"; this._itemChanged = false; e.__super.call(this) } n(e, "laya.ui.LayoutBox", t); var i = e.prototype; i.addChild = function (t) { t.on("resize", this, this.onResize); this._setItemChanged(); return laya.display.Node.prototype.addChild.call(this, t) }; i.onResize = function (t) { this._setItemChanged() }; i.addChildAt = function (t, e) { t.on("resize", this, this.onResize); this._setItemChanged(); return laya.display.Node.prototype.addChildAt.call(this, t, e) }; i.removeChildAt = function (t) { this.getChildAt(t).off("resize", this, this.onResize); this._setItemChanged(); return laya.display.Node.prototype.removeChildAt.call(this, t) }; i.refresh = function () { this._setItemChanged() }; i.changeItems = function () { this._itemChanged = false }; i.sortItem = function (t) { if (t) t.sort(function (t, e) { return t.y - e.y }) }; i._setItemChanged = function () { if (!this._itemChanged) { this._itemChanged = true; this.callLater(this.changeItems) } }; s(0, i, "space", function () { return this._space }, function (t) { this._space = t; this._setItemChanged() }); s(0, i, "align", function () { return this._align }, function (t) { this._align = t; this._setItemChanged() }); return e }(Y); var nt = function (e) { function i(t, e) { this._valueArr = null; this._indexMap = null; this._sheet = null; this._direction = "horizontal"; this._spaceX = 0; this._spaceY = 0; this._align = "left"; this._wordsW = 0; this._wordsH = 0; i.__super.call(this); if (t) this.skin = t; if (e) this.sheet = e } n(i, "laya.ui.FontClip", e); var t = i.prototype; t.createChildren = function () { this._bitmap = new U; this.on("loaded", this, this._onClipLoaded) }; t._onClipLoaded = function () { this.callLater(this.changeValue) }; t.changeValue = function () { if (!this._sources) return; if (!this._valueArr) return; this.graphics.clear(true); var t; t = this._sources[0]; if (!t) return; var e = this._direction === "horizontal"; if (e) { this._wordsW = this._valueArr.length * (t.sourceWidth + this.spaceX); this._wordsH = t.sourceHeight } else { this._wordsW = t.sourceWidth; this._wordsH = (t.sourceHeight + this.spaceY) * this._valueArr.length } var i = 0; if (this._width) { switch (this._align) { case "center": i = .5 * (this._width - this._wordsW); break; case "right": i = this._width - this._wordsW; break; default: i = 0 } } for (var r = 0, s = this._valueArr.length; r < s; r++) { var n = this._indexMap[this._valueArr.charAt(r)]; if (!this.sources[n]) continue; t = this.sources[n]; if (e) this.graphics.drawTexture(t, i + r * (t.sourceWidth + this.spaceX), 0, t.sourceWidth, t.sourceHeight); else this.graphics.drawTexture(t, 0 + i, r * (t.sourceHeight + this.spaceY), t.sourceWidth, t.sourceHeight) } if (!this._width) { this.resetLayoutX(); this.callLater(this.changeSize) } if (!this._height) { this.resetLayoutY(); this.callLater(this.changeSize) } }; t.destroy = function (t) { t === void 0 && (t = true); this._valueArr = null; this._indexMap = null; this.graphics.clear(true); this.removeSelf(); this.off("loaded", this, this._onClipLoaded); e.prototype.destroy.call(this, t) }; s(0, t, "sheet", function () { return this._sheet }, function (t) { t += ""; this._sheet = t; var e = t.split(" "); this._clipX = String(e[0]).length; this.clipY = e.length; this._indexMap = {}; for (var i = 0; i < this._clipY; i++) { var r = e[i].split(""); for (var s = 0, n = r.length; s < n; s++) { this._indexMap[r[s]] = i * this._clipX + s } } }); s(0, t, "height", e.prototype._$get_height, function (t) { p.superSet(j, this, "height", t); this.callLater(this.changeValue) }); s(0, t, "direction", function () { return this._direction }, function (t) { this._direction = t; this.callLater(this.changeValue) }); s(0, t, "value", function () { if (!this._valueArr) return ""; return this._valueArr }, function (t) { t += ""; this._valueArr = t; this.callLater(this.changeValue) }); s(0, t, "width", e.prototype._$get_width, function (t) { p.superSet(j, this, "width", t); this.callLater(this.changeValue) }); s(0, t, "spaceX", function () { return this._spaceX }, function (t) { this._spaceX = t; if (this._direction === "horizontal") this.callLater(this.changeValue) }); s(0, t, "spaceY", function () { return this._spaceY }, function (t) { this._spaceY = t; if (!(this._direction === "horizontal")) this.callLater(this.changeValue) }); s(0, t, "align", function () { return this._align }, function (t) { this._align = t; this.callLater(this.changeValue) }); s(0, t, "measureWidth", function () { return this._wordsW }); s(0, t, "measureHeight", function () { return this._wordsH }); return i }(j); var at = function (t) { function e() { this.selectHandler = null; this.renderHandler = null; this.mouseHandler = null; this.selectEnable = false; this.totalPage = 0; this._content = null; this._scrollBar = null; this._itemRender = null; this._repeatX = 0; this._repeatY = 0; this._repeatX2 = 0; this._repeatY2 = 0; this._spaceX = 0; this._spaceY = 0; this._array = null; this._startIndex = 0; this._selectedIndex = -1; this._page = 0; this._isVertical = true; this._cellSize = 20; this._cellOffset = 0; this._isMoved = false; this.cacheContent = false; this._createdLine = 0; this._cellChanged = false; this._cells = []; this._offset = new S; e.__super.call(this) } n(e, "laya.ui.List", t); var i = e.prototype; p.imps(i, { "laya.ui.IRender": true, "laya.ui.IItem": true }); i.destroy = function (t) { t === void 0 && (t = true); this._content && this._content.destroy(t); this._scrollBar && this._scrollBar.destroy(t); laya.ui.Component.prototype.destroy.call(this, t); this._content = null; this._scrollBar = null; this._itemRender = null; this._cells = null; this._array = null; this.selectHandler = this.renderHandler = this.mouseHandler = null }; i.createChildren = function () { this.addChild(this._content = new Y) }; i.onScrollStart = function () { this._$P.cacheAs || (this._$P.cacheAs = p.superGet(Y, this, "cacheAs")); p.superSet(Y, this, "cacheAs", "none"); this._scrollBar.once("end", this, this.onScrollEnd) }; i.onScrollEnd = function () { p.superSet(Y, this, "cacheAs", this._$P.cacheAs) }; i._removePreScrollBar = function () { var t = this.removeChildByName("scrollBar"); if (t) t.destroy(true) }; i.changeCells = function () { this._cellChanged = false; if (this._itemRender) { this.scrollBar = this.getChildByName("scrollBar"); var t = this._getOneCell(); var e = t.width + this._spaceX || 1; var i = t.height + this._spaceY || 1; if (this._width > 0) this._repeatX2 = this._isVertical ? Math.round(this._width / e) : Math.ceil(this._width / e); if (this._height > 0) this._repeatY2 = this._isVertical ? Math.ceil(this._height / i) : Math.round(this._height / i); var r = this._width ? this._width : e * this.repeatX - this._spaceX; var s = this._height ? this._height : i * this.repeatY - this._spaceY; this._cellSize = this._isVertical ? i : e; this._cellOffset = this._isVertical ? i * Math.max(this._repeatY2, this._repeatY) - s - this._spaceY : e * Math.max(this._repeatX2, this._repeatX) - r - this._spaceX; if (this._isVertical && this._scrollBar) this._scrollBar.height = s; else if (!this._isVertical && this._scrollBar) this._scrollBar.width = r; this.setContentSize(r, s); var n = this._isVertical ? this.repeatX : this.repeatY; var a = (this._isVertical ? this.repeatY : this.repeatX) + (this._scrollBar ? 1 : 0); this._createItems(0, n, a); this._createdLine = a; if (this._array) { this.array = this._array; this.runCallLater(this.renderItems) } } }; i._getOneCell = function () { if (this._cells.length === 0) { var t = this.createItem(); this._offset.setTo(t.x, t.y); if (this.cacheContent) return t; this._cells.push(t) } return this._cells[0] }; i._createItems = function (t, e, i) { var r = this._content; var s = this._getOneCell(); var n = s.width + this._spaceX; var a = s.height + this._spaceY; if (this.cacheContent) { var o = new Y; o.cacheAsBitmap = true; o.pos((this._isVertical ? 0 : t) * n, (this._isVertical ? t : 0) * a); this._content.addChild(o); this._content.optimizeScrollRect = true; r = o } else { var h = []; for (var l = this._cells.length - 1; l > -1; l--) { var u = this._cells[l]; u.removeSelf(); h.push(u) } this._cells.length = 0 } for (var c = t; c < i; c++) { for (var f = 0; f < e; f++) { if (h && h.length) { s = h.pop() } else { s = this.createItem() } s.x = (this._isVertical ? f : c) * n - r.x; s.y = (this._isVertical ? c : f) * a - r.y; s.name = "item" + (c * e + f); r.addChild(s); this.addCell(s) } } }; i.createItem = function () { var t = []; if (typeof this._itemRender == "function") { var e = new this._itemRender } else { e = it.createComp(this._itemRender, null, null, t) } if (t.length == 0 && e._watchMap) { var i = e._watchMap; for (var r in i) { var s = i[r]; for (var n = 0; n < s.length; n++) { var a = s[n]; t.push(a.comp, a.prop, a.value) } } } if (t.length) e["_$bindData"] = t; return e }; i.addCell = function (t) { t.on("click", this, this.onCellMouse); t.on("rightclick", this, this.onCellMouse); t.on("mouseover", this, this.onCellMouse); t.on("mouseout", this, this.onCellMouse); t.on("mousedown", this, this.onCellMouse); t.on("mouseup", this, this.onCellMouse); this._cells.push(t) }; i.initItems = function () { if (!this._itemRender && this.getChildByName("item0") != null) { this.repeatX = 1; var t = 0; t = 0; for (var e = 0; e < 1e4; e++) { var i = this.getChildByName("item" + e); if (i) { this.addCell(i); t++; continue } break } this.repeatY = t } }; i.setContentSize = function (t, e) { this._content.width = t; this._content.height = e; if (this._scrollBar || this._offset.x != 0 || this._offset.y != 0) { this._content.scrollRect || (this._content.scrollRect = new A); this._content.scrollRect.setTo(-this._offset.x, -this._offset.y, t, e); this._content.scrollRect = this._content.scrollRect } this.event("resize") }; i.onCellMouse = function (t) { if (t.type === "mousedown") this._isMoved = false; var e = t.currentTarget; var i = this._startIndex + this._cells.indexOf(e); if (i < 0) return; if (t.type === "click" || t.type === "rightclick") { if (this.selectEnable && !this._isMoved) this.selectedIndex = i; else this.changeCellState(e, true, 0) } else if ((t.type === "mouseover" || t.type === "mouseout") && this._selectedIndex !== i) { this.changeCellState(e, t.type === "mouseover", 0) } this.mouseHandler && this.mouseHandler.runWith([t, i]) }; i.changeCellState = function (t, e, i) { var r = t.getChildByName("selectBox"); if (r) { this.selectEnable = true; r.visible = e; r.index = i } }; i.changeSize = function () { laya.ui.Component.prototype.changeSize.call(this); this.setContentSize(this.width, this.height); if (this._scrollBar) this.callLater(this.onScrollBarChange) }; i.onScrollBarChange = function (t) { this.runCallLater(this.changeCells); var e = this._scrollBar.value; var i = this._isVertical ? this.repeatX : this.repeatY; var r = this._isVertical ? this.repeatY : this.repeatX; var s = Math.floor(e / this._cellSize); if (!this.cacheContent) { var n = s * i; var a = 0; if (n > this._startIndex) { a = n - this._startIndex; var o = true; var h = this._startIndex + i * (r + 1); this._isMoved = true } else if (n < this._startIndex) { a = this._startIndex - n; o = false; h = this._startIndex - 1; this._isMoved = true } for (var l = 0; l < a; l++) { if (o) { var u = this._cells.shift(); this._cells[this._cells.length] = u; var c = h + l } else { u = this._cells.pop(); this._cells.unshift(u); c = h - l } var f = Math.floor(c / i) * this._cellSize; this._isVertical ? u.y = f : u.x = f; this.renderItem(u, c) } this._startIndex = n; this.changeSelectStatus() } else { a = r + 1; if (this._createdLine - s < a) { this._createItems(this._createdLine, i, this._createdLine + a); this.renderItems(this._createdLine * i, 0); this._createdLine += a } } var _ = this._content.scrollRect; if (this._isVertical) { _.y = e - this._offset.y; _.x = -this._offset.x } else { _.y = -this._offset.y; _.x = e - this._offset.x } this._content.scrollRect = _ }; i.posCell = function (t, e) { if (!this._scrollBar) return; var i = this._isVertical ? this.repeatX : this.repeatY; var r = this._isVertical ? this.repeatY : this.repeatX; var s = Math.floor(e / i) * this._cellSize; this._isVertical ? t.y = s : t.x = s }; i.changeSelectStatus = function () { for (var t = 0, e = this._cells.length; t < e; t++) { this.changeCellState(this._cells[t], this._selectedIndex === this._startIndex + t, 1) } }; i.renderItems = function (t, e) { t === void 0 && (t = 0); e === void 0 && (e = 0); for (var i = t, r = e || this._cells.length; i < r; i++) { this.renderItem(this._cells[i], this._startIndex + i) } this.changeSelectStatus() }; i.renderItem = function (t, e) { if (this._array && e >= 0 && e < this._array.length) { t.visible = true; if (t._$bindData) { t._dataSource = this._array[e]; this._bindData(t, this._array[e]) } else t.dataSource = this._array[e]; if (!this.cacheContent) { this.posCell(t, e) } if (this.hasListener("render")) this.event("render", [t, e]); if (this.renderHandler) this.renderHandler.runWith([t, e]) } else { t.visible = false; t.dataSource = null } }; i._bindData = function (t, e) { var i = t._$bindData; for (var r = 0, s = i.length; r < s; r++) { var n = i[r++]; var a = i[r++]; var o = i[r]; var h = O.getBindFun(o); n[a] = h.call(this, e) } }; i.refresh = function () { this.array = this._array }; i.getItem = function (t) { if (t > -1 && t < this._array.length) { return this._array[t] } return null }; i.changeItem = function (t, e) { if (t > -1 && t < this._array.length) { this._array[t] = e; if (t >= this._startIndex && t < this._startIndex + this._cells.length) { this.renderItem(this.getCell(t), t) } } }; i.setItem = function (t, e) { this.changeItem(t, e) }; i.addItem = function (t) { this._array.push(t); this.array = this._array }; i.addItemAt = function (t, e) { this._array.splice(e, 0, t); this.array = this._array }; i.deleteItem = function (t) { this._array.splice(t, 1); this.array = this._array }; i.getCell = function (t) { this.runCallLater(this.changeCells); if (t > -1 && this._cells) { return this._cells[(t - this._startIndex) % this._cells.length] } return null }; i.scrollTo = function (t) { if (this._scrollBar) { var e = this._isVertical ? this.repeatX : this.repeatY; this._scrollBar.value = Math.floor(t / e) * this._cellSize } else { this.startIndex = t } }; i.tweenTo = function (t, e, i) { e === void 0 && (e = 200); if (this._scrollBar) { var r = this._isVertical ? this.repeatX : this.repeatY; k.to(this._scrollBar, { value: Math.floor(t / r) * this._cellSize }, e, null, i, 0, true) } else { this.startIndex = t; if (i) i.run() } }; i._setCellChanged = function () { if (!this._cellChanged) { this._cellChanged = true; this.callLater(this.changeCells) } }; i.commitMeasure = function () { this.runCallLater(this.changeCells) }; s(0, i, "cacheAs", t.prototype._$get_cacheAs, function (t) { p.superSet(Y, this, "cacheAs", t); if (this._scrollBar) { this._$P.cacheAs = null; if (t !== "none") this._scrollBar.on("start", this, this.onScrollStart); else this._scrollBar.off("start", this, this.onScrollStart) } }); s(0, i, "content", function () { return this._content }); s(0, i, "height", t.prototype._$get_height, function (t) { if (t != this._height) { p.superSet(Y, this, "height", t); this._setCellChanged() } }); s(0, i, "itemRender", function () { return this._itemRender }, function (t) { if (this._itemRender != t) { this._itemRender = t; for (var e = this._cells.length - 1; e > -1; e--) { this._cells[e].destroy() } this._cells.length = 0; this._setCellChanged() } }); s(0, i, "vScrollBarSkin", function () { return this._scrollBar ? this._scrollBar.skin : null }, function (t) { this._removePreScrollBar(); var e = new dt; e.name = "scrollBar"; e.right = 0; if (t && t != " ") e.skin = t; this.scrollBar = e; this.addChild(e); this._setCellChanged() }); s(0, i, "page", function () { return this._page }, function (t) { this._page = t; if (this._array) { this._page = t > 0 ? t : 0; this._page = this._page < this.totalPage ? this._page : this.totalPage - 1; this.startIndex = this._page * this.repeatX * this.repeatY } }); s(0, i, "hScrollBarSkin", function () { return this._scrollBar ? this._scrollBar.skin : null }, function (t) { this._removePreScrollBar(); var e = new ot; e.name = "scrollBar"; e.bottom = 0; if (t && t != " ") e.skin = t; this.scrollBar = e; this.addChild(e); this._setCellChanged() }); s(0, i, "repeatX", function () { return this._repeatX > 0 ? this._repeatX : this._repeatX2 > 0 ? this._repeatX2 : 1 }, function (t) { this._repeatX = t; this._setCellChanged() }); s(0, i, "scrollBar", function () { return this._scrollBar }, function (t) { if (this._scrollBar != t) { this._scrollBar = t; if (t) { this._isVertical = this._scrollBar.isVertical; this.addChild(this._scrollBar); this._scrollBar.on("change", this, this.onScrollBarChange) } } }); s(0, i, "width", t.prototype._$get_width, function (t) { if (t != this._width) { p.superSet(Y, this, "width", t); this._setCellChanged() } }); s(0, i, "repeatY", function () { return this._repeatY > 0 ? this._repeatY : this._repeatY2 > 0 ? this._repeatY2 : 1 }, function (t) { this._repeatY = t; this._setCellChanged() }); s(0, i, "spaceX", function () { return this._spaceX }, function (t) { this._spaceX = t; this._setCellChanged() }); s(0, i, "spaceY", function () { return this._spaceY }, function (t) { this._spaceY = t; this._setCellChanged() }); s(0, i, "selectedIndex", function () { return this._selectedIndex }, function (t) { if (this._selectedIndex != t) { this._selectedIndex = t; this.changeSelectStatus(); this.event("change"); this.selectHandler && this.selectHandler.runWith(t); this.startIndex = this._startIndex } }); s(0, i, "selectedItem", function () { return this._selectedIndex != -1 ? this._array[this._selectedIndex] : null }, function (t) { this.selectedIndex = this._array.indexOf(t) }); s(0, i, "length", function () { return this._array ? this._array.length : 0 }); s(0, i, "selection", function () { return this.getCell(this._selectedIndex) }, function (t) { this.selectedIndex = this._startIndex + this._cells.indexOf(t) }); s(0, i, "startIndex", function () { return this._startIndex }, function (t) { this._startIndex = t > 0 ? t : 0; this.callLater(this.renderItems) }); s(0, i, "array", function () { return this._array }, function (t) { this.runCallLater(this.changeCells); this._array = t || []; var e = this._array.length; this.totalPage = Math.ceil(e / (this.repeatX * this.repeatY)); this._selectedIndex = this._selectedIndex < e ? this._selectedIndex : e - 1; this.startIndex = this._startIndex; if (this._scrollBar) { this._scrollBar.stopScroll(); var i = this._isVertical ? this.repeatX : this.repeatY; var r = this._isVertical ? this.repeatY : this.repeatX; var s = Math.ceil(e / i); var n = this._cellOffset > 0 ? this.totalPage + 1 : this.totalPage; if (n > 1) { this._scrollBar.scrollSize = this._cellSize; this._scrollBar.thumbPercent = r / s; this._scrollBar.setScroll(0, (s - r) * this._cellSize + this._cellOffset, this._scrollBar.value); this._scrollBar.target = this._content } else { this._scrollBar.setScroll(0, 0, 0); this._scrollBar.target = this._content } } }); s(0, i, "dataSource", t.prototype._$get_dataSource, function (t) { this._dataSource = t; if (typeof t == "number" && Math.floor(t) == t || typeof t == "string") this.selectedIndex = parseInt(t); else if (t instanceof Array) this.array = t; else p.superSet(Y, this, "dataSource", t) }); s(0, i, "cells", function () { this.runCallLater(this.changeCells); return this._cells }); return e }(Y); var ot = function (t) { function e() { e.__super.call(this) } n(e, "laya.ui.HScrollBar", t); var i = e.prototype; i.initialize = function () { t.prototype.initialize.call(this); this.slider.isVertical = false }; return e }(q); var ht = function (t) { function e() { this._content = null; this._vScrollBar = null; this._hScrollBar = null; this._scrollChanged = false; e.__super.call(this); this.width = this.height = 100 } n(e, "laya.ui.Panel", t); var i = e.prototype; i.destroy = function (t) { t === void 0 && (t = true); laya.ui.Component.prototype.destroy.call(this, t); this._content && this._content.destroy(t); this._vScrollBar && this._vScrollBar.destroy(t); this._hScrollBar && this._hScrollBar.destroy(t); this._vScrollBar = null; this._hScrollBar = null; this._content = null }; i.destroyChildren = function () { this._content.destroyChildren() }; i.createChildren = function () { laya.display.Node.prototype.addChild.call(this, this._content = new Y) }; i.addChild = function (t) { t.on("resize", this, this.onResize); this._setScrollChanged(); return this._content.addChild(t) }; i.onResize = function () { this._setScrollChanged() }; i.addChildAt = function (t, e) { t.on("resize", this, this.onResize); this._setScrollChanged(); return this._content.addChildAt(t, e) }; i.removeChild = function (t) { t.off("resize", this, this.onResize); this._setScrollChanged(); return this._content.removeChild(t) }; i.removeChildAt = function (t) { this.getChildAt(t).off("resize", this, this.onResize); this._setScrollChanged(); return this._content.removeChildAt(t) }; i.removeChildren = function (t, e) { t === void 0 && (t = 0); e === void 0 && (e = 2147483647); this._content.removeChildren(t, e); this._setScrollChanged(); return this }; i.getChildAt = function (t) { return this._content.getChildAt(t) }; i.getChildByName = function (t) { return this._content.getChildByName(t) }; i.getChildIndex = function (t) { return this._content.getChildIndex(t) }; i.changeScroll = function () { this._scrollChanged = false; var t = this.contentWidth || 1; var e = this.contentHeight || 1; var i = this._vScrollBar; var r = this._hScrollBar; var s = i && e > this._height; var n = r && t > this._width; var a = s ? this._width - i.width : this._width; var o = n ? this._height - r.height : this._height; if (i) { i.x = this._width - i.width; i.y = 0; i.height = this._height - (n ? r.height : 0); i.scrollSize = Math.max(this._height * .033, 1); i.thumbPercent = o / e; i.setScroll(0, e - o, i.value) } if (r) { r.x = 0; r.y = this._height - r.height; r.width = this._width - (s ? i.width : 0); r.scrollSize = Math.max(this._width * .033, 1); r.thumbPercent = a / t; r.setScroll(0, t - a, r.value) } }; i.changeSize = function () { laya.ui.Component.prototype.changeSize.call(this); this.setContentSize(this._width, this._height) }; i.setContentSize = function (t, e) { var i = this._content; i.width = t; i.height = e; i.scrollRect || (i.scrollRect = new A); i.scrollRect.setTo(0, 0, t, e); i.scrollRect = i.scrollRect }; i.onScrollBarChange = function (t) { var e = this._content.scrollRect; if (e) { var i = Math.round(t.value); t.isVertical ? e.y = i : e.x = i; this._content.scrollRect = e } }; i.scrollTo = function (t, e) { t === void 0 && (t = 0); e === void 0 && (e = 0); if (this.vScrollBar) this.vScrollBar.value = e; if (this.hScrollBar) this.hScrollBar.value = t }; i.refresh = function () { this.changeScroll() }; i.onScrollStart = function () { this._$P.cacheAs || (this._$P.cacheAs = p.superGet(Y, this, "cacheAs")); p.superSet(Y, this, "cacheAs", "none"); this._hScrollBar && this._hScrollBar.once("end", this, this.onScrollEnd); this._vScrollBar && this._vScrollBar.once("end", this, this.onScrollEnd) }; i.onScrollEnd = function () { p.superSet(Y, this, "cacheAs", this._$P.cacheAs) }; i._setScrollChanged = function () { if (!this._scrollChanged) { this._scrollChanged = true; this.callLater(this.changeScroll) } }; s(0, i, "numChildren", function () { return this._content.numChildren }); s(0, i, "hScrollBarSkin", function () { return this._hScrollBar ? this._hScrollBar.skin : null }, function (t) { if (this._hScrollBar == null) { laya.display.Node.prototype.addChild.call(this, this._hScrollBar = new ot); this._hScrollBar.on("change", this, this.onScrollBarChange, [this._hScrollBar]); this._hScrollBar.target = this._content; this._setScrollChanged() } this._hScrollBar.skin = t }); s(0, i, "contentWidth", function () { var t = 0; for (var e = this._content.numChildren - 1; e > -1; e--) { var i = this._content.getChildAt(e); t = Math.max(i.x + i.width * i.scaleX, t) } return t }); s(0, i, "contentHeight", function () { var t = 0; for (var e = this._content.numChildren - 1; e > -1; e--) { var i = this._content.getChildAt(e); t = Math.max(i.y + i.height * i.scaleY, t) } return t }); s(0, i, "width", t.prototype._$get_width, function (t) { p.superSet(Y, this, "width", t); this._setScrollChanged() }); s(0, i, "hScrollBar", function () { return this._hScrollBar }); s(0, i, "content", function () { return this._content }); s(0, i, "height", t.prototype._$get_height, function (t) { p.superSet(Y, this, "height", t); this._setScrollChanged() }); s(0, i, "vScrollBarSkin", function () { return this._vScrollBar ? this._vScrollBar.skin : null }, function (t) { if (this._vScrollBar == null) { laya.display.Node.prototype.addChild.call(this, this._vScrollBar = new dt); this._vScrollBar.on("change", this, this.onScrollBarChange, [this._vScrollBar]); this._vScrollBar.target = this._content; this._setScrollChanged() } this._vScrollBar.skin = t }); s(0, i, "vScrollBar", function () { return this._vScrollBar }); s(0, i, "cacheAs", t.prototype._$get_cacheAs, function (t) { p.superSet(Y, this, "cacheAs", t); this._$P.cacheAs = null; if (t !== "none") { this._hScrollBar && this._hScrollBar.on("start", this, this.onScrollStart); this._vScrollBar && this._vScrollBar.on("start", this, this.onScrollStart) } else { this._hScrollBar && this._hScrollBar.off("start", this, this.onScrollStart); this._vScrollBar && this._vScrollBar.off("start", this, this.onScrollStart) } }); return e }(Y); var lt = function (t) { function e(t) { e.__super.call(this, t); this.isVertical = false } n(e, "laya.ui.HSlider", t); return e }(Z); var ut = function (t) { function i(t, e) { this.selectHandler = null; this._items = null; this._selectedIndex = -1; this._skin = null; this._direction = "horizontal"; this._space = 0; this._labels = null; this._labelColors = null; this._labelFont = null; this._labelStrokeColor = null; this._strokeColors = null; this._labelStroke = NaN; this._labelSize = 0; this._labelBold = false; this._labelPadding = null; this._labelAlign = null; this._stateNum = 0; this._labelChanged = false; i.__super.call(this); this.skin = e; this.labels = t } n(i, "laya.ui.UIGroup", t); var e = i.prototype; p.imps(e, { "laya.ui.IItem": true }); e.preinitialize = function () { this.mouseEnabled = true }; e.destroy = function (t) { t === void 0 && (t = true); laya.ui.Component.prototype.destroy.call(this, t); this._items && (this._items.length = 0); this._items = null; this.selectHandler = null }; e.addItem = function (t, e) { e === void 0 && (e = true); var i = t; var r = this._items.length; i.name = "item" + r; this.addChild(i); this.initItems(); if (e && r > 0) { var s = this._items[r - 1]; if (this._direction == "horizontal") { i.x = s.x + s.width + this._space } else { i.y = s.y + s.height + this._space } } else { if (e) { i.x = 0; i.y = 0 } } return r }; e.delItem = function (t, e) { e === void 0 && (e = true); var i = this._items.indexOf(t); if (i != -1) { var r = t; this.removeChild(r); for (var s = i + 1, n = this._items.length; s < n; s++) { var a = this._items[s]; a.name = "item" + (s - 1); if (e) { if (this._direction == "horizontal") { a.x -= r.width + this._space } else { a.y -= r.height + this._space } } } this.initItems(); if (this._selectedIndex > -1) { var o = 0; o = this._selectedIndex < this._items.length ? this._selectedIndex : this._selectedIndex - 1; this._selectedIndex = -1; this.selectedIndex = o } } }; e.initItems = function () { this._items || (this._items = []); this._items.length = 0; for (var t = 0; t < 1e4; t++) { var e = this.getChildByName("item" + t); if (e == null) break; this._items.push(e); e.selected = t === this._selectedIndex; e.clickHandler = y.create(this, this.itemClick, [t], false) } }; e.itemClick = function (t) { this.selectedIndex = t }; e.setSelect = function (t, e) { if (this._items && t > -1 && t < this._items.length) this._items[t].selected = e }; e.createItem = function (t, e) { return null }; e.changeLabels = function () { this._labelChanged = false; if (this._items) { var t = 0; for (var e = 0, i = this._items.length; e < i; e++) { var r = this._items[e]; this._skin && (r.skin = this._skin); this._labelColors && (r.labelColors = this._labelColors); this._labelSize && (r.labelSize = this._labelSize); this._labelStroke && (r.labelStroke = this._labelStroke); this._labelStrokeColor && (r.labelStrokeColor = this._labelStrokeColor); this._strokeColors && (r.strokeColors = this._strokeColors); this._labelBold && (r.labelBold = this._labelBold); this._labelPadding && (r.labelPadding = this._labelPadding); this._labelAlign && (r.labelAlign = this._labelAlign); this._stateNum && (r.stateNum = this._stateNum); this._labelFont && (r.labelFont = this._labelFont); if (this._direction === "horizontal") { r.y = 0; r.x = t; t += r.width + this._space } else { r.x = 0; r.y = t; t += r.height + this._space } } } this.changeSize() }; e.commitMeasure = function () { this.runCallLater(this.changeLabels) }; e._setLabelChanged = function () { if (!this._labelChanged) { this._labelChanged = true; this.callLater(this.changeLabels) } }; s(0, e, "labelStrokeColor", function () { return this._labelStrokeColor }, function (t) { if (this._labelStrokeColor != t) { this._labelStrokeColor = t; this._setLabelChanged() } }); s(0, e, "skin", function () { return this._skin }, function (t) { if (this._skin != t) { this._skin = t; this._setLabelChanged() } }); s(0, e, "selectedIndex", function () { return this._selectedIndex }, function (t) { if (this._selectedIndex != t) { this.setSelect(this._selectedIndex, false); this._selectedIndex = t; this.setSelect(t, true); this.event("change"); this.selectHandler && this.selectHandler.runWith(this._selectedIndex) } }); s(0, e, "labels", function () { return this._labels }, function (t) { if (this._labels != t) { this._labels = t; this.removeChildren(); this._setLabelChanged(); if (this._labels) { var e = this._labels.split(","); for (var i = 0, r = e.length; i < r; i++) { var s = this.createItem(this._skin, e[i]); s.name = "item" + i; this.addChild(s) } } this.initItems() } }); s(0, e, "strokeColors", function () { return this._strokeColors }, function (t) { if (this._strokeColors != t) { this._strokeColors = t; this._setLabelChanged() } }); s(0, e, "labelColors", function () { return this._labelColors }, function (t) { if (this._labelColors != t) { this._labelColors = t; this._setLabelChanged() } }); s(0, e, "labelStroke", function () { return this._labelStroke }, function (t) { if (this._labelStroke != t) { this._labelStroke = t; this._setLabelChanged() } }); s(0, e, "labelSize", function () { return this._labelSize }, function (t) { if (this._labelSize != t) { this._labelSize = t; this._setLabelChanged() } }); s(0, e, "stateNum", function () { return this._stateNum }, function (t) { if (this._stateNum != t) { this._stateNum = t; this._setLabelChanged() } }); s(0, e, "labelBold", function () { return this._labelBold }, function (t) { if (this._labelBold != t) { this._labelBold = t; this._setLabelChanged() } }); s(0, e, "labelFont", function () { return this._labelFont }, function (t) { if (this._labelFont != t) { this._labelFont = t; this._setLabelChanged() } }); s(0, e, "labelPadding", function () { return this._labelPadding }, function (t) { if (this._labelPadding != t) { this._labelPadding = t; this._setLabelChanged() } }); s(0, e, "direction", function () { return this._direction }, function (t) { this._direction = t; this._setLabelChanged() }); s(0, e, "space", function () { return this._space }, function (t) { this._space = t; this._setLabelChanged() }); s(0, e, "items", function () { return this._items }); s(0, e, "selection", function () { return this._selectedIndex > -1 && this._selectedIndex < this._items.length ? this._items[this._selectedIndex] : null }, function (t) { this.selectedIndex = this._items.indexOf(t) }); s(0, e, "dataSource", t.prototype._$get_dataSource, function (t) { this._dataSource = t; if (typeof t == "number" && Math.floor(t) == t || typeof t == "string") this.selectedIndex = parseInt(t); else if (t instanceof Array) this.labels = t.join(","); else p.superSet(Y, this, "dataSource", t) }); return i }(Y); var ct = function (e) { function i(t, e) { this._value = null; e === void 0 && (e = ""); i.__super.call(this, t, e) } n(i, "laya.ui.Radio", e); var t = i.prototype; t.destroy = function (t) { t === void 0 && (t = true); e.prototype.destroy.call(this, t); this._value = null }; t.preinitialize = function () { laya.ui.Component.prototype.preinitialize.call(this); this.toggle = false; this._autoSize = false }; t.initialize = function () { e.prototype.initialize.call(this); this.createText(); this._text.align = "left"; this._text.valign = "top"; this._text.width = 0; this.on("click", this, this.onClick) }; t.onClick = function (t) { this.selected = true }; s(0, t, "value", function () { return this._value != null ? this._value : this.label }, function (t) { this._value = t }); return i }(X); var ft = function (t) { function e() { this._list = null; this._source = null; this._renderHandler = null; this._spaceLeft = 10; this._spaceBottom = 0; this._keepStatus = true; e.__super.call(this); this.width = this.height = 200 } n(e, "laya.ui.Tree", t); var i = e.prototype; p.imps(i, { "laya.ui.IRender": true }); i.destroy = function (t) { t === void 0 && (t = true); laya.ui.Component.prototype.destroy.call(this, t); this._list && this._list.destroy(t); this._list = null; this._source = null; this._renderHandler = null }; i.createChildren = function () { this.addChild(this._list = new at); this._list.renderHandler = y.create(this, this.renderItem, null, false); this._list.repeatX = 1; this._list.on("change", this, this.onListChange) }; i.onListChange = function (t) { this.event("change") }; i.getArray = function () { var t = []; var e; for (var i in this._source) { e = this._source[i]; if (this.getParentOpenStatus(e)) { e.x = this._spaceLeft * this.getDepth(e); t.push(e) } } return t }; i.getDepth = function (t, e) { e === void 0 && (e = 0); if (t.nodeParent == null) return e; else return this.getDepth(t.nodeParent, e + 1) }; i.getParentOpenStatus = function (t) { var e = t.nodeParent; if (e == null) { return true } else { if (e.isOpen) { if (e.nodeParent != null) return this.getParentOpenStatus(e); else return true } else { return false } } }; i.renderItem = function (t, e) { var i = t.dataSource; if (i) { t.left = i.x; var r = t.getChildByName("arrow"); if (r) { if (i.hasChild) { r.visible = true; r.index = i.isOpen ? 1 : 0; r.tag = e; r.off("click", this, this.onArrowClick); r.on("click", this, this.onArrowClick) } else { r.visible = false } } var s = t.getChildByName("folder"); if (s) { if (s.clipY == 2) { s.index = i.isDirectory ? 0 : 1 } else { s.index = i.isDirectory ? i.isOpen ? 1 : 0 : 2 } } this._renderHandler && this._renderHandler.runWith([t, e]) } }; i.onArrowClick = function (t) { var e = t.currentTarget; var i = e.tag; this._list.array[i].isOpen = !this._list.array[i].isOpen; this.event("open"); this._list.array = this.getArray() }; i.setItemState = function (t, e) { if (!this._list.array[t]) return; this._list.array[t].isOpen = e; this._list.array = this.getArray() }; i.fresh = function () { this._list.array = this.getArray(); this.repaint() }; i.parseXml = function (t, e, i, r) { var s; var n = t.childNodes; var a = n.length; if (!r) { s = {}; var o = t.attributes; var h; for (var l in o) { h = o[l]; var u = h.nodeName; var c = h.nodeValue; s[u] = c == "true" ? true : c == "false" ? false : c } s.nodeParent = i; if (a > 0) s.isDirectory = true; s.hasChild = a > 0; e.push(s) } for (var f = 0; f < a; f++) { var _ = n[f]; this.parseXml(_, e, s, false) } }; i.parseOpenStatus = function (t, e) { for (var i = 0, r = e.length; i < r; i++) { var s = e[i]; if (s.isDirectory) { for (var n = 0, a = t.length; n < a; n++) { var o = t[n]; if (o.isDirectory && this.isSameParent(o, s) && s.label == o.label) { s.isOpen = o.isOpen; break } } } } }; i.isSameParent = function (t, e) { if (t.nodeParent == null && e.nodeParent == null) return true; else if (t.nodeParent == null || e.nodeParent == null) return false; else { if (t.nodeParent.label == e.nodeParent.label) return this.isSameParent(t.nodeParent, e.nodeParent); else return false } }; i.filter = function (t) { if (Boolean(t)) { var e = []; this.getFilterSource(this._source, e, t); this._list.array = e } else { this._list.array = this.getArray() } }; i.getFilterSource = function (t, e, i) { i = i.toLocaleLowerCase(); var r; for (var s in t) { r = t[s]; if (!r.isDirectory && String(r.label).toLowerCase().indexOf(i) > -1) { r.x = 0; e.push(r) } if (r.child && r.child.length > 0) { this.getFilterSource(r.child, e, i) } } }; s(0, i, "spaceBottom", function () { return this._list.spaceY }, function (t) { this._list.spaceY = t }); s(0, i, "keepStatus", function () { return this._keepStatus }, function (t) { this._keepStatus = t }); s(0, i, "itemRender", function () { return this._list.itemRender }, function (t) { this._list.itemRender = t }); s(0, i, "array", function () { return this._list.array }, function (t) { if (this._keepStatus && this._list.array && t) { this.parseOpenStatus(this._list.array, t) } this._source = t; this._list.array = this.getArray() }); s(0, i, "mouseHandler", function () { return this._list.mouseHandler }, function (t) { this._list.mouseHandler = t }); s(0, i, "dataSource", t.prototype._$get_dataSource, function (t) { this._dataSource = t; p.superSet(Y, this, "dataSource", t) }); s(0, i, "source", function () { return this._source }); s(0, i, "scrollBar", function () { return this._list.scrollBar }); s(0, i, "list", function () { return this._list }); s(0, i, "scrollBarSkin", function () { return this._list.vScrollBarSkin }, function (t) { this._list.vScrollBarSkin = t }); s(0, i, "renderHandler", function () { return this._renderHandler }, function (t) { this._renderHandler = t }); s(0, i, "selectedIndex", function () { return this._list.selectedIndex }, function (t) { this._list.selectedIndex = t }); s(0, i, "spaceLeft", function () { return this._spaceLeft }, function (t) { this._spaceLeft = t }); s(0, i, "selectedItem", function () { return this._list.selectedItem }, function (t) { this._list.selectedItem = t }); s(0, i, "width", t.prototype._$get_width, function (t) { p.superSet(Y, this, "width", t); this._list.width = t }); s(0, i, "height", t.prototype._$get_height, function (t) { p.superSet(Y, this, "height", t); this._list.height = t }); s(0, i, "xml", null, function (t) { var e = []; this.parseXml(t.childNodes[0], e, null, true); this.array = e }); s(0, i, "selectedPath", function () { if (this._list.selectedItem) { return this._list.selectedItem.path } return null }); return e }(Y); var _t = function (t) { function e() { this._items = null; this._selectedIndex = 0; e.__super.call(this); this._setIndexHandler = y.create(this, this.setIndex, null, false) } n(e, "laya.ui.ViewStack", t); var i = e.prototype; p.imps(i, { "laya.ui.IItem": true }); i.setItems = function (t) { this.removeChildren(); var e = 0; for (var i = 0, r = t.length; i < r; i++) { var s = t[i]; if (s) { s.name = "item" + e; this.addChild(s); e++ } } this.initItems() }; i.addItem = function (t) { t.name = "item" + this._items.length; this.addChild(t); this.initItems() }; i.initItems = function () { this._items = []; for (var t = 0; t < 1e4; t++) { var e = this.getChildByName("item" + t); if (e == null) { break } this._items.push(e); e.visible = t == this._selectedIndex } }; i.setSelect = function (t, e) { if (this._items && t > -1 && t < this._items.length) { this._items[t].visible = e } }; i.setIndex = function (t) { this.selectedIndex = t }; s(0, i, "dataSource", t.prototype._$get_dataSource, function (t) { this._dataSource = t; if (typeof t == "number" && Math.floor(t) == t || typeof t == "string") { this.selectedIndex = parseInt(t) } else { for (var e in this._dataSource) { if (this.hasOwnProperty(e)) { this[e] = this._dataSource[e] } } } }); s(0, i, "selectedIndex", function () { return this._selectedIndex }, function (t) { if (this._selectedIndex != t) { this.setSelect(this._selectedIndex, false); this._selectedIndex = t; this.setSelect(this._selectedIndex, true) } }); s(0, i, "selection", function () { return this._selectedIndex > -1 && this._selectedIndex < this._items.length ? this._items[this._selectedIndex] : null }, function (t) { this.selectedIndex = this._items.indexOf(t) }); s(0, i, "items", function () { return this._items }); s(0, i, "setIndexHandler", function () { return this._setIndexHandler }, function (t) { this._setIndexHandler = t }); return e }(Y); var dt = function (t) { function e() { e.__super.call(this) } n(e, "laya.ui.VScrollBar", t); return e }(q); var pt = function (e) { function i(t) { this._bg = null; this._skin = null; i.__super.call(this); t === void 0 && (t = ""); this.text = t; this.skin = this.skin } n(i, "laya.ui.TextInput", e); var t = i.prototype; t.preinitialize = function () { this.mouseEnabled = true }; t.destroy = function (t) { t === void 0 && (t = true); e.prototype.destroy.call(this, t); this._bg && this._bg.destroy(); this._bg = null }; t.createChildren = function () { this.addChild(this._tf = new b); this._tf.padding = F.inputLabelPadding; this._tf.on("input", this, this._onInput); this._tf.on("enter", this, this._onEnter); this._tf.on("blur", this, this._onBlur); this._tf.on("focus", this, this._onFocus) }; t._onFocus = function () { this.event("focus", this) }; t._onBlur = function () { this.event("blur", this) }; t._onInput = function () { this.event("input", this) }; t._onEnter = function () { this.event("enter", this) }; t.initialize = function () { this.width = 128; this.height = 22 }; t.select = function () { this._tf.select() }; t.setSelection = function (t, e) { this._tf.setSelection(t, e) }; s(0, t, "text", e.prototype._$get_text, function (t) { if (this._tf.text != t) { t = t + ""; this._tf.text = t; this.event("change") } }); s(0, t, "bg", function () { return this._bg }, function (t) { this.graphics = this._bg = t }); s(0, t, "inputElementYAdjuster", function () { return this._tf.inputElementYAdjuster }, function (t) { this._tf.inputElementYAdjuster = t }); s(0, t, "multiline", function () { return this._tf.multiline }, function (t) { this._tf.multiline = t }); s(0, t, "skin", function () { return this._skin }, function (t) { if (this._skin != t) { this._skin = t; this._bg || (this.graphics = this._bg = new U); this._bg.source = w.getRes(this._skin); this._width && (this._bg.width = this._width); this._height && (this._bg.height = this._height) } }); s(0, t, "sizeGrid", function () { return this._bg && this._bg.sizeGrid ? this._bg.sizeGrid.join(",") : null }, function (t) { this._bg || (this.graphics = this._bg = new U); this._bg.sizeGrid = O.fillArray(F.defaultSizeGrid, t, Number) }); s(0, t, "inputElementXAdjuster", function () { return this._tf.inputElementXAdjuster }, function (t) { this._tf.inputElementXAdjuster = t }); s(0, t, "width", e.prototype._$get_width, function (t) { p.superSet(Q, this, "width", t); this._bg && (this._bg.width = t) }); s(0, t, "height", e.prototype._$get_height, function (t) { p.superSet(Q, this, "height", t); this._bg && (this._bg.height = t) }); s(0, t, "editable", function () { return this._tf.editable }, function (t) { this._tf.editable = t }); s(0, t, "restrict", function () { return this._tf.restrict }, function (t) { this._tf.restrict = t }); s(0, t, "prompt", function () { return this._tf.prompt }, function (t) { this._tf.prompt = t }); s(0, t, "promptColor", function () { return this._tf.promptColor }, function (t) { this._tf.promptColor = t }); s(0, t, "maxChars", function () { return this._tf.maxChars }, function (t) { this._tf.maxChars = t }); s(0, t, "focus", function () { return this._tf.focus }, function (t) { this._tf.focus = t }); s(0, t, "type", function () { return this._tf.type }, function (t) { this._tf.type = t }); s(0, t, "asPassword", function () { return this._tf.asPassword }, function (t) { this._tf.asPassword = t }); return i }(Q); var vt = function (t) { function e() { e.__super.call(this) } n(e, "laya.ui.VSlider", t); return e }(Z); var mt = function (t) { function r() { this.popupCenter = true; this.closeHandler = null; this.popupEffect = null; this.closeEffect = null; this.group = null; this.isModal = false; this._dragArea = null; r.__super.call(this) } n(r, "laya.ui.Dialog", t); var e = r.prototype; e.initialize = function () { this.popupEffect = r.manager.popupEffectHandler; this.closeEffect = r.manager.closeEffectHandler; this._dealDragArea(); this.on("click", this, this._onClick) }; e._dealDragArea = function () { var t = this.getChildByName("drag"); if (t) { this.dragArea = t.x + "," + t.y + "," + t.width + "," + t.height; t.removeSelf() } }; e._onClick = function (t) { var e = t.target; if (e) { switch (e.name) { case "close": case "cancel": case "sure": case "no": case "ok": case "yes": this.close(e.name); break } } }; e.show = function (t, e) { t === void 0 && (t = false); e === void 0 && (e = true); this._open(false, t, e) }; e.popup = function (t, e) { t === void 0 && (t = false); e === void 0 && (e = true); this._open(true, t, e) }; e._open = function (t, e, i) { r.manager.lock(false); this.isModal = t; r.manager.open(this, e, i) }; e.onOpened = function () { }; e.close = function (t, e) { e === void 0 && (e = true); r.manager.close(this, t, e) }; e.onClosed = function (t) { }; e._onMouseDown = function (t) { var e = this.getMousePoint(); if (this._dragArea.contains(e.x, e.y)) this.startDrag(); else this.stopDrag() }; s(0, e, "dragArea", function () { if (this._dragArea) return this._dragArea.toString(); return null }, function (t) { if (t) { var e = O.fillArray([0, 0, 0, 0], t, Number); this._dragArea = new A(e[0], e[1], e[2], e[3]); this.on("mousedown", this, this._onMouseDown) } else { this._dragArea = null; this.off("mousedown", this, this._onMouseDown) } }); s(0, e, "isPopup", function () { return this.parent != null }); s(0, e, "zOrder", t.prototype._$get_zOrder, function (t) { p.superSet(it, this, "zOrder", t); r.manager._checkMask() }); s(1, r, "manager", function () { return r._manager = r._manager || new H }, function (t) { r._manager = t }); r.setLockView = function (t) { r.manager.setLockView(t) }; r.lock = function (t) { r.manager.lock(t) }; r.closeAll = function () { r.manager.closeAll() }; r.getDialogsByGroup = function (t) { return r.manager.getDialogsByGroup(t) }; r.closeByGroup = function (t) { return r.manager.closeByGroup(t) }; r.CLOSE = "close"; r.CANCEL = "cancel"; r.SURE = "sure"; r.NO = "no"; r.OK = "ok"; r.YES = "yes"; r._manager = null; return r }(it); var gt = function (t) { function e() { e.__super.call(this) } n(e, "laya.ui.HBox", t); var i = e.prototype; i.sortItem = function (t) { if (t) t.sort(function (t, e) { return t.x - e.x }) }; i.changeItems = function () { this._itemChanged = false; var t = []; var e = 0; for (var i = 0, r = this.numChildren; i < r; i++) { var s = this.getChildAt(i); if (s && s.layoutEnabled) { t.push(s); e = this._height ? this._height : Math.max(e, s.height * s.scaleY) } } this.sortItem(t); var n = 0; for (i = 0, r = t.length; i < r; i++) { s = t[i]; s.x = n; n += s.width * s.scaleX + this._space; if (this._align == "top") { s.y = 0 } else if (this._align == "middle") { s.y = (e - s.height * s.scaleY) * .5 } else if (this._align == "bottom") { s.y = e - s.height * s.scaleY } } this.changeSize() }; s(0, i, "height", t.prototype._$get_height, function (t) { if (this._height != t) { p.superSet(st, this, "height", t); this.callLater(this.changeItems) } }); e.NONE = "none"; e.TOP = "top"; e.MIDDLE = "middle"; e.BOTTOM = "bottom"; return e }(st); var yt = function (t) { var u, l; function c(t) { this.gameStopHD = false; this.iconImgTl = null; this._iconImage = null; this._moreBox = null; this._gameBox = null; this.screenType = 0; this._moreGameDataUrl = "https://abc.layabox.com/public/more/gamelist2.json"; this._iconImageObj = null; this.clickCallBack = null; this.closeCallBack = null; this.isShow = false; this.dinfo = null; this.ErrorUrlHttps = "https://elastic.layabox.com/"; this.tongjiType = "bdm"; t === void 0 && (t = 0); c.__super.call(this); this.screenType = t; this.init() } n(c, "laya.ui.MoreGame", t); var e = c.prototype; e.getLocalDateString = function (t) { t === void 0 && (t = 0); var e = this.getDateByTimestamp(t).toLocaleDateString(); if (f.onLimixiu || f.onMiniGame) { var i = new Date; e = c.toLocaleDateString(i.getTime()) } var r = new RegExp("/", "g"); e = e.replace(r, "-"); return e }; e.getDateByTimestamp = function (t) { t === void 0 && (t = 0); if (!t || t == "") return new Date; return new Date(t) }; e.reportError = function (t, e, i) { e === void 0 && (e = ""); i = i || {}; var r = Date.now(); var s = new Date(r + 0); i.date = s.toLocaleString(); i.etype = t; if (t != "error") { if (t != "statistics") { t = "statistics" } } i.version = "V0.0.1"; i.gameId = 10100; i.dinfo = this.dinfo; i.channel = -1e3; i.msg = e; i["@timestamp"] = s.toISOString(); i.user = this.getUserId(); i.openid = this.getOpenId(); var n = c.getDay(s); i.rdate = n; i.day = s.getDate() + ""; i.hour = s.getHours() + ""; i.minute = s.getMinutes() + ""; i.gameurl = a.baseURI; i.regTime = 0; if (t == "error") { this.sendLog(i, this.tongjiType + "error-" + n.substring(0, 6) + "/" + t + "/", t) } else { this.sendLog(i, this.tongjiType + "-" + n.substring(0, 6) + "/" + t + "/", t) } }; e.getUserId = function () { var t = parseInt(T.getItem("layauserid") + "") || -1; if (t == -1) { t = this.randRange(0, 1e9); T.setItem("layauserid", t + "") } return t }; e.getOpenId = function () { var t = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"; var e = T.getItem("openid"); if (e == null || e == "") { e = ""; for (var i = 0, r = 32; i < r; i++) { var s = this.randRange(0, 62); e += t.charAt(s) } T.setItem("openid", e) } return e }; e.sendLog = function (t, e, i) { var s = this; var r = new x; r.on("error", this, function (t, e, i) { if (i && i.indexOf("[404]") != -1) { var r = new x; r.send(s.ErrorUrlHttps + "garbage/" + e + "/", JSON.stringify(t), "post", "text", ["Content-Type", "application/json"]) } }, [t, i]); if (f.onBDMiniGame) { t.gameurl = "" } r.send(this.ErrorUrlHttps + e, JSON.stringify(t), "post", "text", ["Content-Type", "application/json"]) }; e.initEvent = function () { this.on("click", this, this.onIconClick) }; e.onStageResize = function () { var t = Math.min(p.stage.width / p.stage.designWidth, p.stage.height / p.stage.designHeight); if (p.stage.width < 720) t = .9; if (this._moreBox) { this._moreBox.scale(t, t) } if (this._gameBox) { this._gameBox.scale(t, t) } }; e.tada = function (t, e, i, r) { i === void 0 && (i = 1.1); r === void 0 && (r = 1); var s = new L; s.reset(); s.to(t, { scaleX: i, scaleY: i, rotation: 3 }, e * .1).to(t, { scaleX: i, scaleY: i, rotation: -3 }, e * .1).to(t, { scaleX: i, scaleY: i, rotation: 3 }, e * .1).to(t, { scaleX: i, scaleY: i, rotation: -3 }, e * .1).to(t, { scaleX: i, scaleY: i, rotation: 3 }, e * .1).to(t, { scaleX: i, scaleY: i, rotation: -3 }, e * .1).to(t, { scaleX: i, scaleY: i, rotation: 3 }, e * .1).to(t, { scaleX: i, scaleY: i, rotation: -3 }, e * .1).to(t, { scaleX: i, scaleY: i, rotation: 3 }, e * .1).to(t, { scaleX: r, scaleY: r, rotation: 0 }, e * .1); s.play(0); return s }; e.dispose = function () { this.removeEvent(); this.gameStopHD = true; c._moreGameData = null; this._iconImageObj = null; this.clickCallBack = null; this.closeCallBack = null; if (this.iconImgTl) { this.iconImgTl.offAll("complete"); this.iconImgTl = null } if (this._moreBox) { this._moreBox.removeChildren(); this._moreBox = null } if (this._gameBox) { this._gameBox.removeChildren(); this._gameBox = null } if (this._iconImage) { this._iconImage.removeSelf(); this._iconImage = null } }; e.onSetIconType = function (t) { this.gameStopHD = !t; this.visible = t }; e.checkIconImgHD = function () { if (!this.iconImgTl) this.iconImgTl = this.tada(this._iconImage, 1200, 1.1, .9); else this.iconImgTl.play(0); this.iconImgTl.on("complete", this, this.onTlComplete) }; e.onTlComplete = function () { if (this.parent) { this._iconImage.scale(.9, .9); this._iconImage.rotation = 0; if (this.gameStopHD && this.iconImgTl) { this.iconImgTl.offAll("complete"); this.iconImgTl = null; return } p.timer.once(1e3, this, this.onYanChiPlay) } else { if (this.iconImgTl) { this.iconImgTl.offAll(); this.iconImgTl = null } } }; e.onYanChiPlay = function () { if (this.parent && this.iconImgTl) { this.iconImgTl.play(0) } else { if (this.iconImgTl) { this.iconImgTl.offAll("complete"); this.iconImgTl = null } } }; e.removeEvent = function () { this.off("click", this, this.onIconClick) }; e.onIconClick = function () { this.isShow = true; this.clickCallBack != null && this.clickCallBack.run(); var t = T.getItem("currentTime"); var e = this.getLocalDateString(); if (t != e) { T.setItem("currentTime", e); this.reportError(c._moreGameData.statid1) } else { this.reportError(c._moreGameData.statid2) } this.onResLoaded() }; e.onResLoaded = function () { if (!this._moreBox) { this._moreBox = new Y; p.stage.addChild(this._moreBox); this._moreBox.zOrder = 99999; this._moreBox.left = this._moreBox.right = this._moreBox.top = this._moreBox.bottom = 0; var t = this.onCreateImage(c.onGetAtlasDanImgUrl("img_white_bg"), this._moreBox); t.top = t.left = t.right = t.bottom = 0; t.sizeGrid = "1,1,1,1,1"; var e = this.onCreateImage(c.onGetAtlasDanImgUrl("hengfengexian"), this._moreBox); e.left = e.right = 0; e.y = 132; e.alpha = .2; var i = this.onCreateImage(c.onGetAtlasDanImgUrl("img_font_jingcai"), this._moreBox); i.on("click", this, this.onJiantouImgClick); if (this.isQMP() && this.screenType) { i.pos(15, 70) } else { i.pos(15, 45) } var r = new at; this._moreBox.addChild(r); r.itemRender = u; r.selectEnable = true; r.vScrollBarSkin = ""; r.scrollBar.autoHide = true; r.scrollBar.elasticDistance = 250; r.renderHandler = new y(this, this.onGameListRender); var s = c._moreGameData.marvellousGame.gameList; var n = []; n.push(s[0]); n.push(s[1]); var a = this.RandomNumBoth(n.length, s.length - n.length, s.length); if (!a) { this.visible = false; return } try { for (var o = 0, h = a.length; o < h; o++) { var l = a[o]; n.push(s[l]) } c._moreGameData.marvellousGame.gameList = []; c._moreGameData.marvellousGame.gameList = n; r.array = c._moreGameData.marvellousGame.gameList } catch (t) { r.array = c._moreGameData.marvellousGame.gameList } if (this.screenType) { r.spaceY = 10; r.width = 690; if (this.isQMP()) { r.height = p.stage.height + 130 } else { r.height = 1139 } r.y = 139; r.centerX = 0 } else { } this.onStageResize() } else { this._moreBox.visible = true } }; e.RandomNumBoth = function (t, e, i) { var r = []; for (var s = t; s < i; s++) { r.push(s) } var n = []; var a = r.length; for (s = 0; s < a; s++) { var o = r.length; var h = Math.floor(Math.random() * r.length); n.push(r[h]); r.splice(h, 1); if (r.length <= a - e) { return n } } return null }; e.isQMP = function () { var t = false; var e = 0; if (p.stage.screenMode == "horizontal") { e = f.height % 9 } else { e = f.width % 9 } if (f.onAndroid && e == 0) { var i = 0; if (p.stage.screenMode == "horizontal") { i = f.width } else { i = f.height } if ([2280, 2160, 2244, 3120, 2248, 2340, 2310].indexOf(i) != -1) { t = true } } var r = /iPhone/gi.test(f.window.navigator.userAgent) && (Math.min(f.clientHeight, f.clientWidth) == 375 && Math.max(f.clientHeight, f.clientWidth) == 812); var s = Math.min(f.clientHeight, f.clientWidth) == 414 && Math.max(f.clientHeight, f.clientWidth) == 896; if ((f.onMiniGame || f.onBDMiniGame) && !f.onAndroid && (r || s)) { t = true } return t }; e.onDrawShapes = function (t, e, i, r) { i === void 0 && (i = 5); r === void 0 && (r = false); var s = i; if (r) s = 0; var n = new I; n.graphics.drawPath(0, 0, [["moveTo", i, 0], ["lineTo", 105, 0], ["arcTo", t, 0, t, i, i], ["lineTo", t, e], ["arcTo", t, e + i, 105, e + i, s], ["lineTo", i, e + i], ["arcTo", 0, e + i, 0, e, s], ["lineTo", 0, i], ["arcTo", 0, 0, i, 0, i], ["closePath"]], { fillStyle: "#ff0000" }); return n }; e.onCreateMaskImg = function (t, e) { var i = this.onCreateImage(c.onGetAtlasDanImgUrl("dayuan"), e); var r = this.onCreateImage(t, i); r.pos(11, 10); var s = new I; s.graphics.drawCircle(71, 74, 68, "#ff0000"); r.mask = s; i.scale(.7, .7); return i }; e.onGameListRender = function (t, e) { var i = c._moreGameData.marvellousGame.gameList; if (e < 0 || e > i.length - 1) return; var r = i[e]; t.init(r, this.screenType, new y(this, this.onItemClickCallBack)) }; e.onItemClickCallBack = function (i) { var r = this; if (!swan.navigateToMiniProgram) return; var t = i.appKey; var e = i.path; var s = i.extendInfo; swan.navigateToMiniProgram({ appKey: t, path: e, extraData: s, success: function t(e) { }, fail: function t(e) { }, complete: function t(e) { r.reportError(i.statid) }.bind(this) }) }; e.onJiantouImgClick = function (t) { this.isShow = false; if (this._moreBox) { this._moreBox.visible = false } this.closeCallBack != null && this.closeCallBack.run() }; e.onCreateLabel = function (t, e, i, r, s, n, a) { i === void 0 && (i = 24); r === void 0 && (r = "#000000"); s === void 0 && (s = false); n === void 0 && (n = "center"); a === void 0 && (a = 10); var o = new Q; o.text = t; o.font = "Microsoft YaHei"; o.fontSize = i; o.color = r; o.bold = true; o.leading = a; o.valign = "middle"; o.align = n; o.wordWrap = s; e.addChild(o); return o }; e.onCreateImage = function (t, e) { var i = new G; i.skin = t; e.addChild(i); return i }; e.init = function () { var t = f.window.navigator.userAgent; var e = t.indexOf("SwanGame") > -1; this.visible = false; if (e) { this.dinfo = JSON.stringify(laya.bd.mini.BMiniAdapter.systemInfo); this.onGetAdvsListData() } }; e.randRange = function (t, e) { return Math.floor(Math.random() * (e - t + 1)) + t }; e.onGetAdvsListData = function () { var e = this; var t = this.randRange(1e4, 1e6); var i = this._moreGameDataUrl + "?" + t; c._http.open("get", i, true); c._http.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"); c._http.responseType = "text"; c._http.onerror = function (t) { e._onError(t) }; c._http.onload = function (t) { e._onLoad(t) }; c._http.send(null) }; e._onError = function (t) { this.error("Request failed Status:" + c._http.status + " text:" + c._http.statusText) }; e._onLoad = function (t) { var e = c._http; var i = e.status !== undefined ? e.status : 200; if (i === 200 || i === 204 || i === 0) { this.complete() } else { this.error("[" + e.status + "]" + e.statusText + ":" + e.responseURL) } }; e.error = function (t) { this.event("error", t) }; e.complete = function () { var t = true; try { var e = c._http.response || c._http.responseText; c._moreGameData = JSON.parse(e); this.initUI() } catch (e) { t = false; this.error(e.message) } }; e.initUI = function () { if (c._moreGameData.isOpen && this.screenType) { if (!this._iconImage) { this._iconImage = new G; this.addChild(this._iconImage) } this._iconImage.skin = c.onGetImgSkinUrl(c._moreGameData.icon); if (this._iconImageObj) { this._iconImage.size(this._iconImageObj.width, this._iconImageObj.height); this._iconImage.pivot(this._iconImageObj.width / 2, this._iconImageObj.height / 2); this._iconImage.pos(this._iconImageObj.width / 2, this._iconImageObj.height / 2) } this.visible = true; this.initEvent(); this.gameStopHD = false; this.checkIconImgHD() } else { this.visible = false } }; e.setIconSize = function (t, e) { if (this._iconImage) { this._iconImage.size(t, e); this._iconImage.pivot(t / 2, e / 2); this._iconImage.pos(t / 2, e / 2) } this._iconImageObj = { width: t, height: e } }; c.toLocaleDateString = function (t) { return c.getDateFormatStr(t, "/") }; c.getDateFormatStr = function (t, e) { e === void 0 && (e = "yynndd"); var i = new Date(t); var r = i.getFullYear(); var s = i.getMonth() + 1; var n = i.getDate(); var a = i.getHours(); var o = i.getMinutes(); var h = i.getSeconds(); switch (e) { case "yynndd": return r.toString() + "年" + s.toString() + "月" + n.toString() + "日"; break; case "/": return r.toString() + "/" + s.toString() + "/" + n.toString(); break }return r.toString() + "年" + s.toString() + "月" + n.toString() + "日" + a.toString() + "时" + o.toString() + "分" + h.toString() + "秒" }; c.getDay = function (t) { var e = t.getMonth() + 1; var i = t.getDate(); var r = t.getFullYear() + "" + (e < 10 ? "0" + e : e) + "" + (i < 10 ? "0" + i : i); return r }; c.onGetAtlasDanImgUrl = function (t) { return c._moreGameData.imgPath + c._moreGameData.atlas + t + ".png" }; c.onGetImgSkinUrl = function (t) { return c._moreGameData.imgPath + t }; c.onGetIconImgSkinUrl = function (t) { return c._moreGameData.iconPath + t }; c._moreGameData = null; r(c, ["_http", function () { return this._http = new f.window.XMLHttpRequest }]); c.__init$ = function () { u = function (t) { function e() { this.titleLabel = null; this.gameListBox = null; e.__super.call(this) } n(e, "", t); var i = e.prototype; i.init = function (t, e, i) { if (!this.titleLabel) { this.titleLabel = this.onCreateLabel(t.title, this, 32, "#3d3939"); this.titleLabel.pos(8, 0); this.titleLabel.size(162, 50) } else { this.titleLabel.text = t.title } if (!this.gameListBox) { this.gameListBox = new Y; this.addChild(this.gameListBox); var r = 0; var s = 65; var n = 175; for (var a = 0, o = t.gameList.length; a < o; a++) { var h = new l; h.init(t.gameList[a], e, i); h.x = r + a * n; h.y = s; this.gameListBox.addChild(h) } } else { for (a = 0, o = this.gameListBox._childs.length; a < o; a++) { h = this.gameListBox._childs[a]; h.init(t.gameList[a], e, i) } } this.size(695, 340); this.cacheAs = "bitmap" }; i.onCreateLabel = function (t, e, i, r, s) { i === void 0 && (i = 26); r === void 0 && (r = "#000000"); s === void 0 && (s = true); var n = new Q; n.text = t; n.font = "Microsoft YaHei"; n.fontSize = i; n.color = r; n.bold = s; n.leading = 10; n.valign = "middle"; n.align = "center"; n.overflow = "hidden"; e.addChild(n); return n }; return e }(Y); l = function (t) { function e() { this.kuangImg = null; this.iconNameLabel = null; this.iconImg = null; this.playImg = null; this.itemData = null; this.callBackHandler = null; e.__super.call(this) } n(e, "", t); var i = e.prototype; i.MoveGameItem = function () { }; i.initEvent = function () { this.on("click", this, this.onItemClick) }; i.onItemClick = function () { this.callBackHandler != null && this.callBackHandler.runWith([this.itemData]) }; i.init = function (t, e, i) { this.itemData = t; this.callBackHandler = i; if (!this.kuangImg) this.kuangImg = this.onCreateImage(c.onGetAtlasDanImgUrl("dayuan"), this); else { this.kuangImg.skin = c.onGetAtlasDanImgUrl("dayuan") } if (!this.iconImg) { this.iconImg = this.onCreateImage(c.onGetIconImgSkinUrl(t.icon), this); var r = new I; r.graphics.drawCircle(71, 74, 68, "#ff0000"); this.iconImg.mask = r; this.iconImg.pos(13, 10) } else { this.iconImg.skin = c.onGetIconImgSkinUrl(t.icon) } if (!this.iconNameLabel) { this.iconNameLabel = this.onCreateLabel(t.name, this, 28, "#3d3939"); this.iconNameLabel.pos(7, 165) } else { this.iconNameLabel.text = t.name } if (!this.playImg) { this.playImg = this.onCreateImage(c.onGetAtlasDanImgUrl("img_play"), this); this.playImg.pos(12, 210) } else { this.playImg.skin = c.onGetAtlasDanImgUrl("img_play") } this.size(165, 270); this.initEvent() }; i.onCreateLabel = function (t, e, i, r, s) { i === void 0 && (i = 24); r === void 0 && (r = "#000000"); s === void 0 && (s = false); var n = new Q; n.text = t; n.font = "Microsoft YaHei"; n.fontSize = i; n.color = r; n.bold = s; n.leading = 10; n.valign = "middle"; n.align = "center"; n.size(152, 44); n.overflow = "hidden"; e.addChild(n); return n }; i.onCreateImage = function (t, e) { var i = new G; i.skin = t; e.addChild(i); return i }; return e }(Y) }; return c }(it); var xt = function (t) { function e() { e.__super.call(this) } n(e, "laya.ui.VBox", t); var i = e.prototype; i.changeItems = function () { this._itemChanged = false; var t = []; var e = 0; for (var i = 0, r = this.numChildren; i < r; i++) { var s = this.getChildAt(i); if (s && s.layoutEnabled) { t.push(s); e = this._width ? this._width : Math.max(e, s.width * s.scaleX) } } this.sortItem(t); var n = 0; for (i = 0, r = t.length; i < r; i++) { s = t[i]; s.y = n; n += s.height * s.scaleY + this._space; if (this._align == "left") { s.x = 0 } else if (this._align == "center") { s.x = (e - s.width * s.scaleX) * .5 } else if (this._align == "right") { s.x = e - s.width * s.scaleX } } this.changeSize() }; s(0, i, "width", t.prototype._$get_width, function (t) { if (this._width != t) { p.superSet(st, this, "width", t); this.callLater(this.changeItems) } }); e.NONE = "none"; e.LEFT = "left"; e.CENTER = "center"; e.RIGHT = "right"; return e }(st); var bt = function (t) { function e() { e.__super.call(this) } n(e, "laya.ui.RadioGroup", t); var i = e.prototype; i.createItem = function (t, e) { return new ct(t, e) }; return e }(ut); var wt = function (t) { function e() { e.__super.call(this) } n(e, "laya.ui.Tab", t); var i = e.prototype; i.createItem = function (t, e) { return new X(t, e) }; return e }(ut); var Tt = function (e) { function i(t) { this._vScrollBar = null; this._hScrollBar = null; t === void 0 && (t = ""); i.__super.call(this, t) } n(i, "laya.ui.TextArea", e); var t = i.prototype; t.destroy = function (t) { t === void 0 && (t = true); e.prototype.destroy.call(this, t); this._vScrollBar && this._vScrollBar.destroy(); this._hScrollBar && this._hScrollBar.destroy(); this._vScrollBar = null; this._hScrollBar = null }; t.initialize = function () { this.width = 180; this.height = 150; this._tf.wordWrap = true; this.multiline = true }; t.onVBarChanged = function (t) { if (this._tf.scrollY != this._vScrollBar.value) { this._tf.scrollY = this._vScrollBar.value } }; t.onHBarChanged = function (t) { if (this._tf.scrollX != this._hScrollBar.value) { this._tf.scrollX = this._hScrollBar.value } }; t.changeScroll = function () { var t = this._vScrollBar && this._tf.maxScrollY > 0; var e = this._hScrollBar && this._tf.maxScrollX > 0; var i = t ? this._width - this._vScrollBar.width : this._width; var r = e ? this._height - this._hScrollBar.height : this._height; var s = this._tf.padding || F.labelPadding; this._tf.width = i; this._tf.height = r; if (this._vScrollBar) { this._vScrollBar.x = this._width - this._vScrollBar.width - s[2]; this._vScrollBar.y = s[1]; this._vScrollBar.height = this._height - (e ? this._hScrollBar.height : 0) - s[1] - s[3]; this._vScrollBar.scrollSize = 1; this._vScrollBar.thumbPercent = r / Math.max(this._tf.textHeight, r); this._vScrollBar.setScroll(1, this._tf.maxScrollY, this._tf.scrollY); this._vScrollBar.visible = t } if (this._hScrollBar) { this._hScrollBar.x = s[0]; this._hScrollBar.y = this._height - this._hScrollBar.height - s[3]; this._hScrollBar.width = this._width - (t ? this._vScrollBar.width : 0) - s[0] - s[2]; this._hScrollBar.scrollSize = Math.max(i * .033, 1); this._hScrollBar.thumbPercent = i / Math.max(this._tf.textWidth, i); this._hScrollBar.setScroll(0, this.maxScrollX, this.scrollX); this._hScrollBar.visible = e } }; t.scrollTo = function (t) { this.commitMeasure(); this._tf.scrollY = t }; s(0, t, "scrollY", function () { return this._tf.scrollY }); s(0, t, "width", e.prototype._$get_width, function (t) { p.superSet(pt, this, "width", t); this.callLater(this.changeScroll) }); s(0, t, "hScrollBar", function () { return this._hScrollBar }); s(0, t, "height", e.prototype._$get_height, function (t) { p.superSet(pt, this, "height", t); this.callLater(this.changeScroll) }); s(0, t, "maxScrollX", function () { return this._tf.maxScrollX }); s(0, t, "vScrollBarSkin", function () { return this._vScrollBar ? this._vScrollBar.skin : null }, function (t) { if (this._vScrollBar == null) { this.addChild(this._vScrollBar = new dt); this._vScrollBar.on("change", this, this.onVBarChanged); this._vScrollBar.target = this._tf; this.callLater(this.changeScroll) } this._vScrollBar.skin = t }); s(0, t, "hScrollBarSkin", function () { return this._hScrollBar ? this._hScrollBar.skin : null }, function (t) { if (this._hScrollBar == null) { this.addChild(this._hScrollBar = new ot); this._hScrollBar.on("change", this, this.onHBarChanged); this._hScrollBar.mouseWheelEnable = false; this._hScrollBar.target = this._tf; this.callLater(this.changeScroll) } this._hScrollBar.skin = t }); s(0, t, "vScrollBar", function () { return this._vScrollBar }); s(0, t, "maxScrollY", function () { return this._tf.maxScrollY }); s(0, t, "scrollX", function () { return this._tf.scrollX }); return i }(pt); var Ct = function (t) { function e() { this._uiView = null; this.isCloseOther = false; e.__super.call(this) } n(e, "laya.ui.AsynDialog", t); var i = e.prototype; i.createView = function (t) { this._uiView = t }; i._open = function (t, e, i) { this.isModal = t; this.isCloseOther = e; mt.manager.lock(true); if (this._uiView) this.onCreated(); else this.onOpen() }; i.onCreated = function () { this.createUI(); this.onOpen() }; i.createUI = function () { laya.ui.View.prototype.createView.call(this, this._uiView); this._uiView = null; this._dealDragArea() }; i.onOpen = function () { mt.manager.open(this, this.isCloseOther); mt.manager.lock(false) }; i.close = function (t, e) { e === void 0 && (e = true); mt.manager.close(this); this.onClose() }; i.onClose = function () { }; i.destroy = function (t) { t === void 0 && (t = true); laya.ui.View.prototype.destroy.call(this, t); this._uiView = null; this.onDestroy() }; i.onDestroy = function () { }; return e }(mt); p.__init([it, yt]) })(window, document, Laya); if (typeof define === "function" && define.amd) { define("laya.core", ["require", "exports"], function (t, e) { "use strict"; Object.defineProperty(e, "__esModule", { value: true }); for (var i in Laya) { var r = Laya[i]; r && r.__isclass && (e[i] = r) } }) } !function (t) { var e; "undefined" != typeof window ? e = window : "undefined" != typeof global ? e = global : "undefined" != typeof self && (e = self), e.JSZip = t() }(function () { var t, e, i; return function s(n, a, o) { function h(i, t) { if (!a[i]) { if (!n[i]) { var e = typeof require == "function" && require; if (!t && e) return e(i, !0); if (l) return l(i, !0); throw new Error("Cannot find module '" + i + "'") } var r = a[i] = { exports: {} }; n[i][0].call(r.exports, function (t) { var e = n[i][1][t]; return h(e ? e : t) }, r, r.exports, s, n, a, o) } return a[i].exports } var l = typeof require == "function" && require; for (var t = 0; t < o.length; t++)h(o[t]); return h }({ 1: [function (t, e, i) { "use strict"; var c = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="; i.encode = function (t, e) { var i = ""; var r, s, n, a, o, h, l; var u = 0; while (u < t.length) { r = t.charCodeAt(u++); s = t.charCodeAt(u++); n = t.charCodeAt(u++); a = r >> 2; o = (r & 3) << 4 | s >> 4; h = (s & 15) << 2 | n >> 6; l = n & 63; if (isNaN(s)) { h = l = 64 } else if (isNaN(n)) { l = 64 } i = i + c.charAt(a) + c.charAt(o) + c.charAt(h) + c.charAt(l) } return i }; i.decode = function (t, e) { var i = ""; var r, s, n; var a, o, h, l; var u = 0; t = t.replace(/[^A-Za-z0-9\+\/\=]/g, ""); while (u < t.length) { a = c.indexOf(t.charAt(u++)); o = c.indexOf(t.charAt(u++)); h = c.indexOf(t.charAt(u++)); l = c.indexOf(t.charAt(u++)); r = a << 2 | o >> 4; s = (o & 15) << 4 | h >> 2; n = (h & 3) << 6 | l; i = i + String.fromCharCode(r); if (h != 64) { i = i + String.fromCharCode(s) } if (l != 64) { i = i + String.fromCharCode(n) } } return i } }, {}], 2: [function (t, e, i) { "use strict"; function r() { this.compressedSize = 0; this.uncompressedSize = 0; this.crc32 = 0; this.compressionMethod = null; this.compressedContent = null } r.prototype = { getContent: function () { return null }, getCompressedContent: function () { return null } }; e.exports = r }, {}], 3: [function (t, e, i) { "use strict"; i.STORE = { magic: "\0\0", compress: function (t) { return t }, uncompress: function (t) { return t }, compressInputType: null, uncompressInputType: null }; i.DEFLATE = t("./flate") }, { "./flate": 8 }], 4: [function (t, e, i) { "use strict"; var l = t("./utils"); var u = [0, 1996959894, 3993919788, 2567524794, 124634137, 1886057615, 3915621685, 2657392035, 249268274, 2044508324, 3772115230, 2547177864, 162941995, 2125561021, 3887607047, 2428444049, 498536548, 1789927666, 4089016648, 2227061214, 450548861, 1843258603, 4107580753, 2211677639, 325883990, 1684777152, 4251122042, 2321926636, 335633487, 1661365465, 4195302755, 2366115317, 997073096, 1281953886, 3579855332, 2724688242, 1006888145, 1258607687, 3524101629, 2768942443, 901097722, 1119000684, 3686517206, 2898065728, 853044451, 1172266101, 3705015759, 2882616665, 651767980, 1373503546, 3369554304, 3218104598, 565507253, 1454621731, 3485111705, 3099436303, 671266974, 1594198024, 3322730930, 2970347812, 795835527, 1483230225, 3244367275, 3060149565, 1994146192, 31158534, 2563907772, 4023717930, 1907459465, 112637215, 2680153253, 3904427059, 2013776290, 251722036, 2517215374, 3775830040, 2137656763, 141376813, 2439277719, 3865271297, 1802195444, 476864866, 2238001368, 4066508878, 1812370925, 453092731, 2181625025, 4111451223, 1706088902, 314042704, 2344532202, 4240017532, 1658658271, 366619977, 2362670323, 4224994405, 1303535960, 984961486, 2747007092, 3569037538, 1256170817, 1037604311, 2765210733, 3554079995, 1131014506, 879679996, 2909243462, 3663771856, 1141124467, 855842277, 2852801631, 3708648649, 1342533948, 654459306, 3188396048, 3373015174, 1466479909, 544179635, 3110523913, 3462522015, 1591671054, 702138776, 2966460450, 3352799412, 1504918807, 783551873, 3082640443, 3233442989, 3988292384, 2596254646, 62317068, 1957810842, 3939845945, 2647816111, 81470997, 1943803523, 3814918930, 2489596804, 225274430, 2053790376, 3826175755, 2466906013, 167816743, 2097651377, 4027552580, 2265490386, 503444072, 1762050814, 4150417245, 2154129355, 426522225, 1852507879, 4275313526, 2312317920, 282753626, 1742555852, 4189708143, 2394877945, 397917763, 1622183637, 3604390888, 2714866558, 953729732, 1340076626, 3518719985, 2797360999, 1068828381, 1219638859, 3624741850, 2936675148, 906185462, 1090812512, 3747672003, 2825379669, 829329135, 1181335161, 3412177804, 3160834842, 628085408, 1382605366, 3423369109, 3138078467, 570562233, 1426400815, 3317316542, 2998733608, 733239954, 1555261956, 3268935591, 3050360625, 752459403, 1541320221, 2607071920, 3965973030, 1969922972, 40735498, 2617837225, 3943577151, 1913087877, 83908371, 2512341634, 3803740692, 2075208622, 213261112, 2463272603, 3855990285, 2094854071, 198958881, 2262029012, 4057260610, 1759359992, 534414190, 2176718541, 4139329115, 1873836001, 414664567, 2282248934, 4279200368, 1711684554, 285281116, 2405801727, 4167216745, 1634467795, 376229701, 2685067896, 3608007406, 1308918612, 956543938, 2808555105, 3495958263, 1231636301, 1047427035, 2932959818, 3654703836, 1088359270, 936918e3, 2847714899, 3736837829, 1202900863, 817233897, 3183342108, 3401237130, 1404277552, 615818150, 3134207493, 3453421203, 1423857449, 601450431, 3009837614, 3294710456, 1567103746, 711928724, 3020668471, 3272380065, 1510334235, 755167117]; e.exports = function t(e, i) { if (typeof e === "undefined" || !e.length) { return 0 } var r = l.getTypeOf(e) !== "string"; if (typeof i == "undefined") { i = 0 } var s = 0; var n = 0; var a = 0; i = i ^ -1; for (var o = 0, h = e.length; o < h; o++) { a = r ? e[o] : e.charCodeAt(o); n = (i ^ a) & 255; s = u[n]; i = i >>> 8 ^ s } return i ^ -1 } }, { "./utils": 21 }], 5: [function (t, e, i) { "use strict"; var r = t("./utils"); function s(t) { this.data = null; this.length = 0; this.index = 0 } s.prototype = { checkOffset: function (t) { this.checkIndex(this.index + t) }, checkIndex: function (t) { if (this.length < t || t < 0) { throw new Error("End of data reached (data length = " + this.length + ", asked index = " + t + "). Corrupted zip ?") } }, setIndex: function (t) { this.checkIndex(t); this.index = t }, skip: function (t) { this.setIndex(this.index + t) }, byteAt: function (t) { }, readInt: function (t) { var e = 0, i; this.checkOffset(t); for (i = this.index + t - 1; i >= this.index; i--) { e = (e << 8) + this.byteAt(i) } this.index += t; return e }, readString: function (t) { return r.transformTo("string", this.readData(t)) }, readData: function (t) { }, lastIndexOfSignature: function (t) { }, readDate: function () { var t = this.readInt(4); return new Date((t >> 25 & 127) + 1980, (t >> 21 & 15) - 1, t >> 16 & 31, t >> 11 & 31, t >> 5 & 63, (t & 31) << 1) } }; e.exports = s }, { "./utils": 21 }], 6: [function (t, e, i) { "use strict"; i.base64 = false; i.binary = false; i.dir = false; i.createFolders = false; i.date = null; i.compression = null; i.comment = null }, {}], 7: [function (t, e, i) { "use strict"; var r = t("./utils"); i.string2binary = function (t) { return r.string2binary(t) }; i.string2Uint8Array = function (t) { return r.transformTo("uint8array", t) }; i.uint8Array2String = function (t) { return r.transformTo("string", t) }; i.string2Blob = function (t) { var e = r.transformTo("arraybuffer", t); return r.arrayBuffer2Blob(e) }; i.arrayBuffer2Blob = function (t) { return r.arrayBuffer2Blob(t) }; i.transformTo = function (t, e) { return r.transformTo(t, e) }; i.getTypeOf = function (t) { return r.getTypeOf(t) }; i.checkSupport = function (t) { return r.checkSupport(t) }; i.MAX_VALUE_16BITS = r.MAX_VALUE_16BITS; i.MAX_VALUE_32BITS = r.MAX_VALUE_32BITS; i.pretty = function (t) { return r.pretty(t) }; i.findCompression = function (t) { return r.findCompression(t) }; i.isRegExp = function (t) { return r.isRegExp(t) } }, { "./utils": 21 }], 8: [function (t, e, i) { "use strict"; var r = typeof Uint8Array !== "undefined" && typeof Uint16Array !== "undefined" && typeof Uint32Array !== "undefined"; var s = t("pako"); i.uncompressInputType = r ? "uint8array" : "array"; i.compressInputType = r ? "uint8array" : "array"; i.magic = "\b\0"; i.compress = function (t) { return s.deflateRaw(t) }; i.uncompress = function (t) { return s.inflateRaw(t) } }, { pako: 24 }], 9: [function (t, e, i) { "use strict"; var r = t("./base64"); function s(t, e) { if (!(this instanceof s)) return new s(t, e); this.files = {}; this.comment = null; this.root = ""; if (t) { this.load(t, e) } this.clone = function () { var t = new s; for (var e in this) { if (typeof this[e] !== "function") { t[e] = this[e] } } return t } } s.prototype = t("./object"); s.prototype.load = t("./load"); s.support = t("./support"); s.defaults = t("./defaults"); s.utils = t("./deprecatedPublicUtils"); s.base64 = { encode: function (t) { return r.encode(t) }, decode: function (t) { return r.decode(t) } }; s.compressions = t("./compressions"); e.exports = s }, { "./base64": 1, "./compressions": 3, "./defaults": 6, "./deprecatedPublicUtils": 7, "./load": 10, "./object": 13, "./support": 17 }], 10: [function (t, e, i) { "use strict"; var a = t("./base64"); var o = t("./zipEntries"); e.exports = function (t, e) { var i, r, s, n; e = e || {}; if (e.base64) { t = a.decode(t) } r = new o(t, e); i = r.files; for (s = 0; s < i.length; s++) { n = i[s]; this.file(n.fileName, n.decompressed, { binary: true, optimizedBinaryString: true, date: n.date, dir: n.dir, comment: n.fileComment.length ? n.fileComment : null, createFolders: e.createFolders }) } if (r.zipComment.length) { this.comment = r.zipComment } return this } }, { "./base64": 1, "./zipEntries": 22 }], 11: [function (t, e, i) { (function (i) { "use strict"; e.exports = function (t, e) { return new i(t, e) }; e.exports.test = function (t) { return i.isBuffer(t) } }).call(this, typeof Buffer !== "undefined" ? Buffer : undefined) }, {}], 12: [function (t, e, i) { "use strict"; var r = t("./uint8ArrayReader"); function s(t) { this.data = t; this.length = this.data.length; this.index = 0 } s.prototype = new r; s.prototype.readData = function (t) { this.checkOffset(t); var e = this.data.slice(this.index, this.index + t); this.index += t; return e }; e.exports = s }, { "./uint8ArrayReader": 18 }], 13: [function (t, e, i) { "use strict"; var r = t("./support"); var b = t("./utils"); var w = t("./crc32"); var T = t("./signature"); var s = t("./defaults"); var v = t("./base64"); var m = t("./compressions"); var a = t("./compressedObject"); var n = t("./nodeBuffer"); var C = t("./utf8"); var g = t("./stringWriter"); var y = t("./uint8ArrayWriter"); var o = function (t) { if (t._data instanceof a) { t._data = t._data.getContent(); t.options.binary = true; t.options.base64 = false; if (b.getTypeOf(t._data) === "uint8array") { var e = t._data; t._data = new Uint8Array(e.length); if (e.length !== 0) { t._data.set(e, 0) } } } return t._data }; var h = function (t) { var e = o(t), i = b.getTypeOf(e); if (i === "string") { if (!t.options.binary) { if (r.nodebuffer) { return n(e, "utf-8") } } return t.asBinary() } return e }; var l = function (t) { var e = o(this); if (e === null || typeof e === "undefined") { return "" } if (this.options.base64) { e = v.decode(e) } if (t && this.options.binary) { e = p.utf8decode(e) } else { e = b.transformTo("string", e) } if (!t && !this.options.binary) { e = b.transformTo("string", p.utf8encode(e)) } return e }; var u = function (t, e, i) { this.name = t; this.dir = i.dir; this.date = i.date; this.comment = i.comment; this._data = e; this.options = i; this._initialMetadata = { dir: i.dir, date: i.date } }; u.prototype = { asText: function () { return l.call(this, true) }, asBinary: function () { return l.call(this, false) }, asNodeBuffer: function () { var t = h(this); return b.transformTo("nodebuffer", t) }, asUint8Array: function () { var t = h(this); return b.transformTo("uint8array", t) }, asArrayBuffer: function () { return this.asUint8Array().buffer } }; var S = function (t, e) { var i = "", r; for (r = 0; r < e; r++) { i += String.fromCharCode(t & 255); t = t >>> 8 } return i }; var x = function () { var t = {}, e, i; for (e = 0; e < arguments.length; e++) { for (i in arguments[e]) { if (arguments[e].hasOwnProperty(i) && typeof t[i] === "undefined") { t[i] = arguments[e][i] } } } return t }; var c = function (t) { t = t || {}; if (t.base64 === true && (t.binary === null || t.binary === undefined)) { t.binary = true } t = x(t, s); t.date = t.date || new Date; if (t.compression !== null) t.compression = t.compression.toUpperCase(); return t }; var f = function (t, e, i) { var r = b.getTypeOf(e), s; i = c(i); if (i.createFolders && (s = _(t))) { d.call(this, s, true) } if (i.dir || e === null || typeof e === "undefined") { i.base64 = false; i.binary = false; e = null } else if (r === "string") { if (i.binary && !i.base64) { if (i.optimizedBinaryString !== true) { e = b.string2binary(e) } } } else { i.base64 = false; i.binary = true; if (!r && !(e instanceof a)) { throw new Error("The data of '" + t + "' is in an unsupported format !") } if (r === "arraybuffer") { e = b.transformTo("uint8array", e) } } var n = new u(t, e, i); this.files[t] = n; return n }; var _ = function (t) { if (t.slice(-1) == "/") { t = t.substring(0, t.length - 1) } var e = t.lastIndexOf("/"); return e > 0 ? t.substring(0, e) : "" }; var d = function (t, e) { if (t.slice(-1) != "/") { t += "/" } e = typeof e !== "undefined" ? e : false; if (!this.files[t]) { f.call(this, t, null, { dir: true, createFolders: e }) } return this.files[t] }; var A = function (t, e) { var i = new a, r; if (t._data instanceof a) { i.uncompressedSize = t._data.uncompressedSize; i.crc32 = t._data.crc32; if (i.uncompressedSize === 0 || t.dir) { e = m["STORE"]; i.compressedContent = ""; i.crc32 = 0 } else if (t._data.compressionMethod === e.magic) { i.compressedContent = t._data.getCompressedContent() } else { r = t._data.getContent(); i.compressedContent = e.compress(b.transformTo(e.compressInputType, r)) } } else { r = h(t); if (!r || r.length === 0 || t.dir) { e = m["STORE"]; r = "" } i.uncompressedSize = r.length; i.crc32 = w(r); i.compressedContent = e.compress(b.transformTo(e.compressInputType, r)) } i.compressedSize = i.compressedContent.length; i.compressionMethod = e.magic; return i }; var M = function (t, e, i, r) { var s = i.compressedContent, n = b.transformTo("string", C.utf8encode(e.name)), a = e.comment || "", o = b.transformTo("string", C.utf8encode(a)), h = n.length !== e.name.length, l = o.length !== a.length, u = e.options, c, f, _ = "", d = "", p = "", v, m; if (e._initialMetadata.dir !== e.dir) { v = e.dir } else { v = u.dir } if (e._initialMetadata.date !== e.date) { m = e.date } else { m = u.date } c = m.getHours(); c = c << 6; c = c | m.getMinutes(); c = c << 5; c = c | m.getSeconds() / 2; f = m.getFullYear() - 1980; f = f << 4; f = f | m.getMonth() + 1; f = f << 5; f = f | m.getDate(); if (h) { d = S(1, 1) + S(w(n), 4) + n; _ += "up" + S(d.length, 2) + d } if (l) { p = S(1, 1) + S(this.crc32(o), 4) + o; _ += "uc" + S(p.length, 2) + p } var g = ""; g += "\n\0"; g += h || l ? "\0\b" : "\0\0"; g += i.compressionMethod; g += S(c, 2); g += S(f, 2); g += S(i.crc32, 4); g += S(i.compressedSize, 4); g += S(i.uncompressedSize, 4); g += S(n.length, 2); g += S(_.length, 2); var y = T.LOCAL_FILE_HEADER + g + n + _; var x = T.CENTRAL_FILE_HEADER + "\0" + g + S(o.length, 2) + "\0\0" + "\0\0" + (v === true ? "\0\0\0" : "\0\0\0\0") + S(r, 4) + n + _ + o; return { fileRecord: y, dirRecord: x, compressedObject: i } }; var p = { load: function (t, e) { throw new Error("Load method is not defined. Is the file jszip-load.js included ?") }, filter: function (t) { var e = [], i, r, s, n; for (i in this.files) { if (!this.files.hasOwnProperty(i)) { continue } s = this.files[i]; n = new u(s.name, s._data, x(s.options)); r = i.slice(this.root.length, i.length); if (i.slice(0, this.root.length) === this.root && t(r, n)) { e.push(n) } } return e }, file: function (i, t, e) { if (arguments.length === 1) { if (b.isRegExp(i)) { var r = i; return this.filter(function (t, e) { return !e.dir && r.test(t) }) } else { return this.filter(function (t, e) { return !e.dir && t === i })[0] || null } } else { i = this.root + i; f.call(this, i, t, e) } return this }, folder: function (i) { if (!i) { return this } if (b.isRegExp(i)) { return this.filter(function (t, e) { return e.dir && i.test(t) }) } var t = this.root + i; var e = d.call(this, t); var r = this.clone(); r.root = e.name; return r }, remove: function (i) { i = this.root + i; var t = this.files[i]; if (!t) { if (i.slice(-1) != "/") { i += "/" } t = this.files[i] } if (t && !t.dir) { delete this.files[i] } else { var e = this.filter(function (t, e) { return e.name.slice(0, i.length) === i }); for (var r = 0; r < e.length; r++) { delete this.files[e[r].name] } } return this }, generate: function (t) { t = x(t || {}, { base64: true, compression: "STORE", type: "base64", comment: null }); b.checkSupport(t.type); var e = [], i = 0, r = 0, s, n, a = b.transformTo("string", this.utf8encode(t.comment || this.comment || "")); for (var o in this.files) { if (!this.files.hasOwnProperty(o)) { continue } var h = this.files[o]; var l = h.options.compression || t.compression.toUpperCase(); var u = m[l]; if (!u) { throw new Error(l + " is not a valid compression method !") } var c = A.call(this, h, u); var f = M.call(this, o, h, c, i); i += f.fileRecord.length + c.compressedSize; r += f.dirRecord.length; e.push(f) } var _ = ""; _ = T.CENTRAL_DIRECTORY_END + "\0\0" + "\0\0" + S(e.length, 2) + S(e.length, 2) + S(r, 4) + S(i, 4) + S(a.length, 2) + a; var d = t.type.toLowerCase(); if (d === "uint8array" || d === "arraybuffer" || d === "blob" || d === "nodebuffer") { s = new y(i + r + _.length) } else { s = new g(i + r + _.length) } for (n = 0; n < e.length; n++) { s.append(e[n].fileRecord); s.append(e[n].compressedObject.compressedContent) } for (n = 0; n < e.length; n++) { s.append(e[n].dirRecord) } s.append(_); var p = s.finalize(); switch (t.type.toLowerCase()) { case "uint8array": case "arraybuffer": case "nodebuffer": return b.transformTo(t.type.toLowerCase(), p); case "blob": return b.arrayBuffer2Blob(b.transformTo("arraybuffer", p)); case "base64": return t.base64 ? v.encode(p) : p; default: return p } }, crc32: function (t, e) { return w(t, e) }, utf8encode: function (t) { return b.transformTo("string", C.utf8encode(t)) }, utf8decode: function (t) { return C.utf8decode(t) } }; e.exports = p }, { "./base64": 1, "./compressedObject": 2, "./compressions": 3, "./crc32": 4, "./defaults": 6, "./nodeBuffer": 11, "./signature": 14, "./stringWriter": 16, "./support": 17, "./uint8ArrayWriter": 19, "./utf8": 20, "./utils": 21 }], 14: [function (t, e, i) { "use strict"; i.LOCAL_FILE_HEADER = "PK"; i.CENTRAL_FILE_HEADER = "PK"; i.CENTRAL_DIRECTORY_END = "PK"; i.ZIP64_CENTRAL_DIRECTORY_LOCATOR = "PK"; i.ZIP64_CENTRAL_DIRECTORY_END = "PK"; i.DATA_DESCRIPTOR = "PK\b" }, {}], 15: [function (t, e, i) { "use strict"; var r = t("./dataReader"); var s = t("./utils"); function n(t, e) { this.data = t; if (!e) { this.data = s.string2binary(this.data) } this.length = this.data.length; this.index = 0 } n.prototype = new r; n.prototype.byteAt = function (t) { return this.data.charCodeAt(t) }; n.prototype.lastIndexOfSignature = function (t) { return this.data.lastIndexOf(t) }; n.prototype.readData = function (t) { this.checkOffset(t); var e = this.data.slice(this.index, this.index + t); this.index += t; return e }; e.exports = n }, { "./dataReader": 5, "./utils": 21 }], 16: [function (t, e, i) { "use strict"; var r = t("./utils"); var s = function () { this.data = [] }; s.prototype = { append: function (t) { t = r.transformTo("string", t); this.data.push(t) }, finalize: function () { return this.data.join("") } }; e.exports = s }, { "./utils": 21 }], 17: [function (t, e, s) { (function (t) { "use strict"; s.base64 = true; s.array = true; s.string = true; s.arraybuffer = typeof ArrayBuffer !== "undefined" && typeof Uint8Array !== "undefined"; s.nodebuffer = typeof t !== "undefined"; s.uint8array = typeof Uint8Array !== "undefined"; if (typeof ArrayBuffer === "undefined") { s.blob = false } else { var e = new ArrayBuffer(0); try { s.blob = new Blob([e], { type: "application/zip" }).size === 0 } catch (t) { try { var i = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder; var r = new i; r.append(e); s.blob = r.getBlob("application/zip").size === 0 } catch (t) { s.blob = false } } } }).call(this, typeof Buffer !== "undefined" ? Buffer : undefined) }, {}], 18: [function (t, e, i) { "use strict"; var r = t("./dataReader"); function s(t) { if (t) { this.data = t; this.length = this.data.length; this.index = 0 } } s.prototype = new r; s.prototype.byteAt = function (t) { return this.data[t] }; s.prototype.lastIndexOfSignature = function (t) { var e = t.charCodeAt(0), i = t.charCodeAt(1), r = t.charCodeAt(2), s = t.charCodeAt(3); for (var n = this.length - 4; n >= 0; --n) { if (this.data[n] === e && this.data[n + 1] === i && this.data[n + 2] === r && this.data[n + 3] === s) { return n } } return -1 }; s.prototype.readData = function (t) { this.checkOffset(t); if (t === 0) { return new Uint8Array(0) } var e = this.data.subarray(this.index, this.index + t); this.index += t; return e }; e.exports = s }, { "./dataReader": 5 }], 19: [function (t, e, i) { "use strict"; var r = t("./utils"); var s = function (t) { this.data = new Uint8Array(t); this.index = 0 }; s.prototype = { append: function (t) { if (t.length !== 0) { t = r.transformTo("uint8array", t); this.data.set(t, this.index); this.index += t.length } }, finalize: function () { return this.data } }; e.exports = s }, { "./utils": 21 }], 20: [function (t, e, i) { "use strict"; var h = t("./utils"); var l = t("./support"); var r = t("./nodeBuffer"); var u = new Array(256); for (var s = 0; s < 256; s++) { u[s] = s >= 252 ? 6 : s >= 248 ? 5 : s >= 240 ? 4 : s >= 224 ? 3 : s >= 192 ? 2 : 1 } u[254] = u[254] = 1; var n = function (t) { var e, i, r, s, n, a = t.length, o = 0; for (s = 0; s < a; s++) { i = t.charCodeAt(s); if ((i & 64512) === 55296 && s + 1 < a) { r = t.charCodeAt(s + 1); if ((r & 64512) === 56320) { i = 65536 + (i - 55296 << 10) + (r - 56320); s++ } } o += i < 128 ? 1 : i < 2048 ? 2 : i < 65536 ? 3 : 4 } if (l.uint8array) { e = new Uint8Array(o) } else { e = new Array(o) } for (n = 0, s = 0; n < o; s++) { i = t.charCodeAt(s); if ((i & 64512) === 55296 && s + 1 < a) { r = t.charCodeAt(s + 1); if ((r & 64512) === 56320) { i = 65536 + (i - 55296 << 10) + (r - 56320); s++ } } if (i < 128) { e[n++] = i } else if (i < 2048) { e[n++] = 192 | i >>> 6; e[n++] = 128 | i & 63 } else if (i < 65536) { e[n++] = 224 | i >>> 12; e[n++] = 128 | i >>> 6 & 63; e[n++] = 128 | i & 63 } else { e[n++] = 240 | i >>> 18; e[n++] = 128 | i >>> 12 & 63; e[n++] = 128 | i >>> 6 & 63; e[n++] = 128 | i & 63 } } return e }; var o = function (t, e) { var i; e = e || t.length; if (e > t.length) { e = t.length } i = e - 1; while (i >= 0 && (t[i] & 192) === 128) { i-- } if (i < 0) { return e } if (i === 0) { return e } return i + u[t[i]] > e ? i : e }; var c = function (t) { var e, i, r, s, n; var a = t.length; var o = new Array(a * 2); for (r = 0, i = 0; i < a;) { s = t[i++]; if (s < 128) { o[r++] = s; continue } n = u[s]; if (n > 4) { o[r++] = 65533; i += n - 1; continue } s &= n === 2 ? 31 : n === 3 ? 15 : 7; while (n > 1 && i < a) { s = s << 6 | t[i++] & 63; n-- } if (n > 1) { o[r++] = 65533; continue } if (s < 65536) { o[r++] = s } else { s -= 65536; o[r++] = 55296 | s >> 10 & 1023; o[r++] = 56320 | s & 1023 } } if (o.length !== r) { if (o.subarray) { o = o.subarray(0, r) } else { o.length = r } } return h.applyFromCharCode(o) }; i.utf8encode = function t(e) { if (l.nodebuffer) { return r(e, "utf-8") } return n(e) }; i.utf8decode = function t(e) { if (l.nodebuffer) { return h.transformTo("nodebuffer", e).toString("utf-8") } e = h.transformTo(l.uint8array ? "uint8array" : "array", e); var i = [], r = 0, s = e.length, n = 65536; while (r < s) { var a = o(e, Math.min(r + n, s)); if (l.uint8array) { i.push(c(e.subarray(r, a))) } else { i.push(c(e.slice(r, a))) } r = a } return i.join("") } }, { "./nodeBuffer": 11, "./support": 17, "./utils": 21 }], 21: [function (t, e, l) { "use strict"; var i = t("./support"); var r = t("./compressions"); var u = t("./nodeBuffer"); l.string2binary = function (t) { var e = ""; for (var i = 0; i < t.length; i++) { e += String.fromCharCode(t.charCodeAt(i) & 255) } return e }; l.arrayBuffer2Blob = function (e) { l.checkSupport("blob"); try { return new Blob([e], { type: "application/zip" }) } catch (t) { try { var i = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder; var r = new i; r.append(e); return r.getBlob("application/zip") } catch (t) { throw new Error("Bug : can't construct the Blob.") } } }; function s(t) { return t } function n(t, e) { for (var i = 0; i < t.length; ++i) { e[i] = t.charCodeAt(i) & 255 } return e } function a(t) { var e = 65536; var i = [], r = t.length, s = l.getTypeOf(t), n = 0, a = true; try { switch (s) { case "uint8array": String.fromCharCode.apply(null, new Uint8Array(0)); break; case "nodebuffer": String.fromCharCode.apply(null, u(0)); break } } catch (t) { a = false } if (!a) { var o = ""; for (var h = 0; h < t.length; h++) { o += String.fromCharCode(t[h]) } return o } while (n < r && e > 1) { try { if (s === "array" || s === "nodebuffer") { i.push(String.fromCharCode.apply(null, t.slice(n, Math.min(n + e, r)))) } else { i.push(String.fromCharCode.apply(null, t.subarray(n, Math.min(n + e, r)))) } n += e } catch (t) { e = Math.floor(e / 2) } } return i.join("") } l.applyFromCharCode = a; function o(t, e) { for (var i = 0; i < t.length; i++) { e[i] = t[i] } return e } var h = {}; h["string"] = { string: s, array: function (t) { return n(t, new Array(t.length)) }, arraybuffer: function (t) { return h["string"]["uint8array"](t).buffer }, uint8array: function (t) { return n(t, new Uint8Array(t.length)) }, nodebuffer: function (t) { return n(t, u(t.length)) } }; h["array"] = { string: a, array: s, arraybuffer: function (t) { return new Uint8Array(t).buffer }, uint8array: function (t) { return new Uint8Array(t) }, nodebuffer: function (t) { return u(t) } }; h["arraybuffer"] = { string: function (t) { return a(new Uint8Array(t)) }, array: function (t) { return o(new Uint8Array(t), new Array(t.byteLength)) }, arraybuffer: s, uint8array: function (t) { return new Uint8Array(t) }, nodebuffer: function (t) { return u(new Uint8Array(t)) } }; h["uint8array"] = { string: a, array: function (t) { return o(t, new Array(t.length)) }, arraybuffer: function (t) { return t.buffer }, uint8array: s, nodebuffer: function (t) { return u(t) } }; h["nodebuffer"] = { string: a, array: function (t) { return o(t, new Array(t.length)) }, arraybuffer: function (t) { return h["nodebuffer"]["uint8array"](t).buffer }, uint8array: function (t) { return o(t, new Uint8Array(t.length)) }, nodebuffer: s }; l.transformTo = function (t, e) { if (!e) { e = "" } if (!t) { return e } l.checkSupport(t); var i = l.getTypeOf(e); var r = h[i][t](e); return r }; l.getTypeOf = function (t) { if (typeof t === "string") { return "string" } if (Object.prototype.toString.call(t) === "[object Array]") { return "array" } if (i.nodebuffer && u.test(t)) { return "nodebuffer" } if (i.uint8array && t instanceof Uint8Array) { return "uint8array" } if (i.arraybuffer && t instanceof ArrayBuffer) { return "arraybuffer" } }; l.checkSupport = function (t) { var e = i[t.toLowerCase()]; if (!e) { throw new Error(t + " is not supported by this browser") } }; l.MAX_VALUE_16BITS = 65535; l.MAX_VALUE_32BITS = -1; l.pretty = function (t) { var e = "", i, r; for (r = 0; r < (t || "").length; r++) { i = t.charCodeAt(r); e += "\\x" + (i < 16 ? "0" : "") + i.toString(16).toUpperCase() } return e }; l.findCompression = function (t) { for (var e in r) { if (!r.hasOwnProperty(e)) { continue } if (r[e].magic === t) { return r[e] } } return null }; l.isRegExp = function (t) { return Object.prototype.toString.call(t) === "[object RegExp]" } }, { "./compressions": 3, "./nodeBuffer": 11, "./support": 17 }], 22: [function (t, e, i) { "use strict"; var r = t("./stringReader"); var s = t("./nodeBufferReader"); var n = t("./uint8ArrayReader"); var a = t("./utils"); var o = t("./signature"); var h = t("./zipEntry"); var l = t("./support"); var u = t("./object"); function c(t, e) { this.files = []; this.loadOptions = e; if (t) { this.load(t) } } c.prototype = { checkSignature: function (t) { var e = this.reader.readString(4); if (e !== t) { throw new Error("Corrupted zip or bug : unexpected signature " + "(" + a.pretty(e) + ", expected " + a.pretty(t) + ")") } }, readBlockEndOfCentral: function () { this.diskNumber = this.reader.readInt(2); this.diskWithCentralDirStart = this.reader.readInt(2); this.centralDirRecordsOnThisDisk = this.reader.readInt(2); this.centralDirRecords = this.reader.readInt(2); this.centralDirSize = this.reader.readInt(4); this.centralDirOffset = this.reader.readInt(4); this.zipCommentLength = this.reader.readInt(2); this.zipComment = this.reader.readString(this.zipCommentLength); this.zipComment = u.utf8decode(this.zipComment) }, readBlockZip64EndOfCentral: function () { this.zip64EndOfCentralSize = this.reader.readInt(8); this.versionMadeBy = this.reader.readString(2); this.versionNeeded = this.reader.readInt(2); this.diskNumber = this.reader.readInt(4); this.diskWithCentralDirStart = this.reader.readInt(4); this.centralDirRecordsOnThisDisk = this.reader.readInt(8); this.centralDirRecords = this.reader.readInt(8); this.centralDirSize = this.reader.readInt(8); this.centralDirOffset = this.reader.readInt(8); this.zip64ExtensibleData = {}; var t = this.zip64EndOfCentralSize - 44, e = 0, i, r, s; while (e < t) { i = this.reader.readInt(2); r = this.reader.readInt(4); s = this.reader.readString(r); this.zip64ExtensibleData[i] = { id: i, length: r, value: s } } }, readBlockZip64EndOfCentralLocator: function () { this.diskWithZip64CentralDirStart = this.reader.readInt(4); this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8); this.disksCount = this.reader.readInt(4); if (this.disksCount > 1) { throw new Error("Multi-volumes zip are not supported") } }, readLocalFiles: function () { var t, e; for (t = 0; t < this.files.length; t++) { e = this.files[t]; this.reader.setIndex(e.localHeaderOffset); this.checkSignature(o.LOCAL_FILE_HEADER); e.readLocalPart(this.reader); e.handleUTF8() } }, readCentralDir: function () { var t; this.reader.setIndex(this.centralDirOffset); while (this.reader.readString(4) === o.CENTRAL_FILE_HEADER) { t = new h({ zip64: this.zip64 }, this.loadOptions); t.readCentralPart(this.reader); this.files.push(t) } }, readEndOfCentral: function () { var t = this.reader.lastIndexOfSignature(o.CENTRAL_DIRECTORY_END); if (t === -1) { throw new Error("Corrupted zip : can't find end of central directory") } this.reader.setIndex(t); this.checkSignature(o.CENTRAL_DIRECTORY_END); this.readBlockEndOfCentral(); if (this.diskNumber === a.MAX_VALUE_16BITS || this.diskWithCentralDirStart === a.MAX_VALUE_16BITS || this.centralDirRecordsOnThisDisk === a.MAX_VALUE_16BITS || this.centralDirRecords === a.MAX_VALUE_16BITS || this.centralDirSize === a.MAX_VALUE_32BITS || this.centralDirOffset === a.MAX_VALUE_32BITS) { this.zip64 = true; t = this.reader.lastIndexOfSignature(o.ZIP64_CENTRAL_DIRECTORY_LOCATOR); if (t === -1) { throw new Error("Corrupted zip : can't find the ZIP64 end of central directory locator") } this.reader.setIndex(t); this.checkSignature(o.ZIP64_CENTRAL_DIRECTORY_LOCATOR); this.readBlockZip64EndOfCentralLocator(); this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir); this.checkSignature(o.ZIP64_CENTRAL_DIRECTORY_END); this.readBlockZip64EndOfCentral() } }, prepareReader: function (t) { var e = a.getTypeOf(t); if (e === "string" && !l.uint8array) { this.reader = new r(t, this.loadOptions.optimizedBinaryString) } else if (e === "nodebuffer") { this.reader = new s(t) } else { this.reader = new n(a.transformTo("uint8array", t)) } }, load: function (t) { this.prepareReader(t); this.readEndOfCentral(); this.readCentralDir(); this.readLocalFiles() } }; e.exports = c }, { "./nodeBufferReader": 12, "./object": 13, "./signature": 14, "./stringReader": 15, "./support": 17, "./uint8ArrayReader": 18, "./utils": 21, "./zipEntry": 23 }], 23: [function (t, e, i) { "use strict"; var r = t("./stringReader"); var n = t("./utils"); var s = t("./compressedObject"); var a = t("./object"); function o(t, e) { this.options = t; this.loadOptions = e } o.prototype = { isEncrypted: function () { return (this.bitFlag & 1) === 1 }, useUTF8: function () { return (this.bitFlag & 2048) === 2048 }, prepareCompressedContent: function (i, r, s) { return function () { var t = i.index; i.setIndex(r); var e = i.readData(s); i.setIndex(t); return e } }, prepareContent: function (t, e, i, r, s) { return function () { var t = n.transformTo(r.uncompressInputType, this.getCompressedContent()); var e = r.uncompress(t); if (e.length !== s) { throw new Error("Bug : uncompressed data size mismatch") } return e } }, readLocalPart: function (t) { var e, i; t.skip(22); this.fileNameLength = t.readInt(2); i = t.readInt(2); this.fileName = t.readString(this.fileNameLength); t.skip(i); if (this.compressedSize == -1 || this.uncompressedSize == -1) { throw new Error("Bug or corrupted zip : didn't get enough informations from the central directory " + "(compressedSize == -1 || uncompressedSize == -1)") } e = n.findCompression(this.compressionMethod); if (e === null) { throw new Error("Corrupted zip : compression " + n.pretty(this.compressionMethod) + " unknown (inner file : " + this.fileName + ")") } this.decompressed = new s; this.decompressed.compressedSize = this.compressedSize; this.decompressed.uncompressedSize = this.uncompressedSize; this.decompressed.crc32 = this.crc32; this.decompressed.compressionMethod = this.compressionMethod; this.decompressed.getCompressedContent = this.prepareCompressedContent(t, t.index, this.compressedSize, e); this.decompressed.getContent = this.prepareContent(t, t.index, this.compressedSize, e, this.uncompressedSize); if (this.loadOptions.checkCRC32) { this.decompressed = n.transformTo("string", this.decompressed.getContent()); if (a.crc32(this.decompressed) !== this.crc32) { throw new Error("Corrupted zip : CRC32 mismatch") } } }, readCentralPart: function (t) { this.versionMadeBy = t.readString(2); this.versionNeeded = t.readInt(2); this.bitFlag = t.readInt(2); this.compressionMethod = t.readString(2); this.date = t.readDate(); this.crc32 = t.readInt(4); this.compressedSize = t.readInt(4); this.uncompressedSize = t.readInt(4); this.fileNameLength = t.readInt(2); this.extraFieldsLength = t.readInt(2); this.fileCommentLength = t.readInt(2); this.diskNumberStart = t.readInt(2); this.internalFileAttributes = t.readInt(2); this.externalFileAttributes = t.readInt(4); this.localHeaderOffset = t.readInt(4); if (this.isEncrypted()) { throw new Error("Encrypted zip are not supported") } this.fileName = t.readString(this.fileNameLength); this.readExtraFields(t); this.parseZIP64ExtraField(t); this.fileComment = t.readString(this.fileCommentLength); this.dir = this.externalFileAttributes & 16 ? true : false }, parseZIP64ExtraField: function (t) { if (!this.extraFields[1]) { return } var e = new r(this.extraFields[1].value); if (this.uncompressedSize === n.MAX_VALUE_32BITS) { this.uncompressedSize = e.readInt(8) } if (this.compressedSize === n.MAX_VALUE_32BITS) { this.compressedSize = e.readInt(8) } if (this.localHeaderOffset === n.MAX_VALUE_32BITS) { this.localHeaderOffset = e.readInt(8) } if (this.diskNumberStart === n.MAX_VALUE_32BITS) { this.diskNumberStart = e.readInt(4) } }, readExtraFields: function (t) { var e = t.index, i, r, s; this.extraFields = this.extraFields || {}; while (t.index < e + this.extraFieldsLength) { i = t.readInt(2); r = t.readInt(2); s = t.readString(r); this.extraFields[i] = { id: i, length: r, value: s } } }, handleUTF8: function () { if (this.useUTF8()) { this.fileName = a.utf8decode(this.fileName); this.fileComment = a.utf8decode(this.fileComment) } else { var t = this.findExtraFieldUnicodePath(); if (t !== null) { this.fileName = t } var e = this.findExtraFieldUnicodeComment(); if (e !== null) { this.fileComment = e } } }, findExtraFieldUnicodePath: function () { var t = this.extraFields[28789]; if (t) { var e = new r(t.value); if (e.readInt(1) !== 1) { return null } if (a.crc32(this.fileName) !== e.readInt(4)) { return null } return a.utf8decode(e.readString(t.length - 5)) } return null }, findExtraFieldUnicodeComment: function () { var t = this.extraFields[25461]; if (t) { var e = new r(t.value); if (e.readInt(1) !== 1) { return null } if (a.crc32(this.fileComment) !== e.readInt(4)) { return null } return a.utf8decode(e.readString(t.length - 5)) } return null } }; e.exports = o }, { "./compressedObject": 2, "./object": 13, "./stringReader": 15, "./utils": 21 }], 24: [function (t, e, i) { "use strict"; var r = t("./lib/utils/common").assign; var s = t("./lib/deflate"); var n = t("./lib/inflate"); var a = t("./lib/zlib/constants"); var o = {}; r(o, s, n, a); e.exports = o }, { "./lib/deflate": 25, "./lib/inflate": 26, "./lib/utils/common": 27, "./lib/zlib/constants": 30 }], 25: [function (t, e, i) { "use strict"; var a = t("./zlib/deflate.js"); var o = t("./utils/common"); var h = t("./utils/strings"); var r = t("./zlib/messages"); var s = t("./zlib/zstream"); var l = 0; var u = 4; var c = 0; var f = 1; var n = -1; var _ = 0; var d = 8; var p = function (t) { this.options = o.assign({ level: n, method: d, chunkSize: 16384, windowBits: 15, memLevel: 8, strategy: _, to: "" }, t || {}); var e = this.options; if (e.raw && e.windowBits > 0) { e.windowBits = -e.windowBits } else if (e.gzip && e.windowBits > 0 && e.windowBits < 16) { e.windowBits += 16 } this.err = 0; this.msg = ""; this.ended = false; this.chunks = []; this.strm = new s; this.strm.avail_out = 0; var i = a.deflateInit2(this.strm, e.level, e.method, e.windowBits, e.memLevel, e.strategy); if (i !== c) { throw new Error(r[i]) } if (e.header) { a.deflateSetHeader(this.strm, e.header) } }; p.prototype.push = function (t, e) { var i = this.strm; var r = this.options.chunkSize; var s, n; if (this.ended) { return false } n = e === ~~e ? e : e === true ? u : l; if (typeof t === "string") { i.input = h.string2buf(t) } else { i.input = t } i.next_in = 0; i.avail_in = i.input.length; do { if (i.avail_out === 0) { i.output = new o.Buf8(r); i.next_out = 0; i.avail_out = r } s = a.deflate(i, n); if (s !== f && s !== c) { this.onEnd(s); this.ended = true; return false } if (i.avail_out === 0 || i.avail_in === 0 && n === u) { if (this.options.to === "string") { this.onData(h.buf2binstring(o.shrinkBuf(i.output, i.next_out))) } else { this.onData(o.shrinkBuf(i.output, i.next_out)) } } } while ((i.avail_in > 0 || i.avail_out === 0) && s !== f); if (n === u) { s = a.deflateEnd(this.strm); this.onEnd(s); this.ended = true; return s === c } return true }; p.prototype.onData = function (t) { this.chunks.push(t) }; p.prototype.onEnd = function (t) { if (t === c) { if (this.options.to === "string") { this.result = this.chunks.join("") } else { this.result = o.flattenChunks(this.chunks) } } this.chunks = []; this.err = t; this.msg = this.strm.msg }; function v(t, e) { var i = new p(e); i.push(t, true); if (i.err) { throw i.msg } return i.result } function m(t, e) { e = e || {}; e.raw = true; return v(t, e) } function g(t, e) { e = e || {}; e.gzip = true; return v(t, e) } i.Deflate = p; i.deflate = v; i.deflateRaw = m; i.gzip = g }, { "./utils/common": 27, "./utils/strings": 28, "./zlib/deflate.js": 32, "./zlib/messages": 37, "./zlib/zstream": 39 }], 26: [function (t, e, i) { "use strict"; var l = t("./zlib/inflate.js"); var u = t("./utils/common"); var c = t("./utils/strings"); var f = t("./zlib/constants"); var r = t("./zlib/messages"); var s = t("./zlib/zstream"); var n = t("./zlib/gzheader"); var a = function (t) { this.options = u.assign({ chunkSize: 16384, windowBits: 0, to: "" }, t || {}); var e = this.options; if (e.raw && e.windowBits >= 0 && e.windowBits < 16) { e.windowBits = -e.windowBits; if (e.windowBits === 0) { e.windowBits = -15 } } if (e.windowBits >= 0 && e.windowBits < 16 && !(t && t.windowBits)) { e.windowBits += 32 } if (e.windowBits > 15 && e.windowBits < 48) { if ((e.windowBits & 15) === 0) { e.windowBits |= 15 } } this.err = 0; this.msg = ""; this.ended = false; this.chunks = []; this.strm = new s; this.strm.avail_out = 0; var i = l.inflateInit2(this.strm, e.windowBits); if (i !== f.Z_OK) { throw new Error(r[i]) } this.header = new n; l.inflateGetHeader(this.strm, this.header) }; a.prototype.push = function (t, e) { var i = this.strm; var r = this.options.chunkSize; var s, n; var a, o, h; if (this.ended) { return false } n = e === ~~e ? e : e === true ? f.Z_FINISH : f.Z_NO_FLUSH; if (typeof t === "string") { i.input = c.binstring2buf(t) } else { i.input = t } i.next_in = 0; i.avail_in = i.input.length; do { if (i.avail_out === 0) { i.output = new u.Buf8(r); i.next_out = 0; i.avail_out = r } s = l.inflate(i, f.Z_NO_FLUSH); if (s !== f.Z_STREAM_END && s !== f.Z_OK) { this.onEnd(s); this.ended = true; return false } if (i.next_out) { if (i.avail_out === 0 || s === f.Z_STREAM_END || i.avail_in === 0 && n === f.Z_FINISH) { if (this.options.to === "string") { a = c.utf8border(i.output, i.next_out); o = i.next_out - a; h = c.buf2string(i.output, a); i.next_out = o; i.avail_out = r - o; if (o) { u.arraySet(i.output, i.output, a, o, 0) } this.onData(h) } else { this.onData(u.shrinkBuf(i.output, i.next_out)) } } } } while (i.avail_in > 0 && s !== f.Z_STREAM_END); if (s === f.Z_STREAM_END) { n = f.Z_FINISH } if (n === f.Z_FINISH) { s = l.inflateEnd(this.strm); this.onEnd(s); this.ended = true; return s === f.Z_OK } return true }; a.prototype.onData = function (t) { this.chunks.push(t) }; a.prototype.onEnd = function (t) { if (t === f.Z_OK) { if (this.options.to === "string") { this.result = this.chunks.join("") } else { this.result = u.flattenChunks(this.chunks) } } this.chunks = []; this.err = t; this.msg = this.strm.msg }; function o(t, e) { var i = new a(e); i.push(t, true); if (i.err) { throw i.msg } return i.result } function h(t, e) { e = e || {}; e.raw = true; return o(t, e) } i.Inflate = a; i.inflate = o; i.inflateRaw = h; i.ungzip = o }, { "./utils/common": 27, "./utils/strings": 28, "./zlib/constants": 30, "./zlib/gzheader": 33, "./zlib/inflate.js": 35, "./zlib/messages": 37, "./zlib/zstream": 39 }], 27: [function (t, e, i) { "use strict"; var r = typeof Uint8Array !== "undefined" && typeof Uint16Array !== "undefined" && typeof Int32Array !== "undefined"; i.assign = function (t) { var e = Array.prototype.slice.call(arguments, 1); while (e.length) { var i = e.shift(); if (!i) { continue } if (typeof i !== "object") { throw new TypeError(i + "must be non-object") } for (var r in i) { if (i.hasOwnProperty(r)) { t[r] = i[r] } } } return t }; i.shrinkBuf = function (t, e) { if (t.length === e) { return t } if (t.subarray) { return t.subarray(0, e) } t.length = e; return t }; var s = { arraySet: function (t, e, i, r, s) { if (e.subarray && t.subarray) { t.set(e.subarray(i, i + r), s); return } for (var n = 0; n < r; n++) { t[s + n] = e[i + n] } }, flattenChunks: function (t) { var e, i, r, s, n, a; r = 0; for (e = 0, i = t.length; e < i; e++) { r += t[e].length } a = new Uint8Array(r); s = 0; for (e = 0, i = t.length; e < i; e++) { n = t[e]; a.set(n, s); s += n.length } return a } }; var n = { arraySet: function (t, e, i, r, s) { for (var n = 0; n < r; n++) { t[s + n] = e[i + n] } }, flattenChunks: function (t) { return [].concat.apply([], t) } }; i.setTyped = function (t) { if (t) { i.Buf8 = Uint8Array; i.Buf16 = Uint16Array; i.Buf32 = Int32Array; i.assign(i, s) } else { i.Buf8 = Array; i.Buf16 = Array; i.Buf32 = Array; i.assign(i, n) } }; i.setTyped(r) }, {}], 28: [function (t, e, i) { "use strict"; var h = t("./common"); var s = true; var n = true; try { String.fromCharCode.apply(null, [0]) } catch (t) { s = false } try { String.fromCharCode.apply(null, new Uint8Array(1)) } catch (t) { n = false } var l = new h.Buf8(256); for (var r = 0; r < 256; r++) { l[r] = r >= 252 ? 6 : r >= 248 ? 5 : r >= 240 ? 4 : r >= 224 ? 3 : r >= 192 ? 2 : 1 } l[254] = l[254] = 1; i.string2buf = function (t) { var e, i, r, s, n, a = t.length, o = 0; for (s = 0; s < a; s++) { i = t.charCodeAt(s); if ((i & 64512) === 55296 && s + 1 < a) { r = t.charCodeAt(s + 1); if ((r & 64512) === 56320) { i = 65536 + (i - 55296 << 10) + (r - 56320); s++ } } o += i < 128 ? 1 : i < 2048 ? 2 : i < 65536 ? 3 : 4 } e = new h.Buf8(o); for (n = 0, s = 0; n < o; s++) { i = t.charCodeAt(s); if ((i & 64512) === 55296 && s + 1 < a) { r = t.charCodeAt(s + 1); if ((r & 64512) === 56320) { i = 65536 + (i - 55296 << 10) + (r - 56320); s++ } } if (i < 128) { e[n++] = i } else if (i < 2048) { e[n++] = 192 | i >>> 6; e[n++] = 128 | i & 63 } else if (i < 65536) { e[n++] = 224 | i >>> 12; e[n++] = 128 | i >>> 6 & 63; e[n++] = 128 | i & 63 } else { e[n++] = 240 | i >>> 18; e[n++] = 128 | i >>> 12 & 63; e[n++] = 128 | i >>> 6 & 63; e[n++] = 128 | i & 63 } } return e }; function u(t, e) { if (e < 65537) { if (t.subarray && n || !t.subarray && s) { return String.fromCharCode.apply(null, h.shrinkBuf(t, e)) } } var i = ""; for (var r = 0; r < e; r++) { i += String.fromCharCode(t[r]) } return i } i.buf2binstring = function (t) { return u(t, t.length) }; i.binstring2buf = function (t) { var e = new h.Buf8(t.length); for (var i = 0, r = e.length; i < r; i++) { e[i] = t.charCodeAt(i) } return e }; i.buf2string = function (t, e) { var i, r, s, n; var a = e || t.length; var o = new Array(a * 2); for (r = 0, i = 0; i < a;) { s = t[i++]; if (s < 128) { o[r++] = s; continue } n = l[s]; if (n > 4) { o[r++] = 65533; i += n - 1; continue } s &= n === 2 ? 31 : n === 3 ? 15 : 7; while (n > 1 && i < a) { s = s << 6 | t[i++] & 63; n-- } if (n > 1) { o[r++] = 65533; continue } if (s < 65536) { o[r++] = s } else { s -= 65536; o[r++] = 55296 | s >> 10 & 1023; o[r++] = 56320 | s & 1023 } } return u(o, r) }; i.utf8border = function (t, e) { var i; e = e || t.length; if (e > t.length) { e = t.length } i = e - 1; while (i >= 0 && (t[i] & 192) === 128) { i-- } if (i < 0) { return e } if (i === 0) { return e } return i + l[t[i]] > e ? i : e } }, { "./common": 27 }], 29: [function (t, e, i) { "use strict"; function r(t, e, i, r) { var s = t & 65535 | 0, n = t >>> 16 & 65535 | 0, a = 0; while (i !== 0) { a = i > 2e3 ? 2e3 : i; i -= a; do { s = s + e[r++] | 0; n = n + s | 0 } while (--a); s %= 65521; n %= 65521 } return s | n << 16 | 0 } e.exports = r }, {}], 30: [function (t, e, i) { e.exports = { Z_NO_FLUSH: 0, Z_PARTIAL_FLUSH: 1, Z_SYNC_FLUSH: 2, Z_FULL_FLUSH: 3, Z_FINISH: 4, Z_BLOCK: 5, Z_TREES: 6, Z_OK: 0, Z_STREAM_END: 1, Z_NEED_DICT: 2, Z_ERRNO: -1, Z_STREAM_ERROR: -2, Z_DATA_ERROR: -3, Z_BUF_ERROR: -5, Z_NO_COMPRESSION: 0, Z_BEST_SPEED: 1, Z_BEST_COMPRESSION: 9, Z_DEFAULT_COMPRESSION: -1, Z_FILTERED: 1, Z_HUFFMAN_ONLY: 2, Z_RLE: 3, Z_FIXED: 4, Z_DEFAULT_STRATEGY: 0, Z_BINARY: 0, Z_TEXT: 1, Z_UNKNOWN: 2, Z_DEFLATED: 8 } }, {}], 31: [function (t, e, i) { "use strict"; function r() { var t, e = []; for (var i = 0; i < 256; i++) { t = i; for (var r = 0; r < 8; r++) { t = t & 1 ? 3988292384 ^ t >>> 1 : t >>> 1 } e[i] = t } return e } var o = r(); function s(t, e, i, r) { var s = o, n = r + i; t = t ^ -1; for (var a = r; a < n; a++) { t = t >>> 8 ^ s[(t ^ e[a]) & 255] } return t ^ -1 } e.exports = s }, {}], 32: [function (t, e, i) { "use strict"; var h = t("../utils/common"); var l = t("./trees"); var n = t("./adler32"); var u = t("./crc32"); var r = t("./messages"); var c = 0; var f = 1; var _ = 3; var d = 4; var p = 5; var v = 0; var m = 1; var g = -2; var s = -3; var y = -5; var x = -1; var a = 1; var b = 2; var w = 3; var T = 4; var o = 0; var C = 2; var S = 8; var A = 9; var M = 15; var I = 8; var E = 29; var R = 256; var P = R + 1 + E; var L = 30; var k = 19; var D = 2 * P + 1; var B = 15; var N = 3; var F = 258; var O = F + N + 1; var z = 32; var U = 42; var W = 69; var V = 73; var H = 91; var G = 103; var Y = 113; var X = 666; var j = 1; var K = 2; var $ = 3; var q = 4; var Z = 3; function Q(t, e) { t.msg = r[e]; return e } function J(t) { return (t << 1) - (t > 4 ? 9 : 0) } function tt(t) { var e = t.length; while (--e >= 0) { t[e] = 0 } } function et(t) { var e = t.state; var i = e.pending; if (i > t.avail_out) { i = t.avail_out } if (i === 0) { return } h.arraySet(t.output, e.pending_buf, e.pending_out, i, t.next_out); t.next_out += i; e.pending_out += i; t.total_out += i; t.avail_out -= i; e.pending -= i; if (e.pending === 0) { e.pending_out = 0 } } function it(t, e) { l._tr_flush_block(t, t.block_start >= 0 ? t.block_start : -1, t.strstart - t.block_start, e); t.block_start = t.strstart; et(t.strm) } function rt(t, e) { t.pending_buf[t.pending++] = e } function st(t, e) { t.pending_buf[t.pending++] = e >>> 8 & 255; t.pending_buf[t.pending++] = e & 255 } function nt(t, e, i, r) { var s = t.avail_in; if (s > r) { s = r } if (s === 0) { return 0 } t.avail_in -= s; h.arraySet(e, t.input, t.next_in, s, i); if (t.state.wrap === 1) { t.adler = n(t.adler, e, s, i) } else if (t.state.wrap === 2) { t.adler = u(t.adler, e, s, i) } t.next_in += s; t.total_in += s; return s } function at(t, e) { var i = t.max_chain_length; var r = t.strstart; var s; var n; var a = t.prev_length; var o = t.nice_match; var h = t.strstart > t.w_size - O ? t.strstart - (t.w_size - O) : 0; var l = t.window; var u = t.w_mask; var c = t.prev; var f = t.strstart + F; var _ = l[r + a - 1]; var d = l[r + a]; if (t.prev_length >= t.good_match) { i >>= 2 } if (o > t.lookahead) { o = t.lookahead } do { s = e; if (l[s + a] !== d || l[s + a - 1] !== _ || l[s] !== l[r] || l[++s] !== l[r + 1]) { continue } r += 2; s++; do { } while (l[++r] === l[++s] && l[++r] === l[++s] && l[++r] === l[++s] && l[++r] === l[++s] && l[++r] === l[++s] && l[++r] === l[++s] && l[++r] === l[++s] && l[++r] === l[++s] && r < f); n = F - (f - r); r = f - F; if (n > a) { t.match_start = e; a = n; if (n >= o) { break } _ = l[r + a - 1]; d = l[r + a] } } while ((e = c[e & u]) > h && --i !== 0); if (a <= t.lookahead) { return a } return t.lookahead } function ot(t) { var e = t.w_size; var i, r, s, n, a; do { n = t.window_size - t.lookahead - t.strstart; if (t.strstart >= e + (e - O)) { h.arraySet(t.window, t.window, e, e, 0); t.match_start -= e; t.strstart -= e; t.block_start -= e; r = t.hash_size; i = r; do { s = t.head[--i]; t.head[i] = s >= e ? s - e : 0 } while (--r); r = e; i = r; do { s = t.prev[--i]; t.prev[i] = s >= e ? s - e : 0 } while (--r); n += e } if (t.strm.avail_in === 0) { break } r = nt(t.strm, t.window, t.strstart + t.lookahead, n); t.lookahead += r; if (t.lookahead + t.insert >= N) { a = t.strstart - t.insert; t.ins_h = t.window[a]; t.ins_h = (t.ins_h << t.hash_shift ^ t.window[a + 1]) & t.hash_mask; while (t.insert) { t.ins_h = (t.ins_h << t.hash_shift ^ t.window[a + N - 1]) & t.hash_mask; t.prev[a & t.w_mask] = t.head[t.ins_h]; t.head[t.ins_h] = a; a++; t.insert--; if (t.lookahead + t.insert < N) { break } } } } while (t.lookahead < O && t.strm.avail_in !== 0) } function ht(t, e) { var i = 65535; if (i > t.pending_buf_size - 5) { i = t.pending_buf_size - 5 } for (; ;) { if (t.lookahead <= 1) { ot(t); if (t.lookahead === 0 && e === c) { return j } if (t.lookahead === 0) { break } } t.strstart += t.lookahead; t.lookahead = 0; var r = t.block_start + i; if (t.strstart === 0 || t.strstart >= r) { t.lookahead = t.strstart - r; t.strstart = r; it(t, false); if (t.strm.avail_out === 0) { return j } } if (t.strstart - t.block_start >= t.w_size - O) { it(t, false); if (t.strm.avail_out === 0) { return j } } } t.insert = 0; if (e === d) { it(t, true); if (t.strm.avail_out === 0) { return $ } return q } if (t.strstart > t.block_start) { it(t, false); if (t.strm.avail_out === 0) { return j } } return j } function lt(t, e) { var i; var r; for (; ;) { if (t.lookahead < O) { ot(t); if (t.lookahead < O && e === c) { return j } if (t.lookahead === 0) { break } } i = 0; if (t.lookahead >= N) { t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + N - 1]) & t.hash_mask; i = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h]; t.head[t.ins_h] = t.strstart } if (i !== 0 && t.strstart - i <= t.w_size - O) { t.match_length = at(t, i) } if (t.match_length >= N) { r = l._tr_tally(t, t.strstart - t.match_start, t.match_length - N); t.lookahead -= t.match_length; if (t.match_length <= t.max_lazy_match && t.lookahead >= N) { t.match_length--; do { t.strstart++; t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + N - 1]) & t.hash_mask; i = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h]; t.head[t.ins_h] = t.strstart } while (--t.match_length !== 0); t.strstart++ } else { t.strstart += t.match_length; t.match_length = 0; t.ins_h = t.window[t.strstart]; t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + 1]) & t.hash_mask } } else { r = l._tr_tally(t, 0, t.window[t.strstart]); t.lookahead--; t.strstart++ } if (r) { it(t, false); if (t.strm.avail_out === 0) { return j } } } t.insert = t.strstart < N - 1 ? t.strstart : N - 1; if (e === d) { it(t, true); if (t.strm.avail_out === 0) { return $ } return q } if (t.last_lit) { it(t, false); if (t.strm.avail_out === 0) { return j } } return K } function ut(t, e) { var i; var r; var s; for (; ;) { if (t.lookahead < O) { ot(t); if (t.lookahead < O && e === c) { return j } if (t.lookahead === 0) { break } } i = 0; if (t.lookahead >= N) { t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + N - 1]) & t.hash_mask; i = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h]; t.head[t.ins_h] = t.strstart } t.prev_length = t.match_length; t.prev_match = t.match_start; t.match_length = N - 1; if (i !== 0 && t.prev_length < t.max_lazy_match && t.strstart - i <= t.w_size - O) { t.match_length = at(t, i); if (t.match_length <= 5 && (t.strategy === a || t.match_length === N && t.strstart - t.match_start > 4096)) { t.match_length = N - 1 } } if (t.prev_length >= N && t.match_length <= t.prev_length) { s = t.strstart + t.lookahead - N; r = l._tr_tally(t, t.strstart - 1 - t.prev_match, t.prev_length - N); t.lookahead -= t.prev_length - 1; t.prev_length -= 2; do { if (++t.strstart <= s) { t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + N - 1]) & t.hash_mask; i = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h]; t.head[t.ins_h] = t.strstart } } while (--t.prev_length !== 0); t.match_available = 0; t.match_length = N - 1; t.strstart++; if (r) { it(t, false); if (t.strm.avail_out === 0) { return j } } } else if (t.match_available) { r = l._tr_tally(t, 0, t.window[t.strstart - 1]); if (r) { it(t, false) } t.strstart++; t.lookahead--; if (t.strm.avail_out === 0) { return j } } else { t.match_available = 1; t.strstart++; t.lookahead-- } } if (t.match_available) { r = l._tr_tally(t, 0, t.window[t.strstart - 1]); t.match_available = 0 } t.insert = t.strstart < N - 1 ? t.strstart : N - 1; if (e === d) { it(t, true); if (t.strm.avail_out === 0) { return $ } return q } if (t.last_lit) { it(t, false); if (t.strm.avail_out === 0) { return j } } return K } function ct(t, e) { var i; var r; var s, n; var a = t.window; for (; ;) { if (t.lookahead <= F) { ot(t); if (t.lookahead <= F && e === c) { return j } if (t.lookahead === 0) { break } } t.match_length = 0; if (t.lookahead >= N && t.strstart > 0) { s = t.strstart - 1; r = a[s]; if (r === a[++s] && r === a[++s] && r === a[++s]) { n = t.strstart + F; do { } while (r === a[++s] && r === a[++s] && r === a[++s] && r === a[++s] && r === a[++s] && r === a[++s] && r === a[++s] && r === a[++s] && s < n); t.match_length = F - (n - s); if (t.match_length > t.lookahead) { t.match_length = t.lookahead } } } if (t.match_length >= N) { i = l._tr_tally(t, 1, t.match_length - N); t.lookahead -= t.match_length; t.strstart += t.match_length; t.match_length = 0 } else { i = l._tr_tally(t, 0, t.window[t.strstart]); t.lookahead--; t.strstart++ } if (i) { it(t, false); if (t.strm.avail_out === 0) { return j } } } t.insert = 0; if (e === d) { it(t, true); if (t.strm.avail_out === 0) { return $ } return q } if (t.last_lit) { it(t, false); if (t.strm.avail_out === 0) { return j } } return K } function ft(t, e) { var i; for (; ;) { if (t.lookahead === 0) { ot(t); if (t.lookahead === 0) { if (e === c) { return j } break } } t.match_length = 0; i = l._tr_tally(t, 0, t.window[t.strstart]); t.lookahead--; t.strstart++; if (i) { it(t, false); if (t.strm.avail_out === 0) { return j } } } t.insert = 0; if (e === d) { it(t, true); if (t.strm.avail_out === 0) { return $ } return q } if (t.last_lit) { it(t, false); if (t.strm.avail_out === 0) { return j } } return K } var _t = function (t, e, i, r, s) { this.good_length = t; this.max_lazy = e; this.nice_length = i; this.max_chain = r; this.func = s }; var dt; dt = [new _t(0, 0, 0, 0, ht), new _t(4, 4, 8, 4, lt), new _t(4, 5, 16, 8, lt), new _t(4, 6, 32, 32, lt), new _t(4, 4, 16, 16, ut), new _t(8, 16, 32, 32, ut), new _t(8, 16, 128, 128, ut), new _t(8, 32, 128, 256, ut), new _t(32, 128, 258, 1024, ut), new _t(32, 258, 258, 4096, ut)]; function pt(t) { t.window_size = 2 * t.w_size; tt(t.head); t.max_lazy_match = dt[t.level].max_lazy; t.good_match = dt[t.level].good_length; t.nice_match = dt[t.level].nice_length; t.max_chain_length = dt[t.level].max_chain; t.strstart = 0; t.block_start = 0; t.lookahead = 0; t.insert = 0; t.match_length = t.prev_length = N - 1; t.match_available = 0; t.ins_h = 0 } function vt() { this.strm = null; this.status = 0; this.pending_buf = null; this.pending_buf_size = 0; this.pending_out = 0; this.pending = 0; this.wrap = 0; this.gzhead = null; this.gzindex = 0; this.method = S; this.last_flush = -1; this.w_size = 0; this.w_bits = 0; this.w_mask = 0; this.window = null; this.window_size = 0; this.prev = null; this.head = null; this.ins_h = 0; this.hash_size = 0; this.hash_bits = 0; this.hash_mask = 0; this.hash_shift = 0; this.block_start = 0; this.match_length = 0; this.prev_match = 0; this.match_available = 0; this.strstart = 0; this.match_start = 0; this.lookahead = 0; this.prev_length = 0; this.max_chain_length = 0; this.max_lazy_match = 0; this.level = 0; this.strategy = 0; this.good_match = 0; this.nice_match = 0; this.dyn_ltree = new h.Buf16(D * 2); this.dyn_dtree = new h.Buf16((2 * L + 1) * 2); this.bl_tree = new h.Buf16((2 * k + 1) * 2); tt(this.dyn_ltree); tt(this.dyn_dtree); tt(this.bl_tree); this.l_desc = null; this.d_desc = null; this.bl_desc = null; this.bl_count = new h.Buf16(B + 1); this.heap = new h.Buf16(2 * P + 1); tt(this.heap); this.heap_len = 0; this.heap_max = 0; this.depth = new h.Buf16(2 * P + 1); tt(this.depth); this.l_buf = 0; this.lit_bufsize = 0; this.last_lit = 0; this.d_buf = 0; this.opt_len = 0; this.static_len = 0; this.matches = 0; this.insert = 0; this.bi_buf = 0; this.bi_valid = 0 } function mt(t) { var e; if (!t || !t.state) { return Q(t, g) } t.total_in = t.total_out = 0; t.data_type = C; e = t.state; e.pending = 0; e.pending_out = 0; if (e.wrap < 0) { e.wrap = -e.wrap } e.status = e.wrap ? U : Y; t.adler = e.wrap === 2 ? 0 : 1; e.last_flush = c; l._tr_init(e); return v } function gt(t) { var e = mt(t); if (e === v) { pt(t.state) } return e } function yt(t, e) { if (!t || !t.state) { return g } if (t.state.wrap !== 2) { return g } t.state.gzhead = e; return v } function xt(t, e, i, r, s, n) { if (!t) { return g } var a = 1; if (e === x) { e = 6 } if (r < 0) { a = 0; r = -r } else if (r > 15) { a = 2; r -= 16 } if (s < 1 || s > A || i !== S || r < 8 || r > 15 || e < 0 || e > 9 || n < 0 || n > T) { return Q(t, g) } if (r === 8) { r = 9 } var o = new vt; t.state = o; o.strm = t; o.wrap = a; o.gzhead = null; o.w_bits = r; o.w_size = 1 << o.w_bits; o.w_mask = o.w_size - 1; o.hash_bits = s + 7; o.hash_size = 1 << o.hash_bits; o.hash_mask = o.hash_size - 1; o.hash_shift = ~~((o.hash_bits + N - 1) / N); o.window = new h.Buf8(o.w_size * 2); o.head = new h.Buf16(o.hash_size); o.prev = new h.Buf16(o.w_size); o.lit_bufsize = 1 << s + 6; o.pending_buf_size = o.lit_bufsize * 4; o.pending_buf = new h.Buf8(o.pending_buf_size); o.d_buf = o.lit_bufsize >> 1; o.l_buf = (1 + 2) * o.lit_bufsize; o.level = e; o.strategy = n; o.method = i; return gt(t) } function bt(t, e) { return xt(t, e, S, M, I, o) } function wt(t, e) { var i, r; var s, n; if (!t || !t.state || e > p || e < 0) { return t ? Q(t, g) : g } r = t.state; if (!t.output || !t.input && t.avail_in !== 0 || r.status === X && e !== d) { return Q(t, t.avail_out === 0 ? y : g) } r.strm = t; i = r.last_flush; r.last_flush = e; if (r.status === U) { if (r.wrap === 2) { t.adler = 0; rt(r, 31); rt(r, 139); rt(r, 8); if (!r.gzhead) { rt(r, 0); rt(r, 0); rt(r, 0); rt(r, 0); rt(r, 0); rt(r, r.level === 9 ? 2 : r.strategy >= b || r.level < 2 ? 4 : 0); rt(r, Z); r.status = Y } else { rt(r, (r.gzhead.text ? 1 : 0) + (r.gzhead.hcrc ? 2 : 0) + (!r.gzhead.extra ? 0 : 4) + (!r.gzhead.name ? 0 : 8) + (!r.gzhead.comment ? 0 : 16)); rt(r, r.gzhead.time & 255); rt(r, r.gzhead.time >> 8 & 255); rt(r, r.gzhead.time >> 16 & 255); rt(r, r.gzhead.time >> 24 & 255); rt(r, r.level === 9 ? 2 : r.strategy >= b || r.level < 2 ? 4 : 0); rt(r, r.gzhead.os & 255); if (r.gzhead.extra && r.gzhead.extra.length) { rt(r, r.gzhead.extra.length & 255); rt(r, r.gzhead.extra.length >> 8 & 255) } if (r.gzhead.hcrc) { t.adler = u(t.adler, r.pending_buf, r.pending, 0) } r.gzindex = 0; r.status = W } } else { var a = S + (r.w_bits - 8 << 4) << 8; var o = -1; if (r.strategy >= b || r.level < 2) { o = 0 } else if (r.level < 6) { o = 1 } else if (r.level === 6) { o = 2 } else { o = 3 } a |= o << 6; if (r.strstart !== 0) { a |= z } a += 31 - a % 31; r.status = Y; st(r, a); if (r.strstart !== 0) { st(r, t.adler >>> 16); st(r, t.adler & 65535) } t.adler = 1 } } if (r.status === W) { if (r.gzhead.extra) { s = r.pending; while (r.gzindex < (r.gzhead.extra.length & 65535)) { if (r.pending === r.pending_buf_size) { if (r.gzhead.hcrc && r.pending > s) { t.adler = u(t.adler, r.pending_buf, r.pending - s, s) } et(t); s = r.pending; if (r.pending === r.pending_buf_size) { break } } rt(r, r.gzhead.extra[r.gzindex] & 255); r.gzindex++ } if (r.gzhead.hcrc && r.pending > s) { t.adler = u(t.adler, r.pending_buf, r.pending - s, s) } if (r.gzindex === r.gzhead.extra.length) { r.gzindex = 0; r.status = V } } else { r.status = V } } if (r.status === V) { if (r.gzhead.name) { s = r.pending; do { if (r.pending === r.pending_buf_size) { if (r.gzhead.hcrc && r.pending > s) { t.adler = u(t.adler, r.pending_buf, r.pending - s, s) } et(t); s = r.pending; if (r.pending === r.pending_buf_size) { n = 1; break } } if (r.gzindex < r.gzhead.name.length) { n = r.gzhead.name.charCodeAt(r.gzindex++) & 255 } else { n = 0 } rt(r, n) } while (n !== 0); if (r.gzhead.hcrc && r.pending > s) { t.adler = u(t.adler, r.pending_buf, r.pending - s, s) } if (n === 0) { r.gzindex = 0; r.status = H } } else { r.status = H } } if (r.status === H) { if (r.gzhead.comment) { s = r.pending; do { if (r.pending === r.pending_buf_size) { if (r.gzhead.hcrc && r.pending > s) { t.adler = u(t.adler, r.pending_buf, r.pending - s, s) } et(t); s = r.pending; if (r.pending === r.pending_buf_size) { n = 1; break } } if (r.gzindex < r.gzhead.comment.length) { n = r.gzhead.comment.charCodeAt(r.gzindex++) & 255 } else { n = 0 } rt(r, n) } while (n !== 0); if (r.gzhead.hcrc && r.pending > s) { t.adler = u(t.adler, r.pending_buf, r.pending - s, s) } if (n === 0) { r.status = G } } else { r.status = G } } if (r.status === G) { if (r.gzhead.hcrc) { if (r.pending + 2 > r.pending_buf_size) { et(t) } if (r.pending + 2 <= r.pending_buf_size) { rt(r, t.adler & 255); rt(r, t.adler >> 8 & 255); t.adler = 0; r.status = Y } } else { r.status = Y } } if (r.pending !== 0) { et(t); if (t.avail_out === 0) { r.last_flush = -1; return v } } else if (t.avail_in === 0 && J(e) <= J(i) && e !== d) { return Q(t, y) } if (r.status === X && t.avail_in !== 0) { return Q(t, y) } if (t.avail_in !== 0 || r.lookahead !== 0 || e !== c && r.status !== X) { var h = r.strategy === b ? ft(r, e) : r.strategy === w ? ct(r, e) : dt[r.level].func(r, e); if (h === $ || h === q) { r.status = X } if (h === j || h === $) { if (t.avail_out === 0) { r.last_flush = -1 } return v } if (h === K) { if (e === f) { l._tr_align(r) } else if (e !== p) { l._tr_stored_block(r, 0, 0, false); if (e === _) { tt(r.head); if (r.lookahead === 0) { r.strstart = 0; r.block_start = 0; r.insert = 0 } } } et(t); if (t.avail_out === 0) { r.last_flush = -1; return v } } } if (e !== d) { return v } if (r.wrap <= 0) { return m } if (r.wrap === 2) { rt(r, t.adler & 255); rt(r, t.adler >> 8 & 255); rt(r, t.adler >> 16 & 255); rt(r, t.adler >> 24 & 255); rt(r, t.total_in & 255); rt(r, t.total_in >> 8 & 255); rt(r, t.total_in >> 16 & 255); rt(r, t.total_in >> 24 & 255) } else { st(r, t.adler >>> 16); st(r, t.adler & 65535) } et(t); if (r.wrap > 0) { r.wrap = -r.wrap } return r.pending !== 0 ? v : m } function Tt(t) { var e; if (!t || !t.state) { return g } e = t.state.status; if (e !== U && e !== W && e !== V && e !== H && e !== G && e !== Y && e !== X) { return Q(t, g) } t.state = null; return e === Y ? Q(t, s) : v } i.deflateInit = bt; i.deflateInit2 = xt; i.deflateReset = gt; i.deflateResetKeep = mt; i.deflateSetHeader = yt; i.deflate = wt; i.deflateEnd = Tt; i.deflateInfo = "pako deflate (from Nodeca project)" }, { "../utils/common": 27, "./adler32": 29, "./crc32": 31, "./messages": 37, "./trees": 38 }], 33: [function (t, e, i) { "use strict"; function r() { this.text = 0; this.time = 0; this.xflags = 0; this.os = 0; this.extra = null; this.extra_len = 0; this.name = ""; this.comment = ""; this.hcrc = 0; this.done = false } e.exports = r }, {}], 34: [function (t, e, i) { "use strict"; var I = 30; var E = 12; e.exports = function t(e, i) { var r; var s; var n; var a; var o; var h; var l; var u; var c; var f; var _; var d; var p; var v; var m; var g; var y; var x; var b; var w; var T; var C; var S; var A, M; r = e.state; s = e.next_in; A = e.input; n = s + (e.avail_in - 5); a = e.next_out; M = e.output; o = a - (i - e.avail_out); h = a + (e.avail_out - 257); l = r.dmax; u = r.wsize; c = r.whave; f = r.wnext; _ = r.window; d = r.hold; p = r.bits; v = r.lencode; m = r.distcode; g = (1 << r.lenbits) - 1; y = (1 << r.distbits) - 1; t: do { if (p < 15) { d += A[s++] << p; p += 8; d += A[s++] << p; p += 8 } x = v[d & g]; e: for (; ;) { b = x >>> 24; d >>>= b; p -= b; b = x >>> 16 & 255; if (b === 0) { M[a++] = x & 65535 } else if (b & 16) { w = x & 65535; b &= 15; if (b) { if (p < b) { d += A[s++] << p; p += 8 } w += d & (1 << b) - 1; d >>>= b; p -= b } if (p < 15) { d += A[s++] << p; p += 8; d += A[s++] << p; p += 8 } x = m[d & y]; i: for (; ;) { b = x >>> 24; d >>>= b; p -= b; b = x >>> 16 & 255; if (b & 16) { T = x & 65535; b &= 15; if (p < b) { d += A[s++] << p; p += 8; if (p < b) { d += A[s++] << p; p += 8 } } T += d & (1 << b) - 1; if (T > l) { e.msg = "invalid distance too far back"; r.mode = I; break t } d >>>= b; p -= b; b = a - o; if (T > b) { b = T - b; if (b > c) { if (r.sane) { e.msg = "invalid distance too far back"; r.mode = I; break t } } C = 0; S = _; if (f === 0) { C += u - b; if (b < w) { w -= b; do { M[a++] = _[C++] } while (--b); C = a - T; S = M } } else if (f < b) { C += u + f - b; b -= f; if (b < w) { w -= b; do { M[a++] = _[C++] } while (--b); C = 0; if (f < w) { b = f; w -= b; do { M[a++] = _[C++] } while (--b); C = a - T; S = M } } } else { C += f - b; if (b < w) { w -= b; do { M[a++] = _[C++] } while (--b); C = a - T; S = M } } while (w > 2) { M[a++] = S[C++]; M[a++] = S[C++]; M[a++] = S[C++]; w -= 3 } if (w) { M[a++] = S[C++]; if (w > 1) { M[a++] = S[C++] } } } else { C = a - T; do { M[a++] = M[C++]; M[a++] = M[C++]; M[a++] = M[C++]; w -= 3 } while (w > 2); if (w) { M[a++] = M[C++]; if (w > 1) { M[a++] = M[C++] } } } } else if ((b & 64) === 0) { x = m[(x & 65535) + (d & (1 << b) - 1)]; continue i } else { e.msg = "invalid distance code"; r.mode = I; break t } break } } else if ((b & 64) === 0) { x = v[(x & 65535) + (d & (1 << b) - 1)]; continue e } else if (b & 32) { r.mode = E; break t } else { e.msg = "invalid literal/length code"; r.mode = I; break t } break } } while (s < n && a < h); w = p >> 3; s -= w; p -= w << 3; d &= (1 << p) - 1; e.next_in = s; e.next_out = a; e.avail_in = s < n ? 5 + (n - s) : 5 - (s - n); e.avail_out = a < h ? 257 + (h - a) : 257 - (a - h); r.hold = d; r.bits = p; return } }, {}], 35: [function (t, e, i) { "use strict"; var E = t("../utils/common"); var R = t("./adler32"); var P = t("./crc32"); var L = t("./inffast"); var k = t("./inftrees"); var D = 0; var B = 1; var N = 2; var F = 4; var O = 5; var z = 6; var U = 0; var W = 1; var V = 2; var H = -2; var G = -3; var Y = -4; var X = -5; var j = 8; var K = 1; var $ = 2; var q = 3; var Z = 4; var Q = 5; var J = 6; var tt = 7; var et = 8; var it = 9; var rt = 10; var st = 11; var nt = 12; var at = 13; var ot = 14; var ht = 15; var lt = 16; var ut = 17; var ct = 18; var ft = 19; var _t = 20; var dt = 21; var pt = 22; var vt = 23; var mt = 24; var gt = 25; var yt = 26; var xt = 27; var bt = 28; var wt = 29; var Tt = 30; var Ct = 31; var St = 32; var r = 852; var s = 592; var n = 15; var a = n; function At(t) { return (t >>> 24 & 255) + (t >>> 8 & 65280) + ((t & 65280) << 8) + ((t & 255) << 24) } function o() { this.mode = 0; this.last = false; this.wrap = 0; this.havedict = false; this.flags = 0; this.dmax = 0; this.check = 0; this.total = 0; this.head = null; this.wbits = 0; this.wsize = 0; this.whave = 0; this.wnext = 0; this.window = null; this.hold = 0; this.bits = 0; this.length = 0; this.offset = 0; this.extra = 0; this.lencode = null; this.distcode = null; this.lenbits = 0; this.distbits = 0; this.ncode = 0; this.nlen = 0; this.ndist = 0; this.have = 0; this.next = null; this.lens = new E.Buf16(320); this.work = new E.Buf16(288); this.lendyn = null; this.distdyn = null; this.sane = 0; this.back = 0; this.was = 0 } function h(t) { var e; if (!t || !t.state) { return H } e = t.state; t.total_in = t.total_out = e.total = 0; t.msg = ""; if (e.wrap) { t.adler = e.wrap & 1 } e.mode = K; e.last = 0; e.havedict = 0; e.dmax = 32768; e.head = null; e.hold = 0; e.bits = 0; e.lencode = e.lendyn = new E.Buf32(r); e.distcode = e.distdyn = new E.Buf32(s); e.sane = 1; e.back = -1; return U } function l(t) { var e; if (!t || !t.state) { return H } e = t.state; e.wsize = 0; e.whave = 0; e.wnext = 0; return h(t) } function u(t, e) { var i; var r; if (!t || !t.state) { return H } r = t.state; if (e < 0) { i = 0; e = -e } else { i = (e >> 4) + 1; if (e < 48) { e &= 15 } } if (e && (e < 8 || e > 15)) { return H } if (r.window !== null && r.wbits !== e) { r.window = null } r.wrap = i; r.wbits = e; return l(t) } function c(t, e) { var i; var r; if (!t) { return H } r = new o; t.state = r; r.window = null; i = u(t, e); if (i !== U) { t.state = null } return i } function f(t) { return c(t, a) } var _ = true; var d, p; function Mt(t) { if (_) { var e; d = new E.Buf32(512); p = new E.Buf32(32); e = 0; while (e < 144) { t.lens[e++] = 8 } while (e < 256) { t.lens[e++] = 9 } while (e < 280) { t.lens[e++] = 7 } while (e < 288) { t.lens[e++] = 8 } k(B, t.lens, 0, 288, d, 0, t.work, { bits: 9 }); e = 0; while (e < 32) { t.lens[e++] = 5 } k(N, t.lens, 0, 32, p, 0, t.work, { bits: 5 }); _ = false } t.lencode = d; t.lenbits = 9; t.distcode = p; t.distbits = 5 } function It(t, e, i, r) { var s; var n = t.state; if (n.window === null) { n.wsize = 1 << n.wbits; n.wnext = 0; n.whave = 0; n.window = new E.Buf8(n.wsize) } if (r >= n.wsize) { E.arraySet(n.window, e, i - n.wsize, n.wsize, 0); n.wnext = 0; n.whave = n.wsize } else { s = n.wsize - n.wnext; if (s > r) { s = r } E.arraySet(n.window, e, i - r, s, n.wnext); r -= s; if (r) { E.arraySet(n.window, e, i - r, r, 0); n.wnext = r; n.whave = n.wsize } else { n.wnext += s; if (n.wnext === n.wsize) { n.wnext = 0 } if (n.whave < n.wsize) { n.whave += s } } } return 0 } function v(t, e) { var i; var r, s; var n; var a; var o, h; var l; var u; var c, f; var _; var d; var p; var v = 0; var m, g, y; var x, b, w; var T; var C; var S = new E.Buf8(4); var A; var M; var I = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]; if (!t || !t.state || !t.output || !t.input && t.avail_in !== 0) { return H } i = t.state; if (i.mode === nt) { i.mode = at } a = t.next_out; s = t.output; h = t.avail_out; n = t.next_in; r = t.input; o = t.avail_in; l = i.hold; u = i.bits; c = o; f = h; C = U; t: for (; ;) { switch (i.mode) { case K: if (i.wrap === 0) { i.mode = at; break } while (u < 16) { if (o === 0) { break t } o--; l += r[n++] << u; u += 8 } if (i.wrap & 2 && l === 35615) { i.check = 0; S[0] = l & 255; S[1] = l >>> 8 & 255; i.check = P(i.check, S, 2, 0); l = 0; u = 0; i.mode = $; break } i.flags = 0; if (i.head) { i.head.done = false } if (!(i.wrap & 1) || (((l & 255) << 8) + (l >> 8)) % 31) { t.msg = "incorrect header check"; i.mode = Tt; break } if ((l & 15) !== j) { t.msg = "unknown compression method"; i.mode = Tt; break } l >>>= 4; u -= 4; T = (l & 15) + 8; if (i.wbits === 0) { i.wbits = T } else if (T > i.wbits) { t.msg = "invalid window size"; i.mode = Tt; break } i.dmax = 1 << T; t.adler = i.check = 1; i.mode = l & 512 ? rt : nt; l = 0; u = 0; break; case $: while (u < 16) { if (o === 0) { break t } o--; l += r[n++] << u; u += 8 } i.flags = l; if ((i.flags & 255) !== j) { t.msg = "unknown compression method"; i.mode = Tt; break } if (i.flags & 57344) { t.msg = "unknown header flags set"; i.mode = Tt; break } if (i.head) { i.head.text = l >> 8 & 1 } if (i.flags & 512) { S[0] = l & 255; S[1] = l >>> 8 & 255; i.check = P(i.check, S, 2, 0) } l = 0; u = 0; i.mode = q; case q: while (u < 32) { if (o === 0) { break t } o--; l += r[n++] << u; u += 8 } if (i.head) { i.head.time = l } if (i.flags & 512) { S[0] = l & 255; S[1] = l >>> 8 & 255; S[2] = l >>> 16 & 255; S[3] = l >>> 24 & 255; i.check = P(i.check, S, 4, 0) } l = 0; u = 0; i.mode = Z; case Z: while (u < 16) { if (o === 0) { break t } o--; l += r[n++] << u; u += 8 } if (i.head) { i.head.xflags = l & 255; i.head.os = l >> 8 } if (i.flags & 512) { S[0] = l & 255; S[1] = l >>> 8 & 255; i.check = P(i.check, S, 2, 0) } l = 0; u = 0; i.mode = Q; case Q: if (i.flags & 1024) { while (u < 16) { if (o === 0) { break t } o--; l += r[n++] << u; u += 8 } i.length = l; if (i.head) { i.head.extra_len = l } if (i.flags & 512) { S[0] = l & 255; S[1] = l >>> 8 & 255; i.check = P(i.check, S, 2, 0) } l = 0; u = 0 } else if (i.head) { i.head.extra = null } i.mode = J; case J: if (i.flags & 1024) { _ = i.length; if (_ > o) { _ = o } if (_) { if (i.head) { T = i.head.extra_len - i.length; if (!i.head.extra) { i.head.extra = new Array(i.head.extra_len) } E.arraySet(i.head.extra, r, n, _, T) } if (i.flags & 512) { i.check = P(i.check, r, _, n) } o -= _; n += _; i.length -= _ } if (i.length) { break t } } i.length = 0; i.mode = tt; case tt: if (i.flags & 2048) { if (o === 0) { break t } _ = 0; do { T = r[n + _++]; if (i.head && T && i.length < 65536) { i.head.name += String.fromCharCode(T) } } while (T && _ < o); if (i.flags & 512) { i.check = P(i.check, r, _, n) } o -= _; n += _; if (T) { break t } } else if (i.head) { i.head.name = null } i.length = 0; i.mode = et; case et: if (i.flags & 4096) { if (o === 0) { break t } _ = 0; do { T = r[n + _++]; if (i.head && T && i.length < 65536) { i.head.comment += String.fromCharCode(T) } } while (T && _ < o); if (i.flags & 512) { i.check = P(i.check, r, _, n) } o -= _; n += _; if (T) { break t } } else if (i.head) { i.head.comment = null } i.mode = it; case it: if (i.flags & 512) { while (u < 16) { if (o === 0) { break t } o--; l += r[n++] << u; u += 8 } if (l !== (i.check & 65535)) { t.msg = "header crc mismatch"; i.mode = Tt; break } l = 0; u = 0 } if (i.head) { i.head.hcrc = i.flags >> 9 & 1; i.head.done = true } t.adler = i.check = 0; i.mode = nt; break; case rt: while (u < 32) { if (o === 0) { break t } o--; l += r[n++] << u; u += 8 } t.adler = i.check = At(l); l = 0; u = 0; i.mode = st; case st: if (i.havedict === 0) { t.next_out = a; t.avail_out = h; t.next_in = n; t.avail_in = o; i.hold = l; i.bits = u; return V } t.adler = i.check = 1; i.mode = nt; case nt: if (e === O || e === z) { break t } case at: if (i.last) { l >>>= u & 7; u -= u & 7; i.mode = xt; break } while (u < 3) { if (o === 0) { break t } o--; l += r[n++] << u; u += 8 } i.last = l & 1; l >>>= 1; u -= 1; switch (l & 3) { case 0: i.mode = ot; break; case 1: Mt(i); i.mode = _t; if (e === z) { l >>>= 2; u -= 2; break t } break; case 2: i.mode = ut; break; case 3: t.msg = "invalid block type"; i.mode = Tt }l >>>= 2; u -= 2; break; case ot: l >>>= u & 7; u -= u & 7; while (u < 32) { if (o === 0) { break t } o--; l += r[n++] << u; u += 8 } if ((l & 65535) !== (l >>> 16 ^ 65535)) { t.msg = "invalid stored block lengths"; i.mode = Tt; break } i.length = l & 65535; l = 0; u = 0; i.mode = ht; if (e === z) { break t } case ht: i.mode = lt; case lt: _ = i.length; if (_) { if (_ > o) { _ = o } if (_ > h) { _ = h } if (_ === 0) { break t } E.arraySet(s, r, n, _, a); o -= _; n += _; h -= _; a += _; i.length -= _; break } i.mode = nt; break; case ut: while (u < 14) { if (o === 0) { break t } o--; l += r[n++] << u; u += 8 } i.nlen = (l & 31) + 257; l >>>= 5; u -= 5; i.ndist = (l & 31) + 1; l >>>= 5; u -= 5; i.ncode = (l & 15) + 4; l >>>= 4; u -= 4; if (i.nlen > 286 || i.ndist > 30) { t.msg = "too many length or distance symbols"; i.mode = Tt; break } i.have = 0; i.mode = ct; case ct: while (i.have < i.ncode) { while (u < 3) { if (o === 0) { break t } o--; l += r[n++] << u; u += 8 } i.lens[I[i.have++]] = l & 7; l >>>= 3; u -= 3 } while (i.have < 19) { i.lens[I[i.have++]] = 0 } i.lencode = i.lendyn; i.lenbits = 7; A = { bits: i.lenbits }; C = k(D, i.lens, 0, 19, i.lencode, 0, i.work, A); i.lenbits = A.bits; if (C) { t.msg = "invalid code lengths set"; i.mode = Tt; break } i.have = 0; i.mode = ft; case ft: while (i.have < i.nlen + i.ndist) { for (; ;) { v = i.lencode[l & (1 << i.lenbits) - 1]; m = v >>> 24; g = v >>> 16 & 255; y = v & 65535; if (m <= u) { break } if (o === 0) { break t } o--; l += r[n++] << u; u += 8 } if (y < 16) { l >>>= m; u -= m; i.lens[i.have++] = y } else { if (y === 16) { M = m + 2; while (u < M) { if (o === 0) { break t } o--; l += r[n++] << u; u += 8 } l >>>= m; u -= m; if (i.have === 0) { t.msg = "invalid bit length repeat"; i.mode = Tt; break } T = i.lens[i.have - 1]; _ = 3 + (l & 3); l >>>= 2; u -= 2 } else if (y === 17) { M = m + 3; while (u < M) { if (o === 0) { break t } o--; l += r[n++] << u; u += 8 } l >>>= m; u -= m; T = 0; _ = 3 + (l & 7); l >>>= 3; u -= 3 } else { M = m + 7; while (u < M) { if (o === 0) { break t } o--; l += r[n++] << u; u += 8 } l >>>= m; u -= m; T = 0; _ = 11 + (l & 127); l >>>= 7; u -= 7 } if (i.have + _ > i.nlen + i.ndist) { t.msg = "invalid bit length repeat"; i.mode = Tt; break } while (_--) { i.lens[i.have++] = T } } } if (i.mode === Tt) { break } if (i.lens[256] === 0) { t.msg = "invalid code -- missing end-of-block"; i.mode = Tt; break } i.lenbits = 9; A = { bits: i.lenbits }; C = k(B, i.lens, 0, i.nlen, i.lencode, 0, i.work, A); i.lenbits = A.bits; if (C) { t.msg = "invalid literal/lengths set"; i.mode = Tt; break } i.distbits = 6; i.distcode = i.distdyn; A = { bits: i.distbits }; C = k(N, i.lens, i.nlen, i.ndist, i.distcode, 0, i.work, A); i.distbits = A.bits; if (C) { t.msg = "invalid distances set"; i.mode = Tt; break } i.mode = _t; if (e === z) { break t } case _t: i.mode = dt; case dt: if (o >= 6 && h >= 258) { t.next_out = a; t.avail_out = h; t.next_in = n; t.avail_in = o; i.hold = l; i.bits = u; L(t, f); a = t.next_out; s = t.output; h = t.avail_out; n = t.next_in; r = t.input; o = t.avail_in; l = i.hold; u = i.bits; if (i.mode === nt) { i.back = -1 } break } i.back = 0; for (; ;) { v = i.lencode[l & (1 << i.lenbits) - 1]; m = v >>> 24; g = v >>> 16 & 255; y = v & 65535; if (m <= u) { break } if (o === 0) { break t } o--; l += r[n++] << u; u += 8 } if (g && (g & 240) === 0) { x = m; b = g; w = y; for (; ;) { v = i.lencode[w + ((l & (1 << x + b) - 1) >> x)]; m = v >>> 24; g = v >>> 16 & 255; y = v & 65535; if (x + m <= u) { break } if (o === 0) { break t } o--; l += r[n++] << u; u += 8 } l >>>= x; u -= x; i.back += x } l >>>= m; u -= m; i.back += m; i.length = y; if (g === 0) { i.mode = yt; break } if (g & 32) { i.back = -1; i.mode = nt; break } if (g & 64) { t.msg = "invalid literal/length code"; i.mode = Tt; break } i.extra = g & 15; i.mode = pt; case pt: if (i.extra) { M = i.extra; while (u < M) { if (o === 0) { break t } o--; l += r[n++] << u; u += 8 } i.length += l & (1 << i.extra) - 1; l >>>= i.extra; u -= i.extra; i.back += i.extra } i.was = i.length; i.mode = vt; case vt: for (; ;) { v = i.distcode[l & (1 << i.distbits) - 1]; m = v >>> 24; g = v >>> 16 & 255; y = v & 65535; if (m <= u) { break } if (o === 0) { break t } o--; l += r[n++] << u; u += 8 } if ((g & 240) === 0) { x = m; b = g; w = y; for (; ;) { v = i.distcode[w + ((l & (1 << x + b) - 1) >> x)]; m = v >>> 24; g = v >>> 16 & 255; y = v & 65535; if (x + m <= u) { break } if (o === 0) { break t } o--; l += r[n++] << u; u += 8 } l >>>= x; u -= x; i.back += x } l >>>= m; u -= m; i.back += m; if (g & 64) { t.msg = "invalid distance code"; i.mode = Tt; break } i.offset = y; i.extra = g & 15; i.mode = mt; case mt: if (i.extra) { M = i.extra; while (u < M) { if (o === 0) { break t } o--; l += r[n++] << u; u += 8 } i.offset += l & (1 << i.extra) - 1; l >>>= i.extra; u -= i.extra; i.back += i.extra } if (i.offset > i.dmax) { t.msg = "invalid distance too far back"; i.mode = Tt; break } i.mode = gt; case gt: if (h === 0) { break t } _ = f - h; if (i.offset > _) { _ = i.offset - _; if (_ > i.whave) { if (i.sane) { t.msg = "invalid distance too far back"; i.mode = Tt; break } } if (_ > i.wnext) { _ -= i.wnext; d = i.wsize - _ } else { d = i.wnext - _ } if (_ > i.length) { _ = i.length } p = i.window } else { p = s; d = a - i.offset; _ = i.length } if (_ > h) { _ = h } h -= _; i.length -= _; do { s[a++] = p[d++] } while (--_); if (i.length === 0) { i.mode = dt } break; case yt: if (h === 0) { break t } s[a++] = i.length; h--; i.mode = dt; break; case xt: if (i.wrap) { while (u < 32) { if (o === 0) { break t } o--; l |= r[n++] << u; u += 8 } f -= h; t.total_out += f; i.total += f; if (f) { t.adler = i.check = i.flags ? P(i.check, s, f, a - f) : R(i.check, s, f, a - f) } f = h; if ((i.flags ? l : At(l)) !== i.check) { t.msg = "incorrect data check"; i.mode = Tt; break } l = 0; u = 0 } i.mode = bt; case bt: if (i.wrap && i.flags) { while (u < 32) { if (o === 0) { break t } o--; l += r[n++] << u; u += 8 } if (l !== (i.total & 4294967295)) { t.msg = "incorrect length check"; i.mode = Tt; break } l = 0; u = 0 } i.mode = wt; case wt: C = W; break t; case Tt: C = G; break t; case Ct: return Y; case St: default: return H } } t.next_out = a; t.avail_out = h; t.next_in = n; t.avail_in = o; i.hold = l; i.bits = u; if (i.wsize || f !== t.avail_out && i.mode < Tt && (i.mode < xt || e !== F)) { if (It(t, t.output, t.next_out, f - t.avail_out)) { i.mode = Ct; return Y } } c -= t.avail_in; f -= t.avail_out; t.total_in += c; t.total_out += f; i.total += f; if (i.wrap && f) { t.adler = i.check = i.flags ? P(i.check, s, f, t.next_out - f) : R(i.check, s, f, t.next_out - f) } t.data_type = i.bits + (i.last ? 64 : 0) + (i.mode === nt ? 128 : 0) + (i.mode === _t || i.mode === ht ? 256 : 0); if ((c === 0 && f === 0 || e === F) && C === U) { C = X } return C } function m(t) { if (!t || !t.state) { return H } var e = t.state; if (e.window) { e.window = null } t.state = null; return U } function g(t, e) { var i; if (!t || !t.state) { return H } i = t.state; if ((i.wrap & 2) === 0) { return H } i.head = e; e.done = false; return U } i.inflateReset = l; i.inflateReset2 = u; i.inflateResetKeep = h; i.inflateInit = f; i.inflateInit2 = c; i.inflate = v; i.inflateEnd = m; i.inflateGetHeader = g; i.inflateInfo = "pako inflate (from Nodeca project)" }, { "../utils/common": 27, "./adler32": 29, "./crc32": 31, "./inffast": 34, "./inftrees": 36 }], 36: [function (t, e, i) { "use strict"; var N = t("../utils/common"); var F = 15; var O = 852; var z = 592; var U = 0; var W = 1; var V = 2; var H = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0]; var G = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78]; var Y = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0]; var X = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64]; e.exports = function t(e, i, r, s, n, a, o, h) { var l = h.bits; var u = 0; var c = 0; var f = 0, _ = 0; var d = 0; var p = 0; var v = 0; var m = 0; var g = 0; var y = 0; var x; var b; var w; var T; var C; var S = null; var A = 0; var M; var I = new N.Buf16(F + 1); var E = new N.Buf16(F + 1); var R = null; var P = 0; var L, k, D; for (u = 0; u <= F; u++) { I[u] = 0 } for (c = 0; c < s; c++) { I[i[r + c]]++ } d = l; for (_ = F; _ >= 1; _--) { if (I[_] !== 0) { break } } if (d > _) { d = _ } if (_ === 0) { n[a++] = 1 << 24 | 64 << 16 | 0; n[a++] = 1 << 24 | 64 << 16 | 0; h.bits = 1; return 0 } for (f = 1; f < _; f++) { if (I[f] !== 0) { break } } if (d < f) { d = f } m = 1; for (u = 1; u <= F; u++) { m <<= 1; m -= I[u]; if (m < 0) { return -1 } } if (m > 0 && (e === U || _ !== 1)) { return -1 } E[1] = 0; for (u = 1; u < F; u++) { E[u + 1] = E[u] + I[u] } for (c = 0; c < s; c++) { if (i[r + c] !== 0) { o[E[i[r + c]]++] = c } } if (e === U) { S = R = o; M = 19 } else if (e === W) { S = H; A -= 257; R = G; P -= 257; M = 256 } else { S = Y; R = X; M = -1 } y = 0; c = 0; u = f; C = a; p = d; v = 0; w = -1; g = 1 << d; T = g - 1; if (e === W && g > O || e === V && g > z) { return 1 } var B = 0; for (; ;) { B++; L = u - v; if (o[c] < M) { k = 0; D = o[c] } else if (o[c] > M) { k = R[P + o[c]]; D = S[A + o[c]] } else { k = 32 + 64; D = 0 } x = 1 << u - v; b = 1 << p; f = b; do { b -= x; n[C + (y >> v) + b] = L << 24 | k << 16 | D | 0 } while (b !== 0); x = 1 << u - 1; while (y & x) { x >>= 1 } if (x !== 0) { y &= x - 1; y += x } else { y = 0 } c++; if (--I[u] === 0) { if (u === _) { break } u = i[r + o[c]] } if (u > d && (y & T) !== w) { if (v === 0) { v = d } C += f; p = u - v; m = 1 << p; while (p + v < _) { m -= I[p + v]; if (m <= 0) { break } p++; m <<= 1 } g += 1 << p; if (e === W && g > O || e === V && g > z) { return 1 } w = y & T; n[w] = d << 24 | p << 16 | C - a | 0 } } if (y !== 0) { n[C + y] = u - v << 24 | 64 << 16 | 0 } h.bits = d; return 0 } }, { "../utils/common": 27 }], 37: [function (t, e, i) { "use strict"; e.exports = { 2: "need dictionary", 1: "stream end", 0: "", "-1": "file error", "-2": "stream error", "-3": "data error", "-4": "insufficient memory", "-5": "buffer error", "-6": "incompatible version" } }, {}], 38: [function (t, e, i) { "use strict"; var s = t("../utils/common"); var o = 4; var r = 0; var n = 1; var h = 2; function a(t) { var e = t.length; while (--e >= 0) { t[e] = 0 } } var l = 0; var u = 1; var c = 2; var f = 3; var _ = 258; var d = 29; var p = 256; var v = p + 1 + d; var m = 30; var g = 19; var y = 2 * v + 1; var x = 15; var b = 16; var w = 7; var T = 256; var C = 16; var S = 17; var A = 18; var M = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0]; var I = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]; var E = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7]; var R = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]; var P = 512; var L = new Array((v + 2) * 2); a(L); var k = new Array(m * 2); a(k); var D = new Array(P); a(D); var B = new Array(_ - f + 1); a(B); var N = new Array(d); a(N); var F = new Array(m); a(F); var O = function (t, e, i, r, s) { this.static_tree = t; this.extra_bits = e; this.extra_base = i; this.elems = r; this.max_length = s; this.has_stree = t && t.length }; var z; var U; var W; var V = function (t, e) { this.dyn_tree = t; this.max_code = 0; this.stat_desc = e }; function H(t) { return t < 256 ? D[t] : D[256 + (t >>> 7)] } function G(t, e) { t.pending_buf[t.pending++] = e & 255; t.pending_buf[t.pending++] = e >>> 8 & 255 } function Y(t, e, i) { if (t.bi_valid > b - i) { t.bi_buf |= e << t.bi_valid & 65535; G(t, t.bi_buf); t.bi_buf = e >> b - t.bi_valid; t.bi_valid += i - b } else { t.bi_buf |= e << t.bi_valid & 65535; t.bi_valid += i } } function X(t, e, i) { Y(t, i[e * 2], i[e * 2 + 1]) } function j(t, e) { var i = 0; do { i |= t & 1; t >>>= 1; i <<= 1 } while (--e > 0); return i >>> 1 } function K(t) { if (t.bi_valid === 16) { G(t, t.bi_buf); t.bi_buf = 0; t.bi_valid = 0 } else if (t.bi_valid >= 8) { t.pending_buf[t.pending++] = t.bi_buf & 255; t.bi_buf >>= 8; t.bi_valid -= 8 } } function $(t, e) { var i = e.dyn_tree; var r = e.max_code; var s = e.stat_desc.static_tree; var n = e.stat_desc.has_stree; var a = e.stat_desc.extra_bits; var o = e.stat_desc.extra_base; var h = e.stat_desc.max_length; var l; var u, c; var f; var _; var d; var p = 0; for (f = 0; f <= x; f++) { t.bl_count[f] = 0 } i[t.heap[t.heap_max] * 2 + 1] = 0; for (l = t.heap_max + 1; l < y; l++) { u = t.heap[l]; f = i[i[u * 2 + 1] * 2 + 1] + 1; if (f > h) { f = h; p++ } i[u * 2 + 1] = f; if (u > r) { continue } t.bl_count[f]++; _ = 0; if (u >= o) { _ = a[u - o] } d = i[u * 2]; t.opt_len += d * (f + _); if (n) { t.static_len += d * (s[u * 2 + 1] + _) } } if (p === 0) { return } do { f = h - 1; while (t.bl_count[f] === 0) { f-- } t.bl_count[f]--; t.bl_count[f + 1] += 2; t.bl_count[h]--; p -= 2 } while (p > 0); for (f = h; f !== 0; f--) { u = t.bl_count[f]; while (u !== 0) { c = t.heap[--l]; if (c > r) { continue } if (i[c * 2 + 1] !== f) { t.opt_len += (f - i[c * 2 + 1]) * i[c * 2]; i[c * 2 + 1] = f } u-- } } } function q(t, e, i) { var r = new Array(x + 1); var s = 0; var n; var a; for (n = 1; n <= x; n++) { r[n] = s = s + i[n - 1] << 1 } for (a = 0; a <= e; a++) { var o = t[a * 2 + 1]; if (o === 0) { continue } t[a * 2] = j(r[o]++, o) } } function Z() { var t; var e; var i; var r; var s; var n = new Array(x + 1); i = 0; for (r = 0; r < d - 1; r++) { N[r] = i; for (t = 0; t < 1 << M[r]; t++) { B[i++] = r } } B[i - 1] = r; s = 0; for (r = 0; r < 16; r++) { F[r] = s; for (t = 0; t < 1 << I[r]; t++) { D[s++] = r } } s >>= 7; for (; r < m; r++) { F[r] = s << 7; for (t = 0; t < 1 << I[r] - 7; t++) { D[256 + s++] = r } } for (e = 0; e <= x; e++) { n[e] = 0 } t = 0; while (t <= 143) { L[t * 2 + 1] = 8; t++; n[8]++ } while (t <= 255) { L[t * 2 + 1] = 9; t++; n[9]++ } while (t <= 279) { L[t * 2 + 1] = 7; t++; n[7]++ } while (t <= 287) { L[t * 2 + 1] = 8; t++; n[8]++ } q(L, v + 1, n); for (t = 0; t < m; t++) { k[t * 2 + 1] = 5; k[t * 2] = j(t, 5) } z = new O(L, M, p + 1, v, x); U = new O(k, I, 0, m, x); W = new O(new Array(0), E, 0, g, w) } function Q(t) { var e; for (e = 0; e < v; e++) { t.dyn_ltree[e * 2] = 0 } for (e = 0; e < m; e++) { t.dyn_dtree[e * 2] = 0 } for (e = 0; e < g; e++) { t.bl_tree[e * 2] = 0 } t.dyn_ltree[T * 2] = 1; t.opt_len = t.static_len = 0; t.last_lit = t.matches = 0 } function J(t) { if (t.bi_valid > 8) { G(t, t.bi_buf) } else if (t.bi_valid > 0) { t.pending_buf[t.pending++] = t.bi_buf } t.bi_buf = 0; t.bi_valid = 0 } function tt(t, e, i, r) { J(t); if (r) { G(t, i); G(t, ~i) } s.arraySet(t.pending_buf, t.window, e, i, t.pending); t.pending += i } function et(t, e, i, r) { var s = e * 2; var n = i * 2; return t[s] < t[n] || t[s] === t[n] && r[e] <= r[i] } function it(t, e, i) { var r = t.heap[i]; var s = i << 1; while (s <= t.heap_len) { if (s < t.heap_len && et(e, t.heap[s + 1], t.heap[s], t.depth)) { s++ } if (et(e, r, t.heap[s], t.depth)) { break } t.heap[i] = t.heap[s]; i = s; s <<= 1 } t.heap[i] = r } function rt(t, e, i) { var r; var s; var n = 0; var a; var o; if (t.last_lit !== 0) { do { r = t.pending_buf[t.d_buf + n * 2] << 8 | t.pending_buf[t.d_buf + n * 2 + 1]; s = t.pending_buf[t.l_buf + n]; n++; if (r === 0) { X(t, s, e) } else { a = B[s]; X(t, a + p + 1, e); o = M[a]; if (o !== 0) { s -= N[a]; Y(t, s, o) } r--; a = H(r); X(t, a, i); o = I[a]; if (o !== 0) { r -= F[a]; Y(t, r, o) } } } while (n < t.last_lit) } X(t, T, e) } function st(t, e) { var i = e.dyn_tree; var r = e.stat_desc.static_tree; var s = e.stat_desc.has_stree; var n = e.stat_desc.elems; var a, o; var h = -1; var l; t.heap_len = 0; t.heap_max = y; for (a = 0; a < n; a++) { if (i[a * 2] !== 0) { t.heap[++t.heap_len] = h = a; t.depth[a] = 0 } else { i[a * 2 + 1] = 0 } } while (t.heap_len < 2) { l = t.heap[++t.heap_len] = h < 2 ? ++h : 0; i[l * 2] = 1; t.depth[l] = 0; t.opt_len--; if (s) { t.static_len -= r[l * 2 + 1] } } e.max_code = h; for (a = t.heap_len >> 1; a >= 1; a--) { it(t, i, a) } l = n; do { a = t.heap[1]; t.heap[1] = t.heap[t.heap_len--]; it(t, i, 1); o = t.heap[1]; t.heap[--t.heap_max] = a; t.heap[--t.heap_max] = o; i[l * 2] = i[a * 2] + i[o * 2]; t.depth[l] = (t.depth[a] >= t.depth[o] ? t.depth[a] : t.depth[o]) + 1; i[a * 2 + 1] = i[o * 2 + 1] = l; t.heap[1] = l++; it(t, i, 1) } while (t.heap_len >= 2); t.heap[--t.heap_max] = t.heap[1]; $(t, e); q(i, h, t.bl_count) } function nt(t, e, i) { var r; var s = -1; var n; var a = e[0 * 2 + 1]; var o = 0; var h = 7; var l = 4; if (a === 0) { h = 138; l = 3 } e[(i + 1) * 2 + 1] = 65535; for (r = 0; r <= i; r++) { n = a; a = e[(r + 1) * 2 + 1]; if (++o < h && n === a) { continue } else if (o < l) { t.bl_tree[n * 2] += o } else if (n !== 0) { if (n !== s) { t.bl_tree[n * 2]++ } t.bl_tree[C * 2]++ } else if (o <= 10) { t.bl_tree[S * 2]++ } else { t.bl_tree[A * 2]++ } o = 0; s = n; if (a === 0) { h = 138; l = 3 } else if (n === a) { h = 6; l = 3 } else { h = 7; l = 4 } } } function at(t, e, i) { var r; var s = -1; var n; var a = e[0 * 2 + 1]; var o = 0; var h = 7; var l = 4; if (a === 0) { h = 138; l = 3 } for (r = 0; r <= i; r++) { n = a; a = e[(r + 1) * 2 + 1]; if (++o < h && n === a) { continue } else if (o < l) { do { X(t, n, t.bl_tree) } while (--o !== 0) } else if (n !== 0) { if (n !== s) { X(t, n, t.bl_tree); o-- } X(t, C, t.bl_tree); Y(t, o - 3, 2) } else if (o <= 10) { X(t, S, t.bl_tree); Y(t, o - 3, 3) } else { X(t, A, t.bl_tree); Y(t, o - 11, 7) } o = 0; s = n; if (a === 0) { h = 138; l = 3 } else if (n === a) { h = 6; l = 3 } else { h = 7; l = 4 } } } function ot(t) { var e; nt(t, t.dyn_ltree, t.l_desc.max_code); nt(t, t.dyn_dtree, t.d_desc.max_code); st(t, t.bl_desc); for (e = g - 1; e >= 3; e--) { if (t.bl_tree[R[e] * 2 + 1] !== 0) { break } } t.opt_len += 3 * (e + 1) + 5 + 5 + 4; return e } function ht(t, e, i, r) { var s; Y(t, e - 257, 5); Y(t, i - 1, 5); Y(t, r - 4, 4); for (s = 0; s < r; s++) { Y(t, t.bl_tree[R[s] * 2 + 1], 3) } at(t, t.dyn_ltree, e - 1); at(t, t.dyn_dtree, i - 1) } function lt(t) { var e = 4093624447; var i; for (i = 0; i <= 31; i++ , e >>>= 1) { if (e & 1 && t.dyn_ltree[i * 2] !== 0) { return r } } if (t.dyn_ltree[9 * 2] !== 0 || t.dyn_ltree[10 * 2] !== 0 || t.dyn_ltree[13 * 2] !== 0) { return n } for (i = 32; i < p; i++) { if (t.dyn_ltree[i * 2] !== 0) { return n } } return r } var ut = false; function ct(t) { if (!ut) { Z(); ut = true } t.l_desc = new V(t.dyn_ltree, z); t.d_desc = new V(t.dyn_dtree, U); t.bl_desc = new V(t.bl_tree, W); t.bi_buf = 0; t.bi_valid = 0; Q(t) } function ft(t, e, i, r) { Y(t, (l << 1) + (r ? 1 : 0), 3); tt(t, e, i, true) } function _t(t) { Y(t, u << 1, 3); X(t, T, L); K(t) } function dt(t, e, i, r) { var s, n; var a = 0; if (t.level > 0) { if (t.strm.data_type === h) { t.strm.data_type = lt(t) } st(t, t.l_desc); st(t, t.d_desc); a = ot(t); s = t.opt_len + 3 + 7 >>> 3; n = t.static_len + 3 + 7 >>> 3; if (n <= s) { s = n } } else { s = n = i + 5 } if (i + 4 <= s && e !== -1) { ft(t, e, i, r) } else if (t.strategy === o || n === s) { Y(t, (u << 1) + (r ? 1 : 0), 3); rt(t, L, k) } else { Y(t, (c << 1) + (r ? 1 : 0), 3); ht(t, t.l_desc.max_code + 1, t.d_desc.max_code + 1, a + 1); rt(t, t.dyn_ltree, t.dyn_dtree) } Q(t); if (r) { J(t) } } function pt(t, e, i) { t.pending_buf[t.d_buf + t.last_lit * 2] = e >>> 8 & 255; t.pending_buf[t.d_buf + t.last_lit * 2 + 1] = e & 255; t.pending_buf[t.l_buf + t.last_lit] = i & 255; t.last_lit++; if (e === 0) { t.dyn_ltree[i * 2]++ } else { t.matches++; e--; t.dyn_ltree[(B[i] + p + 1) * 2]++; t.dyn_dtree[H(e) * 2]++ } return t.last_lit === t.lit_bufsize - 1 } i._tr_init = ct; i._tr_stored_block = ft; i._tr_flush_block = dt; i._tr_tally = pt; i._tr_align = _t }, { "../utils/common": 27 }], 39: [function (t, e, i) { "use strict"; function r() { this.input = null; this.next_in = 0; this.avail_in = 0; this.total_in = 0; this.output = null; this.next_out = 0; this.avail_out = 0; this.total_out = 0; this.msg = ""; this.state = null; this.data_type = 2; this.adler = 0 } e.exports = r }, {}] }, {}, [9])(9) }); (function (t) { if (typeof exports === "object" && typeof module !== "undefined") { module.exports = t() } else if (typeof define === "function" && define.amd) { define([], t) } else { var e; if (typeof window !== "undefined") { e = window } else if (typeof global !== "undefined") { e = global } else if (typeof self !== "undefined") { e = self } else { e = this } e.io = t() } })(function () { var C, t, e; return function n(a, o, h) { function l(i, t) { if (!o[i]) { if (!a[i]) { var e = typeof require == "function" && require; if (!t && e) return e(i, !0); if (u) return u(i, !0); var r = new Error("Cannot find module '" + i + "'"); throw r.code = "MODULE_NOT_FOUND", r } var s = o[i] = { exports: {} }; a[i][0].call(s.exports, function (t) { var e = a[i][1][t]; return l(e ? e : t) }, s, s.exports, n, a, o, h) } return o[i].exports } var u = typeof require == "function" && require; for (var t = 0; t < h.length; t++)l(h[t]); return l }({ 1: [function (t, e, i) { e.exports = t("./lib/") }, { "./lib/": 2 }], 2: [function (t, e, i) { e.exports = t("./socket"); e.exports.parser = t("engine.io-parser") }, { "./socket": 3, "engine.io-parser": 19 }], 3: [function (u, _, t) { (function (r) { var s = u("./transports"); var t = u("component-emitter"); var c = u("debug")("engine.io-client:socket"); var n = u("indexof"); var a = u("engine.io-parser"); var o = u("parseuri"); var i = u("parsejson"); var h = u("parseqs"); _.exports = f; function e() { } function f(t, e) { if (!(this instanceof f)) return new f(t, e); e = e || {}; if (t && "object" == typeof t) { e = t; t = null } if (t) { t = o(t); e.hostname = t.host; e.secure = t.protocol == "https" || t.protocol == "wss"; e.port = t.port; if (t.query) e.query = t.query } else if (e.host) { e.hostname = o(e.host).host } this.secure = null != e.secure ? e.secure : r.location && "https:" == location.protocol; if (e.hostname && !e.port) { e.port = this.secure ? "443" : "80" } this.agent = e.agent || false; this.hostname = e.hostname || (r.location ? location.hostname : "localhost"); this.port = e.port || (r.location && location.port ? location.port : this.secure ? 443 : 80); this.query = e.query || {}; if ("string" == typeof this.query) this.query = h.decode(this.query); this.upgrade = false !== e.upgrade; this.path = (e.path || "/engine.io").replace(/\/$/, "") + "/"; this.forceJSONP = !!e.forceJSONP; this.jsonp = false !== e.jsonp; this.forceBase64 = !!e.forceBase64; this.enablesXDR = !!e.enablesXDR; this.timestampParam = e.timestampParam || "t"; this.timestampRequests = e.timestampRequests; this.transports = e.transports || ["polling", "websocket"]; this.readyState = ""; this.writeBuffer = []; this.policyPort = e.policyPort || 843; this.rememberUpgrade = e.rememberUpgrade || false; this.binaryType = null; this.onlyBinaryUpgrades = e.onlyBinaryUpgrades; this.perMessageDeflate = false !== e.perMessageDeflate ? e.perMessageDeflate || {} : false; if (true === this.perMessageDeflate) this.perMessageDeflate = {}; if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) { this.perMessageDeflate.threshold = 1024 } this.pfx = e.pfx || null; this.key = e.key || null; this.passphrase = e.passphrase || null; this.cert = e.cert || null; this.ca = e.ca || null; this.ciphers = e.ciphers || null; this.rejectUnauthorized = e.rejectUnauthorized === undefined ? null : e.rejectUnauthorized; var i = typeof r == "object" && r; if (i.global === i) { if (e.extraHeaders && Object.keys(e.extraHeaders).length > 0) { this.extraHeaders = e.extraHeaders } } this.open() } f.priorWebsocketSuccess = false; t(f.prototype); f.protocol = a.protocol; f.Socket = f; f.Transport = u("./transport"); f.transports = u("./transports"); f.parser = u("engine.io-parser"); f.prototype.createTransport = function (t) { c('creating transport "%s"', t); var e = l(this.query); e.EIO = a.protocol; e.transport = t; if (this.id) e.sid = this.id; var i = new s[t]({ agent: this.agent, hostname: this.hostname, port: this.port, secure: this.secure, path: this.path, query: e, forceJSONP: this.forceJSONP, jsonp: this.jsonp, forceBase64: this.forceBase64, enablesXDR: this.enablesXDR, timestampRequests: this.timestampRequests, timestampParam: this.timestampParam, policyPort: this.policyPort, socket: this, pfx: this.pfx, key: this.key, passphrase: this.passphrase, cert: this.cert, ca: this.ca, ciphers: this.ciphers, rejectUnauthorized: this.rejectUnauthorized, perMessageDeflate: this.perMessageDeflate, extraHeaders: this.extraHeaders }); return i }; function l(t) { var e = {}; for (var i in t) { if (t.hasOwnProperty(i)) { e[i] = t[i] } } return e } f.prototype.open = function () { var t; if (this.rememberUpgrade && f.priorWebsocketSuccess && this.transports.indexOf("websocket") != -1) { t = "websocket" } else if (0 === this.transports.length) { var e = this; setTimeout(function () { e.emit("error", "No transports available") }, 0); return } else { t = this.transports[0] } this.readyState = "opening"; try { t = this.createTransport(t) } catch (t) { this.transports.shift(); this.open(); return } t.open(); this.setTransport(t) }; f.prototype.setTransport = function (t) { c("setting transport %s", t.name); var e = this; if (this.transport) { c("clearing existing transport %s", this.transport.name); this.transport.removeAllListeners() } this.transport = t; t.on("drain", function () { e.onDrain() }).on("packet", function (t) { e.onPacket(t) }).on("error", function (t) { e.onError(t) }).on("close", function () { e.onClose("transport close") }) }; f.prototype.probe = function (i) { c('probing transport "%s"', i); var r = this.createTransport(i, { probe: 1 }), s = false, n = this; f.priorWebsocketSuccess = false; function t() { if (n.onlyBinaryUpgrades) { var t = !this.supportsBinary && n.transport.supportsBinary; s = s || t } if (s) return; c('probe transport "%s" opened', i); r.send([{ type: "ping", data: "probe" }]); r.once("packet", function (t) { if (s) return; if ("pong" == t.type && "probe" == t.data) { c('probe transport "%s" pong', i); n.upgrading = true; n.emit("upgrading", r); if (!r) return; f.priorWebsocketSuccess = "websocket" == r.name; c('pausing current transport "%s"', n.transport.name); n.transport.pause(function () { if (s) return; if ("closed" == n.readyState) return; c("changing transport and sending upgrade packet"); u(); n.setTransport(r); r.send([{ type: "upgrade" }]); n.emit("upgrade", r); r = null; n.upgrading = false; n.flush() }) } else { c('probe transport "%s" failed', i); var e = new Error("probe error"); e.transport = r.name; n.emit("upgradeError", e) } }) } function a() { if (s) return; s = true; u(); r.close(); r = null } function e(t) { var e = new Error("probe error: " + t); e.transport = r.name; a(); c('probe transport "%s" failed because of error: %s', i, t); n.emit("upgradeError", e) } function o() { e("transport closed") } function h() { e("socket closed") } function l(t) { if (r && t.name != r.name) { c('"%s" works - aborting "%s"', t.name, r.name); a() } } function u() { r.removeListener("open", t); r.removeListener("error", e); r.removeListener("close", o); n.removeListener("close", h); n.removeListener("upgrading", l) } r.once("open", t); r.once("error", e); r.once("close", o); this.once("close", h); this.once("upgrading", l); r.open() }; f.prototype.onOpen = function () { c("socket open"); this.readyState = "open"; f.priorWebsocketSuccess = "websocket" == this.transport.name; this.emit("open"); this.flush(); if ("open" == this.readyState && this.upgrade && this.transport.pause) { c("starting upgrade probes"); for (var t = 0, e = this.upgrades.length; t < e; t++) { this.probe(this.upgrades[t]) } } }; f.prototype.onPacket = function (t) { if ("opening" == this.readyState || "open" == this.readyState) { c('socket receive: type "%s", data "%s"', t.type, t.data); this.emit("packet", t); this.emit("heartbeat"); switch (t.type) { case "open": this.onHandshake(i(t.data)); break; case "pong": this.setPing(); this.emit("pong"); break; case "error": var e = new Error("server error"); e.code = t.data; this.onError(e); break; case "message": this.emit("data", t.data); this.emit("message", t.data); break } } else { c('packet received with socket readyState "%s"', this.readyState) } }; f.prototype.onHandshake = function (t) { this.emit("handshake", t); this.id = t.sid; this.transport.query.sid = t.sid; this.upgrades = this.filterUpgrades(t.upgrades); this.pingInterval = t.pingInterval; this.pingTimeout = t.pingTimeout; this.onOpen(); if ("closed" == this.readyState) return; this.setPing(); this.removeListener("heartbeat", this.onHeartbeat); this.on("heartbeat", this.onHeartbeat) }; f.prototype.onHeartbeat = function (t) { clearTimeout(this.pingTimeoutTimer); var e = this; e.pingTimeoutTimer = setTimeout(function () { if ("closed" == e.readyState) return; e.onClose("ping timeout") }, t || e.pingInterval + e.pingTimeout) }; f.prototype.setPing = function () { var t = this; clearTimeout(t.pingIntervalTimer); t.pingIntervalTimer = setTimeout(function () { c("writing ping packet - expecting pong within %sms", t.pingTimeout); t.ping(); t.onHeartbeat(t.pingTimeout) }, t.pingInterval) }; f.prototype.ping = function () { var t = this; this.sendPacket("ping", function () { t.emit("ping") }) }; f.prototype.onDrain = function () { this.writeBuffer.splice(0, this.prevBufferLen); this.prevBufferLen = 0; if (0 === this.writeBuffer.length) { this.emit("drain") } else { this.flush() } }; f.prototype.flush = function () { if ("closed" != this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) { c("flushing %d packets in socket", this.writeBuffer.length); this.transport.send(this.writeBuffer); this.prevBufferLen = this.writeBuffer.length; this.emit("flush") } }; f.prototype.write = f.prototype.send = function (t, e, i) { this.sendPacket("message", t, e, i); return this }; f.prototype.sendPacket = function (t, e, i, r) { if ("function" == typeof e) { r = e; e = undefined } if ("function" == typeof i) { r = i; i = null } if ("closing" == this.readyState || "closed" == this.readyState) { return } i = i || {}; i.compress = false !== i.compress; var s = { type: t, data: e, options: i }; this.emit("packetCreate", s); this.writeBuffer.push(s); if (r) this.once("flush", r); this.flush() }; f.prototype.close = function () { if ("opening" == this.readyState || "open" == this.readyState) { this.readyState = "closing"; var t = this; if (this.writeBuffer.length) { this.once("drain", function () { if (this.upgrading) { r() } else { e() } }) } else if (this.upgrading) { r() } else { e() } } function e() { t.onClose("forced close"); c("socket closing - telling transport to close"); t.transport.close() } function i() { t.removeListener("upgrade", i); t.removeListener("upgradeError", i); e() } function r() { t.once("upgrade", i); t.once("upgradeError", i) } return this }; f.prototype.onError = function (t) { c("socket error %j", t); f.priorWebsocketSuccess = false; this.emit("error", t); this.onClose("transport error", t) }; f.prototype.onClose = function (t, e) { if ("opening" == this.readyState || "open" == this.readyState || "closing" == this.readyState) { c('socket close with reason: "%s"', t); var i = this; clearTimeout(this.pingIntervalTimer); clearTimeout(this.pingTimeoutTimer); this.transport.removeAllListeners("close"); this.transport.close(); this.transport.removeAllListeners(); this.readyState = "closed"; this.id = null; this.emit("close", t, e); i.writeBuffer = []; i.prevBufferLen = 0 } }; f.prototype.filterUpgrades = function (t) { var e = []; for (var i = 0, r = t.length; i < r; i++) { if (~n(this.transports, t[i])) e.push(t[i]) } return e } }).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {}) }, { "./transport": 4, "./transports": 5, "component-emitter": 15, debug: 17, "engine.io-parser": 19, indexof: 23, parsejson: 26, parseqs: 27, parseuri: 28 }], 4: [function (t, e, i) { var r = t("engine.io-parser"); var s = t("component-emitter"); e.exports = n; function n(t) { this.path = t.path; this.hostname = t.hostname; this.port = t.port; this.secure = t.secure; this.query = t.query; this.timestampParam = t.timestampParam; this.timestampRequests = t.timestampRequests; this.readyState = ""; this.agent = t.agent || false; this.socket = t.socket; this.enablesXDR = t.enablesXDR; this.pfx = t.pfx; this.key = t.key; this.passphrase = t.passphrase; this.cert = t.cert; this.ca = t.ca; this.ciphers = t.ciphers; this.rejectUnauthorized = t.rejectUnauthorized; this.extraHeaders = t.extraHeaders } s(n.prototype); n.prototype.onError = function (t, e) { var i = new Error(t); i.type = "TransportError"; i.description = e; this.emit("error", i); return this }; n.prototype.open = function () { if ("closed" == this.readyState || "" == this.readyState) { this.readyState = "opening"; this.doOpen() } return this }; n.prototype.close = function () { if ("opening" == this.readyState || "open" == this.readyState) { this.doClose(); this.onClose() } return this }; n.prototype.send = function (t) { if ("open" == this.readyState) { this.write(t) } else { throw new Error("Transport not open") } }; n.prototype.onOpen = function () { this.readyState = "open"; this.writable = true; this.emit("open") }; n.prototype.onData = function (t) { var e = r.decodePacket(t, this.socket.binaryType); this.onPacket(e) }; n.prototype.onPacket = function (t) { this.emit("packet", t) }; n.prototype.onClose = function () { this.readyState = "closed"; this.emit("close") } }, { "component-emitter": 15, "engine.io-parser": 19 }], 5: [function (i, t, r) { (function (o) { var h = i("xmlhttprequest-ssl"); var l = i("./polling-xhr"); var u = i("./polling-jsonp"); var t = i("./websocket"); r.polling = e; r.websocket = t; function e(t) { var e; var i = false; var r = false; var s = false !== t.jsonp; if (o.location) { var n = "https:" == location.protocol; var a = location.port; if (!a) { a = n ? 443 : 80 } i = t.hostname != location.hostname || a != t.port; r = t.secure != n } t.xdomain = i; t.xscheme = r; e = new h(t); if ("open" in e && !t.forceJSONP) { return new l(t) } else { if (!s) throw new Error("JSONP disabled"); return new u(t) } } }).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {}) }, { "./polling-jsonp": 6, "./polling-xhr": 7, "./websocket": 9, "xmlhttprequest-ssl": 10 }], 6: [function (o, h, t) { (function (i) { var r = o("./polling"); var t = o("component-inherit"); h.exports = a; var l = /\n/g; var u = /\\n/g; var s; var e = 0; function n() { } function a(t) { r.call(this, t); this.query = this.query || {}; if (!s) { if (!i.___eio) i.___eio = []; s = i.___eio } this.index = s.length; var e = this; s.push(function (t) { e.onData(t) }); this.query.j = this.index; if (i.document && i.addEventListener) { i.addEventListener("beforeunload", function () { if (e.script) e.script.onerror = n }, false) } } t(a, r); a.prototype.supportsBinary = false; a.prototype.doClose = function () { if (this.script) { this.script.parentNode.removeChild(this.script); this.script = null } if (this.form) { this.form.parentNode.removeChild(this.form); this.form = null; this.iframe = null } r.prototype.doClose.call(this) }; a.prototype.doPoll = function () { var e = this; var t = document.createElement("script"); if (this.script) { this.script.parentNode.removeChild(this.script); this.script = null } t.async = true; t.src = this.uri(); t.onerror = function (t) { e.onError("jsonp poll error", t) }; var i = document.getElementsByTagName("script")[0]; if (i) { i.parentNode.insertBefore(t, i) } else { (document.head || document.body).appendChild(t) } this.script = t; var r = "undefined" != typeof navigator && /gecko/i.test(navigator.userAgent); if (r) { setTimeout(function () { var t = document.createElement("iframe"); document.body.appendChild(t); document.body.removeChild(t) }, 100) } }; a.prototype.doWrite = function (t, e) { var i = this; if (!this.form) { var r = document.createElement("form"); var s = document.createElement("textarea"); var n = this.iframeId = "eio_iframe_" + this.index; var a; r.className = "socketio"; r.style.position = "absolute"; r.style.top = "-1000px"; r.style.left = "-1000px"; r.target = n; r.method = "POST"; r.setAttribute("accept-charset", "utf-8"); s.name = "d"; r.appendChild(s); document.body.appendChild(r); this.form = r; this.area = s } this.form.action = this.uri(); function o() { h(); e() } function h() { if (i.iframe) { try { i.form.removeChild(i.iframe) } catch (t) { i.onError("jsonp polling iframe removal error", t) } } try { var t = '<iframe src="javascript:0" name="' + i.iframeId + '">'; a = document.createElement(t) } catch (t) { a = document.createElement("iframe"); a.name = i.iframeId; a.src = "javascript:0" } a.id = i.iframeId; i.form.appendChild(a); i.iframe = a } h(); t = t.replace(u, "\\\n"); this.area.value = t.replace(l, "\\n"); try { this.form.submit() } catch (t) { } if (this.iframe.attachEvent) { this.iframe.onreadystatechange = function () { if (i.iframe.readyState == "complete") { o() } } } else { this.iframe.onload = o } } }).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {}) }, { "./polling": 8, "component-inherit": 16 }], 7: [function (u, c, t) { (function (s) { var n = u("xmlhttprequest-ssl"); var r = u("./polling"); var t = u("component-emitter"); var e = u("component-inherit"); var a = u("debug")("engine.io-client:polling-xhr"); c.exports = o; c.exports.Request = h; function i() { } function o(t) { r.call(this, t); if (s.location) { var e = "https:" == location.protocol; var i = location.port; if (!i) { i = e ? 443 : 80 } this.xd = t.hostname != s.location.hostname || i != t.port; this.xs = t.secure != e } else { this.extraHeaders = t.extraHeaders } } e(o, r); o.prototype.supportsBinary = true; o.prototype.request = function (t) { t = t || {}; t.uri = this.uri(); t.xd = this.xd; t.xs = this.xs; t.agent = this.agent || false; t.supportsBinary = this.supportsBinary; t.enablesXDR = this.enablesXDR; t.pfx = this.pfx; t.key = this.key; t.passphrase = this.passphrase; t.cert = this.cert; t.ca = this.ca; t.ciphers = this.ciphers; t.rejectUnauthorized = this.rejectUnauthorized; t.extraHeaders = this.extraHeaders; return new h(t) }; o.prototype.doWrite = function (t, e) { var i = typeof t !== "string" && t !== undefined; var r = this.request({ method: "POST", data: t, isBinary: i }); var s = this; r.on("success", e); r.on("error", function (t) { s.onError("xhr post error", t) }); this.sendXhr = r }; o.prototype.doPoll = function () { a("xhr poll"); var t = this.request(); var e = this; t.on("data", function (t) { e.onData(t) }); t.on("error", function (t) { e.onError("xhr poll error", t) }); this.pollXhr = t }; function h(t) { this.method = t.method || "GET"; this.uri = t.uri; this.xd = !!t.xd; this.xs = !!t.xs; this.async = false !== t.async; this.data = undefined != t.data ? t.data : null; this.agent = t.agent; this.isBinary = t.isBinary; this.supportsBinary = t.supportsBinary; this.enablesXDR = t.enablesXDR; this.pfx = t.pfx; this.key = t.key; this.passphrase = t.passphrase; this.cert = t.cert; this.ca = t.ca; this.ciphers = t.ciphers; this.rejectUnauthorized = t.rejectUnauthorized; this.extraHeaders = t.extraHeaders; this.create() } t(h.prototype); h.prototype.create = function () { var t = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR }; t.pfx = this.pfx; t.key = this.key; t.passphrase = this.passphrase; t.cert = this.cert; t.ca = this.ca; t.ciphers = this.ciphers; t.rejectUnauthorized = this.rejectUnauthorized; var e = this.xhr = new n(t); var i = this; try { a("xhr open %s: %s", this.method, this.uri); e.open(this.method, this.uri, this.async); try { if (this.extraHeaders) { e.setDisableHeaderCheck(true); for (var r in this.extraHeaders) { if (this.extraHeaders.hasOwnProperty(r)) { e.setRequestHeader(r, this.extraHeaders[r]) } } } } catch (t) { } if (this.supportsBinary) { e.responseType = "arraybuffer" } if ("POST" == this.method) { try { if (this.isBinary) { e.setRequestHeader("Content-type", "application/octet-stream") } else { e.setRequestHeader("Content-type", "text/plain;charset=UTF-8") } } catch (t) { } } if ("withCredentials" in e) { e.withCredentials = true } if (this.hasXDR()) { e.onload = function () { i.onLoad() }; e.onerror = function () { i.onError(e.responseText) } } else { e.onreadystatechange = function () { if (4 != e.readyState) return; if (200 == e.status || 1223 == e.status) { i.onLoad() } else { setTimeout(function () { i.onError(e.status) }, 0) } } } a("xhr data %s", this.data); e.send(this.data) } catch (t) { setTimeout(function () { i.onError(t) }, 0); return } if (s.document) { this.index = h.requestsCount++; h.requests[this.index] = this } }; h.prototype.onSuccess = function () { this.emit("success"); this.cleanup() }; h.prototype.onData = function (t) { this.emit("data", t); this.onSuccess() }; h.prototype.onError = function (t) { this.emit("error", t); this.cleanup(true) }; h.prototype.cleanup = function (t) { if ("undefined" == typeof this.xhr || null === this.xhr) { return } if (this.hasXDR()) { this.xhr.onload = this.xhr.onerror = i } else { this.xhr.onreadystatechange = i } if (t) { try { this.xhr.abort() } catch (t) { } } if (s.document) { delete h.requests[this.index] } this.xhr = null }; h.prototype.onLoad = function () { var t; try { var e; try { e = this.xhr.getResponseHeader("Content-Type").split(";")[0] } catch (e) { } if (e === "application/octet-stream") { t = this.xhr.response } else { if (!this.supportsBinary) { t = this.xhr.responseText } else { try { t = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response)) } catch (e) { var i = new Uint8Array(this.xhr.response); var r = []; for (var s = 0, n = i.length; s < n; s++) { r.push(i[s]) } t = String.fromCharCode.apply(null, r) } } } } catch (e) { this.onError(e) } if (null != t) { this.onData(t) } }; h.prototype.hasXDR = function () { return "undefined" !== typeof s.XDomainRequest && !this.xs && this.enablesXDR }; h.prototype.abort = function () { this.cleanup() }; if (s.document) { h.requestsCount = 0; h.requests = {}; if (s.attachEvent) { s.attachEvent("onunload", l) } else if (s.addEventListener) { s.addEventListener("beforeunload", l, false) } } function l() { for (var t in h.requests) { if (h.requests.hasOwnProperty(t)) { h.requests[t].abort() } } } }).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {}) }, { "./polling": 8, "component-emitter": 15, "component-inherit": 16, debug: 17, "xmlhttprequest-ssl": 10 }], 8: [function (i, t, e) { var r = i("../transport"); var s = i("parseqs"); var n = i("engine.io-parser"); var a = i("component-inherit"); var o = i("yeast"); var h = i("debug")("engine.io-client:polling"); t.exports = u; var l = function () { var t = i("xmlhttprequest-ssl"); var e = new t({ xdomain: false }); return null != e.responseType }(); function u(t) { var e = t && t.forceBase64; if (!l || e) { this.supportsBinary = false } r.call(this, t) } a(u, r); u.prototype.name = "polling"; u.prototype.doOpen = function () { this.poll() }; u.prototype.pause = function (t) { var e = 0; var i = this; this.readyState = "pausing"; function r() { h("paused"); i.readyState = "paused"; t() } if (this.polling || !this.writable) { var s = 0; if (this.polling) { h("we are currently polling - waiting to pause"); s++; this.once("pollComplete", function () { h("pre-pause polling complete"); --s || r() }) } if (!this.writable) { h("we are currently writing - waiting to pause"); s++; this.once("drain", function () { h("pre-pause writing complete"); --s || r() }) } } else { r() } }; u.prototype.poll = function () { h("polling"); this.polling = true; this.doPoll(); this.emit("poll") }; u.prototype.onData = function (t) { var r = this; h("polling got data %s", t); var e = function (t, e, i) { if ("opening" == r.readyState) { r.onOpen() } if ("close" == t.type) { r.onClose(); return false } r.onPacket(t) }; n.decodePayload(t, this.socket.binaryType, e); if ("closed" != this.readyState) { this.polling = false; this.emit("pollComplete"); if ("open" == this.readyState) { this.poll() } else { h('ignoring poll - transport state "%s"', this.readyState) } } }; u.prototype.doClose = function () { var t = this; function e() { h("writing close packet"); t.write([{ type: "close" }]) } if ("open" == this.readyState) { h("transport open - closing"); e() } else { h("transport not open - deferring close"); this.once("open", e) } }; u.prototype.write = function (t) { var e = this; this.writable = false; var i = function () { e.writable = true; e.emit("drain") }; var e = this; n.encodePayload(t, this.supportsBinary, function (t) { e.doWrite(t, i) }) }; u.prototype.uri = function () { var t = this.query || {}; var e = this.secure ? "https" : "http"; var i = ""; if (false !== this.timestampRequests) { t[this.timestampParam] = o() } if (!this.supportsBinary && !t.sid) { t.b64 = 1 } t = s.encode(t); if (this.port && ("https" == e && this.port != 443 || "http" == e && this.port != 80)) { i = ":" + this.port } if (t.length) { t = "?" + t } var r = this.hostname.indexOf(":") !== -1; return e + "://" + (r ? "[" + this.hostname + "]" : this.hostname) + i + this.path + t } }, { "../transport": 4, "component-inherit": 16, debug: 17, "engine.io-parser": 19, parseqs: 27, "xmlhttprequest-ssl": 10, yeast: 30 }], 9: [function (r, c, t) { (function (o) { var i = r("../transport"); var h = r("engine.io-parser"); var s = r("parseqs"); var t = r("component-inherit"); var n = r("yeast"); var l = r("debug")("engine.io-client:websocket"); var u = o.WyWSocket || o.WebSocket || o.MozWebSocket; var a = u; if (!a && typeof window === "undefined") { try { a = r("ws") } catch (t) { } } c.exports = e; function e(t) { var e = t && t.forceBase64; if (e) { this.supportsBinary = false } this.perMessageDeflate = t.perMessageDeflate; i.call(this, t) } t(e, i); e.prototype.name = "websocket"; e.prototype.supportsBinary = true; e.prototype.doOpen = function () { if (!this.check()) { return } var t = this; var e = this.uri(); var i = void 0; var r = { agent: this.agent, perMessageDeflate: this.perMessageDeflate }; r.pfx = this.pfx; r.key = this.key; r.passphrase = this.passphrase; r.cert = this.cert; r.ca = this.ca; r.ciphers = this.ciphers; r.rejectUnauthorized = this.rejectUnauthorized; if (this.extraHeaders) { r.headers = this.extraHeaders } this.ws = u ? new a(e) : new a(e, i, r); if (this.ws.binaryType === undefined) { this.supportsBinary = false } if (this.ws.supports && this.ws.supports.binary) { this.supportsBinary = true; this.ws.binaryType = "buffer" } else { this.ws.binaryType = "arraybuffer" } this.addEventListeners() }; e.prototype.addEventListeners = function () { var e = this; this.ws.onopen = function () { e.onOpen() }; this.ws.onclose = function () { e.onClose() }; this.ws.onmessage = function (t) { e.onData(t.data) }; this.ws.onerror = function (t) { e.onError("websocket error", t) } }; if ("undefined" != typeof navigator && /iPad|iPhone|iPod/i.test(navigator.userAgent)) { e.prototype.onData = function (t) { var e = this; setTimeout(function () { i.prototype.onData.call(e, t) }, 0) } } e.prototype.write = function (t) { var s = this; this.writable = false; var n = t.length; for (var e = 0, i = n; e < i; e++) { (function (r) { h.encodePacket(r, s.supportsBinary, function (t) { if (!u) { var e = {}; if (r.options) { e.compress = r.options.compress } if (s.perMessageDeflate) { var i = "string" == typeof t ? o.Buffer.byteLength(t) : t.length; if (i < s.perMessageDeflate.threshold) { e.compress = false } } } try { if (u) { s.ws.send(t) } else { s.ws.send(t, e) } } catch (t) { l("websocket closed before onclose event") } --n || a() }) })(t[e]) } function a() { s.emit("flush"); setTimeout(function () { s.writable = true; s.emit("drain") }, 0) } }; e.prototype.onClose = function () { i.prototype.onClose.call(this) }; e.prototype.doClose = function () { if (typeof this.ws !== "undefined") { this.ws.close() } }; e.prototype.uri = function () { var t = this.query || {}; var e = this.secure ? "wss" : "ws"; var i = ""; if (this.port && ("wss" == e && this.port != 443 || "ws" == e && this.port != 80)) { i = ":" + this.port } if (this.timestampRequests) { t[this.timestampParam] = n() } if (!this.supportsBinary) { t.b64 = 1 } t = s.encode(t); if (t.length) { t = "?" + t } var r = this.hostname.indexOf(":") !== -1; return e + "://" + (r ? "[" + this.hostname + "]" : this.hostname) + i + this.path + t }; e.prototype.check = function () { return !!a && !("__initialize" in a && this.name === e.prototype.name) } }).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {}) }, { "../transport": 4, "component-inherit": 16, debug: 17, "engine.io-parser": 19, parseqs: 27, ws: undefined, yeast: 30 }], 10: [function (t, e, i) { var s = t("has-cors"); e.exports = function (t) { var e = t.xdomain; var i = t.xscheme; var r = t.enablesXDR; try { if ("undefined" != typeof XMLHttpRequest && (!e || s)) { return new XMLHttpRequest } } catch (t) { } try { if ("undefined" != typeof XDomainRequest && !i && r) { return new XDomainRequest } } catch (t) { } if (!e) { try { return new ActiveXObject("Microsoft.XMLHTTP") } catch (t) { } } } }, { "has-cors": 22 }], 11: [function (t, e, i) { e.exports = r; function r(t, i, r) { var s = false; r = r || a; n.count = t; return t === 0 ? i() : n; function n(t, e) { if (n.count <= 0) { throw new Error("after called too many times") } --n.count; if (t) { s = true; i(t); i = r } else if (n.count === 0 && !s) { i(null, e) } } } function a() { } }, {}], 12: [function (t, e, i) { e.exports = function (t, e, i) { var r = t.byteLength; e = e || 0; i = i || r; if (t.slice) { return t.slice(e, i) } if (e < 0) { e += r } if (i < 0) { i += r } if (i > r) { i = r } if (e >= r || e >= i || r === 0) { return new ArrayBuffer(0) } var s = new Uint8Array(t); var n = new Uint8Array(i - e); for (var a = e, o = 0; a < i; a++ , o++) { n[o] = s[a] } return n.buffer } }, {}], 13: [function (t, e, i) { (function (c) { "use strict"; i.encode = function (t) { var e = new Uint8Array(t), i, r = e.length, s = ""; for (i = 0; i < r; i += 3) { s += c[e[i] >> 2]; s += c[(e[i] & 3) << 4 | e[i + 1] >> 4]; s += c[(e[i + 1] & 15) << 2 | e[i + 2] >> 6]; s += c[e[i + 2] & 63] } if (r % 3 === 2) { s = s.substring(0, s.length - 1) + "=" } else if (r % 3 === 1) { s = s.substring(0, s.length - 2) + "==" } return s }; i.decode = function (t) { var e = t.length * .75, i = t.length, r, s = 0, n, a, o, h; if (t[t.length - 1] === "=") { e--; if (t[t.length - 2] === "=") { e-- } } var l = new ArrayBuffer(e), u = new Uint8Array(l); for (r = 0; r < i; r += 4) { n = c.indexOf(t[r]); a = c.indexOf(t[r + 1]); o = c.indexOf(t[r + 2]); h = c.indexOf(t[r + 3]); u[s++] = n << 2 | a >> 4; u[s++] = (a & 15) << 4 | o >> 2; u[s++] = (o & 3) << 6 | h & 63 } return l } })("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/") }, {}], 14: [function (t, h, e) { (function (t) { var s = t.BlobBuilder || t.WebKitBlobBuilder || t.MSBlobBuilder || t.MozBlobBuilder; var e = function () { try { var t = new Blob(["hi"]); return t.size === 2 } catch (t) { return false } }(); var i = e && function () { try { var t = new Blob([new Uint8Array([1, 2])]); return t.size === 2 } catch (t) { return false } }(); var r = s && s.prototype.append && s.prototype.getBlob; function n(t) { for (var e = 0; e < t.length; e++) { var i = t[e]; if (i.buffer instanceof ArrayBuffer) { var r = i.buffer; if (i.byteLength !== r.byteLength) { var s = new Uint8Array(i.byteLength); s.set(new Uint8Array(r, i.byteOffset, i.byteLength)); r = s.buffer } t[e] = r } } } function a(t, e) { e = e || {}; var i = new s; n(t); for (var r = 0; r < t.length; r++) { i.append(t[r]) } return e.type ? i.getBlob(e.type) : i.getBlob() } function o(t, e) { n(t); return new Blob(t, e || {}) } h.exports = function () { if (e) { return i ? t.Blob : o } else if (r) { return a } else { return undefined } }() }).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {}) }, {}], 15: [function (t, e, i) { e.exports = r; function r(t) { if (t) return s(t) } function s(t) { for (var e in r.prototype) { t[e] = r.prototype[e] } return t } r.prototype.on = r.prototype.addEventListener = function (t, e) { this._callbacks = this._callbacks || {}; (this._callbacks[t] = this._callbacks[t] || []).push(e); return this }; r.prototype.once = function (t, e) { var i = this; this._callbacks = this._callbacks || {}; function r() { i.off(t, r); e.apply(this, arguments) } r.fn = e; this.on(t, r); return this }; r.prototype.off = r.prototype.removeListener = r.prototype.removeAllListeners = r.prototype.removeEventListener = function (t, e) { this._callbacks = this._callbacks || {}; if (0 == arguments.length) { this._callbacks = {}; return this } var i = this._callbacks[t]; if (!i) return this; if (1 == arguments.length) { delete this._callbacks[t]; return this } var r; for (var s = 0; s < i.length; s++) { r = i[s]; if (r === e || r.fn === e) { i.splice(s, 1); break } } return this }; r.prototype.emit = function (t) { this._callbacks = this._callbacks || {}; var e = [].slice.call(arguments, 1), i = this._callbacks[t]; if (i) { i = i.slice(0); for (var r = 0, s = i.length; r < s; ++r) { i[r].apply(this, e) } } return this }; r.prototype.listeners = function (t) { this._callbacks = this._callbacks || {}; return this._callbacks[t] || [] }; r.prototype.hasListeners = function (t) { return !!this.listeners(t).length } }, {}], 16: [function (t, e, i) { e.exports = function (t, e) { var i = function () { }; i.prototype = e.prototype; t.prototype = new i; t.prototype.constructor = t } }, {}], 17: [function (t, e, n) { n = e.exports = t("./debug"); n.log = s; n.formatArgs = r; n.save = a; n.load = o; n.useColors = i; n.storage = "undefined" != typeof chrome && "undefined" != typeof chrome.storage ? chrome.storage.local : h(); n.colors = ["lightseagreen", "forestgreen", "goldenrod", "dodgerblue", "darkorchid", "crimson"]; function i() { return "WebkitAppearance" in document.documentElement.style || window.console && (console.firebug || console.exception && console.table) || navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 } n.formatters.j = function (t) { return JSON.stringify(t) }; function r() { var t = arguments; var e = this.useColors; t[0] = (e ? "%c" : "") + this.namespace + (e ? " %c" : " ") + t[0] + (e ? "%c " : " ") + "+" + n.humanize(this.diff); if (!e) return t; var i = "color: " + this.color; t = [t[0], i, "color: inherit"].concat(Array.prototype.slice.call(t, 1)); var r = 0; var s = 0; t[0].replace(/%[a-z%]/g, function (t) { if ("%%" === t) return; r++; if ("%c" === t) { s = r } }); t.splice(s, 0, i); return t } function s() { return "object" === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments) } function a(t) { try { if (null == t) { n.storage.removeItem("debug") } else { n.storage.debug = t } } catch (t) { } } function o() { var t; try { t = n.storage.debug } catch (t) { } return t } n.enable(o()); function h() { try { return window.localStorage } catch (t) { } } }, { "./debug": 18 }], 18: [function (t, e, o) { o = e.exports = r; o.coerce = u; o.disable = n; o.enable = s; o.enabled = a; o.humanize = t("ms"); o.names = []; o.skips = []; o.formatters = {}; var i = 0; var h; function l() { return o.colors[i++ % o.colors.length] } function r(t) { function e() { } e.enabled = false; function r() { var s = r; var t = +new Date; var e = t - (h || t); s.diff = e; s.prev = h; s.curr = t; h = t; if (null == s.useColors) s.useColors = o.useColors(); if (null == s.color && s.useColors) s.color = l(); var n = Array.prototype.slice.call(arguments); n[0] = o.coerce(n[0]); if ("string" !== typeof n[0]) { n = ["%o"].concat(n) } var a = 0; n[0] = n[0].replace(/%([a-z%])/g, function (t, e) { if (t === "%%") return t; a++; var i = o.formatters[e]; if ("function" === typeof i) { var r = n[a]; t = i.call(s, r); n.splice(a, 1); a-- } return t }); if ("function" === typeof o.formatArgs) { n = o.formatArgs.apply(s, n) } var i = r.log || o.log || console.log.bind(console); i.apply(s, n) } r.enabled = true; var i = o.enabled(t) ? r : e; i.namespace = t; return i } function s(t) { o.save(t); var e = (t || "").split(/[\s,]+/); var i = e.length; for (var r = 0; r < i; r++) { if (!e[r]) continue; t = e[r].replace(/\*/g, ".*?"); if (t[0] === "-") { o.skips.push(new RegExp("^" + t.substr(1) + "$")) } else { o.names.push(new RegExp("^" + t + "$")) } } } function n() { o.enable("") } function a(t) { var e, i; for (e = 0, i = o.skips.length; e < i; e++) { if (o.skips[e].test(t)) { return false } } for (e = 0, i = o.names.length; e < i; e++) { if (o.names[e].test(t)) { return true } } return false } function u(t) { if (t instanceof Error) return t.stack || t.message; return t } }, { ms: 25 }], 19: [function (r, t, x) { (function (l) { var t = r("./keys"); var a = r("has-binary"); var _ = r("arraybuffer.slice"); var s = r("base64-arraybuffer"); var o = r("after"); var h = r("utf8"); try { navigator } catch (t) { navigator = { userAgent: "" } } var e = navigator.userAgent.match(/Android/i); var i = /PhantomJS/i.test(navigator.userAgent); var u = e || i; x.protocol = 3; var c = x.packets = { open: 0, close: 1, ping: 2, pong: 3, message: 4, upgrade: 5, noop: 6 }; var f = t(c); var d = { type: "error", data: "parser error" }; var p = r("blob"); x.encodePacket = function (t, e, i, r) { if ("function" == typeof e) { r = e; e = false } if ("function" == typeof i) { r = i; i = null } var s = t.data === undefined ? undefined : t.data.buffer || t.data; if (l.ArrayBuffer && s instanceof ArrayBuffer) { return m(t, e, r) } else if (p && s instanceof l.Blob) { return g(t, e, r) } if (s && s.base64) { return v(t, r) } var n = c[t.type]; if (undefined !== t.data) { n += i ? h.encode(String(t.data)) : String(t.data) } return r("" + n) }; function v(t, e) { var i = "b" + x.packets[t.type] + t.data.data; return e(i) } function m(t, e, i) { if (!e) { return x.encodeBase64Packet(t, i) } var r = t.data; var s = new Uint8Array(r); var n = new Uint8Array(1 + r.byteLength); n[0] = c[t.type]; for (var a = 0; a < s.length; a++) { n[a + 1] = s[a] } return i(n.buffer) } function n(t, e, i) { if (!e) { return x.encodeBase64Packet(t, i) } var r = new FileReader; r.onload = function () { t.data = r.result; x.encodePacket(t, e, true, i) }; return r.readAsArrayBuffer(t.data) } function g(t, e, i) { if (!e) { return x.encodeBase64Packet(t, i) } if (u) { return n(t, e, i) } var r = new Uint8Array(1); r[0] = c[t.type]; var s = new p([r.buffer, t.data]); return i(s) } x.encodeBase64Packet = function (e, i) { var r = "b" + x.packets[e.type]; if (p && e.data instanceof l.Blob) { var s = new FileReader; s.onload = function () { var t = s.result.split(",")[1]; i(r + t) }; return s.readAsDataURL(e.data) } var n; try { n = String.fromCharCode.apply(null, new Uint8Array(e.data)) } catch (t) { var a = new Uint8Array(e.data); var o = new Array(a.length); for (var h = 0; h < a.length; h++) { o[h] = a[h] } n = String.fromCharCode.apply(null, o) } r += l.btoa(n); return i(r) }; x.decodePacket = function (t, e, i) { if (typeof t == "string" || t === undefined) { if (t.charAt(0) == "b") { return x.decodeBase64Packet(t.substr(1), e) } if (i) { try { t = h.decode(t) } catch (t) { return d } } var r = t.charAt(0); if (Number(r) != r || !f[r]) { return d } if (t.length > 1) { return { type: f[r], data: t.substring(1) } } else { return { type: f[r] } } } var s = new Uint8Array(t); var r = s[0]; var n = _(t, 1); if (p && e === "blob") { n = new p([n]) } return { type: f[r], data: n } }; x.decodeBase64Packet = function (t, e) { var i = f[t.charAt(0)]; if (!l.ArrayBuffer) { return { type: i, data: { base64: true, data: t.substr(1) } } } var r = s.decode(t.substr(1)); if (e === "blob" && p) { r = new p([r]) } return { type: i, data: r } }; x.encodePayload = function (t, i, r) { if (typeof i == "function") { r = i; i = null } var s = a(t); if (i && s) { if (p && !u) { return x.encodePayloadAsBlob(t, r) } return x.encodePayloadAsArrayBuffer(t, r) } if (!t.length) { return r("0:") } function n(t) { return t.length + ":" + t } function e(t, e) { x.encodePacket(t, !s ? false : i, true, function (t) { e(null, n(t)) }) } y(t, e, function (t, e) { return r(e.join("")) }) }; function y(t, e, i) { var s = new Array(t.length); var r = o(t.length, i); var n = function (i, t, r) { e(t, function (t, e) { s[i] = e; r(t, s) }) }; for (var a = 0; a < t.length; a++) { n(a, t[a], r) } } x.decodePayload = function (t, e, i) { if (typeof t != "string") { return x.decodePayloadAsBinary(t, e, i) } if (typeof e === "function") { i = e; e = null } var r; if (t == "") { return i(d, 0, 1) } var s = "", n, a; for (var o = 0, h = t.length; o < h; o++) { var l = t.charAt(o); if (":" != l) { s += l } else { if ("" == s || s != (n = Number(s))) { return i(d, 0, 1) } a = t.substr(o + 1, n); if (s != a.length) { return i(d, 0, 1) } if (a.length) { r = x.decodePacket(a, e, true); if (d.type == r.type && d.data == r.data) { return i(d, 0, 1) } var u = i(r, o + n, h); if (false === u) return } o += n; s = "" } } if (s != "") { return i(d, 0, 1) } }; x.encodePayloadAsArrayBuffer = function (t, r) { if (!t.length) { return r(new ArrayBuffer(0)) } function e(t, e) { x.encodePacket(t, true, true, function (t) { return e(null, t) }) } y(t, e, function (t, e) { var i = e.reduce(function (t, e) { var i; if (typeof e === "string") { i = e.length } else { i = e.byteLength } return t + i.toString().length + i + 2 }, 0); var a = new Uint8Array(i); var o = 0; e.forEach(function (t) { var e = typeof t === "string"; var i = t; if (e) { var r = new Uint8Array(t.length); for (var s = 0; s < t.length; s++) { r[s] = t.charCodeAt(s) } i = r.buffer } if (e) { a[o++] = 0 } else { a[o++] = 1 } var n = i.byteLength.toString(); for (var s = 0; s < n.length; s++) { a[o++] = parseInt(n[s]) } a[o++] = 255; var r = new Uint8Array(i); for (var s = 0; s < r.length; s++) { a[o++] = r[s] } }); return r(a.buffer) }) }; x.encodePayloadAsBlob = function (t, i) { function e(t, h) { x.encodePacket(t, true, true, function (t) { var e = new Uint8Array(1); e[0] = 1; if (typeof t === "string") { var i = new Uint8Array(t.length); for (var r = 0; r < t.length; r++) { i[r] = t.charCodeAt(r) } t = i.buffer; e[0] = 0 } var s = t instanceof ArrayBuffer ? t.byteLength : t.size; var n = s.toString(); var a = new Uint8Array(n.length + 1); for (var r = 0; r < n.length; r++) { a[r] = parseInt(n[r]) } a[n.length] = 255; if (p) { var o = new p([e.buffer, a.buffer, t]); h(null, o) } }) } y(t, e, function (t, e) { return i(new p(e)) }) }; x.decodePayloadAsBinary = function (t, i, r) { if (typeof i === "function") { r = i; i = null } var e = t; var s = []; var n = false; while (e.byteLength > 0) { var a = new Uint8Array(e); var o = a[0] === 0; var h = ""; for (var l = 1; ; l++) { if (a[l] == 255) break; if (h.length > 310) { n = true; break } h += a[l] } if (n) return r(d, 0, 1); e = _(e, 2 + h.length); h = parseInt(h); var u = _(e, 0, h); if (o) { try { u = String.fromCharCode.apply(null, new Uint8Array(u)) } catch (t) { var c = new Uint8Array(u); u = ""; for (var l = 0; l < c.length; l++) { u += String.fromCharCode(c[l]) } } } s.push(u); e = _(e, h) } var f = s.length; s.forEach(function (t, e) { r(x.decodePacket(t, i, true), e, f) }) } }).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {}) }, { "./keys": 20, after: 11, "arraybuffer.slice": 12, "base64-arraybuffer": 13, blob: 14, "has-binary": 21, utf8: 29 }], 20: [function (t, e, i) { e.exports = Object.keys || function t(e) { var i = []; var r = Object.prototype.hasOwnProperty; for (var s in e) { if (r.call(e, s)) { i.push(s) } } return i } }, {}], 21: [function (e, i, t) { (function (s) { var n = e("isarray"); i.exports = t; function t(t) { function r(t) { if (!t) return false; if (s.Buffer && s.Buffer.isBuffer(t) || s.ArrayBuffer && t instanceof ArrayBuffer || s.Blob && t instanceof Blob || s.File && t instanceof File) { return true } if (n(t)) { for (var e = 0; e < t.length; e++) { if (r(t[e])) { return true } } } else if (t && "object" == typeof t) { if (t.toJSON) { t = t.toJSON() } for (var i in t) { if (Object.prototype.hasOwnProperty.call(t, i) && r(t[i])) { return true } } } return false } return r(t) } }).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {}) }, { isarray: 24 }], 22: [function (t, e, i) { try { e.exports = typeof XMLHttpRequest !== "undefined" && "withCredentials" in new XMLHttpRequest } catch (t) { e.exports = false } }, {}], 23: [function (t, e, i) { var r = [].indexOf; e.exports = function (t, e) { if (r) return t.indexOf(e); for (var i = 0; i < t.length; ++i) { if (t[i] === e) return i } return -1 } }, {}], 24: [function (t, e, i) { e.exports = Array.isArray || function (t) { return Object.prototype.toString.call(t) == "[object Array]" } }, {}], 25: [function (t, e, i) { var s = 1e3; var n = s * 60; var a = n * 60; var o = a * 24; var h = o * 365.25; e.exports = function (t, e) { e = e || {}; if ("string" == typeof t) return r(t); return e.long ? u(t) : l(t) }; function r(t) { t = "" + t; if (t.length > 1e4) return; var e = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(t); if (!e) return; var i = parseFloat(e[1]); var r = (e[2] || "ms").toLowerCase(); switch (r) { case "years": case "year": case "yrs": case "yr": case "y": return i * h; case "days": case "day": case "d": return i * o; case "hours": case "hour": case "hrs": case "hr": case "h": return i * a; case "minutes": case "minute": case "mins": case "min": case "m": return i * n; case "seconds": case "second": case "secs": case "sec": case "s": return i * s; case "milliseconds": case "millisecond": case "msecs": case "msec": case "ms": return i } } function l(t) { if (t >= o) return Math.round(t / o) + "d"; if (t >= a) return Math.round(t / a) + "h"; if (t >= n) return Math.round(t / n) + "m"; if (t >= s) return Math.round(t / s) + "s"; return t + "ms" } function u(t) { return c(t, o, "day") || c(t, a, "hour") || c(t, n, "minute") || c(t, s, "second") || t + " ms" } function c(t, e, i) { if (t < e) return; if (t < e * 1.5) return Math.floor(t / e) + " " + i; return Math.ceil(t / e) + " " + i + "s" } }, {}], 26: [function (t, e, i) { (function (i) { var r = /^[\],:{}\s]*$/; var s = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g; var n = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g; var a = /(?:^|:|,)(?:\s*\[)+/g; var o = /^\s+/; var h = /\s+$/; e.exports = function t(e) { if ("string" != typeof e || !e) { return null } e = e.replace(o, "").replace(h, ""); if (i.JSON && JSON.parse) { return JSON.parse(e) } if (r.test(e.replace(s, "@").replace(n, "]").replace(a, ""))) { return new Function("return " + e)() } } }).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {}) }, {}], 27: [function (t, e, i) { i.encode = function (t) { var e = ""; for (var i in t) { if (t.hasOwnProperty(i)) { if (e.length) e += "&"; e += encodeURIComponent(i) + "=" + encodeURIComponent(t[i]) } } return e }; i.decode = function (t) { var e = {}; var i = t.split("&"); for (var r = 0, s = i.length; r < s; r++) { var n = i[r].split("="); e[decodeURIComponent(n[0])] = decodeURIComponent(n[1]) } return e } }, {}], 28: [function (t, e, i) { var h = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/; var l = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"]; e.exports = function t(e) { var i = e, r = e.indexOf("["), s = e.indexOf("]"); if (r != -1 && s != -1) { e = e.substring(0, r) + e.substring(r, s).replace(/:/g, ";") + e.substring(s, e.length) } var n = h.exec(e || ""), a = {}, o = 14; while (o--) { a[l[o]] = n[o] || "" } if (r != -1 && s != -1) { a.source = i; a.host = a.host.substring(1, a.host.length - 1).replace(/;/g, ":"); a.authority = a.authority.replace("[", "").replace("]", "").replace(/;/g, ":"); a.ipv6uri = true } return a } }, {}], 29: [function (t, w, T) { (function (b) { (function (t) { var e = typeof T == "object" && T; var i = typeof w == "object" && w && w.exports == e && w; var r = typeof b == "object" && b; if (r.global === r || r.window === r) { t = r } var n = String.fromCharCode; function a(t) { var e = []; var i = 0; var r = t.length; var s; var n; while (i < r) { s = t.charCodeAt(i++); if (s >= 55296 && s <= 56319 && i < r) { n = t.charCodeAt(i++); if ((n & 64512) == 56320) { e.push(((s & 1023) << 10) + (n & 1023) + 65536) } else { e.push(s); i-- } } else { e.push(s) } } return e } function s(t) { var e = t.length; var i = -1; var r; var s = ""; while (++i < e) { r = t[i]; if (r > 65535) { r -= 65536; s += n(r >>> 10 & 1023 | 55296); r = 56320 | r & 1023 } s += n(r) } return s } function o(t) { if (t >= 55296 && t <= 57343) { throw Error("Lone surrogate U+" + t.toString(16).toUpperCase() + " is not a scalar value") } } function h(t, e) { return n(t >> e & 63 | 128) } function l(t) { if ((t & 4294967168) == 0) { return n(t) } var e = ""; if ((t & 4294965248) == 0) { e = n(t >> 6 & 31 | 192) } else if ((t & 4294901760) == 0) { o(t); e = n(t >> 12 & 15 | 224); e += h(t, 6) } else if ((t & 4292870144) == 0) { e = n(t >> 18 & 7 | 240); e += h(t, 12); e += h(t, 6) } e += n(t & 63 | 128); return e } function u(t) { var e = a(t); var i = e.length; var r = -1; var s; var n = ""; while (++r < i) { s = e[r]; n += l(s) } return n } function c() { if (p >= d) { throw Error("Invalid byte index") } var t = _[p] & 255; p++; if ((t & 192) == 128) { return t & 63 } throw Error("Invalid continuation byte") } function f() { var t; var e; var i; var r; var s; if (p > d) { throw Error("Invalid byte index") } if (p == d) { return false } t = _[p] & 255; p++; if ((t & 128) == 0) { return t } if ((t & 224) == 192) { var e = c(); s = (t & 31) << 6 | e; if (s >= 128) { return s } else { throw Error("Invalid continuation byte") } } if ((t & 240) == 224) { e = c(); i = c(); s = (t & 15) << 12 | e << 6 | i; if (s >= 2048) { o(s); return s } else { throw Error("Invalid continuation byte") } } if ((t & 248) == 240) { e = c(); i = c(); r = c(); s = (t & 15) << 18 | e << 12 | i << 6 | r; if (s >= 65536 && s <= 1114111) { return s } } throw Error("Invalid UTF-8 detected") } var _; var d; var p; function v(t) { _ = a(t); d = _.length; p = 0; var e = []; var i; while ((i = f()) !== false) { e.push(i) } return s(e) } var m = { version: "2.0.0", encode: u, decode: v }; if (typeof C == "function" && typeof C.amd == "object" && C.amd) { C(function () { return m }) } else if (e && !e.nodeType) { if (i) { i.exports = m } else { var g = {}; var y = g.hasOwnProperty; for (var x in m) { y.call(m, x) && (e[x] = m[x]) } } } else { t.utf8 = m } })(this) }).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {}) }, {}], 30: [function (t, e, i) { "use strict"; var r = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".split(""), s = 64, n = {}, a = 0, o = 0, h; function l(t) { var e = ""; do { e = r[t % s] + e; t = Math.floor(t / s) } while (t > 0); return e } function u(t) { var e = 0; for (o = 0; o < t.length; o++) { e = e * s + n[t.charAt(o)] } return e } function c() { var t = l(+new Date); if (t !== h) return a = 0, h = t; return t + "." + l(a++) } for (; o < s; o++)n[r[o]] = o; c.encode = l; c.decode = u; e.exports = c }, {}], 31: [function (t, e, i) { var l = t("./url"); var r = t("socket.io-parser"); var u = t("./manager"); var c = t("debug")("socket.io-client"); e.exports = i = s; var f = i.managers = {}; function s(t, e) { if (typeof t == "object") { e = t; t = undefined } e = e || {}; var i = l(t); var r = i.source; var s = i.id; var n = i.path; var a = f[s] && n in f[s].nsps; var o = e.forceNew || e["force new connection"] || false === e.multiplex || a; var h; if (o) { c("ignoring socket cache for %s", r); h = u(r, e) } else { if (!f[s]) { c("new io instance for %s", r); f[s] = u(r, e) } h = f[s] } return h.socket(i.path) } i.protocol = r.protocol; i.connect = s; i.Manager = t("./manager"); i.Socket = t("./socket") }, { "./manager": 32, "./socket": 34, "./url": 35, debug: 39, "socket.io-parser": 47 }], 32: [function (t, e, i) { var o = t("engine.io-client"); var s = t("./socket"); var r = t("component-emitter"); var n = t("socket.io-parser"); var h = t("./on"); var a = t("component-bind"); var l = t("debug")("socket.io-client:manager"); var u = t("indexof"); var c = t("backo2"); var f = Object.prototype.hasOwnProperty; e.exports = _; function _(t, e) { if (!(this instanceof _)) return new _(t, e); if (t && "object" == typeof t) { e = t; t = undefined } e = e || {}; e.path = e.path || "/socket.io"; this.nsps = {}; this.subs = []; this.opts = e; this.reconnection(e.reconnection !== false); this.reconnectionAttempts(e.reconnectionAttempts || Infinity); this.reconnectionDelay(e.reconnectionDelay || 1e3); this.reconnectionDelayMax(e.reconnectionDelayMax || 5e3); this.randomizationFactor(e.randomizationFactor || .5); this.backoff = new c({ min: this.reconnectionDelay(), max: this.reconnectionDelayMax(), jitter: this.randomizationFactor() }); this.timeout(null == e.timeout ? 2e4 : e.timeout); this.readyState = "closed"; this.uri = t; this.connecting = []; this.lastPing = null; this.encoding = false; this.packetBuffer = []; this.encoder = new n.Encoder; this.decoder = new n.Decoder; this.autoConnect = e.autoConnect !== false; if (this.autoConnect) this.open() } _.prototype.emitAll = function () { this.emit.apply(this, arguments); for (var t in this.nsps) { if (f.call(this.nsps, t)) { this.nsps[t].emit.apply(this.nsps[t], arguments) } } }; _.prototype.updateSocketIds = function () { for (var t in this.nsps) { if (f.call(this.nsps, t)) { this.nsps[t].id = this.engine.id } } }; r(_.prototype); _.prototype.reconnection = function (t) { if (!arguments.length) return this._reconnection; this._reconnection = !!t; return this }; _.prototype.reconnectionAttempts = function (t) { if (!arguments.length) return this._reconnectionAttempts; this._reconnectionAttempts = t; return this }; _.prototype.reconnectionDelay = function (t) { if (!arguments.length) return this._reconnectionDelay; this._reconnectionDelay = t; this.backoff && this.backoff.setMin(t); return this }; _.prototype.randomizationFactor = function (t) { if (!arguments.length) return this._randomizationFactor; this._randomizationFactor = t; this.backoff && this.backoff.setJitter(t); return this }; _.prototype.reconnectionDelayMax = function (t) { if (!arguments.length) return this._reconnectionDelayMax; this._reconnectionDelayMax = t; this.backoff && this.backoff.setMax(t); return this }; _.prototype.timeout = function (t) { if (!arguments.length) return this._timeout; this._timeout = t; return this }; _.prototype.maybeReconnectOnOpen = function () { if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) { this.reconnect() } }; _.prototype.open = _.prototype.connect = function (i) { l("readyState %s", this.readyState); if (~this.readyState.indexOf("open")) return this; l("opening %s", this.uri); this.engine = o(this.uri, this.opts); var t = this.engine; var r = this; this.readyState = "opening"; this.skipReconnect = false; var e = h(t, "open", function () { r.onopen(); i && i() }); var s = h(t, "error", function (t) { l("connect_error"); r.cleanup(); r.readyState = "closed"; r.emitAll("connect_error", t); if (i) { var e = new Error("Connection error"); e.data = t; i(e) } else { r.maybeReconnectOnOpen() } }); if (false !== this._timeout) { var n = this._timeout; l("connect attempt will timeout after %d", n); var a = setTimeout(function () { l("connect attempt timed out after %d", n); e.destroy(); t.close(); t.emit("error", "timeout"); r.emitAll("connect_timeout", n) }, n); this.subs.push({ destroy: function () { clearTimeout(a) } }) } this.subs.push(e); this.subs.push(s); return this }; _.prototype.onopen = function () { l("open"); this.cleanup(); this.readyState = "open"; this.emit("open"); var t = this.engine; this.subs.push(h(t, "data", a(this, "ondata"))); this.subs.push(h(t, "ping", a(this, "onping"))); this.subs.push(h(t, "pong", a(this, "onpong"))); this.subs.push(h(t, "error", a(this, "onerror"))); this.subs.push(h(t, "close", a(this, "onclose"))); this.subs.push(h(this.decoder, "decoded", a(this, "ondecoded"))) }; _.prototype.onping = function () { this.lastPing = new Date; this.emitAll("ping") }; _.prototype.onpong = function () { this.emitAll("pong", new Date - this.lastPing) }; _.prototype.ondata = function (t) { this.decoder.add(t) }; _.prototype.ondecoded = function (t) { this.emit("packet", t) }; _.prototype.onerror = function (t) { l("error", t); this.emitAll("error", t) }; _.prototype.socket = function (t) { var e = this.nsps[t]; if (!e) { e = new s(this, t); this.nsps[t] = e; var i = this; e.on("connecting", r); e.on("connect", function () { e.id = i.engine.id }); if (this.autoConnect) { r() } } function r() { if (!~u(i.connecting, e)) { i.connecting.push(e) } } return e }; _.prototype.destroy = function (t) { var e = u(this.connecting, t); if (~e) this.connecting.splice(e, 1); if (this.connecting.length) return; this.close() }; _.prototype.packet = function (i) { l("writing packet %j", i); var r = this; if (!r.encoding) { r.encoding = true; this.encoder.encode(i, function (t) { for (var e = 0; e < t.length; e++) { r.engine.write(t[e], i.options) } r.encoding = false; r.processPacketQueue() }) } else { r.packetBuffer.push(i) } }; _.prototype.processPacketQueue = function () { if (this.packetBuffer.length > 0 && !this.encoding) { var t = this.packetBuffer.shift(); this.packet(t) } }; _.prototype.cleanup = function () { l("cleanup"); var t; while (t = this.subs.shift()) t.destroy(); this.packetBuffer = []; this.encoding = false; this.lastPing = null; this.decoder.destroy() }; _.prototype.close = _.prototype.disconnect = function () { l("disconnect"); this.skipReconnect = true; this.reconnecting = false; if ("opening" == this.readyState) { this.cleanup() } this.backoff.reset(); this.readyState = "closed"; if (this.engine) this.engine.close() }; _.prototype.onclose = function (t) { l("onclose"); this.cleanup(); this.backoff.reset(); this.readyState = "closed"; this.emit("close", t); if (this._reconnection && !this.skipReconnect) { this.reconnect() } }; _.prototype.reconnect = function () { if (this.reconnecting || this.skipReconnect) return this; var e = this; if (this.backoff.attempts >= this._reconnectionAttempts) { l("reconnect failed"); this.backoff.reset(); this.emitAll("reconnect_failed"); this.reconnecting = false } else { var t = this.backoff.duration(); l("will wait %dms before reconnect attempt", t); this.reconnecting = true; var i = setTimeout(function () { if (e.skipReconnect) return; l("attempting reconnect"); e.emitAll("reconnect_attempt", e.backoff.attempts); e.emitAll("reconnecting", e.backoff.attempts); if (e.skipReconnect) return; e.open(function (t) { if (t) { l("reconnect attempt error"); e.reconnecting = false; e.reconnect(); e.emitAll("reconnect_error", t.data) } else { l("reconnect success"); e.onreconnect() } }) }, t); this.subs.push({ destroy: function () { clearTimeout(i) } }) } }; _.prototype.onreconnect = function () { var t = this.backoff.attempts; this.reconnecting = false; this.backoff.reset(); this.updateSocketIds(); this.emitAll("reconnect", t) } }, { "./on": 33, "./socket": 34, backo2: 36, "component-bind": 37, "component-emitter": 38, debug: 39, "engine.io-client": 1, indexof: 42, "socket.io-parser": 47 }], 33: [function (t, e, i) { e.exports = r; function r(t, e, i) { t.on(e, i); return { destroy: function () { t.removeListener(e, i) } } } }, {}], 34: [function (t, e, i) { var n = t("socket.io-parser"); var r = t("component-emitter"); var a = t("to-array"); var s = t("./on"); var o = t("component-bind"); var h = t("debug")("socket.io-client:socket"); var l = t("has-binary"); e.exports = i = f; var u = { connect: 1, connect_error: 1, connect_timeout: 1, connecting: 1, disconnect: 1, error: 1, reconnect: 1, reconnect_attempt: 1, reconnect_failed: 1, reconnect_error: 1, reconnecting: 1, ping: 1, pong: 1 }; var c = r.prototype.emit; function f(t, e) { this.io = t; this.nsp = e; this.json = this; this.ids = 0; this.acks = {}; this.receiveBuffer = []; this.sendBuffer = []; this.connected = false; this.disconnected = true; if (this.io.autoConnect) this.open() } r(f.prototype); f.prototype.subEvents = function () { if (this.subs) return; var t = this.io; this.subs = [s(t, "open", o(this, "onopen")), s(t, "packet", o(this, "onpacket")), s(t, "close", o(this, "onclose"))] }; f.prototype.open = f.prototype.connect = function () { if (this.connected) return this; this.subEvents(); this.io.open(); if ("open" == this.io.readyState) this.onopen(); this.emit("connecting"); return this }; f.prototype.send = function () { var t = a(arguments); t.unshift("message"); this.emit.apply(this, t); return this }; f.prototype.emit = function (t) { if (u.hasOwnProperty(t)) { c.apply(this, arguments); return this } var e = a(arguments); var i = n.EVENT; if (l(e)) { i = n.BINARY_EVENT } var r = { type: i, data: e }; r.options = {}; r.options.compress = !this.flags || false !== this.flags.compress; if ("function" == typeof e[e.length - 1]) { h("emitting packet with ack id %d", this.ids); this.acks[this.ids] = e.pop(); r.id = this.ids++ } if (this.connected) { this.packet(r) } else { this.sendBuffer.push(r) } delete this.flags; return this }; f.prototype.packet = function (t) { t.nsp = this.nsp; this.io.packet(t) }; f.prototype.onopen = function () { h("transport is open - connecting"); if ("/" != this.nsp) { this.packet({ type: n.CONNECT }) } }; f.prototype.onclose = function (t) { h("close (%s)", t); this.connected = false; this.disconnected = true; delete this.id; this.emit("disconnect", t) }; f.prototype.onpacket = function (t) { if (t.nsp != this.nsp) return; switch (t.type) { case n.CONNECT: this.onconnect(); break; case n.EVENT: this.onevent(t); break; case n.BINARY_EVENT: this.onevent(t); break; case n.ACK: this.onack(t); break; case n.BINARY_ACK: this.onack(t); break; case n.DISCONNECT: this.ondisconnect(); break; case n.ERROR: this.emit("error", t.data); break } }; f.prototype.onevent = function (t) { var e = t.data || []; h("emitting event %j", e); if (null != t.id) { h("attaching ack callback to event"); e.push(this.ack(t.id)) } if (this.connected) { c.apply(this, e) } else { this.receiveBuffer.push(e) } }; f.prototype.ack = function (i) { var r = this; var s = false; return function () { if (s) return; s = true; var t = a(arguments); h("sending ack %j", t); var e = l(t) ? n.BINARY_ACK : n.ACK; r.packet({ type: e, id: i, data: t }) } }; f.prototype.onack = function (t) { var e = this.acks[t.id]; if ("function" == typeof e) { h("calling ack %s with %j", t.id, t.data); e.apply(this, t.data); delete this.acks[t.id] } else { h("bad ack %s", t.id) } }; f.prototype.onconnect = function () { this.connected = true; this.disconnected = false; this.emit("connect"); this.emitBuffered() }; f.prototype.emitBuffered = function () { var t; for (t = 0; t < this.receiveBuffer.length; t++) { c.apply(this, this.receiveBuffer[t]) } this.receiveBuffer = []; for (t = 0; t < this.sendBuffer.length; t++) { this.packet(this.sendBuffer[t]) } this.sendBuffer = [] }; f.prototype.ondisconnect = function () { h("server disconnect (%s)", this.nsp); this.destroy(); this.onclose("io server disconnect") }; f.prototype.destroy = function () { if (this.subs) { for (var t = 0; t < this.subs.length; t++) { this.subs[t].destroy() } this.subs = null } this.io.destroy(this) }; f.prototype.close = f.prototype.disconnect = function () { if (this.connected) { h("performing disconnect (%s)", this.nsp); this.packet({ type: n.DISCONNECT }) } this.destroy(); if (this.connected) { this.onclose("io client disconnect") } return this }; f.prototype.compress = function (t) { this.flags = this.flags || {}; this.flags.compress = t; return this } }, { "./on": 33, "component-bind": 37, "component-emitter": 38, debug: 39, "has-binary": 41, "socket.io-parser": 47, "to-array": 51 }], 35: [function (e, i, t) { (function (n) { var a = e("parseuri"); var o = e("debug")("socket.io-client:url"); i.exports = t; function t(t, e) { var i = t; var e = e || n.location; if (null == t) t = e.protocol + "//" + e.host; if ("string" == typeof t) { if ("/" == t.charAt(0)) { if ("/" == t.charAt(1)) { t = e.protocol + t } else { t = e.host + t } } if (!/^(https?|wss?):\/\//.test(t)) { o("protocol-less url %s", t); if ("undefined" != typeof e) { t = e.protocol + "//" + t } else { t = "https://" + t } } o("parse %s", t); i = a(t) } if (!i.port) { if (/^(http|ws)$/.test(i.protocol)) { i.port = "80" } else if (/^(http|ws)s$/.test(i.protocol)) { i.port = "443" } } i.path = i.path || "/"; var r = i.host.indexOf(":") !== -1; var s = r ? "[" + i.host + "]" : i.host; i.id = i.protocol + "://" + s + ":" + i.port; i.href = i.protocol + "://" + s + (e && e.port == i.port ? "" : ":" + i.port); return i } }).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {}) }, { debug: 39, parseuri: 45 }], 36: [function (t, e, i) { e.exports = r; function r(t) { t = t || {}; this.ms = t.min || 100; this.max = t.max || 1e4; this.factor = t.factor || 2; this.jitter = t.jitter > 0 && t.jitter <= 1 ? t.jitter : 0; this.attempts = 0 } r.prototype.duration = function () { var t = this.ms * Math.pow(this.factor, this.attempts++); if (this.jitter) { var e = Math.random(); var i = Math.floor(e * this.jitter * t); t = (Math.floor(e * 10) & 1) == 0 ? t - i : t + i } return Math.min(t, this.max) | 0 }; r.prototype.reset = function () { this.attempts = 0 }; r.prototype.setMin = function (t) { this.ms = t }; r.prototype.setMax = function (t) { this.max = t }; r.prototype.setJitter = function (t) { this.jitter = t } }, {}], 37: [function (t, e, i) { var r = [].slice; e.exports = function (t, e) { if ("string" == typeof e) e = t[e]; if ("function" != typeof e) throw new Error("bind() requires a function"); var i = r.call(arguments, 2); return function () { return e.apply(t, i.concat(r.call(arguments))) } } }, {}], 38: [function (t, e, i) { e.exports = r; function r(t) { if (t) return s(t) } function s(t) { for (var e in r.prototype) { t[e] = r.prototype[e] } return t } r.prototype.on = r.prototype.addEventListener = function (t, e) { this._callbacks = this._callbacks || {}; (this._callbacks["$" + t] = this._callbacks["$" + t] || []).push(e); return this }; r.prototype.once = function (t, e) { function i() { this.off(t, i); e.apply(this, arguments) } i.fn = e; this.on(t, i); return this }; r.prototype.off = r.prototype.removeListener = r.prototype.removeAllListeners = r.prototype.removeEventListener = function (t, e) { this._callbacks = this._callbacks || {}; if (0 == arguments.length) { this._callbacks = {}; return this } var i = this._callbacks["$" + t]; if (!i) return this; if (1 == arguments.length) { delete this._callbacks["$" + t]; return this } var r; for (var s = 0; s < i.length; s++) { r = i[s]; if (r === e || r.fn === e) { i.splice(s, 1); break } } return this }; r.prototype.emit = function (t) { this._callbacks = this._callbacks || {}; var e = [].slice.call(arguments, 1), i = this._callbacks["$" + t]; if (i) { i = i.slice(0); for (var r = 0, s = i.length; r < s; ++r) { i[r].apply(this, e) } } return this }; r.prototype.listeners = function (t) { this._callbacks = this._callbacks || {}; return this._callbacks["$" + t] || [] }; r.prototype.hasListeners = function (t) { return !!this.listeners(t).length } }, {}], 39: [function (t, e, i) { arguments[4][17][0].apply(i, arguments) }, { "./debug": 40, dup: 17 }], 40: [function (t, e, i) { arguments[4][18][0].apply(i, arguments) }, { dup: 18, ms: 44 }], 41: [function (e, i, t) { (function (s) { var n = e("isarray"); i.exports = t; function t(t) { function r(t) { if (!t) return false; if (s.Buffer && s.Buffer.isBuffer && s.Buffer.isBuffer(t) || s.ArrayBuffer && t instanceof ArrayBuffer || s.Blob && t instanceof Blob || s.File && t instanceof File) { return true } if (n(t)) { for (var e = 0; e < t.length; e++) { if (r(t[e])) { return true } } } else if (t && "object" == typeof t) { if (t.toJSON && "function" == typeof t.toJSON) { t = t.toJSON() } for (var i in t) { if (Object.prototype.hasOwnProperty.call(t, i) && r(t[i])) { return true } } } return false } return r(t) } }).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {}) }, { isarray: 43 }], 42: [function (t, e, i) { arguments[4][23][0].apply(i, arguments) }, { dup: 23 }], 43: [function (t, e, i) { arguments[4][24][0].apply(i, arguments) }, { dup: 24 }], 44: [function (t, e, i) { arguments[4][25][0].apply(i, arguments) }, { dup: 25 }], 45: [function (t, e, i) { arguments[4][28][0].apply(i, arguments) }, { dup: 28 }], 46: [function (t, e, i) { (function (u) { var c = t("isarray"); var f = t("./is-buffer"); i.deconstructPacket = function (t) { var n = []; var e = t.data; function a(t) { if (!t) return t; if (f(t)) { var e = { _placeholder: true, num: n.length }; n.push(t); return e } else if (c(t)) { var i = new Array(t.length); for (var r = 0; r < t.length; r++) { i[r] = a(t[r]) } return i } else if ("object" == typeof t && !(t instanceof Date)) { var i = {}; for (var s in t) { i[s] = a(t[s]) } return i } return t } var i = t; i.data = a(e); i.attachments = n.length; return { packet: i, buffers: n } }; i.reconstructPacket = function (t, s) { var e = 0; function n(t) { if (t && t._placeholder) { var e = s[t.num]; return e } else if (c(t)) { for (var i = 0; i < t.length; i++) { t[i] = n(t[i]) } return t } else if (t && "object" == typeof t) { for (var r in t) { t[r] = n(t[r]) } return t } return t } t.data = n(t.data); t.attachments = undefined; return t }; i.removeBlobs = function (t, a) { function o(t, e, i) { if (!t) return t; if (u.Blob && t instanceof Blob || u.File && t instanceof File) { h++; var r = new FileReader; r.onload = function () { if (i) { i[e] = this.result } else { l = this.result } if (!--h) { a(l) } }; r.readAsArrayBuffer(t) } else if (c(t)) { for (var s = 0; s < t.length; s++) { o(t[s], s, t) } } else if (t && "object" == typeof t && !f(t)) { for (var n in t) { o(t[n], n, t) } } } var h = 0; var l = t; o(l); if (!h) { a(l) } } }).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {}) }, { "./is-buffer": 48, isarray: 43 }], 47: [function (t, e, a) { var o = t("debug")("socket.io-parser"); var h = t("json3"); var i = t("isarray"); var r = t("component-emitter"); var n = t("./binary"); var s = t("./is-buffer"); a.protocol = 4; a.types = ["CONNECT", "DISCONNECT", "EVENT", "BINARY_EVENT", "ACK", "BINARY_ACK", "ERROR"]; a.CONNECT = 0; a.DISCONNECT = 1; a.EVENT = 2; a.ACK = 3; a.ERROR = 4; a.BINARY_EVENT = 5; a.BINARY_ACK = 6; a.Encoder = l; a.Decoder = f; function l() { } l.prototype.encode = function (t, e) { o("encoding packet %j", t); if (a.BINARY_EVENT == t.type || a.BINARY_ACK == t.type) { c(t, e) } else { var i = u(t); e([i]) } }; function u(t) { var e = ""; var i = false; e += t.type; if (a.BINARY_EVENT == t.type || a.BINARY_ACK == t.type) { e += t.attachments; e += "-" } if (t.nsp && "/" != t.nsp) { i = true; e += t.nsp } if (null != t.id) { if (i) { e += ","; i = false } e += t.id } if (null != t.data) { if (i) e += ","; e += h.stringify(t.data) } o("encoded %j as %s", t, e); return e } function c(t, s) { function e(t) { var e = n.deconstructPacket(t); var i = u(e.packet); var r = e.buffers; r.unshift(i); s(r) } n.removeBlobs(t, e) } function f() { this.reconstructor = null } r(f.prototype); f.prototype.add = function (t) { var e; if ("string" == typeof t) { e = _(t); if (a.BINARY_EVENT == e.type || a.BINARY_ACK == e.type) { this.reconstructor = new d(e); if (this.reconstructor.reconPack.attachments === 0) { this.emit("decoded", e) } } else { this.emit("decoded", e) } } else if (s(t) || t.base64) { if (!this.reconstructor) { throw new Error("got binary data when not reconstructing a packet") } else { e = this.reconstructor.takeBinaryData(t); if (e) { this.reconstructor = null; this.emit("decoded", e) } } } else { throw new Error("Unknown type: " + t) } }; function _(t) { var e = {}; var i = 0; e.type = Number(t.charAt(0)); if (null == a.types[e.type]) return p(); if (a.BINARY_EVENT == e.type || a.BINARY_ACK == e.type) { var r = ""; while (t.charAt(++i) != "-") { r += t.charAt(i); if (i == t.length) break } if (r != Number(r) || t.charAt(i) != "-") { throw new Error("Illegal attachments") } e.attachments = Number(r) } if ("/" == t.charAt(i + 1)) { e.nsp = ""; while (++i) { var s = t.charAt(i); if ("," == s) break; e.nsp += s; if (i == t.length) break } } else { e.nsp = "/" } var n = t.charAt(i + 1); if ("" !== n && Number(n) == n) { e.id = ""; while (++i) { var s = t.charAt(i); if (null == s || Number(s) != s) { --i; break } e.id += t.charAt(i); if (i == t.length) break } e.id = Number(e.id) } if (t.charAt(++i)) { try { e.data = h.parse(t.substr(i)) } catch (t) { return p() } } o("decoded %s as %j", t, e); return e } f.prototype.destroy = function () { if (this.reconstructor) { this.reconstructor.finishedReconstruction() } }; function d(t) { this.reconPack = t; this.buffers = [] } d.prototype.takeBinaryData = function (t) { this.buffers.push(t); if (this.buffers.length == this.reconPack.attachments) { var e = n.reconstructPacket(this.reconPack, this.buffers); this.finishedReconstruction(); return e } return null }; d.prototype.finishedReconstruction = function () { this.reconPack = null; this.buffers = [] }; function p(t) { return { type: a.ERROR, data: "parser error" } } }, { "./binary": 46, "./is-buffer": 48, "component-emitter": 49, debug: 39, isarray: 43, json3: 50 }], 48: [function (t, i, e) { (function (e) { i.exports = t; function t(t) { return e.Buffer && e.Buffer.isBuffer(t) || e.ArrayBuffer && t instanceof ArrayBuffer } }).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {}) }, {}], 49: [function (t, e, i) { arguments[4][15][0].apply(i, arguments) }, { dup: 15 }], 50: [function (t, h, l) { (function (o) { (function () { var t = typeof C === "function" && C.amd; var V = { function: true, object: true }; var e = V[typeof l] && l && !l.nodeType && l; var H = V[typeof window] && window || this, i = e && V[typeof h] && h && !h.nodeType && typeof o == "object" && o; if (i && (i["global"] === i || i["window"] === i || i["self"] === i)) { H = i } function G(t, h) { t || (t = H["Object"]()); h || (h = H["Object"]()); var l = t["Number"] || H["Number"], u = t["String"] || H["String"], e = t["Object"] || H["Object"], c = t["Date"] || H["Date"], i = t["SyntaxError"] || H["SyntaxError"], T = t["TypeError"] || H["TypeError"], r = t["Math"] || H["Math"], s = t["JSON"] || H["JSON"]; if (typeof s == "object" && s) { h.stringify = s.stringify; h.parse = s.parse } var n = e.prototype, C = n.toString, S, A, M; var f = new c(-0xc782b5b800cec); try { f = f.getUTCFullYear() == -109252 && f.getUTCMonth() === 0 && f.getUTCDate() === 1 && f.getUTCHours() == 10 && f.getUTCMinutes() == 37 && f.getUTCSeconds() == 6 && f.getUTCMilliseconds() == 708 } catch (t) { } function _(t) { if (_[t] !== M) { return _[t] } var e; if (t == "bug-string-char-index") { e = "a"[0] != "a" } else if (t == "json") { e = _("json-stringify") && _("json-parse") } else { var i, r = '{"a":[1,true,false,null,"\\u0000\\b\\n\\f\\r\\t"]}'; if (t == "json-stringify") { var s = h.stringify, n = typeof s == "function" && f; if (n) { (i = function () { return 1 }).toJSON = i; try { n = s(0) === "0" && s(new l) === "0" && s(new u) == '""' && s(C) === M && s(M) === M && s() === M && s(i) === "1" && s([i]) == "[1]" && s([M]) == "[null]" && s(null) == "null" && s([M, C, null]) == "[null,null,null]" && s({ a: [i, true, false, null, "\0\b\n\f\r\t"] }) == r && s(null, i) === "1" && s([1, 2], null, 1) == "[\n 1,\n 2\n]" && s(new c(-864e13)) == '"-271821-04-20T00:00:00.000Z"' && s(new c(864e13)) == '"+275760-09-13T00:00:00.000Z"' && s(new c(-621987552e5)) == '"-000001-01-01T00:00:00.000Z"' && s(new c(-1)) == '"1969-12-31T23:59:59.999Z"' } catch (t) { n = false } } e = n } if (t == "json-parse") { var a = h.parse; if (typeof a == "function") { try { if (a("0") === 0 && !a(false)) { i = a(r); var o = i["a"].length == 5 && i["a"][0] === 1; if (o) { try { o = !a('"\t"') } catch (t) { } if (o) { try { o = a("01") !== 1 } catch (t) { } } if (o) { try { o = a("1.") !== 1 } catch (t) { } } } } } catch (t) { o = false } } e = o } } return _[t] = !!e } if (!_("json")) { var d = "[object Function]", I = "[object Date]", E = "[object Number]", R = "[object String]", P = "[object Array]", L = "[object Boolean]"; var o = _("bug-string-char-index"); if (!f) { var k = r.floor; var a = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]; var D = function (t, e) { return a[e] + 365 * (t - 1970) + k((t - 1969 + (e = +(e > 1))) / 4) - k((t - 1901 + e) / 100) + k((t - 1601 + e) / 400) } } if (!(S = n.hasOwnProperty)) { S = function (t) { var e = {}, i; if ((e.__proto__ = null, e.__proto__ = { toString: 1 }, e).toString != C) { S = function (t) { var e = this.__proto__, i = t in (this.__proto__ = null, this); this.__proto__ = e; return i } } else { i = e.constructor; S = function (t) { var e = (this.constructor || i).prototype; return t in this && !(t in e && this[t] === e[t]) } } e = null; return S.call(this, t) } } A = function (t, e) { var i = 0, r, a, s; (r = function () { this.valueOf = 0 }).prototype.valueOf = 0; a = new r; for (s in a) { if (S.call(a, s)) { i++ } } r = a = null; if (!i) { a = ["valueOf", "toString", "toLocaleString", "propertyIsEnumerable", "isPrototypeOf", "hasOwnProperty", "constructor"]; A = function (t, e) { var i = C.call(t) == d, r, s; var n = !i && typeof t.constructor != "function" && V[typeof t.hasOwnProperty] && t.hasOwnProperty || S; for (r in t) { if (!(i && r == "prototype") && n.call(t, r)) { e(r) } } for (s = a.length; r = a[--s]; n.call(t, r) && e(r)); } } else if (i == 2) { A = function (t, e) { var i = {}, r = C.call(t) == d, s; for (s in t) { if (!(r && s == "prototype") && !S.call(i, s) && (i[s] = 1) && S.call(t, s)) { e(s) } } } } else { A = function (t, e) { var i = C.call(t) == d, r, s; for (r in t) { if (!(i && r == "prototype") && S.call(t, r) && !(s = r === "constructor")) { e(r) } } if (s || S.call(t, r = "constructor")) { e(r) } } } return A(t, e) }; if (!_("json-stringify")) { var p = { 92: "\\\\", 34: '\\"', 8: "\\b", 12: "\\f", 10: "\\n", 13: "\\r", 9: "\\t" }; var v = "000000"; var B = function (t, e) { return (v + (e || 0)).slice(-t) }; var m = "\\u00"; var N = function (t) { var e = '"', i = 0, r = t.length, s = !o || r > 10; var n = s && (o ? t.split("") : t); for (; i < r; i++) { var a = t.charCodeAt(i); switch (a) { case 8: case 9: case 10: case 12: case 13: case 34: case 92: e += p[a]; break; default: if (a < 32) { e += m + B(2, a.toString(16)); break } e += s ? n[i] : t.charAt(i) } } return e + '"' }; var F = function (t, e, i, r, s, n, a) { var o, h, l, u, c, f, _, d, p, v, m, g, y, x, b, w; try { o = e[t] } catch (t) { } if (typeof o == "object" && o) { h = C.call(o); if (h == I && !S.call(o, "toJSON")) { if (o > -1 / 0 && o < 1 / 0) { if (D) { c = k(o / 864e5); for (l = k(c / 365.2425) + 1970 - 1; D(l + 1, 0) <= c; l++); for (u = k((c - D(l, 0)) / 30.42); D(l, u + 1) <= c; u++); c = 1 + c - D(l, u); f = (o % 864e5 + 864e5) % 864e5; _ = k(f / 36e5) % 24; d = k(f / 6e4) % 60; p = k(f / 1e3) % 60; v = f % 1e3 } else { l = o.getUTCFullYear(); u = o.getUTCMonth(); c = o.getUTCDate(); _ = o.getUTCHours(); d = o.getUTCMinutes(); p = o.getUTCSeconds(); v = o.getUTCMilliseconds() } o = (l <= 0 || l >= 1e4 ? (l < 0 ? "-" : "+") + B(6, l < 0 ? -l : l) : B(4, l)) + "-" + B(2, u + 1) + "-" + B(2, c) + "T" + B(2, _) + ":" + B(2, d) + ":" + B(2, p) + "." + B(3, v) + "Z" } else { o = null } } else if (typeof o.toJSON == "function" && (h != E && h != R && h != P || S.call(o, "toJSON"))) { o = o.toJSON(t) } } if (i) { o = i.call(e, t, o) } if (o === null) { return "null" } h = C.call(o); if (h == L) { return "" + o } else if (h == E) { return o > -1 / 0 && o < 1 / 0 ? "" + o : "null" } else if (h == R) { return N("" + o) } if (typeof o == "object") { for (x = a.length; x--;) { if (a[x] === o) { throw T() } } a.push(o); m = []; b = n; n += s; if (h == P) { for (y = 0, x = o.length; y < x; y++) { g = F(y, o, i, r, s, n, a); m.push(g === M ? "null" : g) } w = m.length ? s ? "[\n" + n + m.join(",\n" + n) + "\n" + b + "]" : "[" + m.join(",") + "]" : "[]" } else { A(r || o, function (t) { var e = F(t, o, i, r, s, n, a); if (e !== M) { m.push(N(t) + ":" + (s ? " " : "") + e) } }); w = m.length ? s ? "{\n" + n + m.join(",\n" + n) + "\n" + b + "}" : "{" + m.join(",") + "}" : "{}" } a.pop(); return w } }; h.stringify = function (t, e, i) { var r, s, n, a; if (V[typeof e] && e) { if ((a = C.call(e)) == d) { s = e } else if (a == P) { n = {}; for (var o = 0, h = e.length, l; o < h; l = e[o++], (a = C.call(l), a == R || a == E) && (n[l] = 1)); } } if (i) { if ((a = C.call(i)) == E) { if ((i -= i % 1) > 0) { for (r = "", i > 10 && (i = 10); r.length < i; r += " "); } } else if (a == R) { r = i.length <= 10 ? i : i.slice(0, 10) } } return F("", (l = {}, l[""] = t, l), s, n, r, "", []) } } if (!_("json-parse")) { var g = u.fromCharCode; var y = { 92: "\\", 34: '"', 47: "/", 98: "\b", 116: "\t", 110: "\n", 102: "\f", 114: "\r" }; var x, b; var w = function () { x = b = null; throw i() }; var O = function () { var t = b, e = t.length, i, r, s, n, a; while (x < e) { a = t.charCodeAt(x); switch (a) { case 9: case 10: case 13: case 32: x++; break; case 123: case 125: case 91: case 93: case 58: case 44: i = o ? t.charAt(x) : t[x]; x++; return i; case 34: for (i = "@", x++; x < e;) { a = t.charCodeAt(x); if (a < 32) { w() } else if (a == 92) { a = t.charCodeAt(++x); switch (a) { case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114: i += y[a]; x++; break; case 117: r = ++x; for (s = x + 4; x < s; x++) { a = t.charCodeAt(x); if (!(a >= 48 && a <= 57 || a >= 97 && a <= 102 || a >= 65 && a <= 70)) { w() } } i += g("0x" + t.slice(r, x)); break; default: w() } } else { if (a == 34) { break } a = t.charCodeAt(x); r = x; while (a >= 32 && a != 92 && a != 34) { a = t.charCodeAt(++x) } i += t.slice(r, x) } } if (t.charCodeAt(x) == 34) { x++; return i } w(); default: r = x; if (a == 45) { n = true; a = t.charCodeAt(++x) } if (a >= 48 && a <= 57) { if (a == 48 && (a = t.charCodeAt(x + 1), a >= 48 && a <= 57)) { w() } n = false; for (; x < e && (a = t.charCodeAt(x), a >= 48 && a <= 57); x++); if (t.charCodeAt(x) == 46) { s = ++x; for (; s < e && (a = t.charCodeAt(s), a >= 48 && a <= 57); s++); if (s == x) { w() } x = s } a = t.charCodeAt(x); if (a == 101 || a == 69) { a = t.charCodeAt(++x); if (a == 43 || a == 45) { x++ } for (s = x; s < e && (a = t.charCodeAt(s), a >= 48 && a <= 57); s++); if (s == x) { w() } x = s } return +t.slice(r, x) } if (n) { w() } if (t.slice(x, x + 4) == "true") { x += 4; return true } else if (t.slice(x, x + 5) == "false") { x += 5; return false } else if (t.slice(x, x + 4) == "null") { x += 4; return null } w() } } return "$" }; var z = function (t) { var e, i; if (t == "$") { w() } if (typeof t == "string") { if ((o ? t.charAt(0) : t[0]) == "@") { return t.slice(1) } if (t == "[") { e = []; for (; ; i || (i = true)) { t = O(); if (t == "]") { break } if (i) { if (t == ",") { t = O(); if (t == "]") { w() } } else { w() } } if (t == ",") { w() } e.push(z(t)) } return e } else if (t == "{") { e = {}; for (; ; i || (i = true)) { t = O(); if (t == "}") { break } if (i) { if (t == ",") { t = O(); if (t == "}") { w() } } else { w() } } if (t == "," || typeof t != "string" || (o ? t.charAt(0) : t[0]) != "@" || O() != ":") { w() } e[t.slice(1)] = z(O()) } return e } w() } return t }; var U = function (t, e, i) { var r = W(t, e, i); if (r === M) { delete t[e] } else { t[e] = r } }; var W = function (t, e, i) { var r = t[e], s; if (typeof r == "object" && r) { if (C.call(r) == P) { for (s = r.length; s--;) { U(r, s, i) } } else { A(r, function (t) { U(r, t, i) }) } } return i.call(t, e, r) }; h.parse = function (t, e) { var i, r; x = 0; b = "" + t; i = z(O()); if (O() != "$") { w() } x = b = null; return e && C.call(e) == d ? W((r = {}, r[""] = i, r), "", e) : i } } } h["runInContext"] = G; return h } if (e && !t) { G(H, e) } else { var r = H.JSON, s = H["JSON3"], n = false; var a = G(H, H["JSON3"] = { noConflict: function () { if (!n) { n = true; H.JSON = r; H["JSON3"] = s; r = s = null } return a } }); H.JSON = { parse: a.parse, stringify: a.stringify } } if (t) { C(function () { return a }) } }).call(this) }).call(this, typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {}) }, {}], 51: [function (t, e, i) { e.exports = r; function r(t, e) { var i = []; e = e || 0; for (var r = e || 0; r < t.length; r++) { i[r - e] = t[r] } return i } }, {}] }, {}, [31])(31) }); (function () { if (document.domain && document.domain.indexOf("192.168") >= 0) { if (window.parent && window.parent.eleToolApi) { window.eleToolApi = window.parent.eleToolApi } else { window.eleToolApi = null } } else { window.eleToolApi = null } })(); (function () { "use strict"; function st(t) { throw t } var nt = void 0, at = !0, n = this; function a(t, e) { var i = t.split("."), r = n; !(i[0] in r) && r.execScript && r.execScript("var " + i[0]); for (var s; i.length && (s = i.shift());)!i.length && e !== nt ? r[s] = e : r = r[s] ? r[s] : r[s] = {} } var ot = "undefined" !== typeof Uint8Array && "undefined" !== typeof Uint16Array && "undefined" !== typeof Uint32Array && "undefined" !== typeof DataView; function ht(t, e) { this.index = "number" === typeof e ? e : 0; this.i = 0; this.buffer = t instanceof (ot ? Uint8Array : Array) ? t : new (ot ? Uint8Array : Array)(32768); 2 * this.buffer.length <= this.index && st(Error("invalid index")); this.buffer.length <= this.index && this.f() } ht.prototype.f = function () { var t = this.buffer, e, i = t.length, r = new (ot ? Uint8Array : Array)(i << 1); if (ot) r.set(t); else for (e = 0; e < i; ++e)r[e] = t[e]; return this.buffer = r }; ht.prototype.d = function (t, e, i) { var r = this.buffer, s = this.index, n = this.i, a = r[s], o; i && 1 < e && (t = 8 < e ? (h[t & 255] << 24 | h[t >>> 8 & 255] << 16 | h[t >>> 16 & 255] << 8 | h[t >>> 24 & 255]) >> 32 - e : h[t] >> 8 - e); if (8 > e + n) a = a << e | t, n += e; else for (o = 0; o < e; ++o)a = a << 1 | t >> e - o - 1 & 1, 8 === ++n && (n = 0, r[s++] = h[a], a = 0, s === r.length && (r = this.f())); r[s] = a; this.buffer = r; this.i = n; this.index = s }; ht.prototype.finish = function () { var t = this.buffer, e = this.index, i; 0 < this.i && (t[e] <<= 8 - this.i, t[e] = h[t[e]], e++); ot ? i = t.subarray(0, e) : (t.length = e, i = t); return i }; var t = new (ot ? Uint8Array : Array)(256), e; for (e = 0; 256 > e; ++e) { for (var i = e, r = i, s = 7, i = i >>> 1; i; i >>>= 1)r <<= 1, r |= i & 1, --s; t[e] = (r << s & 255) >>> 0 } var h = t; function u(t) { this.buffer = new (ot ? Uint16Array : Array)(2 * t); this.length = 0 } u.prototype.getParent = function (t) { return 2 * ((t - 2) / 4 | 0) }; u.prototype.push = function (t, e) { var i, r, s = this.buffer, n; i = this.length; s[this.length++] = e; for (s[this.length++] = t; 0 < i;)if (r = this.getParent(i), s[i] > s[r]) n = s[i], s[i] = s[r], s[r] = n, n = s[i + 1], s[i + 1] = s[r + 1], s[r + 1] = n, i = r; else break; return this.length }; u.prototype.pop = function () { var t, e, i = this.buffer, r, s, n; e = i[0]; t = i[1]; this.length -= 2; i[0] = i[this.length]; i[1] = i[this.length + 1]; for (n = 0; ;) { s = 2 * n + 2; if (s >= this.length) break; s + 2 < this.length && i[s + 2] > i[s] && (s += 2); if (i[s] > i[n]) r = i[n], i[n] = i[s], i[s] = r, r = i[n + 1], i[n + 1] = i[s + 1], i[s + 1] = r; else break; n = s } return { index: t, value: e, length: this.length } }; function T(t) { var e = t.length, i = 0, r = Number.POSITIVE_INFINITY, s, n, a, o, h, l, u, c, f, _; for (c = 0; c < e; ++c)t[c] > i && (i = t[c]), t[c] < r && (r = t[c]); s = 1 << i; n = new (ot ? Uint32Array : Array)(s); a = 1; o = 0; for (h = 2; a <= i;) { for (c = 0; c < e; ++c)if (t[c] === a) { l = 0; u = o; for (f = 0; f < a; ++f)l = l << 1 | u & 1, u >>= 1; _ = a << 16 | c; for (f = l; f < s; f += h)n[f] = _; ++o } ++a; o <<= 1; h <<= 1 } return [n, i, r] } function o(t, e) { this.h = lt; this.w = 0; this.input = ot && t instanceof Array ? new Uint8Array(t) : t; this.b = 0; e && (e.lazy && (this.w = e.lazy), "number" === typeof e.compressionType && (this.h = e.compressionType), e.outputBuffer && (this.a = ot && e.outputBuffer instanceof Array ? new Uint8Array(e.outputBuffer) : e.outputBuffer), "number" === typeof e.outputIndex && (this.b = e.outputIndex)); this.a || (this.a = new (ot ? Uint8Array : Array)(32768)) } var lt = 2, l = { NONE: 0, r: 1, k: lt, N: 3 }, ut = [], c; for (c = 0; 288 > c; c++)switch (at) { case 143 >= c: ut.push([c + 48, 8]); break; case 255 >= c: ut.push([c - 144 + 400, 9]); break; case 279 >= c: ut.push([c - 256 + 0, 7]); break; case 287 >= c: ut.push([c - 280 + 192, 8]); break; default: st("invalid literal: " + c) }o.prototype.j = function () { var t, e, i, r, s = this.input; switch (this.h) { case 0: i = 0; for (r = s.length; i < r;) { e = ot ? s.subarray(i, i + 65535) : s.slice(i, i + 65535); i += e.length; var n = e, a = i === r, o = nt, h = nt, l = nt, u = nt, c = nt, f = this.a, _ = this.b; if (ot) { for (f = new Uint8Array(this.a.buffer); f.length <= _ + n.length + 5;)f = new Uint8Array(f.length << 1); f.set(this.a) } o = a ? 1 : 0; f[_++] = o | 0; h = n.length; l = ~h + 65536 & 65535; f[_++] = h & 255; f[_++] = h >>> 8 & 255; f[_++] = l & 255; f[_++] = l >>> 8 & 255; if (ot) f.set(n, _), _ += n.length, f = f.subarray(0, _); else { u = 0; for (c = n.length; u < c; ++u)f[_++] = n[u]; f.length = _ } this.b = _; this.a = f } break; case 1: var d = new ht(ot ? new Uint8Array(this.a.buffer) : this.a, this.b); d.d(1, 1, at); d.d(1, 2, at); var p = ct(this, s), v, m, g; v = 0; for (m = p.length; v < m; v++)if (g = p[v], ht.prototype.d.apply(d, ut[g]), 256 < g) d.d(p[++v], p[++v], at), d.d(p[++v], 5), d.d(p[++v], p[++v], at); else if (256 === g) break; this.a = d.finish(); this.b = this.a.length; break; case lt: var y = new ht(ot ? new Uint8Array(this.a.buffer) : this.a, this.b), x, b, w, T, C, S = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], A, M, I, E, R, P = Array(19), L, k, D, B, N; x = lt; y.d(1, 1, at); y.d(x, 2, at); b = ct(this, s); A = ft(this.L, 15); M = _t(A); I = ft(this.K, 7); E = _t(I); for (w = 286; 257 < w && 0 === A[w - 1]; w--); for (T = 30; 1 < T && 0 === I[T - 1]; T--); var F = w, O = T, z = new (ot ? Uint32Array : Array)(F + O), U, W, V, H, G = new (ot ? Uint32Array : Array)(316), Y, X, j = new (ot ? Uint8Array : Array)(19); for (U = W = 0; U < F; U++)z[W++] = A[U]; for (U = 0; U < O; U++)z[W++] = I[U]; if (!ot) { U = 0; for (H = j.length; U < H; ++U)j[U] = 0 } U = Y = 0; for (H = z.length; U < H; U += W) { for (W = 1; U + W < H && z[U + W] === z[U]; ++W); V = W; if (0 === z[U]) if (3 > V) for (; 0 < V--;)G[Y++] = 0, j[0]++; else for (; 0 < V;)X = 138 > V ? V : 138, X > V - 3 && X < V && (X = V - 3), 10 >= X ? (G[Y++] = 17, G[Y++] = X - 3, j[17]++) : (G[Y++] = 18, G[Y++] = X - 11, j[18]++), V -= X; else if (G[Y++] = z[U], j[z[U]]++ , V-- , 3 > V) for (; 0 < V--;)G[Y++] = z[U], j[z[U]]++; else for (; 0 < V;)X = 6 > V ? V : 6, X > V - 3 && X < V && (X = V - 3), G[Y++] = 16, G[Y++] = X - 3, j[16]++ , V -= X } t = ot ? G.subarray(0, Y) : G.slice(0, Y); R = ft(j, 7); for (B = 0; 19 > B; B++)P[B] = R[S[B]]; for (C = 19; 4 < C && 0 === P[C - 1]; C--); L = _t(R); y.d(w - 257, 5, at); y.d(T - 1, 5, at); y.d(C - 4, 4, at); for (B = 0; B < C; B++)y.d(P[B], 3, at); B = 0; for (N = t.length; B < N; B++)if (k = t[B], y.d(L[k], R[k], at), 16 <= k) { B++; switch (k) { case 16: D = 2; break; case 17: D = 3; break; case 18: D = 7; break; default: st("invalid code: " + k) }y.d(t[B], D, at) } var K = [M, A], $ = [E, I], q, Z, Q, J, tt, et, it, rt; tt = K[0]; et = K[1]; it = $[0]; rt = $[1]; q = 0; for (Z = b.length; q < Z; ++q)if (Q = b[q], y.d(tt[Q], et[Q], at), 256 < Q) y.d(b[++q], b[++q], at), J = b[++q], y.d(it[J], rt[J], at), y.d(b[++q], b[++q], at); else if (256 === Q) break; this.a = y.finish(); this.b = this.a.length; break; default: st("invalid compression type") }return this.a }; function f(t, e) { this.length = t; this.G = e } var _ = function () { function t(t) { switch (at) { case 3 === t: return [257, t - 3, 0]; case 4 === t: return [258, t - 4, 0]; case 5 === t: return [259, t - 5, 0]; case 6 === t: return [260, t - 6, 0]; case 7 === t: return [261, t - 7, 0]; case 8 === t: return [262, t - 8, 0]; case 9 === t: return [263, t - 9, 0]; case 10 === t: return [264, t - 10, 0]; case 12 >= t: return [265, t - 11, 1]; case 14 >= t: return [266, t - 13, 1]; case 16 >= t: return [267, t - 15, 1]; case 18 >= t: return [268, t - 17, 1]; case 22 >= t: return [269, t - 19, 2]; case 26 >= t: return [270, t - 23, 2]; case 30 >= t: return [271, t - 27, 2]; case 34 >= t: return [272, t - 31, 2]; case 42 >= t: return [273, t - 35, 3]; case 50 >= t: return [274, t - 43, 3]; case 58 >= t: return [275, t - 51, 3]; case 66 >= t: return [276, t - 59, 3]; case 82 >= t: return [277, t - 67, 4]; case 98 >= t: return [278, t - 83, 4]; case 114 >= t: return [279, t - 99, 4]; case 130 >= t: return [280, t - 115, 4]; case 162 >= t: return [281, t - 131, 5]; case 194 >= t: return [282, t - 163, 5]; case 226 >= t: return [283, t - 195, 5]; case 257 >= t: return [284, t - 227, 5]; case 258 === t: return [285, t - 258, 0]; default: st("invalid length: " + t) } } var e = [], i, r; for (i = 3; 258 >= i; i++)r = t(i), e[i] = r[2] << 24 | r[1] << 16 | r[0]; return e }(), y = ot ? new Uint32Array(_) : _; function ct(t, e) { function i(t, e) { var i = t.G, r = [], s = 0, n; n = y[t.length]; r[s++] = n & 65535; r[s++] = n >> 16 & 255; r[s++] = n >> 24; var a; switch (at) { case 1 === i: a = [0, i - 1, 0]; break; case 2 === i: a = [1, i - 2, 0]; break; case 3 === i: a = [2, i - 3, 0]; break; case 4 === i: a = [3, i - 4, 0]; break; case 6 >= i: a = [4, i - 5, 1]; break; case 8 >= i: a = [5, i - 7, 1]; break; case 12 >= i: a = [6, i - 9, 2]; break; case 16 >= i: a = [7, i - 13, 2]; break; case 24 >= i: a = [8, i - 17, 3]; break; case 32 >= i: a = [9, i - 25, 3]; break; case 48 >= i: a = [10, i - 33, 4]; break; case 64 >= i: a = [11, i - 49, 4]; break; case 96 >= i: a = [12, i - 65, 5]; break; case 128 >= i: a = [13, i - 97, 5]; break; case 192 >= i: a = [14, i - 129, 6]; break; case 256 >= i: a = [15, i - 193, 6]; break; case 384 >= i: a = [16, i - 257, 7]; break; case 512 >= i: a = [17, i - 385, 7]; break; case 768 >= i: a = [18, i - 513, 8]; break; case 1024 >= i: a = [19, i - 769, 8]; break; case 1536 >= i: a = [20, i - 1025, 9]; break; case 2048 >= i: a = [21, i - 1537, 9]; break; case 3072 >= i: a = [22, i - 2049, 10]; break; case 4096 >= i: a = [23, i - 3073, 10]; break; case 6144 >= i: a = [24, i - 4097, 11]; break; case 8192 >= i: a = [25, i - 6145, 11]; break; case 12288 >= i: a = [26, i - 8193, 12]; break; case 16384 >= i: a = [27, i - 12289, 12]; break; case 24576 >= i: a = [28, i - 16385, 13]; break; case 32768 >= i: a = [29, i - 24577, 13]; break; default: st("invalid distance") }n = a; r[s++] = n[0]; r[s++] = n[1]; r[s++] = n[2]; var o, h; o = 0; for (h = r.length; o < h; ++o)f[_++] = r[o]; p[r[0]]++; v[r[3]]++; d = t.length + e - 1; c = null } var r, s, n, a, o, h = {}, l, u, c, f = ot ? new Uint16Array(2 * e.length) : [], _ = 0, d = 0, p = new (ot ? Uint32Array : Array)(286), v = new (ot ? Uint32Array : Array)(30), m = t.w, g; if (!ot) { for (n = 0; 285 >= n;)p[n++] = 0; for (n = 0; 29 >= n;)v[n++] = 0 } p[256] = 1; r = 0; for (s = e.length; r < s; ++r) { n = o = 0; for (a = 3; n < a && r + n !== s; ++n)o = o << 8 | e[r + n]; h[o] === nt && (h[o] = []); l = h[o]; if (!(0 < d--)) { for (; 0 < l.length && 32768 < r - l[0];)l.shift(); if (r + 3 >= s) { c && i(c, -1); n = 0; for (a = s - r; n < a; ++n)g = e[r + n], f[_++] = g, ++p[g]; break } 0 < l.length ? (u = x(e, r, l), c ? c.length < u.length ? (g = e[r - 1], f[_++] = g, ++p[g], i(u, 0)) : i(c, -1) : u.length < m ? c = u : i(u, 0)) : c ? i(c, -1) : (g = e[r], f[_++] = g, ++p[g]) } l.push(r) } f[_++] = 256; p[256]++; t.L = p; t.K = v; return ot ? f.subarray(0, _) : f } function x(t, e, i) { var r, s, n = 0, a, o, h, l, u = t.length; o = 0; l = i.length; t: for (; o < l; o++) { r = i[l - o - 1]; a = 3; if (3 < n) { for (h = n; 3 < h; h--)if (t[r + h - 1] !== t[e + h - 1]) continue t; a = n } for (; 258 > a && e + a < u && t[r + a] === t[e + a];)++a; a > n && (s = r, n = a); if (258 === a) break } return new f(n, e - s) } function ft(t, e) { var i = t.length, r = new u(572), s = new (ot ? Uint8Array : Array)(i), n, a, o, h, l; if (!ot) for (h = 0; h < i; h++)s[h] = 0; for (h = 0; h < i; ++h)0 < t[h] && r.push(h, t[h]); n = Array(r.length / 2); a = new (ot ? Uint32Array : Array)(r.length / 2); if (1 === n.length) return s[r.pop().index] = 1, s; h = 0; for (l = r.length / 2; h < l; ++h)n[h] = r.pop(), a[h] = n[h].value; o = d(a, a.length, e); h = 0; for (l = n.length; h < l; ++h)s[n[h].index] = o[h]; return s } function d(t, i, e) { function r(t) { var e = h[t][l[t]]; e === i ? (r(t + 1), r(t + 1)) : --a[e]; ++l[t] } var s = new (ot ? Uint16Array : Array)(e), n = new (ot ? Uint8Array : Array)(e), a = new (ot ? Uint8Array : Array)(i), o = Array(e), h = Array(e), l = Array(e), u = (1 << e) - i, c = 1 << e - 1, f, _, d, p, v; s[e - 1] = i; for (_ = 0; _ < e; ++_)u < c ? n[_] = 0 : (n[_] = 1, u -= c), u <<= 1, s[e - 2 - _] = (s[e - 1 - _] / 2 | 0) + i; s[0] = n[0]; o[0] = Array(s[0]); h[0] = Array(s[0]); for (_ = 1; _ < e; ++_)s[_] > 2 * s[_ - 1] + n[_] && (s[_] = 2 * s[_ - 1] + n[_]), o[_] = Array(s[_]), h[_] = Array(s[_]); for (f = 0; f < i; ++f)a[f] = e; for (d = 0; d < s[e - 1]; ++d)o[e - 1][d] = t[d], h[e - 1][d] = d; for (f = 0; f < e; ++f)l[f] = 0; 1 === n[e - 1] && (--a[0], ++l[e - 1]); for (_ = e - 2; 0 <= _; --_) { p = f = 0; v = l[_ + 1]; for (d = 0; d < s[_]; d++)p = o[_ + 1][v] + o[_ + 1][v + 1], p > t[f] ? (o[_][d] = p, h[_][d] = i, v += 2) : (o[_][d] = t[f], h[_][d] = f, ++f); l[_] = 0; 1 === n[_] && r(_) } return a } function _t(t) { var e = new (ot ? Uint16Array : Array)(t.length), i = [], r = [], s = 0, n, a, o, h; n = 0; for (a = t.length; n < a; n++)i[t[n]] = (i[t[n]] | 0) + 1; n = 1; for (a = 16; n <= a; n++)r[n] = s, s += i[n] | 0, s <<= 1; n = 0; for (a = t.length; n < a; n++) { s = r[t[n]]; r[t[n]] += 1; o = e[n] = 0; for (h = t[n]; o < h; o++)e[n] = e[n] << 1 | s & 1, s >>>= 1 } return e } function p(t, e) { this.l = []; this.m = 32768; this.e = this.g = this.c = this.q = 0; this.input = ot ? new Uint8Array(t) : t; this.s = !1; this.n = S; this.B = !1; if (e || !(e = {})) e.index && (this.c = e.index), e.bufferSize && (this.m = e.bufferSize), e.bufferType && (this.n = e.bufferType), e.resize && (this.B = e.resize); switch (this.n) { case C: this.b = 32768; this.a = new (ot ? Uint8Array : Array)(32768 + this.m + 258); break; case S: this.b = 0; this.a = new (ot ? Uint8Array : Array)(this.m); this.f = this.J; this.t = this.H; this.o = this.I; break; default: st(Error("invalid inflate mode")) } } var C = 0, S = 1, v = { D: C, C: S }; p.prototype.p = function () { for (; !this.s;) { var t = U(this, 3); t & 1 && (this.s = at); t >>>= 1; switch (t) { case 0: var e = this.input, i = this.c, r = this.a, s = this.b, n = e.length, a = nt, o = nt, h = r.length, l = nt; this.e = this.g = 0; i + 1 >= n && st(Error("invalid uncompressed block header: LEN")); a = e[i++] | e[i++] << 8; i + 1 >= n && st(Error("invalid uncompressed block header: NLEN")); o = e[i++] | e[i++] << 8; a === ~o && st(Error("invalid uncompressed block header: length verify")); i + a > e.length && st(Error("input buffer is broken")); switch (this.n) { case C: for (; s + a > r.length;) { l = h - s; a -= l; if (ot) r.set(e.subarray(i, i + l), s), s += l, i += l; else for (; l--;)r[s++] = e[i++]; this.b = s; r = this.f(); s = this.b } break; case S: for (; s + a > r.length;)r = this.f({ v: 2 }); break; default: st(Error("invalid inflate mode")) }if (ot) r.set(e.subarray(i, i + a), s), s += a, i += a; else for (; a--;)r[s++] = e[i++]; this.c = i; this.b = s; this.a = r; break; case 1: this.o(B, z); break; case 2: for (var u = U(this, 5) + 257, c = U(this, 5) + 1, f = U(this, 4) + 4, _ = new (ot ? Uint8Array : Array)(A.length), d = nt, p = nt, v = nt, m = nt, g = nt, y = nt, x = nt, b = nt, w = nt, b = 0; b < f; ++b)_[A[b]] = U(this, 3); if (!ot) { b = f; for (f = _.length; b < f; ++b)_[A[b]] = 0 } d = T(_); m = new (ot ? Uint8Array : Array)(u + c); b = 0; for (w = u + c; b < w;)switch (g = W(this, d), g) { case 16: for (x = 3 + U(this, 2); x--;)m[b++] = y; break; case 17: for (x = 3 + U(this, 3); x--;)m[b++] = 0; y = 0; break; case 18: for (x = 11 + U(this, 7); x--;)m[b++] = 0; y = 0; break; default: y = m[b++] = g }p = ot ? T(m.subarray(0, u)) : T(m.slice(0, u)); v = ot ? T(m.subarray(u)) : T(m.slice(u)); this.o(p, v); break; default: st(Error("unknown BTYPE: " + t)) } } return this.t() }; var m = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], A = ot ? new Uint16Array(m) : m, g = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 258, 258], b = ot ? new Uint16Array(g) : g, w = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0], M = ot ? new Uint8Array(w) : w, I = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577], E = ot ? new Uint16Array(I) : I, R = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13], P = ot ? new Uint8Array(R) : R, L = new (ot ? Uint8Array : Array)(288), k, D; k = 0; for (D = L.length; k < D; ++k)L[k] = 143 >= k ? 8 : 255 >= k ? 9 : 279 >= k ? 7 : 8; var B = T(L), N = new (ot ? Uint8Array : Array)(30), F, O; F = 0; for (O = N.length; F < O; ++F)N[F] = 5; var z = T(N); function U(t, e) { for (var i = t.g, r = t.e, s = t.input, n = t.c, a = s.length, o; r < e;)n >= a && st(Error("input buffer is broken")), i |= s[n++] << r, r += 8; o = i & (1 << e) - 1; t.g = i >>> e; t.e = r - e; t.c = n; return o } function W(t, e) { for (var i = t.g, r = t.e, s = t.input, n = t.c, a = s.length, o = e[0], h = e[1], l, u; r < h && !(n >= a);)i |= s[n++] << r, r += 8; l = o[i & (1 << h) - 1]; u = l >>> 16; u > r && st(Error("invalid code length: " + u)); t.g = i >> u; t.e = r - u; t.c = n; return l & 65535 } p.prototype.o = function (t, e) { var i = this.a, r = this.b; this.u = t; for (var s = i.length - 258, n, a, o, h; 256 !== (n = W(this, t));)if (256 > n) r >= s && (this.b = r, i = this.f(), r = this.b), i[r++] = n; else { a = n - 257; h = b[a]; 0 < M[a] && (h += U(this, M[a])); n = W(this, e); o = E[n]; 0 < P[n] && (o += U(this, P[n])); r >= s && (this.b = r, i = this.f(), r = this.b); for (; h--;)i[r] = i[r++ - o] } for (; 8 <= this.e;)this.e -= 8, this.c--; this.b = r }; p.prototype.I = function (t, e) { var i = this.a, r = this.b; this.u = t; for (var s = i.length, n, a, o, h; 256 !== (n = W(this, t));)if (256 > n) r >= s && (i = this.f(), s = i.length), i[r++] = n; else { a = n - 257; h = b[a]; 0 < M[a] && (h += U(this, M[a])); n = W(this, e); o = E[n]; 0 < P[n] && (o += U(this, P[n])); r + h > s && (i = this.f(), s = i.length); for (; h--;)i[r] = i[r++ - o] } for (; 8 <= this.e;)this.e -= 8, this.c--; this.b = r }; p.prototype.f = function () { var t = new (ot ? Uint8Array : Array)(this.b - 32768), e = this.b - 32768, i, r, s = this.a; if (ot) t.set(s.subarray(32768, t.length)); else { i = 0; for (r = t.length; i < r; ++i)t[i] = s[i + 32768] } this.l.push(t); this.q += t.length; if (ot) s.set(s.subarray(e, e + 32768)); else for (i = 0; 32768 > i; ++i)s[i] = s[e + i]; this.b = 32768; return s }; p.prototype.J = function (t) { var e, i = this.input.length / this.c + 1 | 0, r, s, n, a = this.input, o = this.a; t && ("number" === typeof t.v && (i = t.v), "number" === typeof t.F && (i += t.F)); 2 > i ? (r = (a.length - this.c) / this.u[2], n = 258 * (r / 2) | 0, s = n < o.length ? o.length + n : o.length << 1) : s = o.length * i; ot ? (e = new Uint8Array(s), e.set(o)) : e = o; return this.a = e }; p.prototype.t = function () { var t = 0, e = this.a, i = this.l, r, s = new (ot ? Uint8Array : Array)(this.q + (this.b - 32768)), n, a, o, h; if (0 === i.length) return ot ? this.a.subarray(32768, this.b) : this.a.slice(32768, this.b); n = 0; for (a = i.length; n < a; ++n) { r = i[n]; o = 0; for (h = r.length; o < h; ++o)s[t++] = r[o] } n = 32768; for (a = this.b; n < a; ++n)s[t++] = e[n]; this.l = []; return this.buffer = s }; p.prototype.H = function () { var t, e = this.b; ot ? this.B ? (t = new Uint8Array(e), t.set(this.a.subarray(0, e))) : t = this.a.subarray(0, e) : (this.a.length > e && (this.a.length = e), t = this.a); return this.buffer = t }; function V(t) { if ("string" === typeof t) { var e = t.split(""), i, r; i = 0; for (r = e.length; i < r; i++)e[i] = (e[i].charCodeAt(0) & 255) >>> 0; t = e } for (var s = 1, n = 0, a = t.length, o, h = 0; 0 < a;) { o = 1024 < a ? 1024 : a; a -= o; do { s += t[h++], n += s } while (--o); s %= 65521; n %= 65521 } return (n << 16 | s) >>> 0 } function H(t, e) { var i, r; this.input = t; this.c = 0; if (e || !(e = {})) e.index && (this.c = e.index), e.verify && (this.M = e.verify); i = t[this.c++]; r = t[this.c++]; switch (i & 15) { case G: this.method = G; break; default: st(Error("unsupported compression method")) }0 !== ((i << 8) + r) % 31 && st(Error("invalid fcheck flag:" + ((i << 8) + r) % 31)); r & 32 && st(Error("fdict flag is not supported")); this.A = new p(t, { index: this.c, bufferSize: e.bufferSize, bufferType: e.bufferType, resize: e.resize }) } H.prototype.p = function () { var t = this.input, e, i; e = this.A.p(); this.c = this.A.c; this.M && (i = (t[this.c++] << 24 | t[this.c++] << 16 | t[this.c++] << 8 | t[this.c++]) >>> 0, i !== V(e) && st(Error("invalid adler-32 checksum"))); return e }; var G = 8; function Y(t, e) { this.input = t; this.a = new (ot ? Uint8Array : Array)(32768); this.h = X.k; var i = {}, r; if ((e || !(e = {})) && "number" === typeof e.compressionType) this.h = e.compressionType; for (r in e) i[r] = e[r]; i.outputBuffer = this.a; this.z = new o(this.input, i) } var X = l; Y.prototype.j = function () { var t, e, i, r, s, n, a, o = 0; a = this.a; t = G; switch (t) { case G: e = Math.LOG2E * Math.log(32768) - 8; break; default: st(Error("invalid compression method")) }i = e << 4 | t; a[o++] = i; switch (t) { case G: switch (this.h) { case X.NONE: s = 0; break; case X.r: s = 1; break; case X.k: s = 2; break; default: st(Error("unsupported compression type")) }break; default: st(Error("invalid compression method")) }r = s << 6 | 0; a[o++] = r | 31 - (256 * i + r) % 31; n = V(this.input); this.z.b = o; a = this.z.j(); o = a.length; ot && (a = new Uint8Array(a.buffer), a.length <= o + 4 && (this.a = new Uint8Array(a.length + 4), this.a.set(a), a = this.a), a = a.subarray(0, o + 4)); a[o++] = n >> 24 & 255; a[o++] = n >> 16 & 255; a[o++] = n >> 8 & 255; a[o++] = n & 255; return a }; function j(t, e) { var i, r, s, n; if (Object.keys) i = Object.keys(e); else for (r in i = [], s = 0, e) i[s++] = r; s = 0; for (n = i.length; s < n; ++s)r = i[s], a(t + "." + r, e[r]) } a("Zlib.Inflate", H); a("Zlib.Inflate.prototype.decompress", H.prototype.p); j("Zlib.Inflate.BufferType", { ADAPTIVE: v.C, BLOCK: v.D }); a("Zlib.Deflate", Y); a("Zlib.Deflate.compress", function (t, e) { return new Y(t, e).j() }); a("Zlib.Deflate.prototype.compress", Y.prototype.j); j("Zlib.Deflate.CompressionType", { NONE: X.NONE, FIXED: X.r, DYNAMIC: X.k }) }).call(this);