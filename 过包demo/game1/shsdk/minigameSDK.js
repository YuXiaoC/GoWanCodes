"use strict"; function request(e, o) { var n, t = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1, a = arguments[4], r = String((new Date).getTime()).substr(0, 10), i = { ts: r }; if (null === o) n = domain + "/" + e, i = t; else { n = domain + "/?ct=" + e + "&ac=" + o, 1 == s ? (i.is_jsdk = 1, t.is_jsdk = 1) : i.js = 1; var l = requestEncrypt(JSON.stringify(t), r).e; i.p = l } return new Promise(function (e, o) { wx.request({ url: n, data: i, header: { "content-type": "application/x-www-form-urlencoded;charset=utf-8" }, method: "POST", success: function (o) { console.log("request__res-----\x3e", o), e(o.data), a && a() } }) }) } function getRoleBaseMsg(e) { return { server_id: e.serverId, server_name: e.serverName, role_id: e.roleId, role_name: e.roleName, role_level: e.roleLevel, balance: e.userMoney || 0, vip_level: e.vipLevel } } function log() { var e; (e = console).log.apply(e, arguments) } function removeStorageSync() { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, o = arguments[1]; try { wx.removeStorageSync(e) } catch (e) { o && o(e) } } function setGoWanUserInfo() { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; wx.setStorageSync(USER_INFO, e), log("存储用户信息") } function getGoWanUserInfo() { var e = wx.getStorageSync(USER_INFO); return log("获取用户信息"), e } function setXcxUserInfo() { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; wx.setStorageSync(XCX_USER_INFO, e), log("存储XCX用户信息") } function getXcxUserInfo() { var e = wx.getStorageSync(XCX_USER_INFO); return log("获取XCX用户信息"), e } function setJsLoadInfo() { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; wx.setStorageSync(JS_LOAD_INFO, e) } function getJsLoadInfo() { return wx.getStorageSync(JS_LOAD_INFO) } var _extends = Object.assign || function (e) { for (var o = 1; o < arguments.length; o++) { var n = arguments[o]; for (var t in n) Object.prototype.hasOwnProperty.call(n, t) && (e[t] = n[t]) } return e }, md5 = require("./utility/md5.js"), auth = require("./utility/auth.js"), requestEncrypt = auth.requestEncrypt, returnDecrypt = auth.returnDecrypt, requestDecrypt = auth.requestDecrypt, LocalShareMsg = { img_url: "https://yxfile.gowan8.com/share/sanguoji/share.jpg", title: "登录就送VIP5，吕布助你一统江山！" }, OnLineShareMsg = {}, appid = "wx4f5bbd3e032f8862", USER_INFO = "go_wan_user_info", JS_LOAD_INFO = "js_load_info", XCX_USER_INFO = "xcx_user_info", uuid = function () { var e = function () { return (65536 * (1 + Math.random()) | 0).toString(16).substring(1) }; return e() + e() + "-" + e() + "-" + e() + "-" + e() + "-" + e() + e() + e() }, version = "1.2", _scene = 0, system = wx.getSystemInfoSync().system, domain = "https://yisdk-api.gowan8.com", MicroParame = uuid(), roleBaseConfig = { server_id: "1", server_name: "1", role_id: "1000", role_name: "1", role_level: "1", balance: "1" }, roleBaseMsg = _extends({}, roleBaseConfig, { balance: "1", vip_level: "1", guild_name: "", guild_id: "", fighting: "" }); wx.onShow(function (e) { var o = e.query; log("query--------\x3e", e), _scene = o.scene || 0 }); var userBaseMsg = { phone: "", is_bind_phone: 0, is_realname: 0 }, extFooter = { screen: wx.getSystemInfoSync().windowWidth + "x" + wx.getSystemInfoSync().windowHeight, os_version: wx.getSystemInfoSync().version, simulator: "0", isroot: 0, serial_number: "", imsi: "", android_id: "", net: 4, operators: 4, location: "", version: version, game_version: "1.0", platform_version: "1.0", server_version: "1.2", imei: MicroParame.replace(/-/g, ""), mac: MicroParame.replace(/-/g, ""), utma: MicroParame.replace(/-/g, ""), os: 0 == wx.getSystemInfoSync().system.indexOf("iOS") ? 2 : 1 }, LocalUserInfo = "", chanelInfo = "", getGlobalHeader = "", minigameSDK = { apiStart: function () { this.apiRuning = !0 }, apiEnd: function () { this.apiRuning = !1 }, isApiRunning: function () { return this.apiRuning }, init: function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, o = arguments[1], n = { yisdk_param: decodeURIComponent(e.yisdk_param), ext_param: decodeURIComponent(e.ext_param), extend: "scene=" + _scene }; log("jsLoad----\x3e", n), request("h5", "js_load", n, 0).then(function (e) { log("发送js_load请求then----\x3eres", e); var n = e.data, t = returnDecrypt(n.d, String(n.ts)).d, s = JSON.parse(t); log("js_load_Reslute", s), getGlobalHeader = { game_id: s.game_id, channel: s.channel, game_name: s.game_name, from_id: s.from_id, cookie_uuid: MicroParame }, removeStorageSync(JS_LOAD_INFO), setJsLoadInfo(s); var a = _extends({}, getGlobalHeader, extFooter); log("init_<input>-------\x3e", a), request("init", "index", a, 1).then(function (e) { log("init----------------\x3e初始化请求回来的结果", e), log("init----------------\x3e初始化请求回来的结果resulte.data", e.data); var n = { statusCode: 0, status: "初始化成功" }; if (0 == e.code) if (e.data) { var t = e.data.length ? e.data.length : 0; if (0 !== t) { var s = e.data, a = s.d ? s.d : "", r = s.ts ? s.ts : "", i = returnDecrypt(a, String(r)).d, l = JSON.parse(i); log("init----------------\x3e解密后的初始化结果", l), l.share && (OnLineShareMsg = l.share); var d = l.init_notice; d ? wx.showModal({ title: d.title, content: d.content, showCancel: !1, success: function (e) { e.confirm && o && (log("用户点击确定后执行的init回调"), o(n)) } }) : (log("无需公告执行的init回调"), o && o(n)) } else o && o(n) } else o && o(n); else if (o) { var g = { statusCode: 1, status: "初始化失败" }; o(g) } }) }) }, checkSession: function (e) { if (!this.isApiRunning()) { this.apiStart(); var o = this; wx.checkSession({ success: function (n) { var t = (wx.getSystemInfoSync(), getGoWanUserInfo()), s = getXcxUserInfo(); log("channelInfo-------\x3e", getJsLoadInfo()); if (log("session_key-------\x3e 未过期go_wan_userInfo", t), log("session_key-------\x3e 未过期userXcxInfo", s), t && s && t.ext.openid) o._dologin(s, "checkSession", e); else if (e) { var a = { statusCode: 1, status: "登录已经过期" }; o.apiEnd(), e(a) } }, fail: function () { log("session_key 已经过期-------\x3e需要重新执行登录流程"), o.apiEnd(), e && e({ statusCode: 1, status: "session_key 已经过期" }) } }) } }, login: function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, o = arguments[1]; if (!this.isApiRunning()) { this.apiStart(), log("我是走login方法---------------------》login"), setXcxUserInfo(e), log("XCXuserInfo", e); this._dologin(e, "login", o) } }, _dologin: function (e, o, n) { console.log("登录类型", o); var t = this, s = getGoWanUserInfo(); log("go_wan_userInfo---------\x3e", s); var a = getJsLoadInfo(), r = (a.game_id, a.channel, a.from_id, a.game_name, a.channel_id); wx.getSystemInfo({ success: function (e) { log("wx.getSystemInfo---------------\x3e", e) } }); var i = wx.getSystemInfoSync(); wx.login({ success: function (l) { log("login?->success.ret--------\x3e", l); var d = l.code; log("XCXuserInfo---------\x3e", e); var g = encodeURIComponent(JSON.stringify(e)), c = {}, u = { code: d, userinfo: g }; log("type", o), "checkSession" == o && (log("登录时走了添加uopenid分支"), u.uopenid = s.ext.openid), log("header----------\x3e", u); var f = _extends({ ext: JSON.stringify(c), data: JSON.stringify(u) }, getGlobalHeader, extFooter, { model: i.model.split("<")[0], user_id: "", phone: "", is_bind_phone: 0, is_realname: 0, is_jsdk: 1 }); log("loginParams------\x3ep", f), request("user", "login", f, 1).then(function (e) { if (log("发送登录请求then-------\x3eresult", e), 0 == e.code) { log("登陆成功", e.data); var o = e.data, i = returnDecrypt(o.d, String(o.ts)).d, l = JSON.parse(i); log("loginReslut-------\x3e", l), log("go_wan_userInfo222222222222-------\x3e", getGoWanUserInfo()); var d = l.from_id, g = getJsLoadInfo().from_id, c = getJsLoadInfo(); g != d && (log("登录后from_id与jsload的时候的from_id不一致----\x3e"), c.old_from_id = c.from_id, c.from_id = d, setJsLoadInfo(c)), s && (log("清除本地go_wan_userInfo缓存----\x3e"), removeStorageSync(USER_INFO)), setGoWanUserInfo(l), LocalUserInfo = l, log("渠道信息---\x3e", a), log("够玩用户信息---\x3e", s); var u = { statusCode: 0, userId: l.user_id, platformChanleId: Number(r), userName: l.userName || "", timestamp: String(l.timestamp), sign: l.new_sign, guid: l.guid, cp_ext: l.cp_ext || "", ext: l.ext || "" }; if (log("cpRes--------\x3e", u), n) { n({ statusCode: 0, loginParams: u, status: "登录成功" }), t.apiEnd() } } else if (n) { var f = { statusCode: 1, status: "登录失败" }; n(f), t.apiEnd() } }) } }) }, recharge: function (e, o) { log("充值时研发传进来的参数-------\x3e", e); var n = getGoWanUserInfo(); log("GoWanUserInfo", n); var t = n.user_id, s = n.ext.openid, a = { openid: s, role_level: arg.roleLevel, pf: 0 == wx.getSystemInfoSync().system.indexOf("iOS") ? "ios" : "android" }, r = _extends({ ext: JSON.stringify(a), user_id: t }, extFooter, getRoleBaseMsg(e), getGlobalHeader, { productName: e.productName, amount: e.amount, notify_url: e.callbackURL, callback_info: e.callbackInfo, cp_product_id: e.cpProductId, charge_mount: e.chargeMount, is_jsdk: 1 }); log("payParams---------\x3e", r), this._doMakeOrder(r, o) }, _doMakeOrder: function (e, o) { var n = this, t = getGoWanUserInfo(), s = getJsLoadInfo(); log("chanelInfo----\x3e", s), log("GoWanUserInfo----\x3e", t); var a = "", r = t.user_id, i = t.ext.openid; request("pay", "make_order", e, 1).then(function (t) { if (log("发送下单请求then返回结果----\x3eresulte", t), 0 == t.code) { log("下单成功", t.data); var l = t.data, d = returnDecrypt(l.d, String(l.ts)).d, g = JSON.parse(d), c = g.ext.op_type; log("payReslute-----\x3e", g), a = g.order_id; var u = { mode: "game", env: g.ext.env, offerId: g.ext.offerId, currencyType: "CNY", platform: "android", buyQuantity: g.ext.buyQuantity, zoneId: "1" }; log("dataFormidashi------\x3e111", u); var f = Date.parse(new Date) / 1e3, _ = { op_msg: g.ext.op_msg, op_type: c, money: e.amount, user_id: r, order_id: a, openid: i, pf: 0 == wx.getSystemInfoSync().system.indexOf("iOS") ? "ios" : "android", ts: f, pay_item: e.productName, game_id: s.game_id, sign: md5(a + r + i + e.amount + s.game_id + f) }; if (log("paycbData----------------\x3e", _), log("op_type", c), -1 !== c) if (0 !== c) switch (log("midashipay___op_type", c), log("dataFormidashi---\x3e", u), log("paycbData-----\x3e", _), c) { case 1: case 2: n._requestMidasPayment(u, _, o); break; case 3: o && o({ statusCode: 0, status: "下单成功" }); break; case 4: o && o({ statusCode: 1, status: "下单失败" }); break; case 5: n._payCallback(_, o) } else wx.showLoading({ title: "加载中……" }), n._CustomerService(_, o); else "" !== g.ext.op_msg && wx.showModal({ title: "温馨提示", showCancel: !1, content: t.msg }) } else "" !== t.msg && wx.showModal({ title: "温馨提示", showCancel: !1, content: t.msg }) }) }, _requestMidasPayment: function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, n = arguments[2], t = this; console.log("midashi---\x3edata", e), console.log("midashi----\x3epaycbData", o), wx.requestMidasPayment(_extends({}, e, { success: function (e) { log("midashi_pay成功res", e), log("midashi_pay_success_分支查看payData---\x3e", o), t._payCallback(o, n) }, fail: function (e) { log("midashi_pay_fail", e), n && n({ statusCode: 1, status: "米大师fail" }) } })) }, _CustomerService: function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; arguments[1]; wx.hideLoading(); log("打开客服paycbData", e), wx.showModal({ title: "充值教程", showCancel: !1, content: e.op_msg, success: function (o) { o.confirm && wx.openCustomerServiceConversation({ sessionFrom: "", showMessageCard: !0, sendMessageTitle: e.order_id, sendMessageImg: "https://yxfile.gowan8.com/xcxmajia/mjwsw/imgs/xcx_pay.png", success: function (e) { log("打开客服消息成功", e) }, fail: function (o) { wx.showModal({ title: "温馨提示", cancelText: "朕知道了", confirmText: "前往充值", content: "因版本限制，须通过【客服会话】充值，请您谅解", success: function (o) { o.confirm ? wx.openCustomerServiceConversation({ sessionFrom: "", showMessageCard: !0, sendMessageTitle: e.order_id, sendMessageImg: "https://yxfile.gowan8.com/xcxmajia/mjwsw/imgs/xcx_pay.png" }) : o.cancel && console.log("用户点击取消") } }) } }) } }) }, _payCallback: function (e, o) { request("notify_jsdk/minigame.php", null, e, 1).then(function (e) { log("pay回调请求结果---\x3e", e), e.code, o && o({ statusCode: e.code, status: e.msg }) }) }, createRole: function () { var e = this, o = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; log("LocalUserInfo", LocalUserInfo); var n = _extends({ user_id: LocalUserInfo.user_id, is_jsdk: 1 }, getGlobalHeader, userBaseMsg, roleBaseMsg, extFooter, getRoleBaseMsg(o)); return log("createRole:<input>-----\x3e", n), new Promise(function (o, t) { e._reportRequst("add", n, o) }) }, changeRole: function () { var e = this, o = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; log("LocalUserInfo", LocalUserInfo); var n = _extends({ user_id: LocalUserInfo.user_id }, getGlobalHeader, userBaseMsg, roleBaseMsg, extFooter, getRoleBaseMsg(o)); return log("changeRole:<input>-----\x3e", n), new Promise(function (o, t) { e._reportRequst("login", n, o) }) }, upgradeRole: function () { var e = this, o = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; log("LocalUserInfo", LocalUserInfo); var n = _extends({}, getGlobalHeader, userBaseMsg, roleBaseMsg, extFooter, { user_id: LocalUserInfo.user_id }, getRoleBaseMsg(o)); return log("upgradeRole:<input>-----\x3e", n), new Promise(function (o, t) { e._reportRequst("level", n, o) }) }, _reportRequst: function (e, o, n) { request("role", e, o, 1).then(function (o) { log("角色" + e + "上报结果---\x3e", o); var t = { statusCode: o.code, status: o.msg }; n(t) }) }, shareToArk: function (e) { log("jsLoadInfo", getJsLoadInfo()), log("LocalUserInfo", LocalUserInfo), wx.shareAppMessage({ title: OnLineShareMsg.title ? OnLineShareMsg.title : LocalShareMsg.title, imageUrl: OnLineShareMsg.img_url ? OnLineShareMsg.img_url : LocalShareMsg.img_url, query: "userId=" + LocalUserInfo.user_id }), e && e({ statusCode: 0, status: "分享成功" }) }, invite: function (e) { getJsLoadInfo(), getGoWanUserInfo(); wx.shareAppMessage({ title: OnLineShareMsg.title ? OnLineShareMsg.title : LocalShareMsg.title, imageUrl: OnLineShareMsg.img_url ? OnLineShareMsg.img_url : LocalShareMsg.img_url, query: "userId=" + LocalUserInfo.user_id }), e && e({ statusCode: 0, status: "分享成功" }) }, bannerAd: function () { var e = (arguments.length > 0 && void 0 !== arguments[0] && arguments[0], arguments[1]), o = wx.createBannerAd({ adUnitId: "adunit-e1d0a13524865172", adIntervals: 30, style: { left: 30, top: 520, width: 320 } }); o.show().then(function (o) { log("res", o), e && e(o) }), o.onError(function (o) { log(o), e && e(res) }) }, rewardedVideoAd: function (e, o) { var n = this, t = wx.createRewardedVideoAd({ adUnitId: e.adUnitId }); if (t.offClose(), t.onClose(function (e) { log("用户点击了广告关闭按钮", e), o && o(e); var t = 1 == e.isEnded ? 1 : 0; n.openVideoRecord(from_id, 1, t) }), t.onError(function (e) { }), t.isReady()) return void t.show(); t.onLoad(function () { t.show(), t.offLoad() }) }, openVideoRecord: function (e, o, n) { }, interstitialAd: function (e, o) { var n = wx.createInterstitialAd({ adUnitId: e.adUnitId }); n.show().catch(function (e) { log("错误信息", e) }), n.onClose(function () { console.log("插屏 广告关闭") }) } }; module.exports = { minigameSDK: minigameSDK };