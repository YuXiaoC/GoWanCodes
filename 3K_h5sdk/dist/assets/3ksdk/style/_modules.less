@import "_modules/_animation.less"; //动画
@import "_modules/_layout.less"; //布局
@import "_variables.less"; //公共变量


.wh(@w, @h) {
    width: @w + 0px;
    height: @h + 0px;
}

.bg() {
    background-repeat: no-repeat;
    background-position: center center;
    background-size: contain;
}

.bg(@arg) when(@arg=1) {
    background-repeat: no-repeat;
    background-position: center center;
    background-size: cover;
}

.text-overflow-ellipsis(@line) when(@line=1) {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.text-overflow-ellipsis(@line) when(@line>1) {
    overflow: hidden;
    display: -webkit-box;
    text-overflow: ellipsis;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: @line;
    word-break: break-all;
}

/*遮罩层*/ 
.modal-box() {
    position: fixed;
    z-index: 99;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8);
    // overflow: auto;
    // display: none;
}
.g-clr() {
    zoom: 1;
    &:after {
        display: block;
        clear: both;
        height: 0;
        content: "\0020";
    }
}

.doubleBtn(@w, @h, @color) {
    .wh(@w,@h);
    background-color: @color;
    border-radius: 10px;
    line-height: @h + 0px;
    // TODO 不定高度，用伪类做
    &::before {
        .xyCenter();
        .wh(@w + 10,@h + 10);
        content: '';
        border: 3px solid @color;
        border-radius: 10px;
    }
}